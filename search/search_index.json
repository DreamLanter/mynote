{"config":{"lang":["ja"],"separator":"[\\s\\u200b\\-]","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4\uff01","text":"<p> \u7ea6 153 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> \u6bd4\u8f83\u5b8c\u6574\u7684\u5185\u5bb9 <ul> <li>\u9762\u8bd5\u590d\u76d8 \u56de\u987e\u4e00\u4e0b\u627e\u6691\u671f\u5b9e\u4e60\u548c\u79cb\u62db\u7684\u9762\u8bd5\u5386\u7a0b~</li> <li>\u64cd\u4f5c\u7cfb\u7edf - \u5df2\u7ecf\u6574\u7406\u5b8c\u4e86\uff01</li> <li>\u8ba1\u7b97\u673a\u7ec4\u6210 - \u5df2\u7ecf\u642c\u8fc7\u6765\u4e86\uff01</li> <li>\u7f16\u8bd1\u539f\u7406 - \u5df2\u7ecf\u642c\u8fc7\u6765\u4e86\uff01</li> <li>\u8ba1\u7b97\u673a\u7f51\u7edc - \u5bd2\u5047\u6574\u7406\u4e00\u4e0b\u642c\u8fc7\u6765QWQ \uff08\u539f\u6765\u662f\u601d\u7ef4\u5bfc\u56fe\uff0c\u6240\u4ee5\u62ff\u8fc7\u6765\u6bd4\u8f83\u590d\u6742\uff09</li> </ul> \u8fd1\u671f\u5de5\u4f5c <ul> <li>C++ \u91cd\u65b0\u603b\u7ed3\u4e00\u4e0b C++ \u5b66\u4e60\uff0c\u5c1d\u8bd5\u5b9e\u73b0\u300c\u81ea\u4e3e\u300d</li> </ul> \u7edf\u8ba1\uff01 <p>\u9875\u9762\u6570\uff1a85 </p> <p>\u603b\u5b57\u6570\uff1a155960 </p> \u65bd\u5de5\u4e2d\uff01 <p></p> <p>\u6b63\u5728\u4ece \u8bed\u96c0 \u9010\u6b65\u8fc1\u79fb\uff01\u5185\u5bb9\u8fd8\u975e\u5e38\u4e0d\u5b8c\u6574\u2014\u2014</p> <p></p>"},{"location":"recent/","title":"\u6700\u8fd1\u66f4\u65b0","text":"<p> \u7ea6 191 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"recent/#\u6b63\u5728\u66f4\u65b0\u6b22\u8fce\u5173\u6ce8","title":"\u6b63\u5728\u66f4\u65b0\uff0c\u6b22\u8fce\u5173\u6ce8\uff01","text":"<ul> <li>C++ \u5bf9 C++ \u7684\u91cd\u65b0\u6574\u7406</li> </ul>"},{"location":"recent/#\u5176\u4ed6\u8fd1\u671f\u66f4\u65b0\u7684\u63a8\u8350\u5185\u5bb9","title":"\u5176\u4ed6\u8fd1\u671f\u66f4\u65b0\u7684\u63a8\u8350\u5185\u5bb9","text":"<ul> <li>\u9762\u7ecf \u6691\u671f\u5b9e\u4e60\u548c\u79cb\u62db\u590d\u76d8 \u57fa\u672c\u5df2\u7ecf\u66f4\u65b0\u5b8c\u4e86\uff01</li> <li>\u6838\u5fc3\u77e5\u8bc6 \u7f16\u8bd1\u539f\u7406 \u5df2\u7ecf\u642c\u8fc7\u6765\u4e86\uff01</li> <li>\u751f\u6d3b \u684c\u6e38\u6e38\u73a9\u8bb0\u5f55\uff01</li> <li>\u6838\u5fc3\u77e5\u8bc6 \u8ba1\u7b97\u673a\u7ec4\u6210 \u5df2\u7ecf\u642c\u8fc7\u6765\u4e86\uff01</li> <li>\u6742\u9879 \u535a\u5ba2\u642d\u5efa\u8bb0\u5f55</li> <li>\u6838\u5fc3\u77e5\u8bc6 \u64cd\u4f5c\u7cfb\u7edf \u5df2\u7ecf\u6574\u7406\u5b8c\u4e86\uff01</li> <li>PL PPL \u8bfe\u7a0b\u7b14\u8bb0 \u5199\u5230\u4e86\u7b2c 10 \u7ae0\uff0c\u540e\u9762\u7684\u6ca1\u529b\u6c14\u5199\u4e86 QAQ \u6682\u65f6\u6ca1\u6709\u8865\u5168\u7684\u8ba1\u5212\u3002\u53e6\u5916\u628a Final \u4e2d\u6211\u51fa\u7684\u90e8\u5206\u7684\u9898\u76ee\u548c\u89e3\u7b54\u653e\u8fc7\u6765\u4e86\uff01</li> <li>\u751f\u6d3b \u5173\u4e8e\u4eb2\u5bc6\u5173\u7cfb\u7684\u788e\u788e\u5ff5</li> <li>C++ \u5feb\u901f\u5165\u95e8 C++ \u5199\u9898\uff01</li> <li>C++ \u7406\u89e3 STL \u2014\u2014 \u8fed\u4ee3\u5668\u4e0e\u51fd\u6570\u5bf9\u8c61</li> </ul>"},{"location":"compile_principle/","title":"\u7f16\u8bd1\u539f\u7406","text":"<p> \u7ea6 472 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>\u6211\u7684\u7b14\u8bb0\u6240\u8ffd\u6c42\u7684\u76ee\u6807\u662f\u6709\u903b\u8f91\u3001\u901a\u7545\u5730\u603b\u7ed3\u77e5\u8bc6\uff1b\u56e0\u6b64\u5982\u679c\u60a8\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u5728\u4efb\u4f55\u5730\u65b9\u53d1\u73b0\u4e86\u4e0d\u5bb9\u6613\u8bfb\u61c2\u7684\u90e8\u5206\uff0c\u8bf7\u52a1\u5fc5\u5728\u8bc4\u8bba\u533a\u6216\u8005\u901a\u8fc7\u5176\u5b83\u65b9\u5f0f\u544a\u77e5\u6211QWQ\uff01\u975e\u5e38\u611f\u8c22\uff01</p> <p>Tips</p> <p>\u53c2\u4e0e\u4e86\u670b\u8f88\u8f85\u5b66\u8bb2\u89e3\u7f16\u8bd1\u539f\u7406\uff0c\u5f55\u64ad \u5728 \u8fd9\u91cc</p>"},{"location":"compile_principle/#0-\u5f00\u59cb\u4e4b\u524d","title":"0 \u5f00\u59cb\u4e4b\u524d","text":"<p>\u672c\u6587\u662f\u81ea\u4e3b\u5b66\u4e60\u7684\u53c8\u4e00\u5c1d\u8bd5\uff08\u867d\u7136\uff0c\u5b9e\u9645\u4e0a\u5927\u591a\u6570\u8bfe\u7a0b\u90fd\u662f\u81ea\u5b66\u7684\uff09\u3002\u8be5\u5b66\u4e60\u5728\u5927\u4e8c\u6625\u590f\u5b66\u671f\u4e4b\u524d\u8fdb\u884c\uff0c\u4e3b\u8981\u76ee\u6807\u662f\u4e3a\u4e86\u8fce\u5408\u6211\u5bf9\u8bfe\u7a0b\u5b89\u6392\u7684\u4e00\u4e9b\u8c03\u6362\u3002</p> <p>\u672c\u6587\u7684\u5b66\u4e60\u56f4\u7ed5\u300a\u73b0\u4ee3\u7f16\u8bd1\u539f\u7406  C \u8bed\u8a00\u63cf\u8ff0\uff08\u4fee\u8ba2\u7248\uff09\u300b\uff08Modern Compiler Implementation in C\uff09\u5c55\u5f00\uff0c\u672c\u6587\u7684\u76ee\u5f55\u7ed3\u6784\u4e5f\u57fa\u672c\u53c2\u8003\u8fd9\u4e00\u672c\u4e66\u7684\u5185\u5bb9\u3002\u7531\u4e8e\u8fd9\u672c\u4e66\u4e2d\u90e8\u5206\u5185\u5bb9\u6bd4\u8f83\u96be\u4ee5\u7406\u89e3\uff0c\u540c\u65f6\u53c2\u8003\u4e86\u300a\u7f16\u8bd1\u539f\u7406\u300b\uff08Compilers: Principles, Techniques and Tools\uff09\u4ee5\u53ca CS143 \u7684\u76f8\u5173\u8d44\u6599\u3002\u672c\u6587\u7ed3\u6784\u540c\u65f6\u4e5f\u53d7\u5230 CS143 \u7684\u5f71\u54cd\u3002\uff08\u4e0a\u8ff0\u4e66\u7c4d\u7684\u9009\u62e9\u5b8c\u7f8e\u5730\u907f\u5f00\u4e86\u6559\u5b66\u73ed\u4f7f\u7528\u7684\u8bfe\u672c\uff09</p> <p>\u82e5\u65e0\u7279\u6b8a\u8bf4\u660e\uff0c\u672c\u6587\u7684\u56fe\u7247\u6765\u6e90\u5747\u4e3a\u4e0a\u8ff0\u8bfe\u672c\u6216\u8bfe\u4ef6\u8d44\u6599\u3002</p> <p>\u5728\u672c\u6587\u4e2d\uff0c\u5c24\u5176\u662f\u4e60\u9898\u90e8\u5206\uff1a</p> <p>\u7eff\u8272\u8868\u793a\u4ecd\u5b58\u95ee\u9898</p> <p>\u9ec4\u8272\u8868\u793a\u5f88\u4e0d\u786e\u5b9a\u6216\u8005\u672a\u5b8c\u6210\u7684\u5185\u5bb9</p> <p>\u7ea2\u8272\u8868\u793a\u5b8c\u5168\u4e0d\u4f1a</p> <p></p>"},{"location":"compile_principle/#\u5386\u5e74\u5377\u7b49\u76f8\u5173\u8d44\u6e90","title":"\u5386\u5e74\u5377\u7b49\u76f8\u5173\u8d44\u6e90","text":"<p>\uff08\u5f88\u591a\u6765\u81ea \u6c42\u662f\u6f6e\u8bfe\u7a0b\u653b\u7565\u5171\u4eab\u8ba1\u5212 \uff0c\u4f46\u662f\u6211\u4e3a\u4e86\u65b9\u4fbf\u628a\u90e8\u5206\u7684\u9898\u76ee\u548c\u7b54\u6848\u5206\u5f00\u4e86\uff09</p> <ul> <li>2021wqMidterm.pdf</li> <li>2021wqQuiz1.pdf</li> <li>2021wqQuiz2.pdf</li> <li>CP MidTerm 1 A (2018).pdf</li> <li>CP MidTerm 1 Q (2018).pdf</li> <li>CP MidTerm 2 A (unknown).pdf</li> <li>CP MidTerm 2 Q (unknown).pdf</li> <li>CP MidTerm 3 A (2017B).pdf</li> <li>CP MidTerm 3 Q (2017B).pdf</li> <li>CP MidTerm 4 A (2017A).pdf</li> <li>CP MidTerm 4 Q (2017A).pdf</li> <li>CP MidTerm 5 (2021).pdf</li> <li>https://www.cc98.org/topic/5115473</li> <li>https://www.cc98.org/topic/4932042</li> </ul>"},{"location":"compile_principle/#assessment","title":"Assessment","text":"<ul> <li>Final\u00a040%</li> <li>Mid-Term\u00a015%</li> <li>Quiz 10%</li> <li>HW 10%</li> <li>Proj 25%<ul> <li>HW Proj*2 30%</li> <li>Final Proj 70%</li> </ul> </li> </ul>"},{"location":"compile_principle/#1-\u7eea\u8bba--introduction","title":"1 \u7eea\u8bba | Introduction","text":""},{"location":"compile_principle/1%20Lexical%20Analysis/","title":"2 \u8bcd\u6cd5\u5206\u6790 | Lexical Analysis","text":"<p> \u7ea6 3334 \u4e2a\u5b57  4 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>\u670b\u8f88\u8f85\u5b66\u5f55\u64ad\uff1a\u7f16\u8bd1\u539f\u7406\u901f\u6210(1) \u8bcd\u6cd5\u5206\u6790&amp;\u8bed\u6cd5\u5206\u6790(\u4e0a)</p> <p>\u8f93\u5165\uff1a\u5b57\u7b26\u6d41\uff1b\u8f93\u51fa\uff1a\u629b\u5f03\u7a7a\u767d\u7b26\u548c\u6ce8\u91ca\u540e\uff0c\u751f\u6210\u4e00\u7cfb\u5217\u540d\u5b57\u3001\u5173\u952e\u5b57\u548c\u6807\u70b9\u7b26\u53f7</p> <p>(Input: a stream of characters; Output: a stream of names, keywords and punctuation marks, discarding space and comments)</p> <p></p> <p>\u7a0b\u5e8f\u4e2d\u6bcf\u4e2a\u5730\u65b9\u90fd\u6709\u53ef\u80fd\u51fa\u73b0\u7a7a\u767d\u7b26\u548c\u6ce8\u91ca\uff0c\u5982\u679c\u8ba9\u8bed\u6cd5\u5206\u6790\u5668\u6765\u5904\u7406\u5b83\u4eec\u5219\u4f1a\u4f7f\u5f97\u8bed\u6cd5\u5206\u6790\u8fc7\u4e8e\u590d\u6742\u3002</p>"},{"location":"compile_principle/1%20Lexical%20Analysis/#21-\u8bcd\u6cd5\u5355\u8bcd--lexical-tokens","title":"2.1 \u8bcd\u6cd5\u5355\u8bcd | Lexical Tokens","text":"<p>Tokens \u662f\u6307\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\u5177\u6709\u72ec\u7acb\u542b\u4e49\u7684\u6700\u5c0f\u8bcd\u6cd5\u5355\u4f4d\uff0c\u5305\u542b\u5355\u8bcd\u3001\u6807\u70b9\u7b26\u53f7\u3001\u64cd\u4f5c\u7b26\u3001\u5206\u9694\u7b26\u7b49\u3002\u4f8b\u5982\u5178\u578b\u6d4b\u8bd5\u8bed\u8a00\u7684\u4e00\u4e9b token \u7c7b\u578b\u4e3a\uff1a</p> <p></p> <p>\u53e6\u5916\u4e00\u4e9b tokens \u5982 IF, VOID, RETURN \u79f0\u4f5c reserved words\uff0c\u5728\u5927\u591a\u6570\u8bed\u8a00\u4e2d\u4e0d\u80fd\u6210\u4e3a identifiers\uff08\u5373\u4e0a\u56fe\u4e2d\u7684 ID\uff09\u3002</p> <p>\u4e00\u4e9b nontokens\uff1a</p> <p></p> <p>\u5728\u4e00\u4e9b\u9700\u8981\u5b8f\u9884\u5904\u7406\u5668\u7684\u8bed\u8a00\u4e2d\uff0c\u7531\u9884\u5904\u7406\u5668\u5904\u7406\u6e90\u7a0b\u5e8f\u7684\u5b57\u7b26\u6d41\uff0c\u5e76\u751f\u6210\u53e6\u5916\u7684\u5b57\u7b26\u6d41\uff0c\u7136\u540e\u7531\u8bcd\u6cd5\u5206\u6790\u5668\uff08Lexical Analyzer\uff09\u8bfb\u5165\u65b0\u4ea7\u751f\u7684\u5b57\u7b26\u6d41\u3002\u8fd9\u79cd\u5b8f\u9884\u5904\u7406\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u4e0e\u8bcd\u6cd5\u5206\u6790\u5668\u96c6\u6210\u5728\u4e00\u8d77\u3002</p> <p>\u4f8b\u5982\uff1a\u5982\u4e0b\u7a0b\u5e8f <pre><code>float match0(char *s) /* find a zero */\n{if (!strncmp(s, \"0.0\", 3))\nreturn 0.;\n}\n</code></pre> \u7ecf\u8bcd\u6cd5\u5206\u6790\u5668\u5206\u6790\u4ea7\u751f\u6d41 <pre><code>FLOAT ID(match0) LPAREN CHAR STAR ID(s) RPAREN\nLBRACE IF LPAREN BANG ID(strncmp) LPAREN ID(s)\nCOMMA STRING(0.0) COMMA NUM(3) RPAREN RPAREN\nRETURN REAL(0.0) SEMI RBRACE EOF\n</code></pre></p>"},{"location":"compile_principle/1%20Lexical%20Analysis/#22-\u6b63\u5219\u8868\u8fbe\u5f0f--regular-expressions","title":"2.2 \u6b63\u5219\u8868\u8fbe\u5f0f | Regular Expressions","text":"<p>\u79f0 language \u662f string \u7684\u96c6\u5408\uff1bstring \u662f symbol \u7684\u6709\u9650\u5e8f\u5217\uff1bsymbol \u662f\u6709\u9650 alphabet \u4e2d\u7684\u5143\u7d20\u3002</p> <p>\u6bcf\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u8868\u793a\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u96c6\u5408\uff08i.e. language\uff09\uff0c\u5373\u5b83\u53ef\u4ee5\u5339\u914d\u5f88\u591a\u5b57\u7b26\u4e32\uff1a</p> <ul> <li>Symbol : <code>a</code> , \u5339\u914d\u5b57\u7b26\u4e32 \"a\"\u3002</li> <li>Alternation : <code>M</code> \u548c <code>N</code> \u662f\u4e24\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c<code>M|N</code> \u53ef\u4ee5\u5339\u914d <code>M</code> \u548c <code>N</code> \u5339\u914d\u96c6\u5408\u7684\u5e76\u96c6\u3002\u5982 <code>a|b</code> \u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u4e32 \"a\" \u6216 \"b\"\u3002</li> <li>Concatenation : <code>M</code> \u548c <code>N</code> \u662f\u4e24\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c<code>M\u00b7N</code> \u53ef\u4ee5\u5339\u914d <code>M</code> \u548c <code>N</code> \u4e2d\u5404\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u8054\u5408\u3002\u5982 <code>(a|b)\u00b7a</code> \u5339\u914d\u5b57\u7b26\u4e32 \"aa\" \u6216 \"ab\"\u3002</li> <li>Epsilon : <code>\u03f5</code> \u5339\u914d\u7a7a\u5b57\u7b26\u4e32\u3002\u5982 <code>(a\u00b7b)|\u03f5</code> \u4ee3\u8868 language {\"\", \"ab\"}\u3002</li> <li>Repetition : <code>M</code> \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219 <code>M</code> \u7684 \u514b\u6797\u95ed\u5305 (Kleene closure) \u4e3a <code>M*</code> \uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u7531 <code>M</code> \u4e2d\u7684\u5b57\u7b26\u4e32\u96f6\u81f3\u591a\u6b21 concatenation \u7684\u7ed3\u679c\uff0c\u5219\u8be5\u5b57\u7b26\u4e32\u5c5e\u4e8e <code>M*</code> \u3002\u5982 <code>((a|b)\u00b7a)*</code> \u8868\u793a\u65e0\u7a77\u96c6\u5408 {\"\", \"aa\", \"ba\", \"aaaa\", \"baaa\", \"aaba\", \"baba\", \"aaaaaa\", ... }\u3002</li> </ul> <p>\u5728\u4e66\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\uff0c\u6211\u4eec\u6709\u65f6\u7701\u7565 <code>\u00b7</code> \u548c <code>\u03f5</code> \uff0c\u5e76\u89c4\u5b9a <code>*</code> \u4f18\u5148\u7ea7\u9ad8\u4e8e <code>\u00b7</code> \u9ad8\u4e8e <code>|</code> \u3002\u8fd8\u6709\u4e00\u4e9b\u7f29\u5199\u5f62\u5f0f\uff1a</p> <ul> <li><code>[abcd]</code> \u8868\u793a <code>(a|b|c|d)</code></li> <li><code>[b-gM-Qkr]</code> \u8868\u793a <code>[bcdefgMNOPQkr]</code></li> <li><code>M?</code> \u8868\u793a <code>(M|\u03f5)</code> \uff0c\u5373 <code>M</code> \u51fa\u73b0 0 \u6b21\u6216 1 \u6b21</li> <li><code>M+</code> \u8868\u793a <code>(M\u00b7M*)</code> \uff0c\u5373 <code>M</code> \u51fa\u73b0\u81f3\u5c11 1 \u6b21</li> </ul> <p>\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7b26\u53f7\uff1a</p> <ul> <li><code>.</code> \u8868\u793a\u9664\u6362\u884c\u7b26\u5916\u7684\u6240\u6709\u5355\u4e2a\u5b57\u7b26</li> <li><code>\"a.+*\"</code> \uff0c\u5f15\u53f7\u4e2d\u7684\u5b57\u7b26\u4e32\u5339\u914d\u5176\u81ea\u8eab</li> </ul> <p>Lex \u548c\u5176\u4ed6\u7c7b\u4f3c\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u4e2d\u89c4\u5b9a\u4e86\u4e24\u6761\u89c4\u5219\u4ee5\u6d88\u9664\u4e8c\u4e49\u6027\uff1a</p> <ul> <li>Longest Match : \u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u6700\u957f\u7684\u80fd\u4e0e\u4efb\u4e00\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u5b50\u4e32\u4e3a\u5339\u914d\u5230\u7684 token</li> <li>Rule Priority : \u5bf9\u5339\u914d\u5230\u7684 longest substring\uff0c\u9009\u62e9\u7b2c\u4e00\u4e2a\u4e0e\u4e4b\u5339\u914d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u5373\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e66\u5199\u987a\u5e8f\u662f\u6709\u610f\u4e49\u7684</li> </ul> <p>\u4f8b\u5982\uff1a</p> <p></p> <p>\uff08\u5176\u4e2d\u6ce8\u91ca\u662f <code>--</code> \u5f00\u59cb\u7684\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3001\u4ee5\u6362\u884c\u7ed3\u675f\u7684\u5b57\u7b26\u4e32\uff09</p> <p>\u5219 \"if\" \u4f1a\u5339\u914d\u7b2c\u4e00\u6761\uff08\u867d\u7136\u4e5f\u80fd\u5339\u914d\u7b2c\u4e8c\u6761\uff0c\u4f46\u662f Rule priority \uff09\uff0c\u800c \"if9\" \u4f1a\u5339\u914d\u7b2c\u4e8c\u6761\uff08\u867d\u7136 \"if\" \u4e5f\u80fd\u5339\u914d\u5230\u7b2c\u4e00\u6761\uff0c\u4f46\u662f Longest match \uff09\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u9762\u7684\u89c4\u5219\u662f\u5b8c\u6574\uff08complete\uff09\u7684\uff0c\u56e0\u4e3a\u975e\u6cd5\u5b57\u7b26\u90fd\u80fd\u591f\u88ab <code>\u00b7</code> \u8bc6\u522b\u5230\u3002</p>"},{"location":"compile_principle/1%20Lexical%20Analysis/#23-\u786e\u5b9a\u6709\u9650\u81ea\u52a8\u673a--deterministic-finite-automaton-dfa","title":"2.3 \u786e\u5b9a\u6709\u9650\u81ea\u52a8\u673a | Deterministic Finite Automaton, DFA","text":"<p>\u6709\u9650\u81ea\u52a8\u673a\u6709\u4e00\u4e2a finite set of states \uff0c\u4ee5\u53ca\u8fde\u63a5\u5404\u4e2a state \u7684 edges \uff0c\u6bcf\u6761 edge \u7531\u4e00\u4e2a symbol \u6807\u8bb0\u3002\u6709\u4e00\u4e2a\u72b6\u6001\u662f start state \uff0c\u67d0\u4e9b\u72b6\u6001\u662f final state \u3002\u4f8b\u5982\uff1a</p> <p></p> <p>\u4e0a\u56fe\u662f\u4e00\u4e2a DFA\u3002\u5728 DFA \u4e2d\uff0c\u4e0d\u4f1a\u6709\u4ece\u4e00\u4e2a\u72b6\u6001\u51fa\u53d1\u7684\u4e24\u6761\u8fb9\u6807\u8bb0\u4e3a\u540c\u4e00\u4e2a\u7b26\u53f7\u3002\u56fe 2.3 \u7684 DFA \u4e0e\u56fe 2.2 \u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u662f\u540c\u6837\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u56fe 2.3 \u53ef\u4ee5\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u9650\u81ea\u52a8\u673a\uff1a</p> <p></p> <p>\u4e3a\u4e86\u8bc6\u522b\u6700\u957f\u7684\u5339\u914d\uff0c\u8bcd\u6cd5\u5206\u6790\u5668\u5e94\u5f53\u8bb0\u5f55\u8fc4\u4eca\u9047\u5230\u7684\u6700\u957f\u5339\u914d\u53ca\u8be5\u5339\u914d\u7684\u4f4d\u7f6e\u3002\u8bcd\u6cd5\u5206\u6790\u5668\u4f7f\u7528\u53d8\u91cf <code>Last-Final</code> \u548c <code>Input-Position-of-Last-Final</code> \u8bb0\u5f55\u6700\u8fd1\u9047\u5230\u7684 final state \u7684\u7f16\u53f7\u548c\u6700\u540e\u4e00\u6b21\u5904\u4e8e final state \u7684\u65f6\u673a\u3002\u6bcf\u5f53\u8fdb\u5165\u4e00\u4e2a\u7ec8\u6001\u65f6\uff0c\u8bcd\u6cd5\u5206\u6790\u5668\u66f4\u65b0\u8fd9\u4e24\u4e2a\u53d8\u91cf\uff1b\u5f53\u5230\u8fbe dead state \u65f6\uff0c\u4ece\u8fd9\u4e24\u4e2a\u53d8\u91cf\u5c31\u53ef\u4ee5\u5f97\u77e5\u5176\u5339\u914d\u7684 token\u3002\u4f8b\u5982\uff1a</p> <p></p> <p>\u6709\u65f6\uff0c\u8bcd\u6cd5\u5206\u6790\u53ef\u4ee5\u5206\u6210\u626b\u63cf\u9636\u6bb5\u548c\u8bcd\u6cd5\u5206\u6790\u9636\u6bb5\u4e24\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u626b\u63cf\u9636\u6bb5\u4e3b\u8981\u8d1f\u8d23\u5b8c\u6210\u4e00\u4e9b\u4e0d\u9700\u8981\u751f\u6210\u8bcd\u6cd5\u5355\u5143\u7684\u7b80\u5355\u5904\u7406\uff0c\u6bd4\u5982\u5220\u9664\u6ce8\u91ca\u548c\u5c06\u591a\u4e2a\u8fde\u7eed\u7684\u7a7a\u767d\u5b57\u7b26\u538b\u7f29\u6210\u4e00\u4e2a\u5b57\u7b26\uff1b</li> <li>\u8bcd\u6cd5\u5206\u6790\u9636\u6bb5\u662f\u8f83\u4e3a\u590d\u6742\u7684\u90e8\u5206\uff0c\u5b83\u5904\u7406\u626b\u63cf\u9636\u6bb5\u7684\u8f93\u51fa\u5e76\u751f\u6210\u8bcd\u6cd5\u5355\u5143\u3002</li> </ul> <p>See Also\uff1a\u6839\u636e\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\u6c42\u6b63\u5219\u8868\u8fbe\u5f0f</p>"},{"location":"compile_principle/1%20Lexical%20Analysis/#24-\u975e\u786e\u5b9a\u6709\u9650\u72b6\u6001\u673a--nondeterministic-finite-automaton-nfa","title":"2.4 \u975e\u786e\u5b9a\u6709\u9650\u72b6\u6001\u673a | Nondeterministic Finite Automaton, NFA","text":"<p>NFA \u53ef\u80fd\u5b58\u5728\u4ece\u540c\u4e00\u4e2a\u72b6\u6001\u51fa\u53d1\u7684\u6807\u6709\u591a\u6761\u76f8\u540c\u7b26\u53f7\u7684\u8fb9\uff1b\u4e5f\u53ef\u80fd\u5b58\u5728\u6807\u6709 \u03f5 \u7684\u8fb9\uff0c\u8fd9\u79cd\u8fb9\u53ef\u4ee5\u5728\u4e0d\u63a5\u6536\u8f93\u5165\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u72b6\u6001\u8f6c\u6362\u3002</p>"},{"location":"compile_principle/1%20Lexical%20Analysis/#241-\u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a-nfa","title":"2.4.1 \u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a NFA","text":"<p>\u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u5730\u5c06\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u8f6c\u4e3a\u4e00\u4e2a NFA\uff1a</p> <p></p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u5c06\u56fe 2.2 \u4e2d IF, ID, NUM, error \u7684\u4e00\u4e9b\u8868\u8fbe\u5f0f\u8f6c\u6362\u6210\u4e86\u4e00\u4e2a NFA\uff1a</p> <p></p>"},{"location":"compile_principle/1%20Lexical%20Analysis/#242-\u5c06-nfa-\u8f6c\u6362\u4e3a-dfa","title":"2.4.2 \u5c06 NFA \u8f6c\u6362\u4e3a DFA","text":"<p>\u6211\u4eec\u9996\u5148\u7ed9\u51fa\u4e00\u4e9b\u5b9a\u4e49\uff1a</p> <ul> <li>\\(edge(s,c)\\)\u8868\u793a\u4ece\u72b6\u6001 \\(s\\)\u00a0\u6cbf\u7740\u6807\u6709 \\(c\\)\u00a0\u7684\u4e00\u6761\u8fb9\u5230\u8fbe\u7684\u6240\u6709 NFA \u72b6\u6001\u7684\u96c6\u5408</li> <li>\\(closure(S)\\)\u00a0\u8868\u793a\u4ece\u72b6\u6001\u96c6\u5408 \\(S\\)\u00a0\u4e2d\u7684\u72b6\u6001\u51fa\u53d1\uff0c\u53ea\u7ecf\u8fc7 \\(\\epsilon\\)\u00a0\u8fb9\u5c31\u80fd\u8fbe\u5230\u7684\u72b6\u6001\u7684\u96c6\u5408\u4e0e \\(S\\)\u00a0\u7684\u5e76\u96c6\uff0c\u5373\uff1a\\(closure(S) = S\\cup (\\cup_{s\\in T}\\ edge(S,\\epsilon))\\)\uff0c\u79f0\u4e3a \\(S\\)\u00a0\u7684 \\(\\epsilon\\)\u00a0\u95ed\u5305\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u7b80\u5355\u7684\u7b97\u6cd5\u5b9e\u73b0 \\(closure(S)\\)\uff1a</li> </ul> <p></p> <ul> <li>\\(DFAedge(d,c)\\)\u8868\u793a\u4ece\u72b6\u6001\u96c6\u5408 \\(d\\)\u00a0\u4e2d\u7684\u72b6\u6001\u51fa\u53d1\uff0c\u63a5\u53d7\u7b26\u53f7 \\(c\\)\u00a0\u6240\u8fbe\u7684 NFA \u72b6\u6001\u7684 \\(\\epsilon\\)\u00a0\u95ed\u5305\uff0c\u5373\uff1a \\(DFAedge(d,c) = closure(\\cup_{s\\in d}\\ edge(s,c))\\)\uff0c\u5373 \\(d\\)\u00a0\u7ecf \\(c\\)\u00a0\u53ef\u8fbe\u7684\u6240\u6709\u72b6\u6001\u7684\u96c6\u5408</li> </ul> <p>\u5229\u7528\u4e0a\u9762\u4e24\u4e2a\u6982\u5ff5\uff0c\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u8bcd\u6cd5\u5206\u6790\u7684\u8fc7\u7a0b\uff08s1 \u662f NFA \u7684\u8d77\u59cb\u72b6\u6001\uff0cc1 \u81f3 ck \u662f\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\uff0cd \u662f\u5f53\u524d\u53ef\u80fd\u6240\u5904\u7684\u72b6\u6001\u96c6\u5408\uff09\uff1a</p> <p></p> <p>\u4ee5\u56fe 2.7 \u4e3a\u4f8b\uff0c\u6211\u4eec\u8bfb\u5165\u5b57\u7b26\u4e32 \"in\"\u3002\u59cb\u6001\u7684 \\(\\epsilon\\)\u00a0\u95ed\u5305\u4e3a {1, 4, 9, 14}\uff0c\u63a5\u53d7\u5b57\u7b26 <code>i</code> \u540e\u53ef\u8fbe {2, 5, 6, 8, 15}\uff0c\u518d\u63a5\u53d7 <code>n</code> \u540e\u53ef\u8fbe {6, 7, 8}\uff0c \u5176\u4e2d 8 \u662f\u7ec8\u6001\uff0c\u56e0\u6b64 \"in\"  \u662f\u4e00\u4e2a ID\u3002</p> <p>\u7528\u7c7b\u4f3c\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 NFA \u8f6c\u6362\u4e3a DFA\uff1a</p> <p></p> <p>\u5373\uff0cDFA \u7684\u59cb\u6001 <code>states[1]</code> \u4e3a NFA \u7684\u59cb\u6001\u7684 \\(\\epsilon\\)\u00a0\u95ed\u5305\uff0c\u5f53 \\(j\\leq p\\) \u65f6\u904d\u5386\u5b57\u7b26\u96c6 \\(\\Sigma\\)\u00a0\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26 <code>c</code> \uff0c\u4ee4 <code>e</code> \u4e3a <code>states[j]</code> \u7ecf <code>c</code> \u53ef\u8fbe\u7684\u6240\u6709\u72b6\u6001\u3002\u5982\u679c\u540c\u5f62\u590d\u73b0\uff0c\u5373 <code>e</code> \u4e0e \\(i\\leq p\\)\u00a0\u7684\u67d0\u4e2a <code>states[i]</code> \u76f8\u540c\uff0c\u5219\u5c06 <code>trans[j,c]</code> \u8d4b\u503c\u4e3a <code>i</code> \uff0c\u5373\u6807\u8bb0 <code>j</code> \u7ecf <code>c</code> \u5230\u8fbe <code>i</code> \uff1b\u5426\u5219 <code>p++, states[p] = e, trans[j, c] = p</code> \u3002 <code>j++</code> \uff0c\u7814\u7a76\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\u5982\u679c\u5df2\u7ecf\u7814\u7a76\u5b8c\u6700\u540e\u4e00\u4e2a\u72b6\u6001\uff0c\u4e14\u6ca1\u6709\u65b0\u7684\u72b6\u6001\uff0c\u5219\u8f6c\u6362\u7ed3\u675f\u3002\u53ea\u8981 <code>states[x]</code> \u4e2d\u4efb\u4f55\u72b6\u6001\u662f NFA \u7684\u7ec8\u6001\uff0c\u5219 <code>states[x]</code> \u5373\u4e3a DFA \u7684\u7ec8\u6001\u3002</p> <p></p> <p>\u8fd9\u4e2a DFA \u662f\u53ef\u4ee5\u6700\u5c0f\u5316\u7684\u3002</p>"},{"location":"compile_principle/1%20Lexical%20Analysis/#243-dfa-\u7684\u6700\u5c0f\u5316","title":"2.4.3 DFA \u7684\u6700\u5c0f\u5316","text":"<p>\u61d2\u5f97\u5199\u4e86\uff0c\u8bf7\u770b https://www.bilibili.com/video/BV1KT4y1U7cg/ 54\u520610\u79d2</p>"},{"location":"compile_principle/1%20Lexical%20Analysis/#25-\u4f8b\u5b50\u4ece\u6b63\u5219\u8868\u8fbe\u5f0f\u5230-dfa","title":"2.5 \u4f8b\u5b50\uff1a\u4ece\u6b63\u5219\u8868\u8fbe\u5f0f\u5230 DFA","text":"<p><code>(a|b)*a(a|b|\u03b5)</code></p> <p>\u6839\u636e 2.4.1\uff0c\u6211\u4eec\u5f97\u5230\u8be5\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 NFA\uff1a</p> <p></p> <p>Start with the state <code>state[1]</code>: </p> <p>\\(State[1] = \\overline 1 = \\{1, 2, 3, 4, 8, 9\\}\\)</p> <p>where \\(\\overline x\\) is the \u03b5-closure of state \\(x\\) in the DFA.</p> <p>When <code>state[1]</code> accept <code>a</code>, it will reach <code>state[2]</code>: </p> <p>\\(State[2] = \\overline{\\{5, 10\\}} = \\overline 5\\cup\\overline {10} = \\{2,3,4,5,7,8,9,10,11,12,13,14,17,18\\}\\)</p> <p>When <code>state[1]</code> accept <code>b</code>, it will reach <code>state[3]</code>:</p> <p>\\(State[3] = \\overline{6} = \\{2,3,4,6,7,8,9\\}\\)</p> <p>When <code>state[2]</code> accept <code>a</code>, it will reach <code>state[4]</code>:</p> <p>\\(State[4] = \\overline{\\{5, 10, 15\\}} = \\overline 5\\cup\\overline {10} \\cup\\overline {15}= \\{2,3,4,5,7,8,9,10,11,12,13,14,15,17,18\\}\\)</p> <p>When <code>state[2]</code> accept <code>b</code>, it will reach <code>state[5]</code>:</p> <p>\\(State[5] = \\overline{\\{6, 16\\}} = \\overline 6\\cup\\overline {16} = \\{2,3,4,6,7,8,9,16,18\\}\\)</p> <p>When <code>state[3]</code> accept <code>a</code>, it'll reach <code>state[2]</code>; when accept <code>b</code>, it'll reach <code>state[3]</code>.</p> <p>When <code>state[4]</code> accept <code>a</code>, it'll reach <code>state[4]</code>; when accept <code>b</code>, it'll reach <code>state[5]</code>.</p> <p>When <code>state[5]</code> accept <code>a</code>, it'll reach <code>state[2]</code>; when accept <code>b</code>, it'll reach <code>state[3]</code>.</p> <p>As <code>state[2, 4, 5]</code> contains the final state <code>18</code> in the NFA, so they are final states in DFA.</p> <p>So here we've got the DFA:</p> <p></p> <p>And we just denote the sets of states by number 1~5:</p> <p></p> <p>(If we don't do the simplification, figure above is the DFA wanted) We can finally simplify the DFA above to be the following one:</p> <p></p> <p>i.e. </p> <p></p>"},{"location":"compile_principle/1%20Lexical%20Analysis/#26-lex\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u751f\u6210\u5668","title":"2.6 Lex\uff1a\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u751f\u6210\u5668","text":"<p>\u8fd9\u7bc7\u535a\u5ba2 \u662f\u6211\u770b\u5230\u7684\u552f\u4e00\u4e00\u4e2a\u80fd\u770b\u61c2\u7684 Lex \u548c Yacc \u6559\u7a0b\u3002</p> <p>Lex \u7531\u8bcd\u6cd5\u89c4\u8303\u751f\u6210\u4e00\u4e2a C \u7a0b\u5e8f\uff0c\u5373\u4e00\u4e2a\u8bcd\u6cd5\u5206\u6790\u5668\u3002Lex \u7684\u4e00\u4e2a\u793a\u4f8b\u662f\uff1a <pre><code>%option noyywrap\n%{\n    int lineCount = 0, charCount = 0, wordCount = 0, isLastBlank = 1;\n%}\nwordChar    [0-9a-zA-Z]\notherChar   [^{wordChar}]\n\n%%\n\n\\n      lineCount++; charCount++; isLastBlank = 1;\n{wordChar}  {\n            charCount++;\n            if (isLastBlank)\n                wordCount++;\n            isLastBlank = 0;\n        }\n{otherChar} charCount++; isLastBlank = 1;\n\n%%\n\nint main() {\n    yylex();\n    printf(\"There are %d chars, %d words and %d lines.\\n\", charCount, wordCount, lineCount);\n    return 0;\n}\n</code></pre> \u8fd9\u4e2a\u5b9e\u4f8b\u7edf\u8ba1\u4e86\u4e00\u4e2a\u8f93\u5165\u4e2d\u7684\u5b57\u7b26\u6570\u3001\u8bcd\u6570\u4ee5\u53ca\u884c\u6570\uff0c\u5176\u4e2d\u201c\u8bcd\u201d\u5b9a\u4e49\u4e3a\u7531\u6570\u5b57\u548c\u5b57\u6bcd\u5f62\u6210\u7684\u8fde\u7eed\u7684\u5b57\u7b26\u4e32\u3002\u4e0b\u9762\u5177\u4f53\u89e3\u91ca\u8fd9\u4e2a\u5b9e\u4f8b\uff1a</p> <p>\u4e24\u4e2a <code>%%</code> \uff088\u300119 \u884c\uff09\u5c06\u8be5\u5b9e\u4f8b\u5206\u4e3a\u4e86\u4e09\u4e2a\u90e8\u5206\u3002</p> <ul> <li>\u7b2c\u4e00\u4e2a\u90e8\u5206\u4e2d\uff1a</li> <li><code>%option noyywrap</code> \u663e\u5f0f\u5730\u58f0\u660e\u4e86\u4e0d\u4f7f\u7528 <code>yywrap()</code> \u51fd\u6570\u3002\u8fd9\u4e00\u51fd\u6570\u7528\u4e8e\u5bf9\u591a\u4e2a\u6587\u4ef6\u7684\u89e3\u6790\uff0c\u5f53\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de 1 \u65f6\u8868\u793a\u89e3\u6790\u7ed3\u675f\u3002\u8fd9\u91cc\u6211\u4eec\u5bf9 stdin \u8fdb\u884c\u89e3\u6790\uff0c\u4e0d\u9700\u8981 <code>yywrap()</code> \u51fd\u6570\u3002</li> <li><code>%{</code> \u548c <code>%}</code> \u6269\u8d77\u7684\u90e8\u5206\uff08\u8fd9\u4e24\u4e2a\u7b26\u53f7\u5fc5\u987b\u9876\u683c\uff09\uff0c\u8fd9\u4e00\u90e8\u5206\u7684\u5185\u5bb9\u4f1a\u88ab\u76f4\u63a5\u62f7\u8d1d\u5230\u751f\u6210\u7684 C \u7a0b\u5e8f\u4e2d\uff0c\u5373\u4f7f\u7528\u7684\u4e00\u4e9b include\u3001\u58f0\u660e\u548c\u5b8f\u7b49\u3002\u8fd9\u91cc\u7528\u5230\u7684\u662f\u4e00\u4e9b\u53d8\u91cf\u7684\u5b9a\u4e49\u3002</li> <li>\u5b9a\u4e49\u4e86\u4e00\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7b80\u5199\u5f62\u5f0f\u548c\u72b6\u6001\u8bf4\u660e\u3002\u5982 <code>digits [0-9]+</code> \u5141\u8bb8\u7528\u540d\u5b57 <code>{digits}</code> \u6765\u4ee3\u8868\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u975e\u7a7a\u7684\u6570\u5b57\u5e8f\u5217\u3002\u72b6\u6001\u8bf4\u660e\u5c06\u5728\u540e\u6587\u8bb2\u89e3\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u90e8\u5206\u7684\u6bcf\u4e00\u884c\u7531\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u548c\u4e00\u4e2a\u6216\u82e5\u5e72\u4e2a C \u8bed\u8a00\u8bed\u53e5\u7ec4\u6210\uff0c\u8868\u793a\u8bc6\u522b\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53ca\u5bf9\u5e94\u7684\u52a8\u4f5c\u3002\u5982\u679c\u8bed\u53e5\u4e0d\u6b62\u4e00\u884c\uff0c\u9700\u8981\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765\u3002</li> <li>\u7b2c\u4e09\u4e2a\u90e8\u5206\u662f\u53ef\u9009\u7684\uff0c\u4fdd\u5b58\u4e00\u4e9b\u53ef\u9009\u51fd\u6570\u3002\u8fd9\u4e2a\u90e8\u5206\u4e5f\u4f1a\u88ab\u76f4\u63a5\u62f7\u8d1d\u5230\u7ed3\u679c\u6587\u4ef6\u4e2d\u3002\u8fd9\u91cc\u51fd\u6570 <code>yylex()</code> \u542f\u52a8\u6807\u51c6\u8bfb\u5165\u5e76\u5bf9\u5176\u8fdb\u884c\u5206\u6790\u3002</li> </ul> <p>\u6211\u4eec\u5c06\u4e0a\u8ff0\u6587\u4ef6\u4fdd\u5b58\u4e3a <code>counter.l</code>\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528\uff1a</p> <p></p> <p>\u5373\uff0c\u6211\u4eec\u4f7f\u7528 flex \u5c06 .l \u751f\u6210 lex.yy.c\uff0c\u7136\u540e\u7f16\u8bd1 lex.yy.c \u8fdb\u884c\u8fd0\u884c\u3002</p> <p>\u6211\u4eec\u770b\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff1a <pre><code>%option noyywrap\n%{\nchar toUpperCase(char ch) {\n    if (ch &gt;= 'a' &amp;&amp; ch &lt;= 'z')\n        return ch - 'a' + 'A';\n    else\n        return ch;\n}   \n%}\nkeyWords and|array|begin|case|const|div|do|downto|else|end|for|function|goto|if|in|mod|not|of|or|packed|procedure|program|record|repeat|set|then|to|type|until|var|white|with\nnonChar [^a-zA-Z0-9]\n%%\n{keyWords}{nonChar} for (int i = 0; i &lt; strlen(yytext); i++) putchar(toUpperCase(yytext[i]));\n.           putchar(yytext[0]);\n%%\nint main() {\n    yylex();\n    return 0;\n}\n</code></pre> \u8fd9\u662f\u4e00\u4e2a\u5c06\u8f93\u5165\u4e2d\u7684\u5173\u952e\u5b57\u8f6c\u4e3a\u5927\u5199\u7684\u793a\u4f8b\u3002\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u91cc\u51fa\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf <code>yytext</code>\u3002\u4e8b\u5b9e\u4e0a\uff0clex \u5728\u7ffb\u8bd1\u6210 C \u6587\u4ef6\u65f6\u4f1a\u6709\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\u4f9b\u4f7f\u7528\u3002\u5b83\u4eec\u5305\u62ec\uff1a</p> <ul> <li><code>yyin</code> \uff0c<code>FILE *</code> \u7c7b\u578b\u53d8\u91cf\uff0c\u6307\u5411\u6b63\u5728\u89e3\u6790\u7684\u6587\u4ef6\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6307\u5411 stdin\u3002</li> <li><code>yyout</code> \uff0c<code>FILE *</code> \u7c7b\u578b\u53d8\u91cf\uff0c\u6307\u5411\u8f93\u51fa\u7684\u4f4d\u7f6e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6307\u5411 stdout\u3002</li> <li><code>yytext</code>\uff0c<code>char *</code> \u7c7b\u578b\u53d8\u91cf\uff0c\u6307\u5411\u521a\u521a\u8bc6\u522b\u5230\u7684\u5b57\u7b26\u4e32\u3002</li> <li><code>yyleng</code>\uff0c\u6574\u578b\u53d8\u91cf\uff0c\u4fdd\u5b58\u521a\u521a\u8bc6\u522b\u5230\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002</li> </ul>"},{"location":"compile_principle/1%20Lexical%20Analysis/#\u5f00\u59cb\u72b6\u6001--start-state","title":"\u5f00\u59cb\u72b6\u6001 | Start State","text":"<p>\u5982\u56fe\u6240\u793a\u7684\u81ea\u52a8\u673a\u53ef\u4ee5\u7528\u4e0b\u9762\u7684 Lex \u5b9e\u73b0\uff1a</p> <p></p> <pre><code>/* ...... */\n%Start INITIAL COMMENT\n%%\n&lt;INITIAL&gt;if {ADJ; return IF;}\n&lt;INITIAL&gt;[a-z]+ {ADJ; yylval.sval=String(yytext); return ID;}\n&lt;INITIAL&gt;\"(*\" {ADJ; BEGIN COMMENT;}\n&lt;INITIAL&gt;. {ADJ; EM_error(\"illegal character\");}\n&lt;COMMENT&gt;\"*)\" {ADJ; BEGIN INITIAL;}\n&lt;COMMENT&gt;. {ADJ;}\n. {BEGIN INITIAL; yyless(1);}\n</code></pre>"},{"location":"compile_principle/1%20Lexical%20Analysis/#27-\u4e60\u9898","title":"2.7 \u4e60\u9898","text":"<p>\u4e0b\u9762\u7684\u4e60\u9898\u53ea\u662f\u81ea\u5df1\u5c1d\u8bd5\u7684\u7ed3\u679c\uff0c\u6ca1\u6709\u627e\u5230\u6807\u51c6\u7b54\u6848\u7528\u4ee5\u5bf9\u7167\u3002</p> <p>\u53c2\u8003\u4e86 https://www.doc88.com/p-779865898611.html\u3002</p>"},{"location":"compile_principle/1%20Lexical%20Analysis/#272-\u6b63\u5219\u8868\u8fbe\u5f0f","title":"2.7.2 \u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p>**2.1 Write regular expressions for each of the following. **</p> <p>a. Strings over the alphabet {a, b, c} where the first a precedes (\u5148\u4e8e) the first b. </p> <p>b. Strings over the alphabet {a, b, c} with an even number of a's. </p> <p>c. Binary numbers that are multiples of four. </p> <p>d. Binary numbers that are greater than 101001. </p> <p>e. Strings over the alphabet {a, b, c} that don't contain the contiguous substring baa. </p> <p>f. The language of nonnegative integer constants in C, where numbers beginning with 0 are octal constants and other numbers are decimal constants. </p> <p>g. Binary numbers n such that there exists an integer solution of an+bn = cn.</p> <p>2.1 \u6839\u636e\u8981\u6c42\u5199\u6b63\u5219\u8868\u8fbe\u5f0f</p> <p>a. \u9996\u5148\u662f\u4e00\u4e2a <code>ab</code> \uff0c\u7136\u540e\u5728\u5de6\u8fb9\u3001\u4e2d\u95f4\u3001\u53f3\u8fb9\u585e\u4e00\u4e9b\u4e1c\u897f\uff1aa \u5de6\u8fb9\u53ea\u80fd\u585e c\uff0cab \u4e2d\u95f4\u53ef\u4ee5\u585e a \u6216\u8005 c\uff0cb \u53f3\u8fb9\u53ef\u4ee5\u585e a|b|c\u3002\u6240\u4ee5\u662f\uff1a <code>c*a(a|c)*b[abc]*</code></p> <p>b. \u62c6\u6210 <code>...a...a...</code> \u7684\u7ed3\u6784\u5373\u53ef\uff1a <code>((b|c)*a(b|c)*a(b|c)*)*</code></p> <p>c. \u662f\u56db\u7684\u500d\u6570\u7684\u8bdd\u5c3e\u6570\u5e94\u8be5\u4e3a 00\uff1a <code>(0|1)*00</code></p> <p>d. \u5927\u4e8e\u516d\u4f4d\u6570\uff1b\u6216\u8005\u4e3a 10101-\uff0c1011--\uff0c11----\uff0c\u5176\u4e2d - \u8868\u793a 0 \u6216 1\uff0c\u56e0\u6b64\u662f\uff1a<code>1(0|1)*(0|1)(0|1)(0|1)(0|1)(0|1)(0|1)|10101(0|1)|1011(0|1)(0|1)|11(0|1)(0|1)(0|1)(0|1)</code></p> <p>e. \u7531\u4e8e\u8fc7\u7a0b\u8f83\u590d\u6742\uff0c\u672c\u9898\u5199\u5728\u4e86 \u6839\u636e\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\u6c42\u6b63\u5219\u8868\u8fbe\u5f0f\u00a0\u4e00\u6587\u4e2d\u3002\u7531\u4e8e\u6ca1\u6709\u627e\u5230\u6807\u51c6\u7b54\u6848\uff0c\u4e0d\u4fdd\u8bc1\u6b63\u786e\u6027\uff1b\u4e14\u4e0d\u662f\u6700\u7b80\u5f62\u5f0f\u3002\u7ed3\u679c\u662f\uff1a<code>((a|((ba)*b)*(ba)*c)*((ba)*b)*(ba)+|(a|((ba)*b)*(ba)*c)*((ba)*b)+|(a|((ba)*b)*(ba)*c)*)</code></p> <p>f. \u6ce8\u610f 8 \u8fdb\u5236\u7684 0 \u8868\u793a\u4e3a 00\uff1a <code>00|0[1-7][0-7]*|0|[1-9][0-9]*</code></p> <p>g. \u8d39\u9a6c\u5927\u5b9a\u7406\uff1b\u6b64\u5904 n \u53ea\u80fd\u4e3a 1 \u6216 2\u3002\u56e0\u6b64\uff1a <code>1|10</code> \u3002</p> <p>2.2 For each of the following, explain why you're not surprised that there is no regular expression defining it.</p> <p>a. Strings of a's and b's where there are more a's than b's. </p> <p>b. Strings of a's and b's that are palindromes (the same forward as backward). </p> <p>c. Syntactically correct C programs.</p> <p>2.2</p> <p>a. \u6b63\u5219\u8868\u8fbe\u5f0f\u5e94\u4e0e\u6709\u9650\u81ea\u52a8\u673a\u4e00\u4e00\u5bf9\u5e94\uff0c\u800c\u6709\u9650\u81ea\u52a8\u673a\u65e0\u6cd5\u5b9e\u73b0\u8ba1\u6570\u529f\u80fd\uff0c\u56e0\u4e3a a \u548c b \u7684\u4e2a\u6570\u662f\u65e0\u9650\u7684\uff1b\u72b6\u6001\u6570\u4e3a N \u7684\u81ea\u52a8\u673a\u65e0\u6cd5\u8bb0\u5fc6\u5927\u4e8e N \u7684\u8ba1\u6570\u72b6\u6001\u3002</p> <p>b. \u540c\u6837\u7684\uff0c\u8bb0\u5f55\u6ca1\u6709\u957f\u5ea6\u9650\u5236\u7684\u56de\u6587\u4e32\u9700\u8981\u65e0\u9650\u4e2a\u72b6\u6001\u3002</p> <p>c. \u4f8b\u5982\uff0c\u5224\u65ad\u62ec\u53f7\u662f\u5426\u5339\u914d\u9700\u8981\u8ba1\u6570\uff0c\u56e0\u6b64\u4e5f\u65e0\u6cd5\u5b9e\u73b0\u3002</p> <p>\u8fd9\u662f\u9f99\u4e66\u5bf9\u201c\u6b63\u5219\u8868\u8fbe\u5f0f\u65e0\u6cd5\u63cf\u8ff0\u540c\u6837\u6570\u91cf\u7684 a \u548c b \u7ec4\u6210\u7684\u4e32\u7684\u96c6\u5408\u201d\u7684\u8bc1\u660e\uff1a</p> <p></p> <p>2.3 Explain in informal English what each of these finite state automata recognizes.</p> <p></p> <p>2.3</p> <p>a. \u4e0d\u4e3a 0110 \u7684\u56db\u4f4d\u4e8c\u8fdb\u5236\u6570</p> <p>b. \\(5n+1\\ (n\\in\\mathbb{N})\\)\u00a0\u4e2a a \u7ec4\u6210\u7684\u5b57\u7b26\u4e32</p> <p>c. \u4e0d\u4f1a\uff01\u5bf9\u5e94\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u662f <code>(0|1(01*0)*1)*</code> </p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/","title":"3 \u8bed\u6cd5\u5206\u6790 | Parsing","text":"<p> \u7ea6 6674 \u4e2a\u5b57  69 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 23 \u5206\u949f</p> <p>\u670b\u8f88\u8f85\u5b66\u5f55\u64ad</p> <p>\u7f16\u8bd1\u539f\u7406\u901f\u6210(1) \u8bcd\u6cd5\u5206\u6790&amp;\u8bed\u6cd5\u5206\u6790(\u4e0a)</p> <p>\u7f16\u8bd1\u539f\u7406\u901f\u6210(2) \u8bed\u6cd5\u5206\u6790(\u4e2d) CFG\u4e0e\u81ea\u9876\u5411\u4e0b\u5206\u6790</p> <p>\u7f16\u8bd1\u539f\u7406\u901f\u6210(3) \u8bed\u6cd5\u5206\u6790(\u4e0b) LL(1)\u4e0e\u81ea\u5e95\u5411\u4e0a\u5206\u6790</p> <p>\u6b64\u90e8\u5206\u4ecb\u7ecd \u8bed\u6cd5\u5206\u6790 (Parsing) \u548c \u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5 (Context-Free Grammar, CFG) \u7684\u76f8\u5173\u6982\u5ff5\u4ee5\u53ca \u81ea\u9876\u5411\u4e0b\u5206\u6790 (Top-Down Parsing) \u7684\u6709\u5173\u5185\u5bb9\u3002</p> <p>\u8f93\u5165\uff1a\u8bcd\u6cd5\u5206\u6790\u751f\u6210\u7684 token \u6d41\uff1b\u8f93\u51fa\uff1a\u8bed\u6cd5\u5206\u6790\u6811/\u4e2d\u95f4\u8868\u793a</p> <p>Input: sequence of tokens from lexer; Output: parse tree of the program (But some parsers never produce a parse tree ...)</p> <p></p> <p></p> <p>\u5728 2.5 \u8282\u7ed9\u51fa\u7684 Lex \u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u7528\u540d\u5b57 <code>digits</code> \u4f5c\u4e3a\u4e86\u6570\u5b57 <code>[0-9]+</code> \u7684\u522b\u540d\u3002\u8fd9\u79cd\u522b\u540d\u4f7f\u5f97\u6211\u4eec\u4f7f\u7528 Lex \u7f16\u5199\u8bcd\u6cd5\u89c4\u8303\u65f6\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u522b\u540d\u7684\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\uff1aLex \u5728\u5229\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u751f\u6210\u6709\u9650\u81ea\u52a8\u673a\u4e4b\u524d\uff0c\u7528 <code>[0-9]+</code> \u4ee3\u66ff <code>digits</code> \u7684\u6240\u6709\u51fa\u73b0\u5373\u53ef\u3002\u8fd9\u4e0e C \u8bed\u8a00\u4e2d\u7684\u5b8f\u5b9a\u4e49\u7c7b\u4f3c\u3002</p> <p>\u4f46\u662f\uff0c\u6b63\u5982\u6211\u4eec\u5728\u4e60\u9898 2.2 \u4e2d\u63a2\u8ba8\u8fc7\u7684\u90a3\u6837\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0d\u80fd\u5b9e\u73b0\u5bf9\u62ec\u53f7\u7b49\u7684\u5d4c\u5957\u8bc6\u522b\u3002\u8003\u8651\u4e0b\u9762\u7684\u5b9a\u4e49\uff1a <pre><code>digits = [0-9]+\nsum     = expr \"+\" expr\nexpr    = \"(\" sum \")\" | digits\n</code></pre> \u90a3\u4e48\uff0c\u5f62\u5982 <code>19</code> \uff0c <code>5+6</code> \uff0c <code>((1+2)+(3+4))</code> \u7b49\u7684\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u88ab\u4e0a\u8ff0\u89c4\u5219\u5305\u62ec\uff08\u5206\u522b\u5bf9\u5e94 digits, sum \u548c expr\uff09\u3002\u5176\u4e2d\u6240\u6709\u62ec\u53f7\u90fd\u662f\u914d\u5bf9\u7684\uff0c\u4f46\u662f\u6709\u9650\u81ea\u52a8\u673a\u65e0\u6cd5\u5b9e\u73b0\u8fd9\u79cd\u914d\u5bf9\u7684\u8bc6\u522b\u3002\u56e0\u6b64\uff0csum \u548c expr \u4e0d\u53ef\u80fd\u88ab\u6b63\u5219\u8868\u8fbe\u5f0f\u8868\u793a\u3002\u8fd9\u79cd\u9012\u5f52\u800c\u83b7\u5f97\u7684\u989d\u5916\u7684\u8868\u793a\u80fd\u529b\u6b63\u662f\u8bed\u6cd5\u5206\u6790\u6240\u9700\u8981\u7684\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#31-\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5--context-free-grammars-cfgs","title":"3.1 \u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5 | Context-Free Grammars, CFGs","text":"<p>\u5982\u6211\u4eec\u6240\u8bf4\uff0c\u7f16\u7a0b\u8bed\u8a00\u5177\u6709\u9012\u5f52\u7ed3\u6784\u3002\u5982\u540c\u6211\u4eec\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u9759\u6001\u5730\u5b9a\u4e49\u8bcd\u6cd5\u7ed3\u6784\u4e00\u6837\uff0c\u6211\u4eec\u4f7f\u7528 \u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5 \u9759\u6001\u5730\u5b9a\u4e49\u8bed\u6cd5\u7ed3\u6784\u3002\u6211\u4eec\u5728\u7a0d\u540e\u8ba8\u8bba\u201c\u4e0a\u4e0b\u6587\u65e0\u5173\u201d\u7684\u542b\u4e49\u3002</p> <p>\u4e00\u4e2a CFG \u63cf\u8ff0\u4e00\u79cd\u8bed\u8a00\u3002\u5b83\u5305\u62ec\uff1a</p> <ul> <li>A set of terminals \\(T\\)</li> <li>A set of non-terminal \\(N\\)</li> <li>A start symbol \\(S (\\in N)\\)</li> <li>A set of productions \\(X \\to y_1y_2...y_n\\) , where \\(X\\in N\\), \\(y_1y_2...y_n\\in T\\cup N\\cup \\{\\epsilon\\}\\)</li> </ul> <p>\u5176\u4e2d production \u96c6\u5408\u662f CFG \u63cf\u8ff0\u8bed\u8a00\u7684\u5f62\u5f0f\uff0c \\(X \\to y_1y_2...y_n\\) \u8868\u793a \\(X\\) \u53ef\u4ee5\u88ab \\(y_1y_2...y_n\\) \u66ff\u6362\u3002Terminal \u96c6\u5408 T \u4e2d\u7684\u7b26\u53f7\u662f\u8be5\u8bed\u8a00\u5b57\u6bcd\u8868\u4e2d\u7684 tokens\uff0c\u5176\u610f\u4e49\u662f\u786e\u5b9a\u7684\u3002Non-terminal \u96c6\u5408 N \u4e2d\u7684\u7b26\u53f7\u51fa\u73b0\u5728\u67d0\u4e2a production \u7684\u5de6\u4fa7\uff0c\u5373\u5b83\u7684\u610f\u4e49\u5e76\u672a\u786e\u5b9a\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u8fed\u4ee3\u3002</p> <p>CFG \u63cf\u8ff0\u7684\u8bed\u8a00\u4ece start symbol S \u51fa\u53d1\uff0c\u5c06\u5b57\u7b26\u4e32\u4e2d\u4efb\u4f55 non-terminal \u7528\u67d0\u4e2a production \u53f3\u4fa7\u7684\u4e1c\u897f\u66ff\u6362\uff0c\u4e0d\u65ad\u91cd\u590d\u76f4\u5230\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709 non-terminal\u3002\u4ea6\u5373\uff0c\u4e00\u4e2a CFG \u63cf\u8ff0\u7684\u8bed\u8a00\u5373\u4e3a\u81ea start symbol \u5f00\u59cb\uff0c\u7ecf\u6709\u9650\u4e2a production \u63a8\u5bfc\u53ef\u4ee5\u5f97\u5230\u7684 terminal \u4e32\u7684\u96c6\u5408\u3002</p> <p>\u4f8b\u5982\uff1a <pre><code>EXPR -&gt; if EXPR then EXPR else EXPR fi\n      | while EXPR loop EXPR pool\n      | id\n</code></pre> \u8fd9\u91cc\u7684\u201c|\u201d\u662f\u6216\u3002\u4e00\u822c\u6211\u4eec\u5c06 non-terminal \u7528\u5927\u5199\u8868\u793a\uff0c\u5c06 terminal \u7528\u5c0f\u5199\u8868\u793a\uff0c\u5c06 start symbol \u5199\u5728\u7b2c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u5de6\u4fa7\u3002\u4e0a\u4f8b\u7b49\u540c\u4e8e\uff1a <pre><code>EXPR -&gt; if EXPR then EXPR else EXPR fi\nEXPR -&gt; while EXPR loop EXPR pool\nEXPR -&gt; id\n</code></pre> \u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728 CFG \u4e2d\u53ef\u4ee5\u4e0d\u9002\u7528\u53ef\u9009\u7b26\u53f7 | \u548c\u514b\u6797\u95ed\u5305 *\uff0c\u5373\uff1a</p> <ul> <li><code>aux -&gt; c|d</code> \u53ef\u5199\u4e3a <code>aux -&gt; c</code> , <code>aux -&gt; d</code></li> <li><code>expr -&gt; aux*</code> \u53ef\u5199\u4e3a <code>expr -&gt; aux expr</code>\uff0c<code>expr -&gt; \u03f5</code></li> </ul> <p>\u4e3e\u4e00\u4e2a\u66f4\u52a0\u8be6\u7ec6\u7684\u4f8b\u5b50\u3002\u770b\u4e0b\u9762\u4e00\u4e2a CFG \uff08\u6587\u6cd5 3-1\uff09\uff1a <pre><code>S -&gt; S; S\nS -&gt; id := E\nS -&gt; print(L)\n\nE -&gt; id\nE -&gt; num\nE -&gt; E + E\nE -&gt; (S, E)\n\nL -&gt; E\nL -&gt; L, E\n</code></pre> \u8fd9\u4e2a\u6587\u6cd5\u6709 <code>S E L</code>\u00a0 \u4e09\u4e2a non-terminal\uff0c\u6709 terminal <code>; id := print ( ) num + ,</code> \uff0c\u4e0e\u5b83\u5bf9\u5e94\u7684\u6e90\u7a0b\u5e8f\u53ef\u4ee5\u662f <code>a := 7; b := c + (d := 5 + 6, d); print(b)</code> \uff0c\u8fd9\u4e2a\u6e90\u7a0b\u5e8f\u7ecf\u8bcd\u6cd5\u5206\u6790\u540e\u662f <code>id := num; id := id + (id := num + num, id); print(id)</code> \u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#311-\u63a8\u5bfc--derivation","title":"3.1.1 \u63a8\u5bfc | Derivation","text":"<p>\u5982\u679c\u5b58\u5728 production <code>A -&gt; a</code> \uff0c\u90a3\u4e48\u4e32 <code>xay</code> \u5c31\u662f\u8868\u8fbe\u5f0f <code>xAy</code> \u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u6211\u4eec\u79f0 <code>xAy =&gt; xay</code> \uff0c\u5373 <code>xAy</code>\u7ecf\u8fc7\u4e00\u6b65\u63a8\u5bfc\u51fa <code>xay</code> \u3002\u5728 <code>=&gt;</code> \u4e0a\u589e\u52a0 <code>*</code> \u6216 <code>+</code> \u8868\u793a\u7ecf\u8fc7\u96f6\u6216\u591a\u6b65\u3001\u4e00\u6216\u591a\u6b65\u63a8\u5bfc\u51fa\u3002\u63a8\u5bfc\u8bc1\u660e\u4e00\u4e2a\u53e5\u5b50\u5c5e\u4e8e\u4e00\u4e2a CFG \u7684\u8bed\u8a00\u3002</p> <p>\u4f8b\u5982\u6587\u6cd5 3-1 \u7684\u4e00\u4e2a\u53e5\u5b50 <code>a := 7; b := c + 2</code> \u53ef\u4ee5\u7ecf\u5982\u4e0b\u63a8\u5bfc\uff1a <pre><code>S\nS; S\nid := E; S\nid := num; S\nid := num; id := E\nid := num; id := E + E\nid := num; id := id + E\nid := num; id := id + num\n</code></pre> \u5728\u4e0a\u9762\u7684\u63a8\u5bfc\u4e2d\uff0c\u6211\u4eec\u6bcf\u4e00\u6b21\u9009\u53d6\u6700\u5de6\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26\u8fdb\u884c\u6269\u5c55\uff0c\u56e0\u6b64\u79f0\u4e3a \u6700\u5de6\u63a8\u5bfc (leftmost derivation) \uff0c\u7c7b\u4f3c\u5730\uff0c\u4e5f\u6709 \u6700\u53f3\u63a8\u5bfc (rightmost derivation) \u3002\u5f53\u7136\uff0c\u63a8\u5bfc\u4e5f\u53ef\u4ee5\u65e2\u4e0d\u662f\u6700\u5de6\u63a8\u5bfc\uff0c\u4e5f\u4e0d\u662f\u6700\u53f3\u63a8\u5bfc\u3002</p> <p>\u4f46\u662f\uff0c\u5982 <code>a := 1; b := 2; c := 3</code> \u7684\u53e5\u5b50\u6709\u4e24\u79cd\u4e0d\u540c\u7684 \u6700\u5de6\u63a8\u5bfc \uff1a</p> <pre><code>- `S` =&gt; `S; S` =&gt; `id := num; S` =&gt; `id := num; S; S` =&gt;...\n- `S` =&gt; `S; S` =&gt; `S; S; S` =&gt; `id:= num; S; S` =&gt;...\n</code></pre> <p>\u8fd9\u79cd\u73b0\u8c61\u8bf4\u660e\u6587\u6cd5\u662f \u4e8c\u4e49\u6027\u7684 (ambiguous) \uff0c\u6211\u4eec\u5c06\u5728 3.1.3 \u5c0f\u8282\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#312-\u8bed\u6cd5\u5206\u6790\u6811--parse-tree","title":"3.1.2 \u8bed\u6cd5\u5206\u6790\u6811 | Parse Tree","text":"<p>\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u975e\u7ec8\u7ed3\u7b26\u8fdb\u884c\u6269\u5c55\u3002\u5c06\u975e\u7ec8\u7ed3\u7b26\u4f5c\u4e3a\u7236\u7ed3\u70b9\uff0c\u6269\u5c55\u51fa\u7684\u5185\u5bb9\u4f5c\u4e3a\u5b50\u7ed3\u70b9\uff0c\u5219\u53ef\u4ee5\u5f62\u6210\u4e00\u68f5\u6811\uff0c\u5373\u8bed\u6cd5\u5206\u6790\u6811\u30023.1.1 \u4f8b\u5b50\u7684\u8bed\u6cd5\u5206\u6790\u6811\u4e3a\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8bed\u6cd5\u5206\u6790\u6811\u7684\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u5747\u4e3a terminals\uff0c\u5176\u4ed6\u8282\u70b9\u5747\u4e3a non-terminals\u3002\u53f6\u5b50\u7ed3\u70b9\u7684\u4e2d\u5e8f\u904d\u5386\u5373\u4e3a\u539f\u8f93\u5165\u3002\u4e0e\u539f\u8f93\u5165\u76f8\u6bd4\uff0c\u8bed\u6cd5\u5206\u6790\u6811\u663e\u793a\u4e86 token \u4e4b\u95f4\u7684\u8054\u7cfb\u3002\u6bcf\u79cd\u63a8\u5bfc\u5bf9\u5e94\u4e86\u4e00\u68f5\u8bed\u6cd5\u5206\u6790\u6811\uff0c\u4f46\u662f\u6bcf\u68f5\u8bed\u6cd5\u5206\u6790\u6811\u53ef\u4ee5\u5bf9\u5e94\u591a\u79cd\u63a8\u5bfc\u65b9\u5f0f\u3002</p> <p>\u53ef\u4ee5\u8bf4\u660e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u6700\u5de6\u63a8\u5bfc\uff0c\u4e00\u5b9a\u6709\u4e14\u4ec5\u6709\u4e00\u79cd\u6700\u53f3\u63a8\u5bfc\u4e0e\u5176\u5f62\u6210\u540c\u6837\u7684\u8bed\u6cd5\u5206\u6790\u6811\uff1b\u5176\u533a\u522b\u53ea\u662f\u6811\u7684\u5206\u652f\u52a0\u5165\u7684\u987a\u5e8f\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#313-\u4e8c\u4e49\u6027--ambiguity","title":"3.1.3 \u4e8c\u4e49\u6027 | Ambiguity","text":"<p>\u770b\u4e0b\u9762\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p>Grammar: <code>E -&gt; E+E | E*E | (E) | id</code></p> <p>String: id * id + id</p> <p></p> <p>\u8fd9\u4e24\u68f5\u8bed\u6cd5\u5206\u6790\u6811\u5206\u522b\u5bf9\u5e94\u4e24\u79cd\u6700\u5de6\u63a8\u5bfc\uff1a</p> <ul> <li><code>E</code> =&gt; <code>E+E</code> =&gt; <code>E*E+E</code> =&gt; ...</li> <li><code>E</code> =&gt; <code>E*E</code> =&gt; <code>E*E+E</code> =&gt; ...</li> </ul> <p>\u8fd9\u4e24\u79cd\u63a8\u5bfc\u65b9\u5f0f\u90fd\u662f\u7b26\u5408\u6587\u6cd5\u7684\u6700\u5de6\u63a8\u5bfc\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u6587\u6cd5\u4f1a\u4f7f\u67d0\u4e9b\u5b57\u7b26\u4e32\u6709\u4e0d\u6b62\u4e00\u4e2a\u8bed\u6cd5\u5206\u6790\u6811\uff0c\u5373\u8be5\u5b57\u7b26\u4e32\u6709\u591a\u79cd\u6700\u5de6\u63a8\u5bfc\uff08\u6216\u5bf9\u5e94\u5730\uff0c\u6709\u591a\u79cd\u6700\u53f3\u63a8\u5bfc\uff09\uff0c\u5219\u79f0\u8fd9\u4e2a\u6587\u6cd5\u6709\u4e8c\u4e49\u6027\u3002\u6211\u4eec\u5e0c\u671b\u6587\u6cd5\u662f\u65e0\u4e8c\u4e49\u6027\u7684\u3002</p> <p>\u9700\u8981\u89e3\u51b3\u4e8c\u4e49\u6027\uff0c\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\u662f\u91cd\u65b0\u5199\u4e00\u4e2a\u6ca1\u6709\u4e8c\u4e49\u6027\u7684\u6587\u6cd5\uff08\u597d\u5446\u74dc\uff09\u3002\u4e0a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u9009\u53d6\u5de6\u8fb9\u90a3\u79cd\u7406\u89e3\uff0c\u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3a * \u6bd4 + \u5177\u6709\u66f4\u9ad8\u7684 \u4f18\u5148\u7ea7 (precedence) \u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199\uff0c\u5f3a\u5236\u8fd9\u79cd\u4f18\u5148\u7ea7\uff1a</p> <p>Grammar : <code>E -&gt; T+E | T</code> , <code>T -&gt; F*T | F</code> , <code>F -&gt;\u00a0id | (E)</code></p> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u5f3a\u5236\u4e86 id \u548c () \u5177\u6709\u6700\u9ad8\u4f18\u5148\u7ea7\uff08\u56e0\u4e3a\u4ed6\u4eec\u4f1a\u88ab\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u5c55\u5f00\uff09\uff0c* \u6b21\u4e4b\uff0c + \u4f18\u5148\u7ea7\u6700\u4f4e\u3002\u8fd9\u6837\uff0c\u4e0a\u4f8b\u5c31\u53ea\u6709\u552f\u4e00\u4e00\u79cd\u6700\u5de6\u63a8\u5bfc\uff1a</p> <p><code>E</code> =&gt; <code>T+E</code> =&gt; <code>F*T+E</code> =&gt; ...</p> <p>\u5373\u6d88\u9664\u4e86\u4e8c\u4e49\u6027\u3002</p> <p>\u6211\u4eec\u518d\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p>Grammar : <code>E -&gt; E-E | num</code> \uff0c String : 3-2-1</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837\u4e00\u4e2a\u7b80\u5355\u7684\u6587\u6cd5\u4e5f\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u6700\u5de6\u63a8\u5bfc\uff0c\u5206\u522b\u5f97\u5230 (3-2)-1 \u548c 3-(2-1) \u4e24\u79cd\u7ed3\u679c\uff0c\u663e\u7136\u6211\u4eec\u5e0c\u671b\u7684\u662f\u524d\u4e00\u79cd\u3002\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u662f \u7ed3\u5408\u6027 (associativity) \uff0c\u6211\u4eec\u5e0c\u671b - \u662f\u5de6\u7ed3\u5408\u7684\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199\uff0c\u5f3a\u5236\u8fd9\u79cd\u7ed3\u5408\u6027\uff1a</p> <p>Grammar : <code>E -&gt; E-T</code> , <code>T -&gt; num</code></p> <p>\u8fd9\u6837\u5c31\u6d88\u9664\u4e86\u4e8c\u4e49\u6027\u3002</p> <p>\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u8fd9\u91cc\u5e76\u6ca1\u6709\u4e00\u79cd\u901a\u7528\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u4e8c\u4e49\u6027\uff08Why\uff1f\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u80fd\u901a\u8fc7\u4eba\u5de5\u7684\u65b9\u5f0f\u5b8c\u6210\u4e0a\u9762\u90a3\u6837\u7684\u6d88\u9664\u4e8c\u4e49\u6027\u6587\u6cd5\u7684\u91cd\u5199\u3002\u4f46\u662f\u6211\u4eec\u540c\u65f6\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u79cd\u91cd\u5199\u4f1a\u4f7f\u5f97\u6587\u6cd5\u53d8\u5f97\u590d\u6742\uff0c\u96be\u4ee5\u9605\u8bfb\u548c\u7ef4\u62a4\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c1d\u8bd5\u901a\u8fc7\u67d0\u79cd\u6d88\u9664\u4e8c\u4e49\u6027\u7684\u58f0\u660e\u6765\u63a5\u53d7\u4e8c\u4e49\u6027\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u6587\u6cd5\u66f4\u52a0\u7b80\u5355\u548c\u81ea\u7136\u3002</p> <p>\u5927\u591a\u6570\u5de5\u5177\u91c7\u53d6\u8fd9\u6837\u7684\u65b9\u6cd5\u3002\u8fd9\u4e9b\u5de5\u5177\u901a\u8fc7\u58f0\u660e precedence &amp; associativity \u6765\u6d88\u9664\u6587\u6cd5\u4e2d\u7684\u4e8c\u4e49\u6027\u3002</p> <p>The parser doesn't really understand about associativity &amp; precedence. Instead, these declarations tell it to make certain kind of moves in certain situations. We won't be able to explain this until we get much further into parsing technology.</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#314-\u6587\u4ef6\u7ed3\u675f\u7b26--eof-marker","title":"3.1.4 \u6587\u4ef6\u7ed3\u675f\u7b26 | EOF Marker","text":""},{"location":"compile_principle/2%20Parsing%20%28I%29/#315-\u4e0a\u4e0b\u6587\u65e0\u5173--context-free","title":"3.1.5 \u4e0a\u4e0b\u6587\u65e0\u5173 | Context Free","text":"<p>\u6211\u4eec\u6240\u8bf4\u7684\u201c\u4e0a\u4e0b\u6587\u65e0\u5173\u201d\u6216\u8005\u201c\u9759\u6001\u201d\uff0c\u8fd9\u91cc\u89e3\u91ca\u7684\u5f88\u6e05\u695a\uff08\u5176\u5b9e\u5c31\u662f\u5b57\u9762\u610f\u601d\uff09\uff1a</p> <p></p> <p>\u90a3\u4e48\u4ec0\u4e48\u662f\u4e0a\u4e0b\u6587\u6709\u5173\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u5982\u679c\u53ea\u6709\u5bf9\u7279\u5b9a\u7684\u4e32 \u03b2 \u548c \u03b3\uff0c\u624d\u6709\u89c4\u5219 \u03b2A\u03b3 -&gt; \u03b2\u03b1\u03b3 \u65f6\uff0c\u6211\u4eec\u79f0\u8fd9\u6761\u89c4\u5219\u662f\u4e0a\u4e0b\u6587\u6709\u5173\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5728 C \u8bed\u8a00\u4e2d\u9700\u8981\u5148\u58f0\u660e\u540e\u4f7f\u7528\u5c31\u662f\u4e00\u79cd\u4e0a\u4e0b\u6587\u6709\u5173\u7684\u4f8b\u5b50\u3002\u5373\uff1a <pre><code>{\nint x;\n...\n...x...\n...\n}\n</code></pre> \u5982\u679c\u7ed9\u76f8\u5173\u7684\u89c4\u5219\u52a0\u4e0a\u4e00\u4e9b\u9650\u5236\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u53ef\u80fd\u53ef\u4ee5\u4f7f\u7528 BNF \u6765\u5b8c\u6210\u5bf9\u4e0a\u8ff0\u4e0a\u4e0b\u6587\u6709\u5173\u6587\u6cd5\u7684\u5206\u6790\uff1b\u4f46\u5373\u4f7f\u5982\u6b64\uff0c\u8fd9\u4e2a\u5de5\u4f5c\u91cf\u662f\u5de8\u5927\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u4fe1\u606f\u548c\u9650\u5236\u653e\u5230\u7a0d\u540e\u53bb\u5904\u7406\u3002\u5728\u8bed\u6cd5\u5206\u6790\u90e8\u5206\uff0c\u6211\u4eec\u6682\u65f6\u53ea\u8003\u8651\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u7684\u5206\u6790\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#32-\u9012\u5f52\u4e0b\u964d\u5206\u6790--recursive-descent-parsing","title":"3.2 \u9012\u5f52\u4e0b\u964d\u5206\u6790 | Recursive Descent Parsing","text":"<p>Recursive Descent Parsing \u662f \u81ea\u9876\u5411\u4e0b\u5206\u6790 (Top-Down Parsing) \u7684\u4e00\u79cd\u3002\u6240\u8c13 Top-Down Parsing\uff0c\u5c31\u662f\u4ece\u9876\uff08start symbol\uff09\u5f00\u59cb\uff0c\u4ece\u4e0a\u5230\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u6784\u9020 parse tree\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#321-\u601d\u8def","title":"3.2.1 \u601d\u8def","text":"<p>\u9012\u5f52\u4e0b\u964d\u5229\u7528\u7684\u6838\u5fc3\u601d\u8def\u662f\uff0cparse tree \u53f6\u5b50\u7ed3\u70b9\u7684\u4e2d\u5e8f\u904d\u5386\u5373\u4e3a\u8f93\u5165\u7684 token \u6d41\u3002</p> <p>\u9012\u5f52\u4e0b\u964d\u5206\u6790\u7684\u8fc7\u7a0b\uff0c\u5373\u4ece\u4e0a\u5230\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\uff0c\u5bf9 parse tree \u4e2d\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u8fdb\u884c\u904d\u5386\u3002\u5bf9\u4e8e\u904d\u5386\u5230\u7684\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u5982\u679c\u8be5\u70b9\u662f</p> <ul> <li>Terminal\uff0c\u5219\u67e5\u770b\u4e0b\u4e00\u4f4d\u8f93\u5165\u662f\u5426\u4e0e\u8be5 terminal \u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u5219\u63a5\u53d7\u8be5\u8f93\u5165\uff1b\u5982\u679c\u4e0d\u540c\uff0c\u6216\u8005\u6ca1\u6709\u4e0b\u4e00\u4f4d\u8f93\u5165\uff0c\u5219\u8bf4\u660e\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u8fdb\u884c backtrack\uff0c\u5373\u56de\u6eaf\u5230\u4e0a\u4e00\u6b65 non-terminal\uff08\u56e0\u4e3a terminal \u4e00\u5b9a\u7531 non-terminal \u5f15\u51fa\uff09\uff1b</li> <li>Non-terminal\uff0c\u5219\uff1a<ul> <li>\u5c1d\u8bd5\u7b2c\u4e00\u4e2a\u4ece\u8be5 non-terminal \u5f15\u51fa\u7684 production\uff0c\u5373\u5c06\u8be5 production \u7684\u53f3\u7aef\u4f5c\u4e3a\u8be5\u7ed3\u70b9\u7684\u5b50\u7ed3\u70b9\u52a0\u5165 parse tree\uff0c\u7136\u540e\u4f9d\u6b21\u904d\u5386\u5b50\u7ed3\u70b9</li> <li>\u5982\u679c backtrack \u5230\u4e86\u5f53\u524d non-terminal\uff0c\u5219\u5c1d\u8bd5\u4e0b\u4e00\u4e2a production</li> <li>\u5982\u679c backtrack \u5230\u4e86\u5f53\u524d non-terminal \u4f46\u6240\u6709 production \u90fd\u5df2\u7ecf\u5c1d\u8bd5\u5b8c\u4e86\uff0c\u90a3\u4e48\u8bf4\u660e\u8be5 non-terminal \u662f\u4e0d\u5e94\u5f53\u51fa\u73b0\u7684\uff0c\u56de\u6eaf\u5230\u4e0a\u4e00\u6b65 non-terminal\u3002</li> </ul> </li> </ul> <p>\u91cd\u590d\u8be5\u6b65\u9aa4\uff0c\u76f4\u5230\u6240\u6709\u7ed3\u70b9\u90fd\u88ab\u904d\u5386\u5b8c\u3002\u5982\u679c\u6b64\u65f6\u8f93\u5165\u5df2\u7ecf\u7ed3\u675f\uff0c\u90a3\u4e48\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u5339\u914d\u7684 parsing\uff1b\u5426\u5219\u8bf4\u660e\u4ecd\u7136\u5b58\u5728\u9519\u8bef\uff0c\u7ee7\u7eed backtrack\u3002</p> <p>\u4e0b\u9762\u662f\u9012\u5f52\u4e0b\u964d\u5206\u6790\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff1a</p> <p></p> <p></p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#322-\u5b9e\u73b0","title":"3.2.2 \u5b9e\u73b0","text":"<p>Grammar: <code>E -&gt; T | T+E</code>, <code>T -&gt; int | int * T | (E)</code> </p> <p>\u6211\u4eec\u7528 C \u8bed\u8a00\u5c1d\u8bd5\u5b9e\u73b0 Recursive Descent Parser\uff1a</p> <ul> <li>\u6211\u4eec\u7528 <code>TOKEN</code> \u8868\u793a token \u7684\u7c7b\u578b\uff0c\u7528\u6307\u9488 <code>next</code> \u6307\u5411\u4e0b\u4e00\u4e2a token\uff08Line 1~4\uff09</li> <li>\u6211\u4eec\u7528\u4e00\u7cfb\u5217\u51fd\u6570\u8fdb\u884c\u524d\u8ff0\u601d\u8def\u4e2d\u7684\u68c0\u67e5\u548c\u5c1d\u8bd5\uff0c\u8fd9\u4e9b\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a <code>bool</code> \uff0c\u7528\u6765\u8868\u793a\u8bc6\u522b\u6210\u529f\u4e0e\u5426\u3002\u5982\u679c\u4e0d\u6210\u529f\uff0c\u6211\u4eec\u8fdb\u884c\u56de\u6eaf\u3002\u8fd9\u91cc\u7684 parse tree \u5b9e\u9645\u4e0a\u662f\u7531\u51fd\u6570\u7684\u5d4c\u5957\u5173\u7cfb\u7ec4\u7ec7\u7684\uff0c\u56e0\u6b64\u6240\u8c13\u201c\u56de\u6eaf\u201d\u9664\u4e86\u51fd\u6570\u7684\u81ea\u7136\u8fd4\u56de\uff0c\u5c31\u53ea\u9700\u8981\u5c06 <code>next</code> \u56de\u5230\u4e4b\u524d\u7684\u4f4d\u7f6e\u5373\u53ef\u3002<ul> <li><code>bool term(TOKEN tok)</code> \u662f\u5bf9 terminal \u7684\u68c0\u67e5\uff0c\u987a\u4fbf\u628a <code>next++</code></li> <li><code>bool E1()</code> \u662f non-terminal E \u7684\u7b2c\u4e00\u4e2a production <code>E -&gt; T</code> \u3002\u53ef\u4ee5\u770b\u5230\u5176\u8fd4\u56de <code>true</code> \u7684\u6761\u4ef6\u5373\u4e3a <code>T()</code> \u4e3a\u771f\u3002\u7c7b\u4f3c\u5730\uff0c <code>bool E2()</code> \u662f production <code>E -&gt; T+E</code> \u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u8fd4\u56de <code>true</code> \u7684\u6761\u4ef6\u4e3a\u4f9d\u6b21\u5339\u914d\u5230 <code>T()</code> , <code>term(PLUS)</code> \uff08\u5373 terminal \"+\"\uff09\u548c <code>E()</code> \u3002</li> <li><code>bool E()</code> \u662f non-terminal E \u7684\u6240\u6709 production \u7684\u96c6\u5408\uff0c\u6ce8\u610f\u5230 11 \u884c\u9996\u5148\u4fdd\u5b58 <code>next</code> \u5230 <code>save</code> \uff0c\u7528\u6765\u56de\u6eaf\uff1b\u7136\u540e 12 \u884c\u9996\u5148\u5224\u65ad <code>E1()</code> \u662f\u5426\u4e3a\u771f\uff1a<ul> <li>\u5982\u679c\u4e3a\u771f\u5219\u6839\u636e C \u8bed\u8a00\u7684\u77ed\u8def\u89c4\u5219\uff0c\u5176\u540e\u7684 <code>(next = save, E2())</code> \u5e76\u4e0d\u4f1a\u88ab\u8fd0\u884c\uff0c\u76f4\u63a5\u8fd4\u56de\u771f\uff1b</li> <li>\u5982\u679c\u4e0d\u4e3a\u771f\u5219\u8fd0\u884c <code>(next = save, E2())</code> \uff0c\u5373\u9996\u5148\u6062\u590d <code>next</code> \uff0c\u7136\u540e\u5224\u65ad <code>E2()</code> \u662f\u5426\u4e3a\u771f\u3002 \u9700\u8981\u7279\u6b8a\u8bf4\u660e\u7684\u662f\uff0c\u8fd9\u91cc\u7b2c 12 \u884c\u7684 <code>(next = save, E1())</code> \u4e2d\u7684 <code>next = save</code> \u5e76\u6ca1\u6709\u4f5c\u7528\uff0c\u56e0\u4e3a\u7b2c 10 \u884c\u521a\u521a\u5c06 <code>save</code> \u8d4b\u503c\u4e3a <code>next</code> \uff0c\u8fd9\u91cc\u53ea\u662f\u4e3a\u4e86\u6574\u9f50\uff0c\u53bb\u6389\u4e5f\u53ef\u4ee5\u3002</li> </ul> </li> <li>\u5f00\u59cb parsing \u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u7528 start symbol \u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u5373 <code>E()</code> \u3002</li> </ul> </li> </ul> <pre><code>enum TOKEN {INT, OPEN, CLOSE, PLUS, TIMES};\n/* int    (        )        +      -    */\nTOKEN input[MAXN];\nTOKEN *next = input;\n\nbool term(TOKEN tok) { return *next++ == tok; }\n\nbool E1() { return T(); }\nbool E2() { return T() &amp;&amp; term(PLUS) &amp;&amp; E(); }\nbool E() {\nTOKEN *save = next; return (next = save, E1()) || (next = save, E2()); }\n\nbool T1() { return term(INT); }\nbool T2() { return term(INT) &amp;&amp; term(TIMES) &amp;&amp; T(); }\nbool T3() { return term(OPEN) &amp;&amp; E() &amp;&amp; term(CLOSE); }\nbool T() { TOKEN *save = next; return (next = save, T1())\n|| (next = save, T2())\n|| (next = save, T3()); }\n</code></pre> <p>\u4f46\u662f\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a <code>S -&gt; Sa</code></p> <p>\u5219\u6211\u4eec\u4f1a\u5199\u51fa\u8fd9\u6837\u4e24\u4e2a\u51fd\u6570\uff1a <code>bool S1() { return S() &amp;&amp; term(a); }</code> , <code>bool S() { return S1(); }</code> \uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 <code>S()</code> \u8fdb\u5165\u4e86\u6b7b\u5faa\u73af\u3002\u8fd9\u79cd\u60c5\u51b5\u79f0\u4e3a \u5de6\u9012\u5f52 (left-recursive) \u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#323-\u5de6\u9012\u5f52--left-recursive","title":"3.2.3 \u5de6\u9012\u5f52 | Left-Recursive","text":"<p>\u627f\u4e0a\u4f8b\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a non-terminal S\u00a0 \u4f7f\u5f97 <code>S -&gt;+ Sa</code> \uff0c\u5373\u7ecf\u8fc7 1 \u4e2a\u6216\u591a\u4e2a production \u540e\uff0cS \u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u7531 S \u5f00\u5934\u7684\u53f3\u7aef\uff0c\u90a3\u4e48\u6211\u4eec\u7528\u524d\u8ff0\u65b9\u6cd5\u751f\u6210\u7684 Recursive Descent \u4ee3\u7801\u5c31\u4e0d\u80fd\u591f\u5b8c\u6210\u8bed\u6cd5\u5206\u6790\uff0c\u56e0\u4e3a\u5b83\u4f1a\u9677\u5165\u6b7b\u5faa\u73af\u3002\u8fd9\u662f\u5de6\u9012\u5f52\u7684\u4e00\u822c\u5f62\u5f0f\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u5de6\u9012\u5f52\u53ef\u4ee5\u88ab\u673a\u68b0\u5730\uff08\u5373\uff0c\u6709\u4e00\u822c\u65b9\u6cd5\u5730\uff09\u6d88\u9664\u3002\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u6587\u6cd5\uff1a <code>S -&gt; Sa | b</code> \uff0c\u5b9e\u9645\u4e0a\u8fd9\u79cd\u6587\u6cd5\u751f\u6210\u7684\u662f\u4e00\u4e2a <code>b</code> \u4ee5\u53ca\u82e5\u5e72\u4e2a <code>a</code> \u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u91cd\u5199\u4e3a \u53f3\u9012\u5f52 (right-recursion) \u7684\u5f62\u5f0f\uff1a <code>S -&gt; bT</code> , <code>T -&gt; aT | \u03f5</code>\u3002\u8fd9\u4e24\u79cd\u6587\u6cd5\u7684\u533a\u522b\u662f\uff0c\u6211\u4eec\u5c06\u9012\u5f52\u79fb\u5230\u4e86\u4ea7\u751f\u5f0f\u7684\u6700\u53f3\u8fb9\uff0c\u800c\u8fd9\u662f\u53ef\u4ee5\u88ab Recursive Descent \u63a5\u53d7\u7684\u5f62\u5f0f\u3002</p> <p>\u66f4\u4e00\u822c\u5730\uff0c\u6587\u6cd5 \\(S \\to S\\alpha_1 | \\dots | S\\alpha_n|\\beta_1|\\dots|\\beta_m\\) \u53ef\u4ee5\u6982\u62ec\u6240\u6709\u5305\u542b\u5de6\u9012\u5f52\u7684\u6587\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6539\u5199\u4e3a\uff1a\\(S\\to \\beta_1S'|\\dots|\\beta_mS',\\ S'\\to\\alpha_1S'|\\dots|\\alpha_nS'|\\epsilon\\)\uff0c\u5373\u89e3\u51b3\u4e86\u5de6\u9012\u5f52\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5b9e\u73b0 Recursive Descent Parsing \u65f6\uff0c\u5728 3.2.2 \u5c0f\u8282\u4e2d\u5c55\u793a\u7684\u6b65\u9aa4\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u5c06\u6587\u6cd5\u6539\u5199\u6210\u6ca1\u6709\u5de6\u9012\u5f52\u7684\u5f62\u5f0f\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#324-\u603b\u7ed3","title":"3.2.4 \u603b\u7ed3","text":"<p>Recursive Descent \u662f\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u800c\u4e14\u901a\u7528\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5176\u8fc7\u7a0b\u6bd4\u8f83\u7b80\u5355\uff0c\u4e14\u867d\u7136\u5de6\u9012\u5f52\u9700\u8981\u63d0\u524d\u6d88\u9664\uff0c\u4f46\u662f\u6d88\u9664\u5de6\u9012\u5f52\u7684\u8fc7\u7a0b\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u800c\u4e14\u53ef\u7528\u7b97\u6cd5\u81ea\u52a8\u5b8c\u6210\u3002\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u4eba\u4eec\u901a\u5e38\u624b\u52a8\u5c06\u5de6\u9012\u5f52\u6d88\u9664\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u7684\u8bbe\u8ba1\u8005\u9700\u8981\u77e5\u9053 parser \u4f7f\u7528\u4f55\u79cd\u6587\u6cd5\uff0c\u4e14\u6d88\u9664\u5de6\u9012\u5f52\u662f\u5bb9\u6613\u7684\u3002</p> <p>\u7531\u4e8e Recursive Descent \u9700\u8981 backtrack\uff0c\u5728\u8fc7\u53bb\u88ab\u4eba\u4eec\u8ba4\u4e3a\u975e\u5e38\u4f4e\u6548\uff0c\u56e0\u6b64\u4e0d\u5f88\u5e38\u7528\uff1b\u5728\u5982\u4eca\u7684\u673a\u5668\u4e0a Recursive Descent \u662f\u975e\u5e38\u5feb\u901f\u548c\u7b80\u5355\u7684\uff0c\u56e0\u6b64\u5728\u5982\u4eca\u975e\u5e38\u6d41\u884c\u3002\u4f8b\u5982 gcc \u5c31\u7528\u5230\u4e86\u624b\u5199\u7684 Recursive Descent\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#33-ll1-parsing","title":"3.3 LL(1) Parsing","text":"<p>\u9884\u6d4b\u5206\u6790 (Predictive Parsing) \u4e5f\u662f\u4e00\u79cd Top-Down Parsing\uff0c\u5b83\u901a\u8fc7\u67e5\u770b\u5f53\u524d\u8f93\u5165\u4f4d\u7f6e\u4e4b\u540e\u7684\u51e0\u4e2a token \u6765\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e00\u4e2a production\uff0c\u4ece\u800c\u907f\u514d\u4e86 backtracking\u3002</p> <p>\u9884\u6d4b\u5206\u6790\u5668\u53ef\u4ee5\u7528\u4e8e\u5904\u7406 LL(k) \u6587\u6cd5\uff0cLL(k) \u5404\u90e8\u5206\u7684\u542b\u4e49\u662f\uff1a</p> <ul> <li>\u7b2c\u4e00\u4e2a L\uff1aleft-to-right scan of input</li> <li>\u7b2c\u4e8c\u4e2a L\uff1aleftmost derivation</li> <li>k\uff1apredict based on k tokens of lookahead</li> </ul> <p>\u6211\u4eec\u8fd9\u91cc\u8ba8\u8bba LL(1) \u6587\u6cd5\uff0c\u5373\u901a\u8fc7\u67e5\u770b\u5f53\u524d token \u4e4b\u540e\u7684\u4e00\u4e2a token \u5c31\u80fd\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a production \u7684\u6587\u6cd5\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#331-\u601d\u8def","title":"3.3.1 \u601d\u8def","text":"<p>\u5bf9\u4e8e Recursive Descent\uff0c\u6bcf\u4e00\u6b65\u6709\u591a\u79cd\u53ef\u9009\u7684 production\uff1bBacktracking used to undo bad choices.</p> <p>\u5bf9\u4e8e LL(1)\uff0c\u6bcf\u4e00\u6b65\u53ea\u4f1a\u6709\u4e00\u4e2a\u6216\u96f6\u4e2a (error state) \u53ef\u4ee5\u9009\u62e9\u7684 production\u3002\u7531\u4e8e \"LL\"\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u6211\u4eec\u6bcf\u6b21\u53ea\u9700\u8981\u5c06\u6700\u5de6\u7aef\u7684 non-terminal \u7528\u4e00\u4e2a production \u7684\u53f3\u7aef\u66ff\u6362\uff1b\u800c \"(1)\" \u8981\u6c42\u6211\u4eec\u53ea\u67e5\u770b\u8f93\u5165\u4e2d\u7684 1 \u4e2a token \u5c31\u53ef\u4ee5\u77e5\u9053\u4f7f\u7528\u54ea\u4e00\u4e2a production\uff1b\u5373\uff1a\u6bcf\u4e00\u4e2a production \u53f3\u7aef\u7684\u7b2c\u4e00\u4e2a terminal \u662f\u552f\u4e00\u7684\u3002\u5728\u8fd9\u6837\u7684\u6761\u4ef6\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u7684\u5c55\u5f00\u548c\u67e5\u770b production \u6765\u5b8c\u6210 token \u6d41\u7684\u8bed\u6cd5\u5206\u6790\u3002</p> <p>\u8fd9\u4e00\u8981\u6c42\u5bf9\u5927\u591a\u6570\u6587\u6cd5\u6765\u8bf4\u662f\u4e0d\u80fd\u6ee1\u8db3\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u65b9\u6cd5\u6765\u6ee1\u8db3\u8fd9\u4e00\u8981\u6c42\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#332-\u63d0\u53d6\u5de6\u56e0\u5b50--left-factoring","title":"3.3.2 \u63d0\u53d6\u5de6\u56e0\u5b50 | Left Factoring","text":"<p>\u6211\u4eec\u4ecd\u7136\u8ba8\u8bba 3.2 \u4e2d\u7528\u5230\u7684\u6587\u6cd5\uff1a <code>E -&gt; T+E | T</code> , <code>T -&gt; int | int*T | (E)</code></p> <p>\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a non-terminal \u7684 production \u7684\u53f3\u7aef\u4ee5\u76f8\u540c\u7684\u7b26\u53f7\u5f00\u59cb\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 left factoring \u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u5373\u63d0\u53d6\u76f8\u540c\u7684\u5f00\u59cb\u7b26\u53f7\uff0c\u5e76\u5c06\u5269\u4e0b\u7684\u90e8\u5206\u7528\u4e00\u4e2a\u65b0\u7684 non-terminal \u6765\u4ee3\u66ff\uff0c\u5982 <code>E -&gt; T+E | T</code> \u53ef\u4ee5\u6539\u5199\u4e3a <code>E -&gt; TX</code> , <code>X -&gt; +E | \u03f5</code> \u3002\u7c7b\u4f3c\u5730\uff0c<code>T -&gt; int | int*T | (E)</code> \u6539\u5199\u4e3a <code>T -&gt; intY | (E)</code> , <code>Y -&gt; *T | \u03f5</code>\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#333-\u9884\u6d4b\u5206\u6790\u8868--predictive-parsing-table","title":"3.3.3 \u9884\u6d4b\u5206\u6790\u8868 | Predictive Parsing Table","text":"<p>\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u6bcf\u4e00\u4e2a\u5f53\u524d\u6700\u5de6\u7aef\u7684 non-terminal \u4ee5\u53ca lookahead \u5f97\u5230\u7684 next input token \u6765\u9009\u53d6\u552f\u4e00\u7684 production\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u8868\u683c\u6765\u8868\u793a\u8fd9\u79cd\u9884\u6d4b\u5173\u7cfb\uff0c\u4e0b\u56fe\u662f\u4e0a\u8ff0\u6587\u6cd5\u7684\u5bf9\u5e94\u4f8b\u5b50\uff08\u6211\u4eec\u7a0d\u540e\u518d\u8ba8\u8bba\u8fd9\u5f20\u8868\u7684\u5efa\u7acb\u65b9\u5f0f\uff09\uff1a</p> <p></p> <p></p> <p></p> <p>\u672c\u6587\u4e2d\uff0c\u5982\u679c Parsing Table \u4e2d non-terminal <code>A</code>\u00a0 \u548c terminal <code>t</code>\u00a0\u5bf9\u5e94\u7684\u9879\u76ee\u4e3a <code>a</code>\u00a0\uff0c\u90a3\u4e48\u8bb0 <code>T[A,t] = a</code>\u00a0\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#334-\u4f7f\u7528\u9884\u6d4b\u5206\u6790\u8868","title":"3.3.4 \u4f7f\u7528\u9884\u6d4b\u5206\u6790\u8868","text":"<p>\u7531\u4e8e\u6211\u4eec\u7684\u8bed\u6cd5\u5206\u6790\u8fc7\u7a0b\u59cb\u7ec8\u53ea\u9700\u8981\u8003\u8651\u6700\u5de6\u7aef\u7684 non-terminal\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u6765\u5b58\u50a8\u6b63\u5728\u751f\u6210\u7684 parse tree\uff0c\u6808\u9876\u5373\u4e3a leftmost non-terminal \u6216\u8005\u5373\u5c06\u88ab\u5339\u914d\u7684 leftmost terminal\uff08\u5982\u679c\u4e0e\u8f93\u5165\u76f8\u540c\u5219\u51fa\u6808\uff0c\u5982\u679c\u4e0d\u540c\u5219\u8bf4\u660e\u51fa\u73b0\u4e86\u8bed\u6cd5\u9519\u8bef\uff09\u3002\u5982\u679c\u51fa\u73b0\u4e86 error state\uff0c\u5219\u4e5f\u8bf4\u660e\u51fa\u73b0\u4e86\u8bed\u6cd5\u9519\u8bef\uff1b\u5982\u679c\u6808\u4e3a\u7a7a\u4e14\u8f93\u5165\u7ed3\u675f\uff0c\u5219\u8bed\u6cd5\u5206\u6790\u6210\u529f\u7ed3\u675f\u3002</p> <p>\u4e0b\u9762\u662f LL(1) Parsing \u7684\u7b97\u6cd5\uff1a <pre><code>initialize stack = {S, $}\nrepeat\n    case stack.top of\n     X: //non-terminal\n            if T[X, *next] = Y1...Yn then\n                pop X\n                push Y1...Yn onto stack\n          else\n                error()\n     t: //terminal\n            if t == *next++ then\n                pop t\n          else\n                error()\nuntil stack == {}\n</code></pre> \u5176\u4e2d\uff1a</p> <ul> <li>Line 1, 14\uff1a<code>S</code> \u662f Start Symbol\uff0c<code>$</code> \u662f\u8f93\u5165\u7684\u672b\u5c3e\uff0c\u5982\u679c\u6700\u7ec8 <code>stack</code> \u4e3a\u7a7a\uff0c\u8bf4\u660e\u6808\u4e3a\u7a7a\uff08\u9664\u4e86 <code>$</code>\uff09\u7684\u540c\u65f6\u8f93\u5165\u5230\u8fbe\u7ed3\u675f\uff0c\u5373 parsing \u88ab\u63a5\u53d7\u3002</li> <li>Line 3\uff1a\u5f53\u6808\u975e\u7a7a\u65f6\uff0c\u6211\u4eec\u4e0d\u65ad\u8fdb\u884c\u8fd9\u4e00\u5de5\u4f5c\uff1a\u68c0\u67e5\u6808\u9876\u662f non-terminal \u8fd8\u662f terminal\uff0c\u5982\u679c\uff1a<ul> <li>\u4e3a non-terminal\uff0c\u90a3\u4e48\u6839\u636e\u8be5 non-terminal\uff08\u5373 leftmost\uff09\u4ee5\u53ca\u8f93\u5165\u7684\u4e0b\u4e00\u4e2a token\uff08\u5373 <code>*next</code> \uff09\u5728 Parsing Table \u4e2d\u8fdb\u884c\u67e5\u627e\uff0c\u5982\u679c\u8be5\u9879\u4e3a\u7a7a\u8bf4\u660e\u51fa\u73b0\u9519\u8bef\uff08Line 7~8\uff09\uff1b\u5426\u5219\u5c06\u8868\u4e2d\u7684\u5bf9\u5e94\u5185\u5bb9\uff0c\u5373 <code>T[X, *next]</code> \u538b\u5165\u6808\u9876\uff0c\u5373\u6808\u4ece <code>{X, rest}</code> \u53d8\u4e3a <code>{Y1, ..., Yn, rest}</code> \u3002Production \u53f3\u7aef\u7684 leftmost symbol \u6210\u4e3a\u65b0\u7684\u6808\u9876\u3002</li> <li>\u4e3a terminal\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0e\u4e4b\u524d\u7684 Recursive Descent \u4e2d\u5bf9 terminal \u7684\u5904\u7406\u4e00\u81f4\u3002</li> </ul> </li> </ul> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p></p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#335-\u6784\u9020\u9884\u6d4b\u5206\u6790\u8868","title":"3.3.5 \u6784\u9020\u9884\u6d4b\u5206\u6790\u8868","text":"<p>\u5bf9\u4e8e non-terminal <code>A</code>\u00a0, production <code>A-&gt;X</code>\u00a0, token <code>t</code>\u00a0, \u5219 <code>T[A, t] = X</code>\u00a0\u5f53\u4e14\u4ec5\u5f53\uff1a</p> <ul> <li><code>X -&gt;* tY</code>\u00a0\uff0c\u5373 <code>X</code>\u00a0\u53ef\u4ee5\u7ecf 0 \u6b65\u6216\u591a\u6b65\u8f6c\u6362\u6210\u4e00\u4e2a\u7531 <code>t</code>\u00a0\u5f00\u5934\u7684\u4e32\u3002\u8fd9\u65f6\u6211\u4eec\u8bb0 \\(t\\in\\text{First}(X)\\)\u3002\u6216\u8005</li> <li><code>X -&gt;* \u03f5</code> \u4e14 <code>S -&gt;* pAtq</code>\u00a0\uff0c\u5176\u4e2d <code>p</code>\u00a0\u548c <code>q</code>\u00a0\u4e3a\u4efb\u610f\u4e32\uff08\u53ef\u4e3a\u7a7a\uff09\uff1b\u5373\u5b58\u5728\u4ece Start Symbol \u5f00\u59cb\u7684\u4efb\u4e00\u6b65\u63a8\u5bfc\u5305\u542b <code>At</code>\u00a0\uff0c\u4e14 <code>X</code>\u00a0\u53ef\u4e3a\u7a7a\u3002\u8fd9\u65f6\u6211\u4eec\u8bb0 \\(t\\in \\text{Follow}(X)\\)\u3002</li> </ul> <p>\u4e0a\u9762\u6240\u8ff0\u7684 \\(\\text{First}(X)\\)\u00a0\u548c \\(\\text{Follow}(X)\\)\u00a0\u662f terminal \u7684\u4e24\u4e2a\u96c6\u5408\u3002\u6211\u4eec\u7ed9\u51fa\u8fd9\u4e24\u4e2a\u96c6\u5408\u7684\u5b9a\u4e49\u548c\u89e3\u91ca\uff1a</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#3351-first-sets","title":"3.3.5.1 First Sets","text":"<p>\u7ed9\u5b9a\u7b26\u53f7 <code>X</code>\u00a0\uff0c\\(\\text{First}(X)\\)\u00a0\u8868\u793a\u53ef\u4ee5\u4ece <code>X</code>\u00a0\u4e2d\u63a8\u5bfc\u51fa\u7684\u6240\u6709 terminal \u4e32\u4e2d leftmost terminal \u7684\u96c6\u5408\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u5f62\u5f0f\u5316\u7684\u5b9a\u4e49\uff1a</p> <p>\\(\\text{First}(X) = \\{t\\ |\\ X\\Rightarrow^* t\\alpha\\} \\cup\\{\\epsilon\\ |\\ X\\Rightarrow^* \\epsilon\\}\\) \u5373\uff0c\u5982\u679c <code>X</code>\u00a0\u53ef\u4ee5\u7ecf 0 \u6b65\u6216\u591a\u6b65\u63a8\u5bfc\u51fa\u4ee5 terminal <code>t</code>\u00a0\u5f00\u5934\u7684\u4e32\uff0c\u90a3\u4e48 <code>t</code>\u00a0\u5c5e\u4e8e \\(\\text{First}(X)\\)\uff08\\(\\alpha\\)\u00a0\u662f\u4ec0\u4e48\u5e76\u4e0d\u91cd\u8981\uff0c\u5b83\u53ea\u662f\u7528\u6765\u8868\u793a <code>t</code>\u00a0\u540e\u9762\u8fd8\u53ef\u4ee5\u6709\u4e1c\u897f\uff09\uff1b\u5982\u679c <code>X</code>\u00a0\u53ef\u4ee5\u7ecf 0 \u6b65\u6216\u8005\u591a\u6b65\u63a8\u5bfc\u51fa\u7a7a\u4e32\uff0c\u90a3\u4e48 <code>\u03f5</code> \u5c5e\u4e8e \\(\\text{First}(X)\\)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u601d\u8def\u8ba1\u7b97\u51fa First Sets\uff1a</p> <p></p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u4ecd\u7136\u7814\u7a76\u521a\u521a\u7684\u6587\u6cd5\uff1a</p> <p></p> <p>\u9996\u5148\uff0c <code>X</code>\u00a0, <code>Y</code>\u00a0, <code>T</code>\u00a0\u7684 First \u96c6\u5408\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u6bcf\u4e00\u79cd\u4ea7\u751f\u5f0f\u7684\u5f00\u5934\u90fd\u662f terminal\uff1a</p> <p>\\(\\text{First}(X) = \\{+,\\epsilon\\},\\quad \\text{First}(Y) = \\{*,\\epsilon\\},\\quad \\text{First}(T) = \\{\\ (\\ ,\\text{int}\\}\\)</p> <p>\u53e6\u5916\u6ce8\u610f <code>E -&gt; TX</code>\u00a0\uff0c\u6709 \\(\\text{First}(T)\\subseteq \\text{First}(E)\\)\uff1b\u8fdb\u4e00\u6b65\u6211\u4eec\u53d1\u73b0 <code>T</code>\u00a0\u4e0d\u53ef\u80fd\u5bfc\u51fa\u7a7a\u4e32\uff0c\u56e0\u6b64 \\(\\text{First}(E)\\)\u00a0\u6ca1\u6709\u5176\u4ed6\u5143\u7d20\u4e86\u3002\u56e0\u6b64 \\(\\text{First}(E) = \\{\\ (\\ ,\\text{int}\\}\\)\u3002</p> <p>\u4e00\u822c\u5730\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26 <code>X</code>\u00a0\uff0c\u8ba1\u7b97\u5b83\u7684 First \u96c6\u5408\u7684\u7b97\u6cd5\u662f\uff1a\uff08Ref\uff1aLink\uff09</p> <pre><code>/* \u904d\u5386\u6240\u6709 production\u3002\u5373\uff0c\u5728\u4ee5\u8fd9\u4e2a Non-terminal \u4e3a\u5de6\u7aef\u7684\u4e00\u4e2a production \u4e2d\uff1a*/\n\n// If epsilon not found in the first set of the current token or\n// the current token is the last one in the production, then add all\n// the tokens to the first set and don't continue evaluating the next tokens\n// Example 1:\n//        A -&gt; B C D\n//        B -&gt; 'T1' | 'T2'\n//        ...\n// Then First(A) contains First(B)\n// Example 2:\n//        A -&gt; B C D\n//        B -&gt; EPSILON | 'T1'\n//        C -&gt; 'T2' | 'T3'\n//        ...\n// Then First(A) contains First(B)-{EPSILON} U First(C)\n// Example 3:\n//        A -&gt; B C D\n//        B -&gt; EPSILON | 'T1'\n//        C -&gt; EPSILON | 'T2'\n//        D -&gt; EPSILON | 'T3'\n//        ...\n// Then First(A) contains First(B)-{EPSILON} U First(C)-{EPSILON} U First(D).\n// Note that in Example 3, EPSILON will be in First(A)\n</code></pre> <p>\u6211\u4eec\u904d\u5386\u6bcf\u4e00\u6761 production\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761 production\uff0c\u8bb0\u5de6\u8fb9\u7684 non-terminal \u4e3a X\uff0c\u6211\u4eec\u904d\u5386\u5176\u53f3\u8fb9\u7684 tokens\uff1a</p> <ul> <li>\u5982\u679c\u662f\\(\\epsilon\\)\u6216\u8005 terminal\uff0c\u5c06\u5176\u52a0\u5165 X \u7684 First Set \u5e76\u4e14\u505c\u6b62\u904d\u5386\u3002\u56e0\u4e3a\\(\\epsilon\\)\u53ea\u4f1a\u5355\u72ec\u51fa\u73b0\uff0c\u800c terminal \u540e\u9762\u7684\u4e1c\u897f\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u5728 X \u7684 First Set \u4e2d\u4e86\uff1b</li> <li>\u5982\u679c\u662f Non-terminal\uff1a<ul> <li>\u5982\u679c Non-terminal \u7684 First Set \u4e2d\u6ca1\u6709\\(\\epsilon\\)\uff0c\u6216\u8005\u8fd9\u662f\u5f53\u524d production \u7684\u6700\u540e\u4e00\u4e2a token\uff0c\u5c06 Non-terminal \u7684 First Set \u52a0\u5165 X \u7684 First Set\uff0c\u7136\u540e\u505c\u6b62\uff1b</li> <li>\u5982\u679c Non-terminal \u7684 First Set \u4e2d\u6709\\(\\epsilon\\)\uff0c\u800c\u4e14\u4e0d\u662f\u5f53\u524d production \u7684\u6700\u540e\u4e00\u4e2a token\uff0c\u5c06 Non-terminal \u7684 First Set \u4e2d\u9664\u4e86\\(\\epsilon\\)\u4ee5\u5916\u7684\u5143\u7d20\u52a0\u5165 X \u7684 First Set\uff0c\u7136\u540e\u7ee7\u7eed\u904d\u5386\u3002</li> </ul> </li> </ul> <p>\u6211\u4eec\u91cd\u590d\u5bf9 production \u7684\u904d\u5386\u8db3\u591f\u591a\u6b21\uff08production \u7684\u6761\u6570\u6b21\uff1b\u6216\u8005\u76f4\u5230\u4e00\u6b21\u904d\u5386\u4e2d\u6240\u6709 First Set \u6ca1\u6709\u53d1\u751f\u6539\u53d8\uff09\uff0c\u8fd9\u6837\u4fdd\u8bc1\u6bcf\u4e2a First Set \u90fd\u57fa\u4e8e\u6b63\u786e\u7684\u5176\u4ed6 First Set \u8fdb\u884c\u5408\u5e76\u3002\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u6240\u6709 Non-terminal \u7684 First Set\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#3352-follow-sets","title":"3.3.5.2 Follow Sets","text":"<p>\u7ed9\u5b9a\u7b26\u53f7 <code>X</code>\u00a0\uff0c\\(\\text{Follow}(X)\\)\u00a0\u8868\u793a\u53ef\u4ee5\u4ece Start Symbol <code>S</code>\u00a0\u63a8\u5bfc\u51fa\u7684\u6240\u6709\u4e32\u4e2d\uff0c\u53ef\u80fd\u76f4\u63a5\u63a5\u5728 <code>X</code>\u00a0\u4e4b\u540e\u7684 terminal \u7684\u96c6\u5408\u3002\u6211\u4eec\u540c\u6837\u7ed9\u51fa\u4e00\u4e2a\u5f62\u5f0f\u5316\u7684\u5b9a\u4e49\uff1a</p> <p>\\(\\text{Follow}(X) = \\{t\\ |\\ S\\Rightarrow^*\\alpha Xt\\beta\\}\\) \u540c\u6837\u7684\uff0c\u8fd9\u91cc \\(\\alpha, \\beta\\)\u00a0\u662f\u4ec0\u4e48\u4e5f\u5e76\u4e0d\u91cd\u8981\uff0c\u5b83\u53ea\u662f\u7528\u6765\u8868\u793a <code>Xt</code> \u7684\u524d\u540e\u8fd8\u53ef\u4ee5\u6709\u4e1c\u897f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cepsilon \u4e0d\u53ef\u80fd\u51fa\u73b0\u5728 Follow Sets \u4e2d\u3002\u5982\u679c\u8868\u793a\u5f53\u524d token \u4e4b\u540e\u53ef\u80fd\u4ec0\u4e48\u90fd\u6ca1\u6709\uff08\u5373\u6587\u4ef6\u7ed3\u675f\uff09\uff0c\u5219\u5176 Follow Set \u5305\u542b\u6587\u4ef6\u7ed3\u675f\u7b26 <code>$</code>\u00a0\u3002\u56e0\u6b64\uff0cStart Symbol <code>S</code> \u7684 Follow Set \u5305\u542b\u6587\u4ef6\u7ed3\u675f\u7b26 <code>$</code>\u3002</p> <p>\u4e00\u822c\u5730\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26 <code>X</code> \uff0c\u8ba1\u7b97\u5b83\u7684 Follow \u96c6\u5408\u7684\u7b97\u6cd5\u662f\uff1a\uff08Ref\uff1aLink\uff09</p> <pre><code>/* \u904d\u5386\u6240\u6709 production \u53f3\u8fb9\u7684\u6bcf\u4e00\u4e2a token\u3002\u5373\uff0c\u5bf9\u4e8e\u6bcf\u4e2a production \u4e2d\u51fa\u73b0\u7684\u6bcf\u4e2a token\uff1a */\n\n// If the current token is a non-terminal then iterate on the next token\n// and add its first set to the follow set of the current token except for\n// the epsilon value. If the first set had an epsilon value, then the next token\n// needs to be evaluated as well. This repeats until no epsilon is found or if\n// there are no more tokens in the production, which in that case the follow set\n// of the LHS is added to the follow set of the current token.\n// Example 1\n//        A -&gt; B C D\n//        Follow(A) = {'T1'}\n//        First(C) = {'T2', EPSILON}\n//        First(D) = {'T3'}\n// Then Follow(B) contains First(C)-{EPSILON} U First(D)\n// Example 2\n//        A -&gt; B C D\n//        Follow(A) = {'T1'}\n//        First(C) = {'T2', EPSILON}\n//        First(D) = {'T3', EPSILON}\n// Then Follow(B) contains First(C)-{EPSILON} U First(D)-{EPSILON} U Follow(A)\n</code></pre> <p>\u5bf9 Follow Set \u7684\u8ba1\u7b97\u662f\u5728\u5efa\u7acb\u5728\u5b8c\u6210\u5bf9 First Sets \u8ba1\u7b97\u7684\u57fa\u7840\u4e0a\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a production \u53f3\u4fa7\u7684\u6bcf\u4e00\u4e2a token X\uff0c\u904d\u5386\u5176\u540e\u9762\u7684 token Ri\uff1a\u5c06 Ri \u7684 First Set\uff08\u51cf\u53bb\\(\\epsilon\\)\uff09\u52a0\u5165 X \u7684 Follow Set\uff1b\u5982\u679c Ri \u7684 First Set \u4e0d\u5305\u542b\\(\\epsilon\\)\u5219\u505c\u6b62\uff0c\u5426\u5219\u7ee7\u7eed\u904d\u5386\u4e0b\u4e00\u4e2a token\uff1b\u5982\u679c\u6240\u6709 token \u90fd\u53ef\u4ee5\u53d6\\(\\epsilon\\)\uff0c\u5219\u5c06 production \u5de6\u8fb9\u7684 Non-terminal \u7684 Follow Set \u52a0\u5165 X \u7684 Follow Set\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#3353-construct-predictive-table","title":"3.3.5.3 Construct Predictive Table","text":"<p>\u6839\u636e\u6211\u4eec\u8ba1\u7b97\u51fa\u7684 First Sets \u548c Follow Sets\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7b97\u6cd5\u6784\u9020\u51fa\u8be5\u6587\u6cd5\u7684\u9884\u6d4b\u5206\u6790\u8868\uff1a</p> <p></p> <p>\u5176\u4e2d\uff0c <code>First(\u03b1)</code>\u00a0\u662f\u8be5 production \u7684\u53f3\u4fa7\u7684 First Set\uff0c\u5176\u5143\u7d20\u5176\u5b9e\u5c31\u662f 3.3.5.1 \u4e2d\u904d\u5386\u5230\u5bf9\u5e94 production \u65f6\u52a0\u5165\u5230 <code>First(A)</code>\u00a0\u7684\u5143\u7d20\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 3.3.5.1 \u4e2d\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u4e8e production \u5de6\u8fb9 Non-terminal \u7684 First Set \u548c\u8fd9\u4e2a production \u672c\u8eab\uff08\u6216\u8005\u8bf4\uff0c\u5b83\u7684\u53f3\u8fb9\uff09\u7684 First Set\uff0c\u4ee5\u4fbf\u8fd9\u4e00\u6b65\u8fdb\u884c\u4f7f\u7528\u3002</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#3354-\u4f8b\u5b50","title":"3.3.5.4 \u4f8b\u5b50","text":"<p>\u4e0b\u9762\u662f\u8bfe\u672c\u4e2d\u7684\u4e00\u9053\u4f8b\u9898\uff0c\u5c55\u793a\u4e86\u53bb\u9664\u5de6\u9012\u5f52\u3001\u8ba1\u7b97 First \u548c Follow Set\u3001\u6784\u9020 LL(1) Parsing Table \u548c\u4f7f\u7528 Parsing Table \u7684\u8fc7\u7a0b\u3002</p> <p>Example</p> <p>Consider the grammar:</p> <pre><code>lexp -&gt; atom | list\natom -&gt; number | identifier\nlist -&gt; (lexp-seq)\nlexp-seq -&gt; lexp-seq lexp | lexp\n</code></pre> <p>a. Remove the left recursion</p> <p>b. Construct the First and Follow set of the nonterminals of the resulting grammar.</p> <p>c. Construct the LL(1) table for the resulting grammar.</p> <p>d. Show the actions of the corresponding parser, given the following input string <code>(a(b(2))(c))</code>.</p> solution <p>a.  Production <code>lexp-seq -&gt; lexp-seq lexp | lexp</code> is left-recursive. We rewrite it to be: <code>lexp-seq -&gt; lexp seq</code>, <code>seq -&gt; lexp seq | EPSILON</code>. That is, the grammar after removing the left recursion is: <pre><code>lexp -&gt; atom | list\natom -&gt; number | identifier\nlist -&gt; (lexp-seq)\nlexp-seq -&gt; lexp seq\nseq -&gt; lexp seq | EPSILON\n</code></pre></p> <p>b.</p> <p>First Sets:</p> <p>Terminals: number, identifier, ( and ).</p> <p>We can first get to know that \\(First(atom) = \\{number,\\ identifier\\}\\) by production 2 and that \\(First(list) = \\{(\\}\\) by production 3.</p> <p>From production 1 we know that \\(First(lexp) = First(atom)\\cup First(list) = \\{number,\\ identifier,\\ (\\}\\), and from production 4 we know that \\(First(lexp\\text-seq) = First(lexp) = \\{number,\\ identifier,\\ (\\}\\).</p> <p>From production 5 we know that  \\(First(seq) =First(lexp)\\cup \\{\\epsilon\\} = \\{number,\\ identifier,\\ (,\\ \\epsilon\\}\\)</p> <p>Follow Sets:</p> <p>As <code>lexp</code> is the start symbol, there is  \\(\\$\\in Follow(lexp)\\).</p> <p>From production 1 we can know that  \\(Follow(lexp)\\subseteq Follow(atom)\\) and \\(Follow(lexp)\\subseteq Follow(list)\\).</p> <p>From production 3 we can know that  \\(\\ )\\ \\in Follow(lexp\\text-seq)\\)</p> <p>From production 4 we can know that  \\(First(seq) - \\{\\epsilon\\}\\subseteq Follow(lexp)\\), and as \\(\\epsilon\\in First(seq)\\), there is also \\(Follow(lexp\\text-seq)\\subseteq Follow(lexp)\\). It can also be known that \u00a0\\(Follow(lexp\\text-seq)\\subseteq Follow(seq)\\) .</p> <p>Therefore the total first and follow sets are:</p> Non-terminals First Sets Follow Sets lexp \\(\\{number,\\ identifier,\\ (\\}\\) \\(\\{number,\\ identifier,\\ (,\\ )\\ ,\\$\\}\\) atom \\(\\{number,\\ identifier\\}\\) \\(\\{number,\\ identifier,\\ (,\\ )\\ ,\\$\\}\\) list \\(\\{\\ (\\ \\}\\) \\(\\{number,\\ identifier,\\ (,\\ )\\ ,\\$\\}\\) lexp-seq \\(\\{number,\\ identifier,\\ (\\}\\) \\(\\{\\ )\\ \\}\\) seq \\(\\{number,\\ identifier,\\ (,\\ \\epsilon\\}\\) \\(\\{\\ )\\ \\}\\) <p>c.  We can construct the LL(1) parsing table with the first and follow sets above: (the LHS i.e. Left Hand Side of each production has been omitted as they are shown in the leftmost column of the table)</p> LHS number identifier ( ) $ lexp <code>-&gt;atom</code> <code>-&gt;atom</code> <code>-&gt;list</code> atom <code>-&gt;number</code> <code>-&gt;identifier</code> list <code>-&gt;(lexp-seq)</code> lexp-seq <code>-&gt;lexp seq</code> <code>-&gt;lexp seq</code> <code>-&gt;lexp seq</code> seq <code>-&gt;lexp seq</code> <code>-&gt;lexp seq</code> <code>-&gt;lexp seq</code> <code>-&gt;EPSILON</code> <p>As we can see, there is no conflicting entries in the table, or in other words, there is at most 1 production in each table entry. This satisfies the definition of LL(1) grammar. Therefore the grammar is LL(1).</p> <p>d.</p> Stack Input Action lexp $ <code>(a(b(2))(c))$</code> <code>-&gt;list</code> list $ <code>(a(b(2))(c))$</code> <code>-&gt;(lexp-seq)</code> ( lexp-seq ) $ <code>(a(b(2))(c))$</code> Match <code>(</code> lexp-seq ) $ <code>a(b(2))(c))$</code> <code>-&gt;lexp seq</code> lexp seq ) $ <code>a(b(2))(c))$</code> <code>-&gt;atom</code> atom seq ) $ <code>a(b(2))(c))$</code> <code>-&gt;identifier</code> identifier seq ) $ <code>a(b(2))(c))$</code> Match <code>a</code> seq ) $ <code>(b(2))(c))$</code> <code>-&gt;lexp seq</code> lexp seq ) $ <code>(b(2))(c))$</code> <code>-&gt;list</code> list seq ) $ <code>(b(2))(c))$</code> <code>-&gt;(lexp-seq)</code> ( lexp-seq ) seq ) $ <code>(b(2))(c))$</code> Match <code>(</code> lexp-seq ) seq ) $ <code>b(2))(c))$</code> <code>-&gt;lexp seq</code> lexp seq ) seq ) $ <code>b(2))(c))$</code> <code>-&gt;atom</code> atom seq ) seq ) $ <code>b(2))(c))$</code> <code>-&gt;identifier</code> identifier seq ) seq ) $ <code>b(2))(c))$</code> Match <code>b</code> seq ) seq ) $ <code>(2))(c))$</code> <code>-&gt;lexp seq</code> lexp seq ) seq ) $ <code>(2))(c))$</code> <code>-&gt;list</code> list seq ) seq ) $ <code>(2))(c))$</code> <code>-&gt;(lexp-seq)</code> ( lexp-seq ) seq ) seq ) $ <code>(2))(c))$</code> Match <code>(</code> lexp-seq ) seq ) seq ) $ <code>2))(c))$</code> <code>-&gt;lexp seq</code> lexp seq ) seq ) seq ) $ <code>2))(c))$</code> <code>-&gt;atom</code> atom seq ) seq ) seq ) $ <code>2))(c))$</code> <code>-&gt;number</code> number seq ) seq ) seq ) $ <code>2))(c))$</code> Match <code>2</code> seq ) seq ) seq ) $ <code>))(c))$</code> <code>-&gt;EPSILON</code> ) seq ) seq ) $ <code>))(c))$</code> Match <code>)</code> seq ) seq ) $ <code>)(c))$</code> <code>-&gt;EPSILON</code> ) seq ) $ <code>)(c))$</code> Match <code>)</code> seq ) $ <code>(c))$</code> <code>-&gt;lexp seq</code> lexp seq ) $ <code>(c))$</code> <code>-&gt;list</code> list seq ) $ <code>(c))$</code> <code>-&gt;(lexp-seq)</code> ( lexp-seq ) seq ) $ <code>(c))$</code> Match <code>(</code> lexp-seq ) seq ) $ <code>c))$</code> <code>-&gt;lexp seq</code> lexp seq ) seq ) $ <code>c))$</code> <code>-&gt;atom</code> atom seq ) seq ) $ <code>c))$</code> <code>-&gt;identifier</code> identifier seq ) seq ) $ <code>c))$</code> Match <code>c</code> seq ) seq ) $ <code>))$</code> <code>-&gt;EPSILON</code> ) seq ) $ <code>))$</code> Match <code>)</code> seq ) $ <code>)$</code> <code>-&gt;EPSILON</code> ) $ <code>)$</code> Match <code>)</code> $ <code>$</code> ACCEPT"},{"location":"compile_principle/2%20Parsing%20%28I%29/#336-ll1-grammar","title":"3.3.6 LL(1) Grammar","text":"<p>\u5982\u679c\u5728\u5982\u4e0a\u8ff0\u65b9\u6cd5\u6784\u9020\u51fa\u7684 LL(1) Parsing Table \u4e2d\u7684\u6bcf\u4e00\u683c\u90fd\u81f3\u591a\u6709 1 \u4e2a production\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a current non-terminal \u548c next input token \u7684\u7ec4\u5408\uff0c\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u79cd\u60c5\u51b5\uff08\u4e00\u4e2a production \u6216\u8005 error state\uff09\u4e0e\u4e4b\u5bf9\u5e94\u3002\u8fd9\u6837\u7684\u6587\u6cd5\u80fd\u591f\u5229\u7528 LL(1) \u5b8c\u6210\u9884\u6d4b\u5206\u6790\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u6587\u6cd5\u662f LL(1) \u7684\u3002</p> <p>\u7b49\u4ef7\u5730\uff0c\u4e00\u4e2a\u6587\u6cd5\u662f LL(1) \u7684\uff0c\u5982\u679c\uff1a</p> <ol> <li>For every production A\u2192\u03b11|\u03b12|...|\u03b1n, First(\u03b1i) \u2229 First(\u03b1j) is empty for all i and j, 1 \u2264 i, j \u2264 n, i \u2260 j.</li> <li>For every non-terminal A such that First(A) contains EPSILON\u00a0, First(A) \u2229 Follow(A) is empty.\u00a0</li> </ol> <p>\u4e00\u4e9b\u76f8\u5173\u7684\u95ee\u9898\u548c\u53c2\u8003\u56de\u7b54</p> <p>a. Can an LL(1) grammar be ambiguous? Why or why not? b. Can an ambiguous grammar be LL(1)? Why or why not? c. Must an unambiguous grammar be LL(1)? Why or why not?</p> \u53c2\u8003\u56de\u7b54 <p>a. No. For each possible pair of non-terminal on the top of the stack (i.e. leftmost non-terminal) and the input token (i.e. the pending terminal), there is at most 1 production to use. So it's impossible for an input string to get 2+ different parsing trees. So LL(1) grammar must not be ambiguous.</p> <p>b. No. If the grammar is ambiguous, then there must be some points where 2+ choices are available, which means that there will be 2+ productions in an entry of the parsing table. But this violates the definition of LL(1) grammar. So no ambiguous grammar can be LL(1).</p> <p>c. No. Left-recursive grammars or grammars without left-factoring may be unambiguous but they are still not LL(1). Other grammars which are complex enough maybe also not LL(1). In fact, most programming language CFGs used now are not LL(1) because of their complexity.</p>"},{"location":"compile_principle/2%20Parsing%20%28I%29/#\u66f4\u591a\u7ec3\u4e60","title":"\u66f4\u591a\u7ec3\u4e60","text":""},{"location":"compile_principle/2%20Parsing%20%28I%29/#2021-midterm","title":"2021 MidTerm","text":""},{"location":"compile_principle/2%20Parsing%20%28I%29/#2018-midterm","title":"2018 MidTerm","text":""},{"location":"compile_principle/3%20Parsing%20%28II%29/","title":"III \u8bed\u6cd5\u5206\u6790 - \u81ea\u5e95\u5411\u4e0a\u5206\u6790","text":"<p> \u7ea6 3562 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>\u670b\u8f88\u8f85\u5b66\u5f55\u64ad\uff1a\u7f16\u8bd1\u539f\u7406\u901f\u6210(3) \u8bed\u6cd5\u5206\u6790(\u4e0b) LL(1)\u4e0e\u81ea\u5e95\u5411\u4e0a\u5206\u6790</p> <p>\u6b64\u90e8\u5206\u4ecb\u7ecd \u81ea\u5e95\u5411\u4e0a\u5206\u6790 (Buttom-Up Parsing) \u4ee5\u53ca Yacc \u7684\u6709\u5173\u5185\u5bb9\u3002</p>"},{"location":"compile_principle/3%20Parsing%20%28II%29/#34-\u81ea\u5e95\u5411\u4e0a\u5206\u6790--bottom-up-parsing","title":"3.4 \u81ea\u5e95\u5411\u4e0a\u5206\u6790 | Bottom-Up Parsing","text":"<p>\u6240\u8c13 \u81ea\u5e95\u5411\u4e0a\u5206\u6790 (Bottom-Up Parsing)\uff0c\u5c31\u662f\u4ece\u8f93\u5165\u7684 token \u6d41\u4e00\u6b65\u6b65\u7b80\u5316\u4e3a start symbol\u3002Bottom-Up Parsing \u76f8\u8f83 Top-Down Parsing \u800c\u8a00\u66f4\u52a0\u901a\u7528\uff0c\u800c\u4e14\u5e76\u6ca1\u6709\u727a\u7272\u6027\u80fd\u3002Bottom-Up Parsing \u7684\u601d\u8def\u57fa\u4e8e\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684 Top-Down Parsing \u7684\u76f8\u5173\u601d\u8def\u3002</p> <p>\u540c\u6837\u7684\uff0c\u6211\u4eec\u9996\u5148\u8ba8\u8bba Bottom-Up Parsing \u7684\u8fc7\u7a0b\uff0c\u7a0d\u540e\u518d\u8ba8\u8bba\u8fd9\u4e9b\u8fc7\u7a0b\u5177\u4f53\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u4f8b\u5982 parser \u5982\u4f55\u77e5\u9053\u5728\u4ec0\u4e48\u60c5\u5f62\u4e0b\u4f7f\u7528\u54ea\u6761 production\u3002</p> <p>\u6211\u4eec\u770b\u8fd9\u6837\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5176\u5de6\u8fb9\u4e00\u5217\u662f\u8f93\u5165\u7684 token \u6d41\u4e00\u6b65\u4e00\u6b65\u88ab \u89c4\u7ea6 (reduce) \u5230 start symbol \u7684\u8fc7\u7a0b\uff0c\u5176\u53f3\u8fb9\u4e00\u5217\u662f\u6bcf\u4e00\u6b65\u7528\u5230\u7684 production\u3002\u6ce8\u610f\uff1a\u81ea\u5e95\u5411\u4e0a\u5206\u6790\u4f7f\u7528 production \u65f6\u662f\u5c06 production \u7684 rhs \u8f6c\u6362\u4e3a lhs\uff1a</p> <p></p> <p>\u4ece\u4e0b\u5f80\u4e0a\u67e5\u770b\u5206\u6790\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u91cd\u8981\u4e8b\u5b9e\uff1a\u81ea\u5e95\u5411\u4e0a\u5206\u6790\u662f\u6700\u53f3\u5206\u6790\u7684\u4e00\u4e2a\u9006\u8fc7\u7a0b\u3002</p> <p>\u66f4\u5177\u4f53\u5730\u7814\u7a76\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u6211\u4eec\u8003\u8651\u6211\u4eec\u53d1\u73b0\u7684\u91cd\u8981\u4e8b\u5b9e\uff1a\u5982\u679c\u67d0\u4e00\u6b21\u89c4\u7ea6\u662f \\(\\alpha\\beta\\omega\\to\\alpha X\\omega\\)\uff0c\u4f7f\u7528\u4e86 production \\(X\\to\\beta\\)\uff0c\u90a3\u4e48\u7531\u4e8e\u8fd9\u662f\u6700\u53f3\u5206\u6790\u9006\u8fc7\u7a0b\u7684\u67d0\u4e00\u6b65\uff0c\u4ea6\u5373 \\(\\alpha X\\omega\\to\\alpha\\beta\\omega\\) \u662f\u6700\u53f3\u5206\u6790\u7684\u67d0\u4e00\u6b65\uff0c\u56e0\u6b64 \\(\\omega\\) \u4e00\u5b9a\u5168\u90e8\u7531 terminal \u7ec4\u6210\uff0c\u8fd9\u662f\u5206\u6790\u8fc7\u7a0b\u4e2d \u5df2\u7ecf\u5b8c\u6210\u4e86\u5c55\u5f00 \u7684\u90e8\u5206\u3002\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u9006\u8fc7\u7a0b\u6765\u8bf4\uff0c\\(\\omega\\) \u5219\u662f \u5c1a\u672a\u88ab\u8003\u8651 \u7684\u90e8\u5206\u3002\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5f53\u524d\u7684 token \u4e32\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\\(\\alpha\\beta | \\omega\\)\uff0c\u5176\u4e2d | \u5de6\u8fb9\u7684\u662f\u5df2\u7ecf\u88ab\u8003\u8651\u8fc7\u7684\u90e8\u5206\uff0c\u800c | \u53f3\u8fb9\u7684\u662f\u6ca1\u6709\u8003\u8651\u8fc7\u7684\u90e8\u5206\u3002</p> <p>\u6211\u4eec\u8fdb\u4e00\u6b65\u53ef\u4ee5\u6ce8\u610f\u5230\uff1a\u6240\u6709\u64cd\u4f5c\u90fd\u4f1a\u53d1\u751f\u5728 | \u7d27\u90bb\u7684\u5de6\u53f3\u4e24\u8fb9\u3002\u5b9e\u9645\u4e0a\uff0c\u53ea\u4f1a\u6709 2 \u79cd\u64cd\u4f5c\u4ea7\u751f\uff1a</p> <ol> <li>Reduce\uff0c\u89c4\u7ea6\uff1a\u5c06 | \u5de6\u8fb9\u7684\u4e00\u4e9b token \u7528\u67d0\u6761 production \u8f6c\u6362\u4e3a\u4e00\u4e2a Non-terminal\uff1b</li> <li>Shift\uff0c\u79fb\u8fdb\uff1a\u5c06 | \u53f3\u79fb\u4e00\u4f4d\uff0c\u5373\u5c06\u4e0b\u4e00\u4e2a terminal \u7eb3\u5165\u8003\u8651\u3002</li> </ol> <p>\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u5b9e\u9645\u4e0a\u5c31\u662f\uff1a</p> <p></p> <p>\u6211\u4eec\u5bb9\u6613\u60f3\u5230\uff0c\u8fd9\u4e2a\u5206\u6790\u8fc7\u7a0b\u7528\u6808\u5f88\u5bb9\u6613\u5b9e\u73b0\u3002\u6211\u4eec\u5c06 | \u5de6\u8fb9\u7684\u90e8\u5206\u5b58\u5728\u6808\u4e2d\uff0c\u90a3\u4e48 reduce \u64cd\u4f5c\u5c31\u662f\u5c06\u6808\u9876\u7684\u82e5\u5e72\u4e2a\u5143\u7d20\uff08\u5bf9\u5e94\u67d0\u4e2a production \u7684 rhs\uff0c\u4e5f\u6709\u53ef\u80fd\u662f 0 \u4e2a\uff09pop \u51fa\u6765\uff0c\u7136\u540e push \u76f8\u5e94 production \u7684 lhs\uff1b\u800c shift \u64cd\u4f5c\u5c31\u662f\u8bfb\u53d6\u8f93\u5165 token \u6d41\u4e2d\u7684\u4e00\u4e2a terminal \u5e76\u5c06\u5176 push \u5230\u6808\u9876\u3002</p> <p>\u5728\u540c\u4e00\u4e2a\u72b6\u6001\u4e0b\uff0cparser \u53ef\u80fd\u4f1a\u6709\u591a\u79cd\u53ef\u9009\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u65e2\u53ef\u4ee5 reduce \u4e5f\u53ef\u4ee5 shift\uff0c\u8fd9\u79f0\u4e3a\u4e00\u4e2a shift-reduce conflict\uff1b\u6709\u65f6\u8fd8\u53ef\u80fd\u6709\u591a\u4e2a\u53ef\u9009\u7684 reduce \u65b9\u5f0f\uff0c\u8fd9\u79f0\u4e3a\u4e00\u4e2a reduce-reduce conflict\u3002\u8fd9\u4e9b\u51b2\u7a81\u901a\u5e38\u8868\u660e\u8bed\u6cd5\u5b58\u5728\u4e00\u5b9a\u95ee\u9898\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u4f18\u5148\u7ea7\u7684\u65b9\u5f0f\u8fdb\u884c\u89e3\u51b3\u3002\u6211\u4eec\u5c06\u5728\u540e\u9762\u8ba8\u8bba\u76f8\u5e94\u7684\u89e3\u51b3\u65b9\u6cd5\u3002</p>"},{"location":"compile_principle/3%20Parsing%20%28II%29/#viable-prefix","title":"Viable Prefix","text":""},{"location":"compile_principle/3%20Parsing%20%28II%29/#35-lr0-parsing","title":"3.5 LR(0) Parsing","text":"<p>\u8fd9\u7bc7\u535a\u5ba2 \u662f\u4f7f\u6211\u5b66\u660e\u767d LR(0) \u5206\u6790\u8868\u6784\u9020\u7684\u5173\u952e\u535a\u5ba2\uff1b\u8fd9\u7bc7\u535a\u5ba2 \u662f\u4f7f\u6211\u7406\u89e3\u8fd9\u5f20\u8868\u600e\u4e48\u7528\u7684\u5173\u952e\u535a\u5ba2\uff083.5.3 \u4e2d\u7684\u4f2a\u4ee3\u7801\u4e5f\u57fa\u4e8e\u6b64\u5904\u66f4\u6539\uff09\uff1b\u8fd9\u7bc7\u535a\u5ba2 \u4e2d\u6709\u4e00\u4e2a\u5177\u4f53\u7684\u793a\u4f8b\u6f14\u793a\u8fd9\u5f20\u8868\u7684\u7528\u6cd5\u3002</p> <p>LR(0) Parsing \u662f Bottom-Up Parsing \u7684\u4e00\u79cd\u3002LR(k) \u8868\u793a Left-to-Right Scan, Rightmost Derivation, Predict Based on k Tokens of Lookahead\u3002</p>"},{"location":"compile_principle/3%20Parsing%20%28II%29/#351-lr0-item","title":"3.5.1 LR(0) Item","text":"<p>\u6211\u4eec\u5728 3.4 \u4e2d\u63d0\u5230\uff0c\u81ea\u5e95\u5411\u4e0a\u5206\u6790\u7684\u8fc7\u7a0b\u5c31\u662f\u4e0d\u65ad\u5730\u51d1\u51fa\u4e00\u4e2a production \u7684 rhs\uff0c\u5e76\u8ba9\u8fd9\u4e9b rhs \u4f4d\u4e8e Parsing \u6808\u7684\u6808\u9876\u3002\u56e0\u6b64\u5047\u8bbe\u4e0b\u4e00\u6b21\u5c06\u4f1a\u4f7f\u7528\u5230\u7684 production \u4e3a \\(X\\to \\alpha\\beta\\)\uff0c\u90a3\u4e48\u5728\u4f7f\u7528\u8fd9\u4e2a production \u8fdb\u884c\u89c4\u7ea6\u4e4b\u524d\uff0c\u6808\u9876\u53ef\u80fd\u5305\u542b\u4e86 \\(\\cdots\\cdots, \\cdots\\alpha\\cdots, \\cdots\\alpha\\beta\\) \u7b49\u60c5\u51b5\uff0c\u5373\u6211\u4eec\u51d1\u51fa\u8fd9\u4e2a production \u7684 rhs \u7684\u8fdb\u5ea6\u4e0d\u540c\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u6211\u4eec\u5e0c\u671b\u5bf9\u5176\u505a\u51fa\u4e0d\u4e00\u6837\u7684\u64cd\u4f5c\u3002</p> <p>\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a production\uff0c\u6211\u4eec\u7528\u53e5\u70b9 . \u6765\u6807\u8bc6\u4e00\u79cd\u51d1\u51fa\u5176 rhs \u7684\u8fdb\u5ea6\uff08right-hand-side position\uff09\u3002\u4f8b\u5982 \\(X\\to\\alpha\\beta\\) \u7684\u60c5\u51b5\u5c31\u4f1a\u6709\uff1a\\(X\\to .\\alpha\\beta, X\\to \\alpha.\\beta, X\\to \\alpha\\beta.\\) \u4e09\u79cd\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u60c5\u51b5\u79f0\u4e3a LR(0) Item\u3002\u6211\u4eec\u5728\u540e\u9762\u5c06\u770b\u5230\uff0c\u6211\u4eec\u7684\u5206\u6790\u5c31\u662f\u57fa\u4e8e\u8fd9\u4e9b Item \u7684\u3002</p> <p>\u6211\u4eec\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8d2f\u7a7f\u540e\u7eed\u5c0f\u8282\u7684\u5b66\u4e60\uff0c\u76f4\u5230\u6210\u529f\u5b8c\u6210\u5206\u6790\u3002\u5bf9\u4e8e\u6587\u6cd5 <code>S'-&gt;S, S-&gt;(S)S | EPSILON</code> \uff0c\u5176 LR(0) Item \u5305\u62ec\uff1a<code>S'-&gt;.S</code>, <code>S'-&gt;S.</code>, <code>S-&gt;.(S)S</code>, <code>S-&gt;(.S)S</code>, <code>S-&gt;(S.)S</code>, <code>S-&gt;(S).S</code>, <code>S-&gt;(S)S.</code>, <code>S-&gt;.</code> \u3002</p>"},{"location":"compile_principle/3%20Parsing%20%28II%29/#352-lr0-parsing-table-\u7684\u6784\u9020","title":"3.5.2 LR(0) Parsing Table \u7684\u6784\u9020","text":"<p>\u6211\u4eec\u4f1a\u770b\u5230\uff0cLR(0) Item \u4e4b\u95f4\u4f1a\u6709\u4e00\u4e9b\u8f6c\u6362\u5173\u7cfb\u3002\u4f8b\u5982\uff1a</p> <ul> <li>\\(X\\to.\\alpha\\beta\\) \u63a5\u6536 \\(\\alpha\\) \u540e\u5c31\u4f1a\u53d8\u6210 \\(X\\to \\alpha.\\beta\\)</li> <li>\u5982\u679c\u5b58\u5728 production \\(X\\to \\gamma Y\\omega, Y\\to \\alpha\\beta\\)\uff0c\u90a3\u4e48 \\(X\\to \\gamma .Y\\omega\\) \u5c31\u53ef\u4ee5\u8f6c\u6362\u5230 \\(Y\\to .\\alpha\\beta\\)\uff0c\u56e0\u4e3a\u8981\u51d1\u51fa X\uff0c\u8fd9\u65f6\u9700\u8981\u5148\u51d1\u51fa\u4e00\u4e2a Y\u3002</li> </ul> <p>\u6839\u636e\u4e0a\u8ff0\u8f6c\u6362\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a LR(0) Items \u7684 NFA\u3002\u4e4b\u6240\u4ee5\u662f NFA\uff0c\u662f\u56e0\u4e3a\u4e0a\u8ff0\u7b2c\u4e8c\u6761\u8f6c\u6362\u5173\u7cfb\u5bfc\u81f4\u5b58\u5728 \\(\\epsilon\\) \u8f6c\u5316\u3002</p> <p>\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6211\u4eec\u63d0\u51fa\u7684\u4f8b\u5b50\uff0c\u5176 NFA \u5c31\u662f\uff1a</p> <p></p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u5c06 NFA \u8f6c\u6362\u4e3a DFA\uff1a</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u636e\u6b64\u6784\u9020\u51fa\u4e00\u4e2a LR(0) Parsing Table\uff1a</p> State Input &amp; Shift Goto ( ) $ S 1 s3/r3 r3 r3 g2 2 r1 r1 accept(r1) 3 s3/r3 r3 r3 g4 4 s5 5 s3/r3 r3 r3 g6 6 r2 r2 r2 <p>\u5176\u4e2d\uff0c\\(s_k\\) \u8868\u793a\u5c06\u5bf9\u5e94\u7684 terminal \u538b\u6808\uff0c\u7136\u540e\u79fb\u5230\u5230\u72b6\u6001 k\uff1b\\(g_k\\) \u8868\u793a\u5c06\u5bf9\u5e94\u7684 non-terminal \u538b\u6808\uff0c\u7136\u540e\u79fb\u5230\u72b6\u6001 k\uff1b\\(r_k\\) \u8868\u793a\u7528\u7b2c k \u6761 production \u89c4\u7ea6\uff0c\u8fd9\u91cc r1, r2, r3 \u5206\u522b\u4e3a <code>S'-&gt;S</code>, <code>S-&gt;(S)S</code>, <code>S-&gt;EPSILON</code>\uff1baccept \u8868\u793a\u63a5\u53d7\u3002</p> <p>\u8fd9\u4e2a\u8868\u7684\u521b\u5efa\u65b9\u5f0f\u662f\uff1a</p> <ul> <li>\u5bf9\u4e8e DFA \u4e2d\u7684\u6bcf\u4e00\u4e2a \\(S_i\\stackrel{t}{\\longrightarrow}S_j\\)\uff0c\u6211\u4eec\u4ee4 <code>T[i, t] = sj</code>\uff0c\u5176\u4e2d \\(S_i\\) \u662f\u72b6\u6001 i\uff0ct \u662f\u4e00\u4e2a terminal\uff1b</li> <li>\u5bf9\u4e8e DFA \u4e2d\u7684\u6bcf\u4e00\u4e2a \\(S_i\\stackrel{X}{\\longrightarrow}S_j\\)\uff0c\u6211\u4eec\u4ee4 <code>T[i, X] = gj</code>\uff0c\u5176\u4e2d X \u662f\u4e00\u4e2a non-terminal\uff1b</li> <li>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u89c4\u7ea6\uff08\u5373\u53e5\u70b9\u5728 rhs \u6700\u540e\uff09\u7684 LR(0) item\uff0c\u5bf9\u5176\u6240\u5728\u72b6\u6001 i \u4ee5\u53ca\u6bcf\u4e00\u4e2a terminal t\uff0c\u4ee4 <code>T[i, t] = rk</code>\uff0c\u5176\u4e2d k \u662f LR(0) item \u5bf9\u5e94\u7684 production \u7684\u5e8f\u53f7\u3002</li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5efa\u7acb\u7684\u8868\u4e2d <code>T[1, \"(\"], T[3, \"(\"], T[5, \"(\"]</code> \u8fd9\u4e09\u9879\u88ab\u6807\u7ea2\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u8868\u9879\u4e2d\u6709\u4e0d\u6b62\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u8bf4\u660e\u8fd9\u91cc\u51fa\u73b0\u4e86\u51b2\u7a81\u3002\u8fd9\u4e09\u9879\u5747\u4e3a shift-reduce conflict\u3002\u8fd9\u8bf4\u660e\uff0c\u8fd9\u4e2a\u6587\u6cd5\u5e76\u4e0d\u662f LR(0) \u6587\u6cd5\u3002\uff08\u7531\u6b64\u53ef\u89c1 LR(0) \u6587\u6cd5\u592a\u5f31\uff0c\u4e0d\u662f\u5f88\u6709\u7528\u3002\u4f46\u662f\u8fd9\u4f1a\u4e3a\u540e\u9762\u7684\u6587\u6cd5\u5b66\u4e60\u6253\u4e0b\u57fa\u7840\u3002\uff09</p>"},{"location":"compile_principle/3%20Parsing%20%28II%29/#353-lr0-parsing-table-\u7684\u4f7f\u7528","title":"3.5.3 LR(0) Parsing Table \u7684\u4f7f\u7528","text":"<p>\u8fd9\u91cc\u4f7f\u7528\u7684 LR(0) Parsing Table \u5e94\u5f53\u662f\u4e00\u4e2a\u6ca1\u6709\u51b2\u7a81\u7684\u8868\uff0c\u5373\u5fc5\u987b\u5bf9 LR(0) Parsing Table \u8fdb\u884c\u5206\u6790\u3002</p> <p>\u5728\u4f7f\u7528 LR(0) Parsing Table \u8fdb\u884c\u5206\u6790\u65f6\uff0c\u6211\u4eec\u7ef4\u62a4 2 \u4e2a\u6808\uff0c\u5206\u522b\u5b58\u50a8\u5f53\u524d\u5206\u6790\u7684 token\uff08\u5c31\u50cf 3.4 \u4e2d\u6211\u4eec\u8ba8\u8bba\u7684\u90a3\u6837\uff09\u4ee5\u53ca\u6bcf\u4e2a token \u5bf9\u5e94\u7684\u72b6\u6001\u7f16\u53f7\uff0c\u6211\u4eec\u79f0\u4e3a token \u6808\u548c\u72b6\u6001\u6808\u3002</p> <p>shift \u64cd\u4f5c\u7684\u5b9e\u73b0\u662f\u5341\u5206\u5bb9\u6613\u7406\u89e3\u7684\uff1a\u5c06\u5f53\u524d terminal \u538b\u5165 token \u6808\uff0c\u5c06 \\(s_k\\) \u6307\u793a\u7684\u72b6\u6001 k \u538b\u5165\u72b6\u6001\u6808\u5373\u53ef\u3002\u4f46\u5bf9\u4e8e reduce \u64cd\u4f5c\uff08\u5047\u8bbe\u64cd\u4f5c\u4e3a rj \uff0c\u5bf9\u5e94 production \u4e3a A-&gt;\u03b2\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u9996\u5148\u5c06\u4e24\u4e2a\u6808 pop \u51fa |\u03b2|\uff08\u03b2 \u4e2d token \u7684\u4e2a\u6570\uff09\u9879\uff0c\u7136\u540e\u67e5\u770b pop \u540e \u6808\u9876\u7684\u72b6\u6001 S\uff0c\u67e5\u770b T[S, A] \u7684\u503c\u5373 \\(g_k\\)\uff0c\u7136\u540e\u5c06 A \u538b\u5165 token \u6808\uff0ck \u538b\u5165\u72b6\u6001\u6808\u3002</p> <p>\u5177\u4f53\u7b97\u6cd5\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>\u7f6e ptr \u6307\u5411\u8f93\u5165\u4e32 w \u7684\u7b2c\u4e00\u4e2a\u7b26\u53f7\n\u4ee4 Si \u4e3a\u72b6\u6001\u6808\u9876\u7684\u72b6\u6001\na \u662f ptr \u6307\u5411\u7684\u7b26\u53f7\uff0c\u5373\u5f53\u524d\u8f93\u5165\u7b26\u53f7\nWHILE(1) BEGIN\n  IF T[Si, a] = Sj THEN\n    BEGIN\n      PUSH (j, a)                           // \u5c06 j \u538b\u5165\u72b6\u6001\u6808\uff0c\u5c06 a \u538b\u5165 token \u6808\n      ptr++\n    END\n  ELSE IF T[Si, a] = rj THEN    // rj \u4e3a A-&gt;\u03b2\n    BEGIN\n      pop |\u03b2| times\n      \u82e5\u5f53\u524d\u6808\u9876\u72b6\u6001\u4e3aSk\n      push (T[Sk, A], A)            // \u5982\u679c T[Sk, A] \u4e3a\u7a7a\u4e5f\u5e94\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\n    END\n  ELSE IF T[Si, a] = accept THEN\n    return 0\n  ELSE \n    return -1\nEND\n</code></pre> \u6211\u4eec\u8bf4\u8fd9\u79cd\u5206\u6790\u6cd5\u4e3a LR(0)\uff0c\u662f\u56e0\u4e3a\u6211\u4eec \u5b9e\u9645\u4e0a \u6ca1\u6709\u8fdb\u884c look-ahead\uff08\u867d\u7136\u5728\u4e0a\u8ff0\u7684\u4f2a\u4ee3\u7801\u4e2d\u6211\u4eec\u505a\u4e86\u8fd9\u4ef6\u4e8b\uff09\uff1a\u6240\u6709\u7684 reduce \u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u4e0e\u72b6\u6001\u7ed1\u5b9a\u7684\uff0c\u800c\u4e0d\u662f\u4e0e (\u72b6\u6001, \u8f93\u5165) \u5bf9\u7ed1\u5b9a\u7684\u3002\u56e0\u6b64\u6211\u4eec\u5728\u8bfb\u53d6\u5f53\u524d\u7b26\u53f7\u4e4b\u524d\uff0c\u5c31\u77e5\u9053\u5e94\u8be5 reduce \u8fd8\u662f\u5e94\u8be5 shift \u4e86\uff0c\u800c\u5982\u679c\u662f shift\uff0c\u5219\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8bfb\u5165\u5f53\u524d\u7b26\u53f7\u4ee5\u540e\u518d\u505a\u5224\u65ad\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece\u7406\u8bba\u4e0a\u8bb2\u6211\u4eec\u6ca1\u6709\uff08\u6216\u8005\u8bf4\u4e0d\u5fc5\uff09\u505a\u4efb\u4f55 look-ahead\u3002</p>"},{"location":"compile_principle/3%20Parsing%20%28II%29/#36-slr1-parsing","title":"3.6 SLR(1) Parsing","text":"<p>SLR(1) \u4e2d\u7684 S \u8868\u793a Simple\u3002SLR(1) Parsing \u5728 LR(0) \u7684\u57fa\u7840\u4e0a\u901a\u8fc7\u7b80\u5355\u7684\u5224\u65ad\u5c1d\u8bd5\u89e3\u51b3\u51b2\u7a81\u3002</p> <p>SLR(1) \u5728\u5982 3.5.2 \u90a3\u6837\u751f\u6210\u4e86 LR(0) DFA \u540e\uff0c\u8ba1\u7b97\u6bcf\u4e00\u4e2a non-terminal \u7684 Follow Set\uff0c\u5e76\u6839\u636e\u8fd9\u4e24\u8005\u521b\u5efa SLR(1) \u5206\u6790\u8868\u3002</p> <p>\u6211\u4eec\u7ee7\u7eed\u4f7f\u7528 3.5 \u5c0f\u8282\u7684\u4f8b\u5b50\uff1a<code>S'-&gt;S</code>, <code>S-&gt;(S)S</code>, <code>S-&gt;EPSILON</code>\u3002\u90a3\u4e48\uff0cFOLLOW(S') = {$}\uff0cFOLLOW(S) = {')', $}\u3002</p> <p>\u6211\u4eec\u6784\u5efa SLR(1) \u5206\u6790\u8868\uff0c\u4e0e\u6784\u5efa LR(0) \u5206\u6790\u8868\u975e\u5e38\u76f8\u4f3c\uff1a</p> <ul> <li>\u5bf9\u4e8e DFA \u4e2d\u7684\u6bcf\u4e00\u4e2a \\(S_i\\stackrel{t}{\\longrightarrow}S_j\\)\uff0c\u6211\u4eec\u4ee4 <code>T[i, t] = sj</code>\uff0c\u5176\u4e2d \\(S_i\\) \u662f\u72b6\u6001 i\uff0ct \u662f\u4e00\u4e2a terminal\uff1b</li> <li>\u5bf9\u4e8e DFA \u4e2d\u7684\u6bcf\u4e00\u4e2a \\(S_i\\stackrel{X}{\\longrightarrow}S_j\\)\uff0c\u6211\u4eec\u4ee4 <code>T[i, X] = gj</code>\uff0c\u5176\u4e2d X \u662f\u4e00\u4e2a non-terminal\uff1b</li> <li>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u89c4\u7ea6\u7684 LR(0) item\uff08\u5047\u8bbe\u662f <code>A-&gt;\u03b1.</code>\uff09\uff0c\u5bf9\u5176\u6240\u5728\u72b6\u6001 i \u4ee5\u53ca\u6bcf\u4e00\u4e2a terminal t\uff0c\u5982\u679c t \u2208 FOLLOW(A)\uff0c\u4ee4 <code>T[i, t] = rk</code>\uff0c\u5176\u4e2d k \u662f LR(0) item \u5bf9\u5e94\u7684 production \u7684\u5e8f\u53f7\u3002</li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\uff0cLR(0) \u5bf9\u53ef\u5f52\u7ea6\u9879\u6240\u5728\u72b6\u6001\u7684\u6240\u6709 terminal \u8fdb\u884c reduce\uff0c\u800c SLR(1) \u53ea\u5bf9\u90a3\u4e9b\u4e0b\u4e00\u4e2a\u7b26\u53f7\u5728\u5bf9\u5e94 non-terminal \u7684 Follow Set \u7684\u60c5\u51b5\u8fdb\u884c reduce\u3002</p> <p>\u5bf9\u4e8e\u6211\u4eec\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u5982\u4e0b\u7684 SLR(1) Parsing Table\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5df2\u7ecf\u6d88\u9664\u4e86 conflict\u3002</p> State Input &amp; Shift Goto ( ) $ S 1 s3 r3 r3 g2 2 accept(r1) 3 s3 r3 r3 g4 4 s5 5 s3 r3 r3 g6 6 <p>| r2 | r2 |  |</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0e LR(0) \u4e0d\u540c\u7684\u662f\uff0cSLR(1) \u7684 reduce \u4e0d\u518d\u53ea\u4e0e\u72b6\u6001\u6709\u5173\uff0c\u6211\u4eec\u9700\u8981\u63d0\u524d\u89c2\u770b\u4e0b\u4e00\u4e2a\u7b26\u53f7\u4ece\u800c\u5224\u65ad\u8fdb\u884c\u4ec0\u4e48\u6837\u7684 shift \u6216 reduce \u64cd\u4f5c\u3002</p> <p>\u5982\u679c\u8fd9\u6837\u6784\u9020\u51fa\u7684 SLR(1) Parsing Table \u6ca1\u6709\u542b\u51b2\u7a81\u7684\u8868\u9879\uff0c\u90a3\u4e48\u79f0\u8fd9\u4e2a\u6587\u6cd5\u4e3a SLR(1) Grammar\uff0c\u5426\u5219\u4e0d\u662f\u3002</p> <p>SLR(1) Parsing Table \u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e 3.5.3 \u5b8c\u5168\u4e00\u81f4\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u6837\u7684\u4f2a\u4ee3\u7801\u3002</p>"},{"location":"compile_principle/3%20Parsing%20%28II%29/#37-lr1-parsing","title":"3.7 LR(1) Parsing","text":"<p>LR(1) \u5728 SLR(1) \u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u4f18\u5316\u3002</p> <p>\u6211\u4eec\u5728 3.5.1 \u4e2d\u5b9a\u4e49\u4e86 LR(0) Item\uff0cLR(1) Item \u4e0e\u4e4b\u76f8\u4f3c\u4f46\u66f4\u52a0\u590d\u6742\u3002\u4e00\u4e2a LR(1) Item \u9664\u4e86\u6709 production \u548c rhs position\uff08\u7528\u53e5\u70b9\u8868\u793a\uff09\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a lookahead symbol\u3002\u4f8b\u5982 \\(A\\to \\alpha.\\beta,\\ t\\) \u8868\u793a \\(\\alpha\\) \u5728\u6808\u9876\uff0c\u800c\u4e14\u672a\u6765\u7684\u8f93\u5165\u5c06\u4f1a\u662f \\(\\beta t\\)\u3002\u5bf9 3.5 \u4e2d\u63d0\u51fa\u7684\u4f8b\u5b50\uff0c\u6839\u636e start symbol\uff0c\u8fd9\u91cc\u6709 LR(1) Item <code>S'-&gt;.S, $</code>\u3002</p> <p>LR(1) Item \u5728\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e0b\u5b58\u5728\u8f6c\u5316\uff1a</p> <ul> <li>\\(X\\to.\\alpha\\beta,\\ t\\) \u63a5\u6536 \\(\\alpha\\) \u540e\u5c31\u4f1a\u53d8\u6210 \\(X\\to \\alpha.\\beta , \\ t\\)\uff1b</li> <li>\u5982\u679c\u5b58\u5728 production \\(X\\to \\gamma Y\\omega, Y\\to \\alpha\\beta\\)\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(t_i\\in\\text{First}(\\omega t)\\) (\\(\\omega\\) \u53ef\u4ee5\u4e3a \\(\\epsilon\\))\uff0c\\(X\\to \\gamma .Y\\omega,\\ t\\) \u53ef\u4ee5\u7ecf \\(\\epsilon\\) \u8f6c\u6362\u5230 \\(Y\\to .\\alpha\\beta, \\ t_i\\)\u3002</li> </ul> <p>\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a <pre><code>S'-&gt; S\nS -&gt; aAd\nS -&gt; bBd\nS -&gt; aBe\nS -&gt; bAe\nA -&gt; c\nB -&gt; c\n</code></pre> Start Symbol \u6709 LR(1) Item <code>S'-&gt;.S, $</code>\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7\u6b64\u63a8\u51fa\u5982\u4e0b State 1 \u4e2d\u7684 items\u3002\u5176\u4f59\u63a8\u5bfc\u7565\u540c\uff0c\u4e0b\u9762\u662f LR(1) DFA\uff1a</p> <p></p> <p>\u7531\u6b64\u53ef\u4ee5\u6784\u9020\u51fa LR(1) Parsing Table\uff0c\u5176\u65b9\u5f0f\u662f\uff1a</p> <ul> <li>\u5bf9\u4e8e DFA \u4e2d\u7684\u6bcf\u4e00\u4e2a \\(S_i\\stackrel{t}{\\longrightarrow}S_j\\)\uff0c\u6211\u4eec\u4ee4 <code>T[i, t] = sj</code>\uff0c\u5176\u4e2d \\(S_i\\) \u662f\u72b6\u6001 i\uff0ct \u662f\u4e00\u4e2a terminal\uff1b</li> <li>\u5bf9\u4e8e DFA \u4e2d\u7684\u6bcf\u4e00\u4e2a \\(S_i\\stackrel{X}{\\longrightarrow}S_j\\)\uff0c\u6211\u4eec\u4ee4 <code>T[i, X] = gj</code>\uff0c\u5176\u4e2d X \u662f\u4e00\u4e2a non-terminal\uff1b</li> <li>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u89c4\u7ea6\uff08\u5373\u53e5\u70b9\u5728 rhs \u6700\u540e\uff09\u7684 LR(1) item\uff0c\u5bf9\u5176\u6240\u5728\u72b6\u6001 i \u4ee5\u53ca\u6bcf\u4e00\u4e2a lookahead symbol t\uff0c\u4ee4 <code>T[i, t] = rk</code>\uff0c\u5176\u4e2d k \u662f LR(1) item \u5bf9\u5e94\u7684 production \u7684\u5e8f\u53f7\u3002</li> </ul> <p>\u5982\u679c\u4ee5\u6b64\u6cd5\u6784\u9020\u51fa\u7684 Parsing Table \u6ca1\u6709\u51b2\u7a81\u9879\uff0c\u5219\u8bf4\u660e\u6587\u6cd5\u662f LR(1) \u7684\uff0c\u5426\u5219\u4e0d\u662f\u3002</p>"},{"location":"compile_principle/3%20Parsing%20%28II%29/#38-lalr1-parsing","title":"3.8 LALR(1) Parsing","text":"<p>\u53ef\u4ee5\u770b\u5230\uff0cLR(1) \u7684\u72b6\u6001\u6709\u70b9\u592a\u591a\u4e86\u3002\u5728\u521a\u521a\u63d0\u51fa LR(1) \u7684\u90a3\u4e2a\u5e74\u4ee3\uff0c\u5982\u6b64\u5927\u7684\u7a7a\u95f4\u9700\u6c42\u8fd8\u662f\u4e0d\u592a\u73b0\u5b9e\u7684\u3002\u56e0\u6b64\uff0cLR(1) \u7684\u7b80\u5316\u7248\u672c LALR(1) (Look-Ahead LR(1)) \u88ab\u63d0\u51fa\u4e86\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u6211\u4eec\u5c06\u5176\u5305\u542b\u7684\u6240\u6709 LR(1) items \u7684\u7b2c\u4e00\u4e2a\u5206\u91cf\u7684\u96c6\u5408\u6210\u4e3a\u8fd9\u4e2a\u72b6\u6001\u7684\u6838\u5fc3 (core)\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e 3.7 \u6700\u540e\u4f8b\u5b50\u4e2d\u7684\u72b6\u6001\u56fe\uff0c\u5176\u72b6\u6001 5 \u548c 6 \u7684\u6838\u5fc3\u5747\u4e3a \\(\\{A\\to c., B\\to c.\\}\\)\u3002\u6211\u4eec\u5c06\u8fd9\u6837\u7684\u5177\u6709\u76f8\u540c\u6838\u5fc3\u7684\u72b6\u6001\u8fdb\u884c\u5408\u5e76\uff0c\u901a\u5e38\u80fd\u591f\u51cf\u5c11\u8bb8\u591a\u72b6\u6001\u3002</p> <p>\u4f46\u662f\uff0c\u8fd9\u6709\u65f6\uff08\u867d\u7136\u5f88\u5c11\uff09\u4e5f\u53ef\u80fd\u5f15\u5165 reduce-reduce conflict\uff0c\u4f8b\u5982 3.7 \u6700\u540e\u7684\u4f8b\u5b50\u7684 LALR(1) DFA \u662f\uff1a</p> <p>\u6ce8\u610f\u5230\u5408\u5e76\u540e\u7684\u72b6\u6001 5&amp;6\uff0c\u4f1a\u5b58\u5728 reduce-reduce conflict\u3002\u8fd9\u8bf4\u660e\u8fd9\u4e2a\u6587\u6cd5\u4e0d\u662f LALR(1) \u6587\u6cd5\u3002</p> <p>\u6839\u636e DFA \u53ef\u4ee5\u6784\u9020 LALR(1) Parsing Table\uff0c\u5176\u65b9\u6cd5\u4e0e LR(1) \u5b8c\u5168\u4e00\u81f4\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002\u540c\u6837\u5730\uff0c\u5982\u679c\u6784\u9020\u51fa\u7684 Parsing Table \u6ca1\u6709\u51b2\u7a81\u9879\uff0c\u5219\u8bf4\u660e\u6587\u6cd5\u662f LALR(1) \u7684\uff0c\u5426\u5219\u4e0d\u662f\u3002</p> <p></p>"},{"location":"compile_principle/3%20Parsing%20%28II%29/#39-yacclalr1-\u8bed\u6cd5\u5206\u6790\u5668\u7684\u751f\u6210\u5668","title":"3.9 Yacc\uff1aLALR(1) \u8bed\u6cd5\u5206\u6790\u5668\u7684\u751f\u6210\u5668","text":"<p>\u6211\u4eec\u5728 2.6 Lex\uff1a\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u751f\u6210\u5668 \u4e2d\u5b66\u4e60\u4e86 Lex \u7684\u4f7f\u7528\u3002\u6211\u4eec\u4ece\u672c\u7ae0\u7684\u5b66\u4e60\u4e2d\u53d1\u73b0\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u751f\u6210\u540c\u6837\u662f\u4e00\u4e2a\u76f8\u5f53\u673a\u68b0\u800c\u590d\u6742\u7684\u8fc7\u7a0b\u3002\u56e0\u6b64\u524d\u4eba\u4e5f\u8bbe\u8ba1\u4e86\u751f\u6210 Parser \u7684\u7a0b\u5e8f\uff0c\u8fd9\u91cc\u6211\u4eec\u7528\u5230\u7684\u662f Yacc\u3002</p> <p>Yacc \u9700\u8981\u548c Lex \u7ed3\u5408\u4f7f\u7528\uff0c\u9664\u975e\u6211\u4eec\u5728\u5176\u4e2d\u81ea\u5df1\u7f16\u5199 <code>yylex()</code> \u51fd\u6570\u3002</p>"},{"location":"compile_principle/3%20Parsing%20%28II%29/#\u4e60\u9898","title":"\u4e60\u9898","text":""},{"location":"compile_principle/3%20Parsing%20%28II%29/#lr0--slr1","title":"LR(0) &amp; SLR(1)","text":"<p>Example</p> <p>5.8 Consider the following grammar</p> <p><pre><code>declaration \u2192 type var-list\ntype \u2192 int \n  | float\nvar-list \u2192 identifier, var-list \n    | identifier\n</code></pre> a. Rewrite it in a form more suitable for bottom-up parsing. b. Construct the LR(0) DFA for the rewritten grammar. c. Construct the SLR(1) parsing table for the rewritten grammar.</p> solution <p>a. Add a start symbol and remove the right recursion:</p> <pre><code>S -&gt; declaration\ndeclaration -&gt; type var-list\ntype -&gt; int\ntype -&gt; float\nvar-list -&gt; var-list, identifier\nvar-list -&gt; identifier\n</code></pre> <p>b. The LR(0) NFA is as follows:</p> <p></p> <p>We can simplify the NFA and get the requested DFA:</p> <p>\\(Follow(S) = \\{\\$\\}\\subseteq Follow(declaration)\\subseteq Follow(var\\text-list)\\)</p> <p>\\(First(var\\text-list)=\\{identifier\\}\\subseteq Follow(type)\\)</p> <p>\\(\\{','\\}\\subseteq Follow(var\\text-list)\\)</p> <p>Therefore, the follow set of each non-terminal is:</p> non-terminal S declaration var-list type follow set {$} {$} {',' , $} {identifier} <p>So we can construct the SLR(1) Parsing Table with the DFA and follow sets:  </p> <p>\u611f\u8c22 lt \u5148\u751f\u548c lhm \u5148\u751f\u6307\u51fa\u6587\u6863\u4e2d\u7684\u95ee\u9898QWQ</p>"},{"location":"compile_principle/4%20Semantic%20Analysis/","title":"4 Semantic Analysis | \u8bed\u4e49\u5206\u6790","text":"<p> \u7ea6 3544 \u4e2a\u5b57  108 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>\u670b\u8f88\u8f85\u5b66\u5f55\u64ad\uff1a\u7f16\u8bd1\u539f\u7406\u901f\u6210(4) \u8bed\u4e49\u5206\u6790</p> <p>\u8bed\u4e49\u5206\u6790\u9636\u6bb5\u7684\u4efb\u52a1\u662f\uff1a\u6784\u9020\u7b26\u53f7\u8868\uff0c\u5c06\u53d8\u91cf\u7684\u5b9a\u4e49\u548c\u5b83\u4eec\u7684\u5728\u4f5c\u7528\u57df\u4e2d\u7684\u5404\u4e2a\u4f7f\u7528\u8054\u7cfb\u8d77\u6765\uff0c\u5728\u8868\u8fbe\u5f0f\u4e2d\u8fdb\u884c\u7c7b\u578b\u63a8\u65ad\u548c\u7c7b\u578b\u68c0\u67e5\u4ee5\u4fdd\u8bc1\u5176\u6b63\u786e\u6027\u7b49\u3002</p> <p>\u6211\u4eec\u8fd9\u91cc\u63d0\u5230\u7684\u8bed\u4e49\u5206\u6790\u662f \u9759\u6001\u8bed\u4e49\u5206\u6790\uff0c\u5373\u5bf9\u4e0a\u8ff0\u5185\u5bb9\u7684\u68c0\u67e5\uff0c\u800c\u4e0d\u5305\u542b\u53ef\u80fd\u7684\u903b\u8f91\u9519\u8bef\uff0c\u5982\u6b7b\u5faa\u73af\u3001\u9664\u4ee5 0 \u7b49\u60c5\u51b5\u3002</p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#41-\u5c5e\u6027\u6587\u6cd5-\u76f8\u5173\u4f9d\u8d56\u56fe","title":"4.1 \u5c5e\u6027\u6587\u6cd5 \u76f8\u5173\u4f9d\u8d56\u56fe","text":""},{"location":"compile_principle/4%20Semantic%20Analysis/#411-\u5c5e\u6027--binding","title":"4.1.1 \u5c5e\u6027 &amp; binding","text":"<p>\u5c5e\u6027 (attributes) \u5305\u62ec\u7f16\u7a0b\u8bed\u8a00\u7ec4\u4ef6\u7684\u4efb\u610f\u7279\u6027\u3002\u4f8b\u5982\uff0c\u6807\u8bc6\u7b26\u7684\u5c5e\u6027\u5c31\u5305\u62ec\u5176\u79cd\u5c5e\uff08\u53d8\u91cf\u3001\u6570\u7ec4\u3001\u51fd\u6570\u540d\u7b49\u7b49\uff09\u3001\u6570\u636e\u7c7b\u578b\u3001\u5b58\u50a8\u4f4d\u7f6e\u3001\u957f\u5ea6\u3001\u503c\u3001\u4f5c\u7528\u57df\u7b49\u3002</p> <p>\u5c5e\u6027\u7684\u786e\u5b9a\u65f6\u95f4\u662f\u6709\u591a\u79cd\u53ef\u80fd\u7684\u3002\u5c5e\u6027\u503c\u7684\u8ba1\u7b97\u4ee5\u53ca\u5c06\u8ba1\u7b97\u51fa\u6765\u7684\u503c\u4e0e\u76f8\u5173\u7684\u8bed\u8a00\u7ed3\u6784\u8fdb\u884c\u8054\u7cfb\u7684\u8fc7\u7a0b\u79f0\u4e3a\u5c5e\u6027\u7684 binding\uff0c\u53d1\u751f\u7684\u65f6\u95f4\u79f0\u4e3a binding time\u3002\u5728\u7a0b\u5e8f\u6267\u884c\u4e4b\u524d\u5c31\u8fdb\u884c binding \u7684\u5c5e\u6027\u79f0\u4e3a static attributes\uff1b\u5728\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\u4e2d\u624d\u8fdb\u884c binding \u7684\u5c5e\u6027\u79f0\u4e3a dynamic attributes\u3002</p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#412-\u8bed\u4e49\u89c4\u5219--\u5c5e\u6027\u6587\u6cd5","title":"4.1.2 \u8bed\u4e49\u89c4\u5219 &amp; \u5c5e\u6027\u6587\u6cd5","text":"<p>\u5c5e\u6027\u6587\u6cd5\u5bf9\u6587\u6cd5\u7684\u6bcf\u4e00\u4e2a\u4ea7\u751f\u5f0f\u90fd\u914d\u5907\u4e86\u4e00\u7ec4\u5c5e\u6027\u7684 \u5c5e\u6027\u7b49\u5f0f\uff08attribute equation\uff0c\u6216\u79f0 \u8bed\u4e49\u89c4\u5219 semantic rule\uff09\uff0c\u5bf9\u5c5e\u6027\u8fdb\u884c\u8ba1\u7b97\u548c\u4f20\u9012\u3002</p> <p>\u4f8b 1</p> <p>\u4f8b\u5982\uff0c\u770b\u4e0b\u5217\u7b80\u5355\u7684\u6574\u6570\u7b97\u672f\u8868\u8fbe\u5f0f\u6587\u6cd5\uff1a</p> <p></p> <p>\u5b83\u7684\u5c5e\u6027\u6587\u6cd5\u662f\uff1a</p> <p></p> <p>\u5176\u4e2d <code>val</code> \u5373\u4e3a\u4e00\u4e2a\u5c5e\u6027\uff0c\u8868\u793a <code>factor</code>, <code>exp</code>, <code>term</code>, <code>number</code> \u7684\u6570\u5b57\u503c\u3002\u9700\u8981\u6ce8\u610f\u7684\u6709\u5982\u4e0b\u51e0\u70b9\uff1a</p> <ul> <li>\u5728\u7b2c\u4e00\u5bf9\u6587\u6cd5\u89c4\u5219\u548c\u5bf9\u5e94\u7684\u8bed\u4e49\u89c4\u5219\uff08\u5982\u4e0b\u56fe\uff09\u4e2d\uff0c\u4e24\u4e2a + \u7684\u542b\u4e49\u4e0d\u5c3d\u76f8\u540c\u3002\u6587\u6cd5\u89c4\u5219\u4e2d\uff0c+ \u53ea\u662f\u4e00\u4e2a\u8bed\u4e49\u7b26\u53f7\uff0c\u800c\u8bed\u4e49\u89c4\u5219\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u7b97\u672f\u52a0\u8fd0\u7b97\u7b26\u3002\u5bf9\u4e8e\u5176\u4ed6\u7684\u8bed\u4e49\u89c4\u5219\u4e5f\u540c\u7406\u3002</li> </ul> <p></p> <ul> <li>\u540c\u6837\u5728\u8fd9\u5bf9\u6587\u6cd5\u89c4\u5219\u4e2d\uff0c\u6211\u4eec\u5bf9 <code>exp</code> \u7684\u4e24\u6b21\u51fa\u73b0\u8fdb\u884c\u4e86\u7f16\u53f7\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e24\u4e2a <code>exp</code> \u5e76\u975e\u540c\u4e00\u4e2a\uff0c\u56e0\u6b64\u4e5f\u5177\u6709\u4e0d\u4e00\u6837\u7684\u503c\uff0c\u9700\u8981\u5728\u6b64\u8fdb\u884c\u533a\u5206\u3002</li> <li><code>number</code> \u6ca1\u6709\u51fa\u73b0\u5728\u7b49\u5f0f\u7684\u5de6\u8fb9\u8fc7\uff0c\u8fd9\u8bf4\u660e\u6211\u4eec\u9700\u8981\u5728\u4efb\u610f\u4e00\u4e2a\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u6587\u6cd5\u7684\u8bed\u4e49\u5206\u6790\u524d\u8ba1\u7b97 <code>number.val</code>\u3002</li> </ul>"},{"location":"compile_principle/4%20Semantic%20Analysis/#413-\u76f8\u5173\u4f9d\u8d56\u56fe","title":"4.1.3 \u76f8\u5173\u4f9d\u8d56\u56fe","text":"<p>\u6211\u4eec\u9700\u8981\u8003\u8651\u7684\u662f\uff0c\u5728\u8fdb\u884c\u8bed\u4e49\u89c4\u5219\u4e2d\u7684\u8d4b\u503c\u64cd\u4f5c\u4e4b\u524d\uff0c\u8d4b\u503c\u7b26\u53f7\u53f3\u8fb9\u6240\u7528\u5230\u7684\u6240\u6709\u503c\u5e94\u5f53\u662f\u5df2\u7ecf\u5b58\u5728\u4e14\u6709\u6548\u7684\uff1b\u8fd9\u4e00\u8981\u6c42\u5728\u8bed\u4e49\u89c4\u5219\u4e2d\u5e76\u6ca1\u6709\u5f88\u597d\u5730\u4f53\u73b0\u51fa\u6765\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5c5e\u6027\u7684\u8d4b\u503c\u5bfb\u627e\u4e00\u4e2a\u987a\u5e8f\u3002</p> <p>\u6bcf\u4e00\u4e2a\u8d4b\u503c\u8bed\u53e5\u672c\u8eab\u6307\u660e\u4e86\u4e00\u4e2a\u8fd0\u7b97\u65f6\u7684\u987a\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a \u76f8\u5173\u4f9d\u8d56\u56fe (Associated Dependency Graph) \u6765\u6307\u793a\u6bcf\u4e00\u4e2a\u6587\u6cd5\u89c4\u5219\u7684\u4f9d\u8d56\u5173\u7cfb\u3002</p> <p>\u4f8b 2</p> <p>\u4f8b\u5982\u5bf9\u4e8e\u6587\u6cd5\u89c4\u5219 number1 \u2192 number2 digit \uff0c\u5176\u5bf9\u5e94\u7684\u8bed\u4e49\u89c4\u5219\u53ea\u6709\u4e00\u6761 number1.val = number2.val * 10 +  digit.val \uff0c\u5219\u4f9d\u8d56\u56fe\u4e3a\uff1a</p> <p></p> <p>\u5373\uff0c\u6211\u4eec\u4f7f\u7528\u7bad\u5934\u6765\u8868\u5f81\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb\u3002\u7bad\u5934\u6240\u6307\u7684\u5c5e\u6027\u5e94\u5f53 \u540e\u4e8e \u7bad\u5934\u51fa\u53d1\u7684\u5c5e\u6027\u88ab\u8ba1\u7b97\u3002</p> <p>\u7531\u4e8e\u56fe\u5f62\u5316\u8868\u793a\u53ef\u4ee5\u533a\u5206\u540c\u4e00 token \u7684\u4e0d\u540c\u51fa\u73b0\uff0c\u6211\u4eec\u5bf9\u4e8e\u91cd\u590d\u7684\u7b26\u53f7\u53ef\u4ee5\u7701\u7565\u4e0b\u6807\u3002</p> <p>\u5982\u679c\u7ed3\u5408  number \u2192 digit \u8fd9\u4e00\u89c4\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>345</code> \u7684\u8bed\u6cd5\u6811\u548c\u76f8\u5173\u56fe\uff1a</p> <p></p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#414-\u5c06\u8bed\u6cd5\u6811\u548c\u76f8\u5173\u56fe\u7ed3\u5408\u8d77\u6765","title":"4.1.4 \u5c06\u8bed\u6cd5\u6811\u548c\u76f8\u5173\u56fe\u7ed3\u5408\u8d77\u6765","text":"<p>\u4f8b 3</p> <p>\u8bed\u4e49\u89c4\u5219\u4e0e\u6587\u6cd5\u89c4\u5219\u5728\u5f62\u5f0f\u4e0a\u4e0d\u4e00\u5b9a\u5341\u5206\u76f8\u4f3c\u3002\u8003\u8651\u4e0b\u9762\u8fd9\u4e2a\u53d8\u91cf\u58f0\u660e\u7684\u7b80\u5355\u6587\u6cd5\uff1a</p> <p></p> <p>\u5176\u5c5e\u6027\u6587\u6cd5\u662f\uff1a</p> <p></p> <p>\u8fd9\u91cc\u5c5e\u6027 <code>dtype</code> \u662f\u53d8\u91cf\u6216\u8005\u53d8\u91cf\u5217\u8868\u7684\u6570\u636e\u7c7b\u578b\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u7b2c\u4e00\u6761\u6587\u6cd5\u89c4\u5219\u4e2d\uff0c<code>decl</code> \u5e76\u6ca1\u6709\u51fa\u73b0\u5728\u5bf9\u5e94\u7684\u8bed\u4e49\u89c4\u5219\u4e2d\uff1b\u800c\u5012\u6570\u7b2c\u4e8c\u6761\u6587\u6cd5\u89c4\u5219\u5219\u5bf9\u5e94\u4e86\u4e24\u6761\u8bed\u4e49\u89c4\u5219\u3002</p> <p>\u6211\u4eec\u7ee7\u7eed\u57fa\u4e8e\u8fd9\u4e2a\u6587\u6cd5\u8003\u8651\u5176\u4f9d\u8d56\u5173\u7cfb\u3002\u6ce8\u610f\u5012\u6570\u7b2c\u4e8c\u6761\u6587\u6cd5\u89c4\u5219\uff0c\u5176\u5bf9\u5e94\u7684\u76f8\u5173\u56fe\u662f\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u76f8\u5173\u56fe\u4e0e\u4f8b 2 \u4e2d\u7684\u76f8\u5173\u56fe\u7684\u7bad\u5934\u65b9\u5411\u76f8\u53cd\uff0c\u56e0\u4e3a\u4f8b 2 \u4e2d\u7684\u5c5e\u6027\u662f\u4ece lhs \u5411 rhs \u4f20\u9012\u7684\uff0c\u800c\u8fd9\u91cc\u76f8\u53cd\u3002</p> <p>\u53e6\u5916\uff0c\u7b2c\u4e00\u6761\u6587\u6cd5\u89c4\u5219\u5bf9\u5e94\u7684\u8bed\u4e49\u89c4\u5219\u4e2d\u6ca1\u6709\u51fa\u73b0 <code>decl</code>\uff0c\u4f46\u662f\u6211\u4eec\u4ecd\u7136\u8981\u5c06\u5176\u8868\u793a\u5728\u76f8\u5173\u56fe\u4e2d\uff0c\u4ece\u800c\u4fdd\u8bc1\u6587\u6cd5\u89c4\u5219\u5728\u4e0a\u9762\u5f97\u5230\u5b8c\u6574\u4f53\u73b0\u3002\u56e0\u4e3a\u8fd9\u4e00\u8003\u8651\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u5728\u8bed\u6cd5\u6811\u4e0a\u7ed8\u5236\u76f8\u5173\u56fe\u3002\u8fd9\u4e2a\u6587\u6cd5\u89c4\u5219\u7684\u8bed\u6cd5\u6811\u7247\u6bb5\u4ee5\u53ca\u5728\u5176\u4e0a\u7ed8\u5236\u7684\u76f8\u5173\u56fe\u4e3a\uff1a</p> <p></p> <p>\u5b9e\u9645\u4e0a\uff0c\u8fd9\u91cc\u7684\u865a\u7ebf\u662f\u8bed\u6cd5\u6811\u7684\u6784\u6210\u90e8\u5206\uff0c\u800c\u7bad\u5934\u624d\u8868\u793a\u4f9d\u8d56\u5173\u7cfb\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e0d\u4f7f\u7528 <code>.</code> \u6765\u6807\u8bc6\u5c5e\u6027\u548c\u8bed\u6cd5\u6811\u7ed3\u70b9\u7684\u4ece\u5c5e\u5173\u7cfb\uff0c\u800c\u662f\u5c06\u5bf9\u5e94\u7684\u5c5e\u6027\u5199\u5728\u76f8\u5173\u7ed3\u70b9\u7684\u65c1\u8fb9\u3002</p> <p>\u8fd9\u6837\uff0c\u5012\u6570\u7b2c\u4e8c\u6761\u6587\u6cd5\u89c4\u5219\u7684\u76f8\u5173\u56fe\u753b\u4e3a\uff1a</p> <p></p> <p>\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5b57\u7b26\u4e32 <code>float x, y</code> \u7684\u76f8\u5173\u56fe\u662f\uff1a</p> <p></p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#415-\u8003\u8651\u591a\u4e2a\u5c5e\u6027\u7684\u60c5\u51b5--\u5143\u8bed\u8a00","title":"4.1.5 \u8003\u8651\u591a\u4e2a\u5c5e\u6027\u7684\u60c5\u51b5 &amp; \u5143\u8bed\u8a00","text":"<p>\u4f8b 4</p> <p>\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u8868\u793a 8 \u8fdb\u5236\u6216 10 \u8fdb\u5236\u6570\u7684\u6587\u6cd5\u3002\u6211\u4eec\u7528\u540e\u7f00 o \u8868\u793a\u8fd9\u4e2a\u6570\u662f 8 \u8fdb\u5236\u6570\uff0c\u540e\u7f00 d \u8868\u793a\u8fd9\u4e2a\u6570\u662f 10 \u8fdb\u5236\u6570\u3002\u8fd9\u4e2a\u6587\u6cd5\u662f\uff1a</p> <p></p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f62\u5982 <code>189o</code> \u7684\u6570\u662f\u53ef\u4ee5\u88ab\u8fd9\u4e2a\u6587\u6cd5\u63a5\u53d7\u7684\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a 8 \u8fdb\u5236\u6570\u91cd\u4e0d\u5e94\u5f53\u5305\u542b\u6570\u5b57 8 \u6216 9\u3002\u6211\u4eec\u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u8bbe\u8ba1\u8fd9\u4e2a\u6587\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u7ed3\u679c\u662f\u590d\u6742\u7684\u3002\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u8bed\u4e49\u5206\u6790\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5176\u5bf9\u5e94\u7684\u5c5e\u6027\u6587\u6cd5\u662f\uff1a</p> <p></p> <p>\u8fd9\u91cc\u4f7f\u7528\u5230\u4e86 <code>if...then...else...</code> \u8868\u8fbe\u5f0f\uff0c\u5176\u542b\u4e49\u662f\u6e05\u6670\u7684\u3002</p> <p>\u5728\u5c5e\u6027\u6587\u6cd5\u4e2d\uff0c\u5982\u6211\u4eec\u4e4b\u524d\u7528\u5230\u7684\u7b97\u672f\u8868\u8fbe\u5f0f\u4ee5\u53ca <code>if...then...else...</code> \u8868\u8fbe\u5f0f\u7b49\u5141\u8bb8\u51fa\u73b0\u7684\u8868\u8fbe\u5f0f\u7684\u96c6\u5408\u79f0\u4f5c\u5c5e\u6027\u6587\u6cd5\u7684 \u5143\u8bed\u8a00 (meta-language)\u3002\u901a\u5e38\u6211\u4eec\u5e0c\u671b\u5143\u8bed\u8a00\u7684\u5185\u6db5\u5c3d\u53ef\u80fd\u6e05\u6670\uff0c\u4e0d\u81f4\u4e8e\u5f15\u8d77\u5176\u81ea\u8eab\u8bed\u4e49\u7684\u6df7\u6dc6\u3002\u6211\u4eec\u8fd8\u5e0c\u671b\u5143\u8bed\u8a00\u63a5\u8fd1\u4e8e\u4e00\u79cd\u5b9e\u9645\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u56e0\u4e3a\u5728\u8bed\u4e49\u5206\u6790\u7a0b\u5e8f\u4e2d\u9700\u8981\u628a\u5c5e\u6027\u7b49\u5f0f\u8f6c\u6362\u6210\u6267\u884c\u4ee3\u7801\u3002\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5728\u5143\u8bed\u8a00\u4e2d\u589e\u52a0\u51fd\u6570\uff0c\u56e0\u4e3a\u8fd9\u4e5f\u53ef\u4ee5\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7b80\u5355\u5730\u5b9e\u73b0\u3002</p> <p>\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u6587\u6cd5\u7684\u76f8\u5173\u56fe\u3002\u7b2c\u4e00\u6761\u6587\u6cd5\u89c4\u5219\u5bf9\u5e94\u7684\u76f8\u5173\u56fe\u4e3a\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u76f8\u5173\u56fe\u540c\u65f6\u8868\u793a\u4e86\u4e24\u79cd\u5c5e\u6027\u7684\u4f9d\u8d56\u5173\u7cfb\u3002</p> <p>\u6587\u6cd5\u89c4\u5219 num -&gt; num digit \u7684\u76f8\u5173\u56fe\u4e3a\uff1a</p> <p></p> <p>\u5176\u4ed6\u6587\u6cd5\u89c4\u5219\u7c7b\u4f3c\u3002\u6700\u7ec8\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\u5b57\u7b26\u4e32 <code>345o</code> \u7684\u76f8\u5173\u56fe\uff1a</p> <p></p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#42-\u5c5e\u6027\u8ba1\u7b97\u7b97\u6cd5","title":"4.2 \u5c5e\u6027\u8ba1\u7b97\u7b97\u6cd5","text":""},{"location":"compile_principle/4%20Semantic%20Analysis/#421-\u76f8\u5173\u56fe\u7684\u8d4b\u503c\u987a\u5e8f","title":"4.2.1 \u76f8\u5173\u56fe\u7684\u8d4b\u503c\u987a\u5e8f","text":"<p>\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u8ba1\u7b97\u987a\u5e8f\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u627e\u5230\u5bf9\u5e94\u76f8\u5173\u56fe\u7684\u62d3\u6251\u5e8f\u3002\u76f8\u5173\u56fe\u6709\u62d3\u6251\u5e8f\u7684\u524d\u63d0\u662f\u5b83\u662f\u65e0\u5708\u7684 (Acyclic)\u3002\u62d3\u6251\u5e8f\u7684\u5b9a\u4e49\u4ee5\u53ca\u8ba1\u7b97\u7b97\u6cd5\u5728 \u56fe\u8bba | Graph Theory \u53ef\u4ee5\u627e\u5230\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u6ca1\u6709\u5165\u5ea6\u7684\u7ed3\u70b9\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u76f4\u63a5\u53ef\u7528\u7684\u4fe1\u606f\u3002\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u6765\u81ea\u8bcd\u6cd5\u5206\u6790\u6216\u8005\u8bed\u6cd5\u5206\u6790\u9636\u6bb5\u3002 </p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#422-\u5408\u6210\u5c5e\u6027--s-\u5c5e\u6027\u6587\u6cd5","title":"4.2.2 \u5408\u6210\u5c5e\u6027 &amp; S \u5c5e\u6027\u6587\u6cd5","text":"<p>\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u662f \u5408\u6210 (synthesized) \u7684\uff0c\u5982\u679c\u5728\u8bed\u6cd5\u6811\u4e2d\u5b83\u6240\u6709\u7684\u76f8\u5173\u90fd\u4ece\u5b50\u7ed3\u70b9\u6307\u5411\u7236\u7ed3\u70b9\u3002\u5373\uff0c\u6bcf\u4e00\u4e2a\u6587\u6cd5\u89c4\u5219\u4e2d\uff0c\u5173\u4e8e\u8fd9\u4e2a\u5c5e\u6027\u7684\u8bed\u4e49\u89c4\u5219\u90fd\u662f rhs \u51b3\u5b9a lhs\u3002</p> <p>\u6211\u4eec\u79f0\u4e00\u4e2a\u5c5e\u6027\u6587\u6cd5\u4e3a S \u5c5e\u6027\u6587\u6cd5 (S-attribute grammar)\uff0c\u5982\u679c\u5b83\u7684\u6240\u6709\u5c5e\u6027\u90fd\u662f\u5408\u6210\u5c5e\u6027\u3002</p> <p>S \u5c5e\u6027\u6587\u6cd5\u7684\u76f8\u5173\u56fe\u662f\u4e00\u4e2a\u5c5e\u6027\u503c\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u81ea\u5e95\u5411\u4e0a\u6216\u8005\u540e\u5e8f\u904d\u5386\u5b9e\u73b0\u3002\u5373\uff1a <pre><code>void PostEvaluate(treeNode T) {\nfor T \u7684\u6bcf\u4e00\u4e2a\u5b50\u7ed3\u70b9 C\nPostEvaluate(C);\n\n\u8ba1\u7b97 T \u7684\u503c;\n}\n</code></pre></p> <p>\u4f8b 1 cont.</p> <p>\u6211\u4eec\u8003\u8651 4.1 \u4e2d\u4f8b 1 \u7684\u6587\u6cd5\uff1a</p> <p></p> <p>\u8fd9\u91cc\u5c5e\u6027 <code>val</code> \u662f\u4e00\u4e2a\u5408\u6210\u5c5e\u6027\u3002</p> <p>\u6211\u4eec\u5982\u679c\u7ed9\u51fa\u5982\u4e0b\u5f62\u5f0f\u7684\u8bed\u6cd5\u6811\u7ed3\u6784\uff1a <pre><code>typedef enum { Plus, Minus, Times } OpKind;\ntypedef enum { OpKind, ConstKind } ExpKind;\ntypedef struct streenode { ExpKind kind;\nOpKind op;\nstruct streenode *lchild, *rchild;\nint val;\n} STreeNode;\ntypedef STreeNode *SyntaxTree;\n</code></pre> \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u5f62\u5f0f\u7684\u9012\u5f52\u7684\u8ba1\u7b97\u51fd\u6570\uff1a <pre><code>void postEval(SyntaxTree t) { int temp;\nif (t-&gt;kind == OpKind) { postEval(t-&gt;lchild);\npostEval(t-&gt;rchild);\nswitch (t-&gt;op) { case Plus:\nt-&gt;val = t-&gt;lchild-&gt;val + t-&gt;rchild-&gt;val;\nbreak;\n\ncase Minus:\nt-&gt;val = t-&gt;lchild-&gt;val - t-&gt;rchild-&gt;val;\nbreak;\n\ncase Times:\nt-&gt;val = t-&gt;lchild-&gt;val * t-&gt;rchild-&gt;val;\nbreak;\n} /* end switch */\n} /* end if */\nelse {\n...\n}\n} /* end postEval */\n</code></pre> \u8fd9\u91cc\u5f53\u6811\u7ed3\u70b9\u7c7b\u578b\u4e3a <code>OpKind</code> \uff0c\u5373\u7b97\u672f\u8ba1\u7b97\u5f0f\u65f6\uff0c\u7b2c 4 \u884c\u548c\u7b2c 5 \u884c\u9996\u5148\u8ba1\u7b97\u4e86\u5b50\u7ed3\u70b9\u7684\u503c\uff0c\u5176\u6b21\u5728 switch \u4e2d\u8ba1\u7b97\u4e86\u8be5\u7ed3\u70b9\u7684\u503c\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u540e\u5e8f\u904d\u5386\u7684\u5b9e\u73b0\u3002</p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#423-\u7ee7\u627f\u5c5e\u6027","title":"4.2.3 \u7ee7\u627f\u5c5e\u6027","text":"<p>\u5982\u679c\u4e00\u4e2a\u5c5e\u6027\u4e0d\u662f\u5408\u6210\u7684\uff0c\u6211\u4eec\u79f0\u5b83\u662f \u7ee7\u627f (inherited) \u5c5e\u6027\u3002\u7ee7\u627f\u4f9d\u8d56\u53ef\u80fd\u6709\u591a\u79cd\u5f62\u5f0f\uff1a</p> <p></p> <p>\u4e0a\u56fe\u4e2d c) \u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u6211\u4eec\u4f7f\u7528 First Child Next Sibling \u65b9\u6cd5\u6784\u9020\u8bed\u6cd5\u6811\u7684\u60c5\u51b5\uff08\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6587\u6863\u91cc\u6811\u57fa\u7840 | Tree Basic \u770b\u5230\u8fd9\u4e00\u65b9\u6cd5\u7684\u542b\u4e49\uff09\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u8fd8\u4f1a\u770b\u5230\u5176\u4ed6\u7684\u60c5\u51b5\u3002</p> <p>\u7ee7\u627f\u5c5e\u6027\u7684\u8ba1\u7b97\u53ef\u4ee5\u901a\u8fc7\u5bf9\u5206\u6790\u6811\u6216\u8bed\u6cd5\u6811\u7684\u524d\u5e8f\u904d\u5386\u6216\u524d\u5e8f/\u4e2d\u5e8f\u904d\u5386\u7684\u7ec4\u5408\u6765\u8fdb\u884c\u3002\u4e0e\u5408\u6210\u5c5e\u6027\u4e0d\u540c\uff0c\u5b50\u5b59\u7ee7\u627f\u5c5e\u6027\u8ba1\u7b97\u7684\u987a\u5e8f\u662f\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5728\u5b50\u5b59\u7684\u5c5e\u6027\u4e2d\u7ee7\u627f\u5c5e\u6027\u53ef\u80fd\u6709\u4f9d\u8d56\u5173\u7cfb\u3002  </p> <p>\u4f8b 3 cont.</p> <p>\u6211\u4eec\u8003\u8651 4.1 \u4e2d\u4f8b 3 \u7684\u6587\u6cd5\uff1a</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u4ee3\u7801\u5b9e\u73b0\u5c5e\u6027\u7684\u8ba1\u7b97\uff0c\u8fd9\u91cc\u7684\u6811\u901a\u8fc7 <code>child[]</code> \u6570\u7ec4\u4fdd\u5b58\u6307\u5411\u5b50\u7ed3\u70b9\u7684\u6307\u9488\uff1a <pre><code>void evalType(treeNode T) {\nswitch (T-&gt;kind) {\ncase decl:  // \u8fd9\u662f\u4e00\u4e2a\u4e2d\u5e8f\u7684\u4f8b\u5b50\n// \u8ba1\u7b97\u7b2c\u4e00\u4e2a\u5b50\u7ed3\u70b9 'type'\nevalType(T-&gt;child[0]);  // \u5c06 'type' \u7684 dtype \u8d4b\u503c\u7ed9 'var-list'\nT-&gt;child[1]-&gt;dtype = T-&gt;child[0]-&gt;dtype;\n// \u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u5b50\u7ed3\u70b9 'var-list'\nevalType(T-&gt;child[1]);\nbreak;\n\ncase type:  // \u6839\u636e\u5b50\u7ed3\u70b9\u662f int \u8fd8\u662f float \u51b3\u5b9a 'type' \u7ed3\u70b9\u7684 dtype\nT-&gt;dtype = T-&gt;child[0]-&gt;dtype;\nbreak;\n\ncase var-list:  // \u8fd9\u662f\u4e00\u4e2a\u524d\u5e8f\u7684\u4f8b\u5b50\n// \u5c06 'var-list' \u7684 dtype \u8d4b\u503c\u7ed9 'id'\nT-&gt;child[0]-&gt;dtype = T-&gt;dtype;\n// \u5982\u679c\u7b2c\u4e09\u4e2a\u5b50\u7ed3\u70b9 'var-list2' \u4e0d\u4e3a NULL\uff0c\n// \u5c06 'var-list' \u7684 dtype \u8d4b\u503c\u7ed9\u5b83\uff0c\u5e76\u8fdb\u5165\u8ba1\u7b97\u4e4b\nif (T-&gt;child[2]) {\nT-&gt;child[2]-&gt;dtype = T-&gt;dtype;\nevalType(T-&gt;child[2]);\n}\nbreak;\n} // end of switch\n}\n</code></pre></p> <p></p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u8003\u8651\u901a\u8fc7\u5b58\u50a8 sibling \u7684\u65b9\u5f0f\u6765\u5b58\u50a8\u4e00\u4e32 id \u7ed3\u70b9\uff1a <pre><code>typedef enum { decl, type, id } nodekind;\ntypedef enum { integer, real } typekind;\ntypedef struct treeNode { nodekind kind;\nstruct treeNode *lchild, *rchild;   /* for decl nodes only */\nstruct treeNode *sibling;           /* for id nodes only */\ntypekind dtype;                     /* for type and id nodes */\nchar *name;                         /* for id nodes only */\n} * SyntaxTree;\n</code></pre> \u5bf9\u5e94\u7684 <code>evalType</code> \u51fd\u6570\u4e3a\uff1a <pre><code>void evalType(SyntaxTree t) { switch (t-&gt;kind) { case decl:\n// id.dtype = type.dtype\nt-&gt;rchild-&gt;dtype = t-&gt;lchild-&gt;dtype;\nevalType(t-&gt;rchild);\nbreak;\ncase id:\nif (t-&gt;sibling != NULL) { // id.next.dtype = id.dtype\nt-&gt;sibling-&gt;dtype = t-&gt;dtype;\nevalType(t-&gt;sibling);\n}\nbreak;\n} /* end switch */\n} /* end evalType */\n</code></pre> \u4e5f\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a <pre><code>void evalType(SyntaxTree t) { if (t-&gt;kind == decl) {\n// id.dtype = type.dtype\nSyntaxTree temp = t-&gt;rchild;\ntemp-&gt;dtype = t-&gt;lchild-&gt;dtype;\n\nwhile (temp-&gt;sibling) {\ntemp-&gt;sibling-&gt;dtype = temp-&gt;dtype;\ntemp = temp-&gt;sibling;\n}\n}\n} /* end evalType */\n</code></pre></p> <p>\u5982\u679c\u5408\u6210\u5c5e\u6027\u4f9d\u8d56\u4e8e\u7ee7\u627f\u5c5e\u6027\uff08\u53ca\u5176\u4ed6\u5408\u6210\u5c5e\u6027\uff09\uff0c\u4f46\u7ee7\u627f\u5c5e\u6027\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u5408\u6210\u5c5e\u6027\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u5728\u5206\u6790\u6811\u6216\u8bed\u6cd5\u6811\u7684\u4e00\u904d\u904d\u5386\u4e2d\u8ba1\u7b97\u6240\u6709\u7684\u5c5e\u6027\u3002  </p> <p>\u7ee7\u627f\u5c5e\u6027\u4f9d\u8d56\u4e8e\u5408\u6210\u5c5e\u6027\u7684\u60c5\u5f62\u66f4\u52a0\u590d\u6742\uff0c\u9700\u8981\u5bf9\u5206\u6790\u6811\u6216\u8bed\u6cd5\u6811\u8fdb\u884c\u591a\u904d\u904d\u5386\u3002\uff08\u4f8b 6.14\uff09</p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#424-\u8bed\u6cd5\u5206\u6790\u65f6\u5c5e\u6027\u7684\u8ba1\u7b97","title":"4.2.4 \u8bed\u6cd5\u5206\u6790\u65f6\u5c5e\u6027\u7684\u8ba1\u7b97","text":"<p>\u4ee5\u524d\u6027\u80fd\u6709\u9650\u7684\u65f6\u5019\u4eba\u4eec\u5e0c\u671b\u80fd\u5728\u8bed\u6cd5\u5206\u6790\u7684\u8fc7\u7a0b\u4e2d\u5c31\u5b8c\u6210\u4e00\u4e9b\u5c5e\u6027\u8ba1\u7b97\uff1b\u73b0\u5728\u867d\u7136\u4e0d\u9700\u8981\u4e86\u4f46\u662f\u8fd8\u662f\u8981\u5b66\u4e00\u5b66\u3002</p> <p>\u6211\u4eec\u7684\u8bed\u6cd5\u5206\u6790\u65b9\u6cd5\u90fd\u662f\u4ece\u5de6\u5411\u53f3\u5904\u7406\u7684\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5728\u8bed\u6cd5\u5206\u6790\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u4e00\u4e9b\u5c5e\u6027\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5c5e\u6027\u4e00\u5b9a\u4e0d\u53ef\u4ee5\u6709\u5411\u53f3\u7684\u4f9d\u8d56\u3002\u4f8b\u5982\u5bf9\u4e8e <code>A-&gt;XY</code>\uff0c<code>Y</code>\u53ef\u4ee5\u4f9d\u8d56 <code>A</code> \u4e5f\u53ef\u4ee5\u4f9d\u8d56 <code>X</code>\uff0c\u4f46\u662f <code>X</code> \u4e0d\u80fd\u4f9d\u8d56 <code>Y</code>\u3002\u4f8b 4 \u4e2d\u7684\u6587\u6cd5\u5c31\u4e0d\u6ee1\u8db3\u8fd9\u4e00\u6027\u8d28\u3002</p> <p>\u6211\u4eec\u5b9a\u4e49\u6ee1\u8db3\u8fd9\u4e00\u6027\u8d28\u7684\u5c5e\u6027\u6587\u6cd5\u4e3a L-attributed\u3002\u5f62\u5f0f\u5316\u5730\uff1a</p> <p></p> <p></p> <p>\u663e\u7136\uff0cS-attributed \u7684\u6587\u6cd5\u90fd\u662f L-attributed \u7684\u6587\u6cd5\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a L \u5c5e\u6027\u6587\u6cd5\uff0c\u5bf9\u4e8e Top-Down \u53ef\u4ee5\u901a\u8fc7\u628a\u7ee7\u627f\u5c5e\u6027\u8f6c\u6362\u6210\u53c2\u6570\u3001\u628a\u5408\u6210\u5c5e\u6027\u8f6c\u6362\u6210\u8fd4\u56de\u503c\uff1b\u5bf9\u4e8e Bottom-up\uff0cLR \u5206\u6790\u9002\u5408\u5904\u7406\u5408\u6210\u5c5e\u6027\uff0c\u5bf9\u4e8e\u7ee7\u627f\u5c5e\u6027\u5f88\u96be\u5904\u7406\u3002</p> <p></p> <p></p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#425-\u5c06\u7ee7\u627f\u5c5e\u6027\u4fee\u6539\u4e3a\u5408\u6210\u5c5e\u6027-626","title":"4.2.5 \u5c06\u7ee7\u627f\u5c5e\u6027\u4fee\u6539\u4e3a\u5408\u6210\u5c5e\u6027 (6.2.6)","text":"<p>\u5b9a\u7406\uff1a(Knuth [1968]) \u7ed9\u5b9a\u4e00\u4e2a\u5c5e\u6027\u6587\u6cd5\uff0c\u901a\u8fc7\u9002\u5f53\u5730\u4fee\u6539\u6587\u6cd5\uff0c\u800c\u65e0\u987b\u6539\u53d8\u6587\u6cd5\u7684\u8bed\u8a00\uff0c\u6240\u6709\u7684\u7ee7\u627f\u5c5e\u6027\u53ef\u4ee5\u6539\u53d8\u6210\u5408\u6210\u5c5e\u6027\u3002  </p> <p>\u4e3a\u4ec0\u4e48\u8981\u4fee\u6539\u6210\u5408\u6210\u5c5e\u6027\u5462\uff1f\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u8fc7\uff0c\u81ea\u5e95\u5411\u4e0a\u7684\u5206\u6790\u9002\u5408\u5904\u7406\u5408\u6210\u5c5e\u6027\uff0c\u800c\u5f88\u96be\u5904\u7406\u7ee7\u627f\u5c5e\u6027\uff1b\u6211\u4eec\u5c06\u7ee7\u627f\u5c5e\u6027\u6539\u4e3a\u5408\u6210\u5c5e\u6027\u7684\u91cd\u8981\u610f\u4e49\u5c31\u662f\u65b9\u4fbf\u81ea\u5e95\u5411\u4e0a\u7684\u5206\u6790\u3002</p> <p>\u90a3\u4e48\u5982\u4f55\u6539\u5199\u5462\uff1f\u770b\u770b\u4f8b\u5b50\uff1a</p> <p>\u4f8b 3 cont.</p> <p>\u5bf9\u4e8e\u4e4b\u524d\u7684\u6587\u6cd5\u89c4\u5219\uff1a</p> <p></p> <p></p> <p>\u5bf9\u4e8e\u5012\u6570\u7b2c\u4e8c\u6761\u6587\u6cd5\uff0c\u5176 rhs \u7684 dtype \u5c5e\u6027\u662f\u4f9d\u8d56\u4e8e lhs \u7684\u3002\u5982\u679c\u6211\u4eec\u91cd\u5199\u5982\u4e0b\uff0cdtype \u5c31\u662f\u5408\u6210\u7684\u4e86\uff1a</p> <p></p> <p>\u4e0d\u8fc7\u5b9e\u9645\u4e0a\u5e76\u4e0d\u5b8c\u5168\u662f\u5408\u6210\u7684\uff0c\u4f8b\u5982\u4e0b\u9762\u8fd9\u5f20\u56fe\u4e2d\u4e24\u4e2a\u865a\u7ebf\u7684\u7bad\u5934\u5176\u5b9e\u6309\u5b9a\u4e49\u6765\u8bb2\u662f\u7ee7\u627f\u7684\uff1a</p> <p></p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u91cc<code>id.dtype = var-list.dtype</code>\u7684\u8bed\u4e49\u4ecd\u7136\u662f\u7ee7\u627f\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4ece\u4ea7\u751f\u5f0f\u5de6\u8fb9\u4f20\u9012\u7ed9\u4ea7\u751f\u5f0f\u53f3\u8fb9\u7684\u3002</p> <p>\u4f46\u662f\u4e3a\u4ec0\u4e48\u8fd9\u6837\u7684\u4f20\u9012\u53ef\u4ee5\u63a5\u53d7\u5462\uff1f\u56de\u5230\u6211\u4eec\u5c06\u7ee7\u627f\u5c5e\u6027\u4fee\u6539\u4e3a\u5408\u6210\u5c5e\u6027\u7684\u76ee\u7684\uff0c\u5373\u65b9\u4fbf\u81ea\u5e95\u5411\u4e0a\u7684\u5206\u6790\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u91cc\u6240\u8c13\u201c\u5408\u6210\u201d\u7684\u6838\u5fc3\u76ee\u6807\u53ea\u662f\u4e0d\u5e0c\u671b\u6709\u9012\u5f52\u7684\u5411\u4e0b\u4f20\u9012\uff1b\u5076\u5c14\u7684\u4e00\u4e9b\u7ee7\u627f\u5f0f\u7684\u5c5e\u6027\u4f20\u9012\u53ef\u4ee5\u76f4\u63a5\u5728\u7236\u4eb2\u8282\u70b9\u4e2d\u5b8c\u6210\u3002\u6bd4\u5982<code>id.dtype = var-list.dtype</code>\u8fd9\u6837\u7684\u8bed\u4e49\u89c4\u5219\u867d\u7136\u662f\u7ee7\u627f\u7684\uff0c\u4f46\u662f\u5728<code>var-list</code>\u8fd9\u4e2a\u8282\u70b9\u5c31\u53ef\u4ee5\u5b8c\u6210\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u5728\u81ea\u5e95\u5411\u4e0a\u7684\u8fc7\u7a0b\u4e2d\u5b8c\u6210\uff0c\u5e76\u4e0d\u9700\u8981\u50cf\u539f\u5148\u7684<code>var-list2.dtype = var-list1.dtype</code>\u90a3\u6837\u9012\u5f52\u4e0b\u53bb\u8fd0\u7b97\u3002</p> <p>\uff08\u76f8\u5173\u7ec3\u4e60\u8fd8\u6709\u8bfe\u672c\u4e60\u9898 6.7\uff09</p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#43-\u7b26\u53f7\u8868","title":"4.3 \u7b26\u53f7\u8868","text":"<p>\u5bf9\u4e8e\u8bed\u6cd5\u6811\uff0c\u5916\u90e8\u6570\u636e\u7ed3\u6784\u6700\u521d\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u7b26\u53f7\u8868 (symbol table)\uff0c\u7ed3\u5408\u7a0b\u5e8f\u4e2d\u58f0\u660e\u7684\u5e38\u91cf\u3001\u53d8\u91cf\u548c\u8fc7\u7a0b\u5b58\u50a8\u5c5e\u6027\u3002</p> <p></p> <p>\u91c7\u7528\u54c8\u5e0c\uff1a</p> <p></p> <p>\u8fd9\u91cc\u9762\u6709\u591a\u4e2a <code>i</code>\uff0c\u56e0\u4e3a\u4f5c\u7528\u57df\u5c4f\u853d\u3002</p> <p>\u8fd9\u79cd\u6709\u51b2\u7a81\u5c31\u641e\u4e2a\u5217\u8868\u7684\u65b9\u5f0f\u53eb  separate chaining \u5206\u79bb\u94fe\u8868\u6cd5\uff1b\u8fd8\u6709\u5f00\u653e\u5bfb\u5740\u6cd5 open addressing\uff0c\u5c31\u662f\u51b2\u7a81\u540e\u627e\u4e0b\u4e00\u4e2a\u6709\u7a7a\u7684\u3002</p> <p>\u591a\u4e2a\u4f5c\u7528\u57df\u4e5f\u53ef\u4ee5\u50cf\u8fd9\u6837\u7ef4\u62a4\u4e00\u4e2a\u7b26\u53f7\u8868\u6808\uff1a</p> <p></p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#\u9898\u76ee\u9009\u8bb2","title":"\u9898\u76ee\u9009\u8bb2","text":"<p>2008</p> <p></p> <p></p> <p></p>"},{"location":"compile_principle/4%20Semantic%20Analysis/#44-\u7c7b\u578b\u68c0\u67e5","title":"4.4 \u7c7b\u578b\u68c0\u67e5","text":"<p>\u9012\u5f52\u7c7b\u578b\uff1a <pre><code>struct intBST\n{ int isNull;\nint val;\nstruct intBST left, right;\n};\n</code></pre> \u8fd9\u4e2a\u5728 C \u8bed\u8a00\u662f\u4e0d\u5408\u6cd5\u7684\uff1b\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e9b\u5176\u4ed6\u8bed\u8a00\u91c7\u7528\u7c7b\u4f3c\u5199\u6cd5\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e0a\u5b58\u7684\u662f\u6307\u9488\u3002</p> <p>\u5728\u4f8b\u5982\u51fd\u6570\u8c03\u7528\u4e4b\u7c7b\u7684\u60c5\u5f62\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u68c0\u67e5\u53c2\u6570\u7684\u7c7b\u578b\u548c\u9884\u5148\u7684\u8981\u6c42\u662f\u5426\u76f8\u540c\u3002\u8fd9\u8981\u6c42\u6211\u4eec\u8ba8\u8bba\u7c7b\u578b\u4e4b\u95f4\u7684\u7b49\u4ef7\u6027\u3002</p> <ul> <li>\u7ed3\u6784\u7b49\u4ef7  \u4e24\u4e2a\u7c7b\u578b\u5f53\u4e14\u4ec5\u5f53\u4ed6\u4eec\u6709\u76f8\u540c\u7684\u7ed3\u6784\uff0c\u5373\u8bed\u6cd5\u6811\u65f6\u624d\u76f8\u540c\u3002\u4e00\u822c\u8981\u6c42\u6570\u7ec4\u5927\u5c0f\u76f8\u540c\u3001\u7ed3\u6784\u4f53\u987a\u5e8f\u76f8\u540c\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u4e0d\u540c\u3002</li> <li>\u540d\u7b49\u4ef7    \u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u7c7b\u578b\u6709\u76f8\u540c\u7684\u7c7b\u578b\u540d\u65f6\u624d\u7b49\u4ef7\u3002<ul> <li>\u4f8b\u5982\uff0c\u5b9a\u4e49 <code>t1 = int, t2 = int</code>\uff0c\u4f46\u662f <code>t1</code>, <code>t2</code>, <code>int</code> \u4ecd\u7136\u4e24\u4e24\u4e0d\u7b49\u4ef7</li> </ul> </li> <li>\u8bf4\u660e\u7b49\u4ef7  \u5f31\u5316\u7248\u7684\u540d\u7b49\u4ef7\uff0c\u5373\u522b\u540d\u4e4b\u95f4\u53ef\u4ee5\u7b49\u4ef7\u3002<ul> <li>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u4e09\u4e2a\u7c7b\u578b\u7b49\u4ef7\u3002</li> </ul> </li> </ul> <p>\u91cd\u8f7d\u3001\u591a\u6001\u3001\uff08\u9690\u5f0f\uff09\u7c7b\u578b\u8f6c\u6362\u7ed9\u7c7b\u578b\u68c0\u67e5\u5e26\u6765\u4e86\u66f4\u591a\u5de5\u4f5c\u3002</p>"},{"location":"compile_principle/5%20Runtime%20Environment/","title":"5 Runtime Environment | \u8fd0\u884c\u65f6\u73af\u5883","text":"<p> \u7ea6 2924 \u4e2a\u5b57  135 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>\u670b\u8f88\u8f85\u5b66\u5f55\u64ad \u7f16\u8bd1\u539f\u7406\u901f\u6210(5) \u8fd0\u884c\u65f6\u73af\u5883(\u4e0a) \u53c2\u6570\u4f20\u9012\u65b9\u5f0f \u7f16\u8bd1\u539f\u7406\u901f\u6210(6) \u8fd0\u884c\u65f6\u73af\u5883(\u4e0b) \u5b58\u50a8\u5668\u7ec4\u7ec7</p>"},{"location":"compile_principle/5%20Runtime%20Environment/#51-\u7a0b\u5e8f\u6267\u884c\u65f6\u7684\u5b58\u50a8\u5668\u7ec4\u7ec7","title":"5.1 \u7a0b\u5e8f\u6267\u884c\u65f6\u7684\u5b58\u50a8\u5668\u7ec4\u7ec7","text":"<p>\u6211\u4eec\u5c06\u8f83\u5c0f\u7684\u7f16\u8bd1\u65f6\u5e38\u91cf\u76f4\u63a5\u63d2\u5165\u5230\u4ee3\u7801\u4e2d\uff1b\u800c\u5bf9\u4e8e\u5927\u7684\u6574\u578b\u503c\u3001\u6d6e\u70b9\u503c\u3001\u5b57\u7b26\u4e32\u5206\u914d\u5230\u5168\u5c40/\u9759\u6001\u533a\u57df\u4e2d\u7684\u5b58\u50a8\u5668\uff0c\u5728\u542f\u52a8\u65f6\u4ec5\u4fdd\u5b58\u4e00\u6b21\uff1b\u4e4b\u540e\u518d\u7531\u6267\u884c\u4ee3\u7801\u4ece\u8fd9\u4e9b\u4f4d\u7f6e\u4e2d\u5f97\u5230\u3002</p> <p>\u8fd9\u91cc\u7684\u5806 (heap) \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u5b58\u50a8\u5668\u533a\u57df\uff0c\u4e0e\u6570\u636e\u7ed3\u6784\u4e2d\u63d0\u5230\u7684\u5806\u65e0\u5173\u3002</p> <p>\u4e0a\u56fe\u4e2d\u7bad\u5934\u8868\u793a\u7684\u662f\u6808\u548c\u5806\u7684\u751f\u957f\u65b9\u5411\u3002</p> <p>\u6808\u4e0a\u7684\u5185\u5bb9\u662f\u7b26\u5408\u540e\u8fdb\u5148\u51fa\u7684\uff0c\u800c\u5806\u4e0a\u7684\u5185\u5bb9\u4e0d\u4e00\u5b9a\u3002</p> <p>\u5b58\u50a8\u5668\u5206\u914d\u65f6\u7684\u4e00\u4e2a\u91cd\u8981\u5355\u5143\u662f  \u8fc7\u7a0b\u6d3b\u52a8\u8bb0\u5f55 (procedure activation record) \uff0c\u5176\u7528\u9014\u662f\u4fdd\u5b58\u8c03\u7528\u51fd\u6570\u65f6\u4ea7\u751f\u7684\u5c40\u90e8\u6570\u636e\u3002\u5176\u81f3\u5c11\u5e94\u5f53\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a</p> <p></p> <p>\u7528\u4e8e bookkeeping \u7684\u7a7a\u95f4\u5bf9\u4e8e\u6bcf\u4e2a\u51fd\u6570\u53ef\u80fd\u76f8\u540c\uff0c\u800c\u7528\u4e8e\u4fdd\u5b58\u53c2\u6570\u3001\u5c40\u90e8\u6570\u636e\u3001\u5c40\u90e8\u4e34\u65f6\u53d8\u91cf\u7684\u7a7a\u95f4\u53ef\u80fd\u56e0\u4e0d\u540c\u7684\u51fd\u6570\u800c\u6709\u4e0d\u540c\u7684\u5927\u5c0f\u3002</p> <p>\u4e0d\u540c\u7684\u8bed\u8a00\u53ef\u80fd\u5c06 activation record \u5206\u914d\u5728\u4e0d\u540c\u7684\u5730\u65b9\u3002\u4f8b\u5982 FORTRAN77 \u5c06\u5176\u5206\u914d\u5728\u9759\u6001\u533a\u57df\uff1bC \u548c Pascal \u5c06\u5176\u5206\u914d\u5728\u6808\u4e2d\uff08\u6b64\u65f6 activation record \u4e5f\u79f0\u4e3a stack frame\uff09\uff1b \u800c LISP \u5c06\u5176\u5206\u914d\u5728\u5806\u533a\u57df\u3002</p> <p>\u5904\u7406\u5668\u5bc4\u5b58\u5668\u4e5f\u662f runtime environment \u7684\u7ed3\u6784\u90e8\u5206\u3002\u5927\u591a\u6570\u4f53\u7cfb\u7ed3\u6784\u91cc\u90fd\u6709 PC\uff0cSP\uff1b\u6709\u7684\u8fd8\u6709 FP (frame pointer, X86 \u91cc\u7684 BP) \u7b49\u3002\u4e0d\u540c\u7684\u4f53\u7cfb\u7ed3\u6784\u7684\u5904\u7406\u5668\u7684\u6570\u91cf\u548c\u4f7f\u7528\u5dee\u522b\u8f83\u5927\u3002</p> <p>\u51e0\u4e4e\u6240\u6709\u7684\u7a0b\u5e8f\u8bed\u8a00\u90fd\u4f9d\u8d56\u4e8e\u5982\u4e0b 3 \u79cd runtime environment \u7684\u67d0\u4e00\u4e2a\uff0c\u5176\u4e3b\u8981\u7ed3\u6784\u5e76\u4e0d\u4f9d\u8d56\u4e8e\u76ee\u6807\u673a\u5668\u7684\u7279\u5b9a\u7ec6\u8282\uff1a</p> <ul> <li>FORTRAN77 \u7684\u5b8c\u5168\u9759\u6001\u73af\u5883</li> <li>C, C++, Pascal, Ada \u7b49\u7684\u57fa\u4e8e\u6808\u7684\u73af\u5883</li> <li>LISP \u7b49\u7684\u5b8c\u5168\u52a8\u6001\u73af\u5883</li> </ul> <p>\u8fd9\u4e09\u79cd\u7c7b\u578b\u7684\u6df7\u5408\u6a21\u5f0f\u4e5f\u662f\u53ef\u80fd\u7684\u3002</p> <p>\u6211\u4eec\u4e0b\u9762\u5206\u522b\u8ba8\u8bba\u8fd9 3 \u79cd\u73af\u5883\u3002</p>"},{"location":"compile_principle/5%20Runtime%20Environment/#511-\u5b8c\u5168\u9759\u6001\u73af\u5883--fully-static-environment","title":"5.1.1 \u5b8c\u5168\u9759\u6001\u73af\u5883 | Fully Static Environment","text":"<p>\u5b8c\u5168\u9759\u6001\u73af\u5883\u662f\u6700\u7b80\u5355\u7684\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u5176\u6240\u6709\u6570\u636e\uff08\u5305\u62ec\u5404\u4e2a\u51fd\u6570\u7684 activation record\uff09\u90fd\u662f\u9759\u6001\u7684\uff1b\u5982\u6211\u4eec\u6240\u60f3\u8c61\u7684\u90a3\u6837\uff0c\u8fd9\u79cd\u73af\u5883\u4e0d\u652f\u6301\u52a8\u6001\u5206\u914d\u4ee5\u53ca\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\u3002</p> <p>\u5728\u7b2c\u4e00\u4ee3 Fortran \u7684\u65f6\u5019\uff0c\u8ba1\u7b97\u673a\u8fd8\u4e0d\u80fd\u95f4\u63a5\u5bfb\u5740\uff0c\u5373\u4e0d\u80fd\u6839\u636e\u5bc4\u5b58\u5668\u7684\u503c\u8fdb\u884c\u5bfb\u5740\uff0c\u56e0\u6b64 sp / bp(fp) \u5b9e\u73b0\u4e0d\u4e86\uff0c\u81ea\u7136\u4e0d\u80fd\u6709\u5806\u6808\uff0c\u56e0\u6b64\u6bcf\u4e2a\u51fd\u6570\u53ea\u80fd\u88ab\u8c03\u7528 1 \u6b21\u3002</p> <p>\u5f62\u53c2 formal para \u548c\u5b9e\u53c2 actural para \u7684\u6765\u6e90\u662f Fortran \u8bed\u8a00\uff0cFortran 77 \u4ee5\u524d\u662f\u5f15\u7528\u4f20\u53c2\uff0c\u5f53\u65f6\u5185\u5b58\u5f88\u5c0f\uff0c\u8fd8\u6ca1\u6709\u6808\uff0c\u5f53\u65f6\u5f62\u53c2\u548c\u5b9e\u53c2\u662f\u540d\u5b9e\u76f8\u7b26\u7684\uff1b60 \u5e74\u4ee3\u4ee5\u540e algo \u8bf4\u6211\u4eec\u53ef\u4ee5\u4f20\u503c\u4e86</p> <p></p> <p>\u8bfe\u672c\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p></p> <p></p>"},{"location":"compile_principle/5%20Runtime%20Environment/#512-\u57fa\u4e8e\u6808\u7684\u73af\u5883--stack-based-environment","title":"5.1.2 \u57fa\u4e8e\u6808\u7684\u73af\u5883 | Stack-Based Environment","text":"<p>\u8fd9\u4e00\u5185\u5bb9\uff0c\u6211\u4eec\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba\u4ee5\u53ca\u6c47\u7f16\u8bed\u8a00\u8bfe\u7a0b\u4e2d\u90fd\u6709\u5b66\u4e60\u8fc7\u3002Stack of activation record, a.k.a. runtime stack / call stack \u968f\u7740\u51fd\u6570\u7684\u8c03\u7528\u800c\u751f\u957f\u6216\u51cf\u5c0f\u3002</p>"},{"location":"compile_principle/5%20Runtime%20Environment/#5121-\u6ca1\u6709\u5c40\u90e8\u8fc7\u7a0b\u7684\u57fa\u4e8e\u6808\u7684\u73af\u5883","title":"5.1.2.1 \u6ca1\u6709\u5c40\u90e8\u8fc7\u7a0b\u7684\u57fa\u4e8e\u6808\u7684\u73af\u5883","text":"<p>\u6211\u4eec\u9996\u5148\u8ba8\u8bba\u4ee5 C \u8bed\u8a00\u4e3a\u4f8b\u7684  \u6ca1\u6709\u5c40\u90e8\u51fd\u6570  \u7684\u57fa\u4e8e\u6808\u7684\u73af\u5883\u3002</p> <p>\u6211\u4eec\u4f1a\u7528 sp \u6307\u5411\u5f53\u524d\u6808\u9876\uff0c\u4e00\u4e2a\u6846\u67b6\u6307\u9488 (frame pointer, fp; a.k.a \u5e27\u6307\u9488, bp) \u6307\u5411\u5f53\u524d\u6d3b\u52a8\uff0c\u8fd9\u4e24\u4e2a\u6307\u9488\u901a\u5e38\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\u3002\u5148\u524d\u6d3b\u52a8\u7684 fp \u4f1a\u4fdd\u5b58\u5728\u5b83\u8c03\u7528\u7684\u51fd\u6570\u7684\u6d3b\u52a8\u8bb0\u5f55\u4e2d\uff0c\u5f62\u6210\u63a7\u5236\u94fe (control link; a.k.a \u52a8\u6001\u94fe, dynamic link)\u3002</p> <p></p>"},{"location":"compile_principle/5%20Runtime%20Environment/#5122-\u5e26\u6709\u5c40\u90e8\u8fc7\u7a0b\u7684\u57fa\u4e8e\u6808\u7684\u73af\u5883","title":"5.1.2.2 \u5e26\u6709\u5c40\u90e8\u8fc7\u7a0b\u7684\u57fa\u4e8e\u6808\u7684\u73af\u5883","text":"<p>\u5bf9\u4e8e Pascal \u4e4b\u7c7b\u7684\u8bed\u8a00\uff0c \u5c40\u90e8\u51fd\u6570 \u662f\u88ab\u5141\u8bb8\u7684\u3002\u770b\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\uff1a <pre><code>program nonLocalRef;\n\nprocedure p;\nvar n: integer;\n\nprocedure q;\nbegin\n(* a reference to n is now\n        non-local non-global * )\n    end; (* q *)\n\nprocedure r(n: integer) ;\nbegin\nq;\nend; (* r *)\n\nbegin (* p *)\nn := 1;\nr(2);\nend; (* p *)\n\nbegin (* main *)\np;\nend.\n</code></pre> \u8fd9\u91cc<code>q</code>\u548c<code>r</code>\u662f<code>p</code>\u5185\u90e8\u5b9a\u4e49\u7684\u5d4c\u5957\u51fd\u6570\u3002</p> <p>\u7531\u4e8e pascal \u7684\u4f5c\u7528\u57df\u548c C \u4e00\u6837\u662f\u9759\u6001\u7684\uff08\u5373\u5f53 local \u7b26\u53f7\u8868\u4e2d\u6ca1\u6709\u8bbf\u95ee\u7684\u6807\u8bc6\u7b26\u65f6\uff0c\u53bb\u51fd\u6570\u5b9a\u4e49\u6240\u5728\u7684\u4f4d\u7f6e\u67e5\u627e\u8fd9\u4e2a\u6807\u8bc6\u7b26\uff1b\u4e0e\u4e4b\u5bf9\u5e94\u7684\u662f\u52a8\u6001\u4f5c\u7528\u57df\uff0c\u5f53 local \u6ca1\u6709\u65f6\u53bb\u51fd\u6570 \u8c03\u7528 \u6240\u5728\u7684\u4f4d\u7f6e\u67e5\u627e\u8fd9\u4e2a\u6807\u8bc6\u7b26\uff09\uff0c\u56e0\u6b64\u8fd9\u65f6<code>q</code>\u548c<code>r</code>\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230<code>p</code>\u7684\u5c40\u90e8\u51fd\u6570<code>n</code>\u3002</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u8bbf\u95ee\uff0c\u6211\u4eec\u4f7f\u7528 access link / static link \u6765\u6307\u5411\u5916\u5c42\u51fd\u6570\u7684\u6d3b\u52a8\u8bb0\u5f55\u3002\u5168\u5c40\u51fd\u6570\u4e0d\u9700\u8981\u6709 access link\u3002\u5982\u679c\u8fc7\u7a0b<code>p</code>\u5728\u6e90\u4ee3\u7801\u76f4\u63a5\u5d4c\u5957\u5728\u8fc7\u7a0b<code>q</code>\u4e2d\uff0c\u90a3\u4e48<code>p</code>\u7684\u4efb\u4f55\u6d3b\u52a8\u4e2d\u7684 access link \u90fd\u4e00\u5b9a\u6307\u5411<code>q</code> \u6700\u8fd1 \u7684\u6d3b\u52a8\u3002 </p> <p>\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e2d<code>main</code>\u8c03\u7528<code>p</code>\uff0c<code>p</code>\u8c03\u7528<code>r</code>\uff0c<code>r</code>\u518d\u8c03\u7528<code>q</code>\u65f6\u6808\u957f\u8fd9\u6837\uff1a</p> <p></p> <p>\u56e0\u6b64\uff0c<code>q</code>\u8981\u8bbf\u95ee<code>p</code>\u7684\u5c40\u90e8\u51fd\u6570<code>n</code>\u65f6\u5c31\u53ea\u9700\u8981\u4ece access link \u8d70 1 \u6b65\u5230<code>p</code>\u7684\u6d3b\u52a8\u8bb0\u5f55\uff0c\u7136\u540e\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf<code>n</code>\u5373\u53ef\u3002</p> <p>\u518d\u8003\u8651\u8fd9\u6837\u7684\u7a0b\u5e8f\uff1a <pre><code>program chain;\n\nprocedure p;\nvar x: integer;\n\nprocedure q;\n\nprocedure r;\nbegin\nx := 2;\n...\nif ... then p;\nend; (* r *)\n\nbegin (* q *)\nr;\nend; (* q *)\n\nbegin (* p *)\nq;\nend;  (* p *)\n\nbegin (* main *)\np;\nend.\n</code></pre> \u5373\uff0c<code>p</code>\u6709\u5c40\u90e8\u8fc7\u7a0b<code>q</code>\uff0c<code>q</code>\u53c8\u6709\u5c40\u90e8\u8fc7\u7a0b<code>r</code>\u3002\u8fd9\u65f6<code>r</code>\u5982\u679c\u60f3\u8bbf\u95ee<code>p</code>\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5c31\u9700\u8981\u5148\u4ece access link \u627e\u5230<code>q</code>\u7684 activation record\uff0c\u7136\u540e\u518d\u4ece\u8fd9\u91cc\u7684 access link \u627e\u5230<code>p</code>\u7684 activation record\uff0c\u7136\u540e\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\uff1b\u5373\u5b83\u9700\u8981\u901a\u8fc7 2 \u6b21 access link\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c<code>p</code>\u5d4c\u5957\u4e86<code>q</code>\uff0c<code>q</code>\u53c8\u5d4c\u5957\u4e86<code>r</code>\uff0c\u6211\u4eec\u8bb0\u5168\u5c40\u51fd\u6570\u6216\u8fc7\u7a0b\u7684\u5d4c\u5957\u6df1\u5ea6\u662f 0\uff0c\u4e00\u6b21\u5d4c\u5957\u4f1a\u4f7f\u5f97\u5d4c\u5957\u6df1\u5ea6 +1\uff1b\u56e0\u6b64<code>r</code>\u7684\u5d4c\u5957\u6df1\u5ea6\u6bd4<code>p</code>\u9ad8 2\uff0c\u5bf9\u5e94\u7684\u4e5f\u5c31\u9700\u8981\u7ecf\u8fc7 2 \u6b21 access link \u4e86\uff1a</p> <p></p> <p>\u90a3\u4e48\uff0caccess link \u662f\u5982\u4f55\u7ef4\u62a4\u7684\u5462\uff1f\u8bf7\u6ce8\u610f\uff1a\u8fd9\u4e2a\u7ef4\u62a4\u7684\u8fc7\u7a0b\u662f\u8fd0\u884c\u65f6\u505a\u51fa\u7684\u3002\u5f53\u8fc7\u7a0b<code>x</code>\u8c03\u7528\u8fc7\u7a0b<code>y</code>\u7684\u65f6\u5019\uff0c\u6709 3 \u79cd\u60c5\u51b5\uff1a</p> <ol> <li> <p><code>y</code>\u7684\u5d4c\u5957\u6df1\u5ea6\u5927\u4e8e<code>x</code>\u7684\u5d4c\u5957\u6df1\u5ea6\uff0c\u90a3\u4e48<code>y</code>\u4e00\u5b9a\u662f\u76f4\u63a5\u5728<code>x</code>\u4e2d\u5b9a\u4e49\u7684\uff0c\u5373\u5d4c\u5957\u6df1\u5ea6\u5dee\u8ddd\u4e3a 1\uff0c\u5426\u5219<code>x</code>\u6839\u672c\u8bbf\u95ee\u4e0d\u5230\u8fd9\u4e2a<code>y</code>\u3002\u5373\uff1a <pre><code>procedure x;\nprocedure y;\n...\n...\n</code></pre> \u56e0\u6b64\u8fd9\u65f6<code>y</code>\u7684 access link \u4e00\u5b9a\u5c31\u6307\u5411<code>x</code>\u73b0\u5728\u7684 activation record\uff1b</p> </li> <li> <p><code>x</code>\u548c<code>y</code>\u7684\u5d4c\u5957\u6df1\u5ea6\u76f8\u7b49\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u8981\u4e48\u662f\u540c\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u81ea\u5df1\u7684\u9012\u5f52\u8c03\u7528\uff0c\u8981\u4e48\u662f\u76f4\u63a5\u5b9a\u4e49\u5728\u5168\u5c40\u6216\u8005\u540c\u4e00\u4e2a procedure \u5185\u90e8\u7684\uff0c\u5373\uff1a <pre><code>procedure r;\nprocedure y;\n...\nprocedure x;\n...\n...\n</code></pre> \u56e0\u6b64\uff0c<code>y</code>\u7684 access link \u76f4\u63a5\u4f7f\u7528<code>x</code>\u7684 access link \u5373\u53ef\uff1b</p> </li> <li> <p><code>y</code>\u7684\u5d4c\u5957\u6df1\u5ea6\u5c0f\u4e8e<code>x</code>\u7684\u5d4c\u5957\u6df1\u5ea6\u3002\u4f46\u662f\u65e2\u7136\u8fd9\u65f6<code>x</code>\u4ecd\u7136\u80fd\u8c03\u7528\u5230<code>y</code>\uff0c\u90a3\u4e48\u8981\u4e48<code>y</code>\u5b9a\u4e49\u5728\u5168\u5c40\uff0c\u8981\u4e48<code>y</code>\u76f4\u63a5\u5b9a\u4e49\u5728\u4e00\u4e2a\u8fc7\u7a0b<code>r</code>\u5185\u90e8\uff0c\u800c<code>x</code>\u5d4c\u5957\u5b9a\u4e49\u5728<code>r</code>\u5185\u90e8\u7684\u67d0\u4e00\u5c42\uff0c\u5373\uff1a <pre><code>procedure r;\nprocedure y;\n...   (* y *)\nprocedure s1;\nprocedure s2;\n...... procedure sn;       (* n &gt;= 1 *)\nprocedure x;\n... (* x *)\n... (* sn *)\n......\n... (* s2 *)\n... (* s1 *)\n... (* r *)\n</code></pre> \u56e0\u6b64\u8fd9\u65f6\uff0c<code>x</code>\u9700\u8981\u7ecf\u8fc7\\(n_x - n_y + 1\\)\u6b21 access link \u627e\u5230<code>r</code>\u7684 activation record\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u5730\u5740\u8d4b\u503c\u7ed9 <code>y</code>\u7684 access link \u5373\u53ef\u3002</p> </li> </ol> <p>\u7b49\u4ef7\u5730\uff0c<code>x</code>\u9700\u8981\u7ecf\u8fc7\\(n_x - n_y\\)\u6b21 access link \u627e\u5230<code>s1</code>\u7684 activation record\uff0c\u7136\u540e\u5c06<code>s1</code>\u7684 access link \u8d4b\u503c\u7ed9 <code>y</code>\u7684 access link \u5373\u53ef\u3002</p> <p>\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u4f8b\u9898\uff0c\u4f9b\u8bfb\u8005\u81ea\u6211\u68c0\u67e5\u3002\u753b\u51fa\u8fd9\u4e2a\u51fd\u6570\u7b2c\u4e8c\u6b21\u8c03\u7528<code>c</code>\u65f6\u6808\u7684\u60c5\u51b5\uff1a <pre><code>program env;\n\nprocedure a;\nvar x: integer;\nprocedure b;\nprocedure c;\nbegin\nx := 2;\nb;\nend;\nbegin (* b *)\nc;\nend;\nbegin (* a *)\nb;\nend;\n\nbegin (* main *)\na;\nend;\n</code></pre></p> <p></p>"},{"location":"compile_principle/5%20Runtime%20Environment/#5123-\u5e26\u6709\u8fc7\u7a0b\u53c2\u6570\u7684\u57fa\u4e8e\u6808\u7684\u73af\u5883","title":"5.1.2.3 \u5e26\u6709\u8fc7\u7a0b\u53c2\u6570\u7684\u57fa\u4e8e\u6808\u7684\u73af\u5883","text":"<p>\u5728\u4e00\u4e9b\u8bed\u8a00\u91cc\uff0c\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u3002\u770b\u8fd9\u6bb5\u4ee3\u7801\uff1a <pre><code>program closureEx(output);\n\nprocedure p(procedure a) ;\nbegin\na;\nend;\n\nprocedure q;\nvar x: integer;\n\nprocedure r;\nbegin\nwriteln(x);\nend;\n\nbegin\nx := 2;\np(r);\nend; (* q *)\n\nbegin (* main *)\nq;\nend.\n</code></pre> 18 \u884c\u5c06 procedure<code>r</code>\u5f53\u505a\u53c2\u6570\u4f20\u7ed9\u4e86<code>p</code>\uff0c\u56e0\u6b64\u8fd9\u65f6\u663e\u7136\u8981\u4f20\u5165<code>r</code>\u7684\u6307\u4ee4\u7684\u6307\u9488<code>ip</code>\uff1b\u540c\u65f6\u6211\u4eec\u8fd8\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4f20\u5165<code>r</code>\u7684 access link<code>ep</code>\uff0c\u5426\u5219\u5b83\u5c06\u65e0\u6cd5\u8bbf\u95ee\u5176\u5916\u90e8\u7684\u8fc7\u7a0b\u7684\u5c40\u90e8\u53d8\u91cf\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u8fd0\u884c\u5b8c 18 \u884c\u8fdb\u5165<code>p</code>\u65f6\uff0c\u6808\u5e94\u8be5\u957f\u8fd9\u6837\uff1a</p> <p></p> <p>\u5373\uff0c\u4f20\u5165\u7684\u53c2\u6570<code>a</code>\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7<code>ip</code>\u548c<code>ep</code>\u7684\u7ec4\u5408\u5b9e\u73b0\u7684\uff1b\u6211\u4eec\u5c06\u5176\u79f0\u4e3a \u95ed\u5305 closure \uff0c\u56e0\u4e3a\u5b83\u4e0d\u4ec5\u4f20\u5165\u4e86\u51fd\u6570\u6307\u9488\uff0c\u8fd8\u6355\u83b7\u4e86\u73af\u5883\u4e2d\u7684\u53d8\u91cf\u3002\u56fe\u4e2d\u7684\u865a\u7ebf\u8868\u793a<code>ep</code>\u7684\u503c\u5c31\u662f<code>q</code>\u7684 activation record \u7684\u5730\u5740\u3002</p> <p>\u5728\u7b2c 5 \u884c\u8c03\u7528\u4e86<code>a</code>\u540e\uff0c\u6808\u5e94\u8be5\u957f\u8fd9\u6837\uff1a</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c<code>a</code>\u7684 access link \u6307\u5411\u4e86<code>ep</code>\u7684\u503c\uff0c\u5373<code>q</code>\u7684 activation record \u7684\u5730\u5740\u3002</p> <p>\u8fd9\u6837\u7684\u5904\u7406\u9700\u8981\u533a\u5206\u6b63\u5e38\u7684\u8fc7\u7a0b\u8c03\u7528\u548c\u6765\u81ea\u53c2\u6570\u7684\u8fc7\u7a0b\u8c03\u7528\u3002\u4e3a\u4e86\u7b80\u6d01\u6027\u548c\u4e00\u81f4\u6027\uff0c\u7f16\u8bd1\u5668\u7684\u8bbe\u8ba1\u8005\u53ef\u80fd\u5e0c\u671b\u5c06\u6240\u6709\u8fc7\u7a0b\u90fd\u4f5c\u4e3a\u95ed\u5305\u7684\u5f62\u5f0f\uff0c\u5373\uff1a</p> <p></p>"},{"location":"compile_principle/5%20Runtime%20Environment/#513-\u5b8c\u5168\u52a8\u6001\u73af\u5883--fully-dynamic-environment","title":"5.1.3 \u5b8c\u5168\u52a8\u6001\u73af\u5883 | Fully Dynamic Environment","text":"<p>\u57fa\u4e8e\u6808\u7684\u8fd0\u884c\u65f6\u73af\u5883\u4f1a\u5bfc\u81f4 dangling reference\uff0c\u4f8b\u5982\u8fd4\u56de\u5c40\u90e8\u53c2\u6570\u5730\u5740\u7684\u51fd\u6570\u3002</p> <p>\u7c7b\u4f3c ML, LISP \u4e4b\u7c7b\u7684\u51fd\u6570\u5f0f\u7684\u8bed\u8a00\uff0c\u5176\u51fd\u6570\u662f\u201c\u4e00\u7b49\u516c\u6c11\u201d\uff0c\u5373\u548c\u5e73\u5e38\u7684\u53d8\u91cf\u4e00\u6837\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7b49\u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u57fa\u4e8e\u6808\u7684\u8fd0\u884c\u65f6\u73af\u5883\u5c31\u4e0d\u592a\u5408\u9002\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5c06\u6240\u6709\u7684\u5185\u5bb9\u90fd\u653e\u5728\u52a8\u6001\u5b58\u50a8\u533a\uff0c\u5373\u5806\u4e0a\u3002</p> <p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u540c\u65f6\u4e5f\u9700\u8981\u8003\u8651\u5783\u573e\u56de\u6536\u673a\u5236\uff1b\u5176\u5173\u952e\u662f\u56de\u6536 \u4e0d\u53ef\u8fbe \u7684\u5bf9\u8c61\u3002\u8bfe\u672c\u7b80\u5355\u4ecb\u7ecd\u4e86\u5982\u4e0b\u51e0\u79cd\u5783\u573e\u56de\u6536\u673a\u5236\uff1a</p> <ul> <li>mark and sweep \uff0c\u5468\u671f\u6027\u5730\uff0c\u6216\u662f\u5728 malloc \u5931\u8d25\u65f6\uff0c\u4ece static &amp; local \u51fa\u53d1\u8fdb\u884c\u6807\u8bb0\uff0c\u6807\u51fa\u6240\u6709\u53ef\u8fbe\u7684\u5185\u5b58\u5757\u3002\u5269\u4f59\u7684\u5757\u5c31\u662f\u65e0\u6cd5\u88ab\u89e6\u53ca\u7684\u5185\u5b58\uff0c\u5c31\u53ef\u4ee5\u56de\u6536\u6389\u4e86\u3002</li> <li>\u5728\u56de\u6536\u4e4b\u540e\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528  memory compaction  \u6765\u5c06\u6240\u6709\u5206\u914d\u7684\u7a7a\u95f4\u79fb\u5230\u5806\u7684\u672b\u5c3e\uff0c\u4ece\u800c\u7559\u51fa\u8fde\u7eed\u7684\u7a7a\u95f2\u7a7a\u95f4\u3002</li> <li>stop and copy / two space \uff0c\u5c06\u5b58\u50a8\u533a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u6bcf\u6b21\u53ea\u4f7f\u7528\u4e00\u90e8\u5206\uff0c\u5b58\u50a8\u533a\u6ee1\u65f6\u4ece static &amp; local \u51fa\u53d1\u5c06\u6240\u6709\u53ef\u8fbe\u7684\u5185\u5b58\u5757\u590d\u5236\u5230\u53e6\u4e00\u90e8\u5206\u4e2d\uff0c\u8fd9\u6837\u4e0d\u9700\u8981\u4e24\u904d\u904d\u5386\uff0c\u4e5f\u81ea\u7136\u8fdb\u884c\u4e86 memory compaction\u3002</li> <li>generational garbage collection \uff0c\u5c06\u5b58\u5728\u65f6\u95f4\u8db3\u591f\u957f\u7684\u88ab\u5206\u914d\u7684\u5bf9\u8c61\u590d\u5236\u5230\u6c38\u4e45\u7a7a\u95f4\u4e2d\uff0c\u5e76\u5728\u968f\u540e\u7684\u5b58\u50a8\u56de\u6536\u65f6\u4e0d\u518d\u91cd\u65b0\u5206\u914d\u3002\u8fd9\u5c31\u610f\u5473\u7740\u5783\u573e\u56de\u6536\u7a0b\u5e8f\u5728\u66f4\u65b0\u7684\u5b58\u50a8\u5206\u914d\u65f6\u53ea\u9700\u8981\u641c\u7d22\u5b58\u50a8\u5668\u4e2d\u7684\u5f88\u5c0f\u7684\u4e00\u4e2a\u90e8\u5206\u3002</li> </ul>"},{"location":"compile_principle/5%20Runtime%20Environment/#514-\u9898\u76ee\u9009\u8bb2","title":"5.1.4 \u9898\u76ee\u9009\u8bb2","text":"<p>\u30102008\u3011</p> <p></p> <p></p>"},{"location":"compile_principle/5%20Runtime%20Environment/#52-parameter-passing-mechanisms--\u53c2\u6570\u4f20\u9012\u673a\u5236","title":"5.2 Parameter Passing Mechanisms | \u53c2\u6570\u4f20\u9012\u673a\u5236","text":"<p>\u6211\u4eec\u8ba8\u8bba\u5728\u8c03\u7528\u51fd\u6570\u65f6\u4f20\u9012\u53c2\u6570\u7684\u65b9\u5f0f\u3002\u540e\u9762\u4f1a\u4e3e\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u4fbf\u4e8e\u7406\u89e3\u3002</p>"},{"location":"compile_principle/5%20Runtime%20Environment/#521-\u503c\u4f20\u9012--pass-by-value","title":"5.2.1 \u503c\u4f20\u9012 | Pass by Value","text":"<p>\u5c31\u662f C \u8bed\u8a00\u4e2d\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cC \u8bed\u8a00\u4e2d\u5373\u4f7f\u6211\u4eec\u901a\u8fc7\u4f20\u5165\u6307\u9488\u53d8\u91cf\u5b9e\u73b0\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5176\u672c\u8d28\u4e0a\u8fd8\u662f\u5c06\u5b9e\u53c2\u4e2d\u6307\u9488\u53d8\u91cf\u7684\u503c\uff08\u5373\u6240\u6307\u5730\u5740\uff09\u590d\u5236\u5230\u5f62\u53c2\u7684\u76f8\u5e94\u53d8\u91cf\u4e2d\u53bb\u3002</p> <p>\u662f Pascal \u548c Ada \u7684\u9ed8\u8ba4\u4f20\u9012\u65b9\u5f0f\u3002</p>"},{"location":"compile_principle/5%20Runtime%20Environment/#522-\u5f15\u7528\u4f20\u9012--pass-by-reference","title":"5.2.2 \u5f15\u7528\u4f20\u9012 | Pass by Reference","text":"<p>\u4f20\u9012\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u5373\u4f20\u9012\u5176\u5728\u5b58\u50a8\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3002\u5728\u51fd\u6570\u4e2d\u6240\u505a\u7684\u4e00\u5207\u66f4\u6539\u90fd\u4f1a\u4f5c\u7528\u4e8e\u8fd9\u4e2a\u53d8\u91cf\u672c\u8eab\u3002</p> <p>\u8fd9\u662f Fortran77 \u4e2d\u552f\u4e00\u652f\u6301\u7684\u4f20\u9012\u65b9\u5f0f\uff1b\u5728 Pascal \u4e2d\u901a\u8fc7\u5728\u5f62\u53c2\u5217\u8868\u4e2d\u4f7f\u7528 <code>var</code> \u5173\u952e\u5b57\u6765\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u3002</p>"},{"location":"compile_principle/5%20Runtime%20Environment/#523-\u503c\u7ed3\u679c\u4f20\u9012--pass-by-value-result","title":"5.2.3 \u503c\u7ed3\u679c\u4f20\u9012 | Pass by Value-Result","text":"<p>\u5c06\u5b9e\u53c2\u4ece\u5de6\u5230\u53f3\u9010\u4e2a\u590d\u5236\u5230\u5f62\u53c2\u4e2d\uff0c\u5728\u51fd\u6570\u8fd0\u884c\u7ed3\u675f\u540e\u518d\u9010\u4e2a\u5c06\u5176\u590d\u5236\u56de\u539f\u6765\u7684\u4f4d\u7f6e\u3002</p> <p>\u8fd9\u662f Ada \u7684\u4f20\u5165\u4f20\u51fa\u53c2\u6570\u673a\u5236\u3002</p>"},{"location":"compile_principle/5%20Runtime%20Environment/#524-\u540d\u5b57\u4f20\u9012--pass-by-name","title":"5.2.4 \u540d\u5b57\u4f20\u9012 | Pass by Name","text":"<p>\u540d\u5b57\u4f20\u9012\u7684\u601d\u60f3\u662f\uff1a\u76f4\u5230\u51fd\u6570\u771f\u6b63\u4f7f\u7528\u4e86\u67d0\u4e2a\u53c2\u6570\u65f6\u624d\u5bf9\u5176\u8d4b\u503c\uff0c\u56e0\u6b64\u4e5f\u79f0\u4e3a  \u5ef6\u8fdf\u8d4b\u503c (delayed evaluation) \u3002\u7b49\u4ef7\u7684\u505a\u6cd5\u662f\u5c06\u51fd\u6570\u5728\u8c03\u7528\u7684\u539f\u4f4d\u8fdb\u884c\u5c55\u5f00\u3002</p>"},{"location":"compile_principle/5%20Runtime%20Environment/#525-\u4f8b\u5b50","title":"5.2.5 \u4f8b\u5b50","text":"<p>Example</p> <p>7.15 Give the output of \u00a0the following program (written in C syntax) using the 4 parameter passing methods discussed in Section 7.5:</p> <pre><code>include &lt;stdio.h&gt;\nint i = 0;\n\nvoid p(int x, int y)\n{ x += 1;\ni += 1;\ny += 1;\n}\n\nmain()\n{ int a[2]={1,1};\np(a[i], a[i]);\nprintf(\"%d %d\\n\",a[0],a[1]);\nreturn 0;\n}\n</code></pre> solution <p>Pass by value:  1 1</p> <p><code>i = 0</code>, and <code>p(1, 1)</code> is called, but <code>a[0]</code> and <code>a[1]</code> are not modified.</p> <p>Pass by reference:  3 1</p> <p><code>i = 0</code>, so <code>p(a[0], a[0])</code> is called. After <code>x += 1</code> and <code>y += 1</code>, <code>a[0]</code> becomes 3. <code>a[1]</code> is never accessed.</p> <p>Pass by value-result: </p> <p><code>i = 0</code>, so <code>p(a[0], a[0])</code> is called, <code>x = 1</code>, <code>y = 1</code>. After <code>x += 1</code> and <code>y += 1</code>, \u00a0<code>x = 2</code>, <code>y = 2</code>. We now put <code>x</code> into <code>a[0]</code> and <code>a[0] = 2</code>; then we put <code>y</code> into <code>a[0]</code> so <code>a[0] = 2</code>. <code>a[1]</code> is never accessed.</p> <p>Pass by name:  2 2</p> <p>We expand Line 14 to <code>a[i] += 1; i += 1; a[i] += 1;</code>, which actually does: <code>a[0] = 2</code>, <code>i = 2</code>, <code>a[1] = 2</code>.</p>"},{"location":"compile_principle/6%20Code%20Generation/","title":"6 Code Generation | \u4ee3\u7801\u751f\u6210","text":"<p> \u7ea6 2174 \u4e2a\u5b57  3 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>\u670b\u8f88\u8f85\u5b66\u5f55\u64ad\uff1a\u7f16\u8bd1\u539f\u7406\u901f\u6210(7) \u4ee3\u7801\u751f\u6210</p>"},{"location":"compile_principle/6%20Code%20Generation/#61-\u4e2d\u95f4\u4ee3\u7801\u751f\u6210","title":"6.1 \u4e2d\u95f4\u4ee3\u7801\u751f\u6210","text":"<p>AST \u662f Intermediate Representation (IR) \u7684\u4e00\u79cd\uff0c\u4f46\u662f\u8981\u751f\u6210\u4ee3\u7801\u7684\u65f6\u5019\u9700\u8981\u5148\u628a\u5b83\u7ebf\u6027\u5316 (linerization)\uff0c\u53d8\u6210\u4e00\u79cd\u66f4\u7c7b\u4f3c\u76ee\u6807\u4ee3\u7801\u7684\u4e2d\u95f4\u8868\u793a\uff1b\u6211\u4eec\u5c06\u5176\u79f0\u4e3a \u4e2d\u95f4\u4ee3\u7801 (intermediate code)\u3002</p> <p>\u4e0b\u9762\u8fd9\u5f20\u56fe\u4e5f\u53ef\u4ee5\u5145\u5206\u5730\u4f53\u73b0\u51fa IR \u5728\u51cf\u7701\u5de5\u4f5c\u91cf\u4e0a\u7684\u91cd\u8981\u610f\u4e49\uff1a</p> <p></p> <p>\u4e2d\u95f4\u4ee3\u7801\u6709\u5f88\u591a\u79cd\u7c7b\uff0c\u672c\u8282\u4ecb\u7ecd \u4e09\u5730\u5740\u7801 three-address code \u548c P-\u4ee3\u7801 P-code\uff1b\u503c\u5f97\u8bf4\u660e\u7684\u662f\u5373\u4f7f\u8fd9\u4e24\u79cd\u786e\u5b9a\u7684\u4e2d\u95f4\u4ee3\u7801\u4e5f\u6709\u5f88\u591a\u4e0d\u540c\u7684\u5177\u4f53\u5f62\u5f0f\u3002\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u4e00\u4e9b\u666e\u904d\u7279\u6027\u3002</p>"},{"location":"compile_principle/6%20Code%20Generation/#611-\u4e09\u5730\u5740\u7801","title":"6.1.1 \u4e09\u5730\u5740\u7801","text":"<p>\u4e09\u5730\u5740\u7801\u7528\u6765\u8868\u793a\u7b97\u672f\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u5f62\u5982 <code>x = y op z</code>\uff1b\u4f8b\u5982\u4e0b\u56fe AST \u5bf9\u5e94\u7684\u4e09\u5730\u5740\u7801\u5c31\u662f\uff1a</p> <p></p> <p><pre><code>t1 = 2 * a\nt2 = b - 3\nt3 = t1 + t2\n</code></pre> \u5176\u4e2d t1, t2, t3 \u662f\u4e34\u65f6\u53d8\u91cf\u540d\uff0c\u5bf9\u5e94\u4e8e AST \u7684\u5185\u90e8\u8282\u70b9\u3002\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u7531\u4e8e AST \u53ef\u80fd\u6709\u4e0d\u540c\u7684\u62d3\u6251\u5e8f\uff0c\u56e0\u6b64\u751f\u6210\u7684\u4e09\u5730\u5740\u7801\u4e5f\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u987a\u5e8f\u3002</p> <p>\u5f53\u7136\uff0c\u4ee3\u7801\u4e0d\u5168\u7531\u7b97\u672f\u8fd0\u7b97\u7ec4\u6210\uff0c\u56e0\u6b64\u4e09\u5730\u5740\u7801\u4e5f\u6709\u4e00\u4e9b\u5176\u4ed6\u5f62\u5f0f\u7684\u6269\u5c55\u5185\u5bb9\u3002\u4f8b\u5982\u4e0b\u56fe\u5de6\u8fb9\u7684\u7a0b\u5e8f\u4ee3\u7801\u5bf9\u5e94\u7684\u4e09\u5730\u5740\u7801\u5982\u4e0b\u56fe\u53f3\u8fb9\u6240\u793a\uff1a</p> <p></p> <p>\u5f53\u7136\uff0c\u5982\u679c\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u53ea\u662f\u7f16\u8bd1\u4e2d\u7684\u4e00\u4e2a\u6b65\u9aa4\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u5fc5\u5c06\u5176\u6253\u5370\u6210\u6587\u672c\uff0c\u518d\u4ece\u6587\u672c\u4e2d\u8bfb\u53d6\u7136\u540e\u7ffb\u8bd1\u6210\u76ee\u6807\u4ee3\u7801\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u7a0b\u5e8f\u4e2d\u7528\u4e00\u5b9a\u7684\u6570\u636e\u7ed3\u6784\u8bb0\u5f55\u8fd9\u4e9b\u4e2d\u95f4\u4ee3\u7801\u3002</p> <p>\u5bf9\u4e8e\u4e09\u5730\u5740\u7801\uff0c\u4fdd\u5b58\u5176\u4fe1\u606f\u9700\u8981 3 \u4e2a\u5730\u5740\u4ee5\u53ca 1 \u4e2a\u64cd\u4f5c\u7b26\u3002\u56e0\u6b64\u6211\u4eec\u7528 \u56db\u5143\u5f0f quadruple \u7684\u65b9\u5f0f\u6765\u5b58\u50a8\u4e09\u5730\u5740\u7801\u3002\u4f8b\u5982\u4e0a\u9762\u7684\u4e09\u5730\u5740\u7801\u7528\u56db\u5143\u5f0f\u8868\u793a\u5c31\u662f\uff1a</p> <p></p> <p><code>_</code>\u8868\u793a\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u5730\u5740\uff0c\u7f6e\u4e3a\u7a7a\u3002</p> <p>\u4e09\u5730\u5740\u7801\u53e6\u4e00\u4e2a\u4e0d\u540c\u7684\u5b9e\u73b0\u662f\u7528\u81ea\u5df1\u7684\u6307\u4ee4\u6765\u4ee3\u8868\u4e34\u65f6\u53d8\u91cf\uff0c\u8fd9\u6837\u5730\u5740\u57df\u4ece 3 \u4e2a\u51cf\u5c11\u5230\u4e86 2 \u4e2a\uff0c\u76ee\u6807\u5730\u5740\u603b\u662f\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u7528\u884c\u53f7\u8868\u793a\u3002\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u79f0\u4e3a \u4e09\u5143\u5f0f triple\u3002\u524d\u8ff0\u4e09\u5730\u5740\u7801\u7528\u4e09\u5143\u5f0f\u8868\u793a\u5c31\u662f\uff1a</p> <p></p> <p>\u8fd9\u91cc\u5f62\u5982<code>(1)</code>\u7684\u5176\u5b9e\u5c31\u662f\u8bbf\u95ee\u884c\u53f7\u4e3a 1 \u7684\u8bed\u53e5\u8fd0\u884c\u540e\u7684\u7ed3\u679c\u3002</p> <p>\u6211\u4eec\u5177\u4f53\u6765\u63a2\u8ba8\u4e00\u4e9b\u4ee3\u7801\u751f\u6210\u6280\u672f\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e9b\u57fa\u672c\u7684\u64cd\u4f5c\u548c\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u6587\u6cd5\u7684\u65b9\u5f0f\u6765\u751f\u6210\u5bf9\u5e94\u7684\u4e2d\u95f4\u4ee3\u7801\uff1a</p> <p></p> <p>\u4e3a\u4e86\u6267\u884c\u4e00\u4e9b \u5730\u5740\u8ba1\u7b97\u548c\u6307\u9488\u5f15\u7528\uff0c\u53ef\u4ee5\u5f15\u5165\u7c7b\u4f3c C \u8bed\u8a00\u7684\u53d6\u503c\u548c\u53d6\u5740\u64cd\u4f5c\u7b26<code>&amp;</code>\u548c<code>*</code>\uff1a</p> <p></p> <p>\u4e3a\u4e86\u65b9\u4fbf \u6570\u7ec4\u8bbf\u95ee\uff0c\u53ef\u4ee5\u5f15\u5165<code>[] =</code>\u548c<code>= []</code>\u5f62\u5f0f\u7684\u4e09\u5730\u5740\u7801\uff0c\u4f8b\u5982\uff1a</p> <p></p> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u4e0a\u9762\u7684\u5730\u5740\u8ba1\u7b97\u65b9\u5f0f\u5199\u6210\uff1a</p> <p></p> <p>\u5176\u4e2d\uff0c<code>elem_size()</code>\u662f\u67e5\u9605\u7b26\u53f7\u8868\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u7684\u5185\u5bb9\uff0c\u5728\u5b9e\u9645\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u65f6\u4f1a\u7528\u5b57\u9762\u91cf\u66ff\u4ee3\u3002</p> <p>\u5bf9\u4e8e \u7ed3\u6784\u4f53\u8bbf\u95ee\uff0c\u4f8b\u5982 <code>x.j = x.i</code>\uff0c\u53ef\u4ee5\u7ffb\u8bd1\u6210\u5982\u4e0b\u4e09\u5730\u5740\u7801\uff1a</p> <p></p> <p>\u540c\u6837\u7684\uff0c<code>field_offset()</code>\u4e5f\u662f\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u65f6\u67e5\u9605\u7b26\u53f7\u8868\u5c31\u53ef\u4ee5\u5f97\u77e5\u5e76\u66ff\u4ee3\u7684\u503c\u3002</p> <p>\u5bf9\u4e8e\u63a7\u5236\u8bed\u53e5\uff0c\u6211\u4eec\u7684\u751f\u6210\u7a0d\u5fae\u590d\u6742\uff0c\u4f46\u662f\u4e5f\u5dee\u4e0d\u591a\u3002\u4f8b\u5982<code>if (E) S1 else S2</code>\u53ef\u4ee5\u7ffb\u8bd1\u4e3a\uff1a <pre><code>t1 = &lt;code to evaluate E&gt;\nif_false t1 goto L1\n&lt;code for S1&gt;\ngoto L2\nlabel L1\n&lt;code for S2&gt;\nlabel L2\n</code></pre> \u53c8\u4f8b\u5982 <code>while(E) S</code>\u53ef\u4ee5\u7ffb\u8bd1\u4e3a\uff1a <pre><code>label L1\nt1 = &lt;code to evaluate E&gt;\nif_false t1 goto L2\n&lt;code for S&gt;\ngoto L1\nlabel L2\n</code></pre></p> <p>\u5bf9\u4e8e\u51fd\u6570\u8c03\u7528\uff0c\u4e09\u5730\u5740\u7801\u4e5f\u662f\u6bd4\u8f83\u6e05\u6670\u7684\uff1a</p> <p> </p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981<code>begin_args</code>\uff1f\u4e0d\u77e5\u9053\uff0c\u5728\u95ee\u4e86\u3002\uff08\u8001\u5e08\u4e0d\u7406\u6211\uff09</p>"},{"location":"compile_principle/6%20Code%20Generation/#612-p-code","title":"6.1.2 P-Code","text":"<p>P-Code \u7684\u8fd0\u884c\u4f9d\u8d56\u4e00\u4e2a\u4e34\u65f6\u7684\u6808\u3002\u4f8b\u5982\uff0c<code>2 * a + (b - 3)</code>\u7684 P-Code \u5982\u4e0b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c<code>mpi</code>, <code>sbi</code>, <code>adi</code>\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f\u4ece\u6808\u4e0a\u5f39\u51fa 2 \u4e2a\u64cd\u4f5c\u6570\uff0c\u8fdb\u884c\u8ba1\u7b97\uff0c\u518d\u538b\u56de\u6808\u4e0a\u7684\u3002</p> <p>\u5bf9\u4e8e\u8d4b\u503c\u8bed\u53e5<code>x := y + 1</code>\uff0c\u5176 P-Code \u662f\uff1a</p> <p></p> <p></p> <p>\u5373\uff0c\u5728\u8fd0\u884c<code>sto</code>\u4e4b\u524d\uff0c\u6808\u9876\u4e24\u4e2a\u5143\u7d20\u662f<code>y + 1</code>\u7684\u503c\u4ee5\u53ca<code>x</code>\u7684\u5730\u5740\uff1b<code>sto</code>\u5c06\u5b83\u4eec\u5f39\u51fa\u5e76\u5c06\u503c\u5199\u5165\u5730\u5740\u3002</p> <p>\u4e4b\u524d\u6211\u4eec\u8ba8\u8bba\u7684\u4ee3\u7801\uff1a</p> <p></p> <p>\u5b83\u5bf9\u5e94\u7684 P-Code \u5982\u4e0b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u8fd9\u79cd\u4ee3\u7801\u6bd4\u4e09\u5730\u5740\u7801\u66f4\u63a5\u8fd1\u5b9e\u9645\u7684\u6c47\u7f16\u4ee3\u7801\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf \u5730\u5740\u8ba1\u7b97\uff0cP-Code \u6709\u8fd9\u4e24\u6761\u6307\u4ee4\uff1a</p> <p></p> <p></p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u6570\u7ec4\u5f15\u7528\u548c\u8d4b\u503c\u4e86\uff1a</p> <p></p> <p>\u7ed3\u6784\u4f53\u4e5f\u7c7b\u4f3c\uff1a</p> <p></p> <p>\u5bf9\u4e8e \u63a7\u5236\u8bed\u53e5\uff1a</p> <p><code>if(E) S1 else S2</code> <pre><code>&lt;code to evaluate E&gt;\nfjp L1\n&lt;code for S1&gt;\nujp L2\nlab L1\n&lt;code for S2&gt;\nlab L2\n</code></pre> <code>while(E) S</code> <pre><code>lab L1\n&lt;code to evaluate E&gt;\nfjp L2\n&lt;code for S&gt;\nujp L1\nlab L2\n</code></pre></p> <p>\u51fd\u6570\u8c03\u7528\uff1a</p> <p></p> <p></p> <p><code>mst</code>\u5c31\u7c7b\u4f3c\u4e8e<code>begin_args</code>\uff0c\u4ece\u8fd9\u79cd\u6307\u4ee4\u751f\u6210\u7684\u76ee\u6807\u4ee3\u7801\u5c06\u4e3a\u4e00\u4e2a\u65b0\u8c03\u7528\u5728\u6808\u4e0a\u5efa\u7acb\u4e00\u4e2a\u6d3b\u52a8\u8bb0\u5f55\u3002</p> <p>P-\u4ee3\u7801\u5728\u8bb8\u591a\u65b9\u9762\u6bd4\u4e09\u5730\u5740\u7801\u66f4\u63a5\u8fd1\u4e8e\u5b9e\u9645\u7684\u673a\u5668\u7801\u3002 P-\u4ee3\u7801\u6307\u4ee4\u4e5f\u9700\u8981\u8f83\u5c11\u5730\u5740\uff1b\u6211\u4eec\u5df2\u89c1\u8fc7\u7684\u90fd\u662f\u4e00\u5730\u5740\u6216\u96f6\u5730\u5740\u6307\u4ee4\uff0c\u53e6\u4e00\u65b9\u9762\uff0c P-\u4ee3\u7801\u5728\u6307\u4ee4\u6570\u91cf\u65b9\u9762\u4e0d\u5982\u4e09\u5730\u5740\u7801\u7d27\u51d1\uff0c P-\u4ee3\u7801\u4e0d\u662f\u81ea\u5305\u542b\u7684\uff0c\u6307\u4ee4\u64cd\u4f5c\u9690\u542b\u5730\u4f9d\u8d56\u4e8e\u6808 (\u9690\u542b\u7684\u6808\u5b9a\u4f4d\u5b9e\u9645\u4e0a\u5c31\u662f\u201c\u7f3a\u7701\u7684\u201d\u5730\u5740)\uff0c\u6808\u7684\u597d\u5904\u662f\u5728\u4ee3\u7801\u7684\u6bcf\u4e00\u5904\u90fd\u5305\u542b\u4e86\u6240\u9700\u7684\u6240\u6709\u4e34\u65f6\u503c\uff0c\u7f16\u8bd1\u5668\u4e0d\u7528\u5982\u4e09\u5730\u5740\u7801\u4e2d\u90a3\u6837\u4e3a\u5b83\u4eec\u518d\u5206\u914d\u540d\u5b57\u3002</p>"},{"location":"compile_principle/6%20Code%20Generation/#62-\u4ee3\u7801\u4f18\u5316\u7b80\u8ff0","title":"6.2 \u4ee3\u7801\u4f18\u5316\u7b80\u8ff0","text":""},{"location":"compile_principle/6%20Code%20Generation/#621-\u4ee3\u7801\u4f18\u5316\u7684\u4e3b\u8981\u6765\u6e90","title":"6.2.1 \u4ee3\u7801\u4f18\u5316\u7684\u4e3b\u8981\u6765\u6e90","text":"<ul> <li>Register allocation\uff0c\u5bc4\u5b58\u5668\u6bd4\u8f83\u5c11\uff0c\u4f46\u662f\u53d8\u91cf\u548c\u4e34\u65f6\u53d8\u91cf\u90fd\u8981\u7528</li> <li>Unnecessary operations\uff0c\u5c40\u90e8\u5230\u6574\u4f53\u90fd\u6709</li> <li>Common subexpr elimination\uff0c\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u6d88\u9664\uff0c\u8bb0\u5f55\u91cd\u590d\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c</li> <li>Unreachable / dead code\uff0c\u6d88\u9664\u4e0d\u53ef\u8fbe\u4ee3\u7801\u53ef\u4ee5\u51cf\u5c0f\u76ee\u6807\u4ee3\u7801\uff0c\u540c\u65f6\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u5224\u65ad\u548c\u8df3\u8f6c</li> <li>Jump optimization\uff0c\u8df3\u5230\u4e0b\u4e00\u6761\u8bed\u53e5\uff0c\u6216\u8005\u8df3\u5230\u8df3\u8f6c\u8bed\u53e5\u7684\u90fd\u53ef\u4ee5\u4f18\u5316</li> <li>Costly operations\uff0c\u901a\u8fc7\u6bd4\u6e90\u4ee3\u7801\u66f4\u5c0f\u7684\u4ee3\u4ef7\u5b9e\u73b0\u64cd\u4f5c</li> <li>Reduction in strength\uff0c\u5f3a\u5ea6\u6d88\u51cf\uff0c<code>x * 3</code>=&gt;<code>x + x + x</code></li> <li>Constant folding\uff0c\u5e38\u91cf\u6298\u53e0\uff0c\u82e5\u6709<code>const int a = 4;</code>\u5219<code>a + 2</code>=&gt;<code>6</code></li> <li>Constant propagation\uff0c\u5e38\u91cf\u4f20\u64ad\uff0c\u5173\u6ce8\u53d8\u91cf\u5728\u5c40\u90e8\u6216\u5168\u5c40\u4e3a\u6052\u5b9a\u503c\u7684\u60c5\u51b5\uff0c\u4ece\u800c\u66f4\u597d\u5b9e\u73b0\u6298\u53e0\u7b49</li> <li>Procedure inlining\uff0c\u8fc7\u7a0b\u5185\u5d4c\uff0c\u5c06\u8fc7\u7a0b\u4f53\u539f\u5730\u5c55\u5f00\uff0c\u4ece\u800c\u51cf\u5c11\u8c03\u7528\u7684\u5f00\u9500</li> <li>Tail recursion removal\uff0c\u5c3e\u9012\u5f52\uff1a\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u8981\u4e48\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u8981\u4e48\u662f\u8c03\u7528\u5b83\u672c\u8eab\u7684\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u8fd9\u662f\u4e00\u79cd\u5c3e\u9012\u5f52\u7684\u60c5\u5f62\uff1b\u5176\u7279\u6b8a\u6027\u5728\u4e8e\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5f53\u524d activation record \u4e2d\u7684\u4f20\u5165\u53c2\u6570\u5df2\u7ecf\u4e0d\u91cd\u8981\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u8986\u76d6\u6389\uff1b\u4e5f\u5373\u4e0d\u9700\u8981\u66f4\u591a\u7684\u6808\u7a7a\u95f4\uff0c\u66f4\u8fdb\u4e00\u6b65\u5730\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u76f4\u63a5\u6539\u4e3a\u5faa\u73af\u3002</li> <li>Predicting Program Behavior\uff0c\u53ef\u4ee5\u901a\u8fc7\u9759\u6001\u5206\u6790\u9884\u6d4b\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u63d2\u6869\u7edf\u8ba1\u7a0b\u5e8f\u8fd0\u884c\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u66f4\u6709\u53ef\u80fd\u8fd0\u884c\u7684\u5206\u652f\u3001\u8fc7\u7a0b\u7b49\u3002</li> </ul>"},{"location":"compile_principle/6%20Code%20Generation/#622-\u4f18\u5316\u5206\u7c7b","title":"6.2.2 \u4f18\u5316\u5206\u7c7b","text":"<p>\u6309\u4f18\u5316\u7684\u65f6\u673a\u5206\u7c7b\uff0c\u6709\uff1a</p> <ul> <li>Peephole optimization\uff0c\u7aa5\u5b54\u4f18\u5316\u3002\u751f\u6210\u76ee\u6807\u4ee3\u7801\u540e\u5728\u76ee\u6807\u4ee3\u7801\u4e0a\u8fdb\u884c\u4f18\u5316\uff1b\u7531\u4e8e\u901a\u5e38\u53ea\u80fd\u5728\u5c40\u90e8\u4f18\u5316\u6240\u4ee5\u5f97\u540d\u3002</li> <li>Target-level optimization\uff0c\u76ee\u6807\u4ee3\u7801\u7ea7\u4f18\u5316\u3002\u5728\u751f\u6210\u76ee\u6807\u4ee3\u7801\u524d\uff0c\u7ed3\u5408\u76ee\u6807\u673a\u5668\u7684\u7279\u6027\u8fdb\u884c\u4f18\u5316\u3002</li> <li>Source-level optimization\uff0c\u6e90\u4ee3\u7801\u7ea7\u4f18\u5316\u3002\u5728\u751f\u6210\u76ee\u6807\u4ee3\u7801\u524d\uff0c\u4ee5\u673a\u5668\u65e0\u5173\u7684\u65b9\u5f0f\u8fdb\u884c\u4f18\u5316\u3002</li> </ul> <p>\u6309\u4f18\u5316\u7684\u8303\u56f4\u5206\u7c7b\uff0c\u6709\uff1a</p> <ul> <li>local\uff0c\u9650\u4e8e\u7ebf\u6027\u90e8\u5206 (straight-line segment of code) \u7684\u4f18\u5316\uff0c\u5373\u6ca1\u6709\u8df3\u8fdb\u8df3\u51fa\u7684\u8bed\u53e5\u7684\u8bed\u53e5\u5757\u3002\u4e00\u4e2a\u6700\u5927\u7684\u7ebf\u6027\u90e8\u5206\u79f0\u4e3a \u57fa\u672c\u5757 (basic block)\u3002</li> <li>global\uff0c\u5355\u4e2a\u8fc7\u7a0b\u5185\u3002</li> <li>interprocedural\uff0c\u8fc7\u7a0b\u95f4\u3002</li> </ul>"},{"location":"compile_principle/6%20Code%20Generation/#623-\u4f18\u5316\u7684\u6570\u636e\u7ed3\u6784\u548c\u5b9e\u73b0\u6280\u672f","title":"6.2.3 \u4f18\u5316\u7684\u6570\u636e\u7ed3\u6784\u548c\u5b9e\u73b0\u6280\u672f","text":"<p>\u5f53\u8003\u8651 global \u6216\u8005 interprocedural \u7684\u4f18\u5316\u65f6\uff0c\u95ee\u9898\u53d8\u5f97\u590d\u6742\u4e86\u8d77\u6765\uff1b\u4e00\u79cd\u5206\u6790\u65b9\u5f0f\u53eb\u505a \u6570\u636e\u6d41\u5206\u6790 (dataflow analysis)\uff0c\u5b9e\u73b0\u7684\u4e3b\u8981\u6570\u636e\u7ed3\u6784\u662f \u6d41\u56fe (flow graph)\u3002\u6d41\u56fe\u7684\u7ed3\u70b9\u662f basic block\uff0c\u8fb9\u662f\u8df3\u8f6c\u8bed\u53e5\u3002\u4f8b\u5982\uff0c\u5de6\u4e0b\u56fe\u4ee3\u7801\u7684\u6d41\u56fe\u5982\u53f3\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u6d41\u56fe\u4ee5\u53ca\u6bcf\u4e2a\u57fa\u672c\u5757\u90fd\u53ef\u4ee5\u4ece\u4e2d\u95f4\u4ee3\u7801\u4e00\u6b21\u904d\u5386\u4e2d\u6784\u9020\u5b8c\u6210\u3002\u6bcf\u4e2a\u65b0\u7684\u57fa\u672c\u5757\u8bc6\u522b\u5982\u4e0b\uff1a</p> <ul> <li>\u7b2c 1 \u6761\u6307\u4ee4\u5f00\u59cb\u4e00\u4e2a\u65b0\u57fa\u672c\u5757</li> <li>\u6bcf\u4e2a\u8f6c\u79fb\u76ee\u7684\u6807\u7b7e\u5f00\u59cb\u4e00\u4e2a\u65b0\u57fa\u672c\u5757</li> <li>\u6bcf\u6761\u8ddf\u968f\u5728\u8f6c\u79fb\u4e4b\u540e\u7684\u6307\u4ee4\u5f00\u59cb\u4e00\u4e2a\u65b0\u57fa\u672c\u5757</li> </ul> <p>\u6709\u4e86\u6d41\u56fe\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u57fa\u672c\u5757\u5efa\u7acb DAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\u7528\u6765\u8ddf\u8e2a\u4ee3\u7801\u4e2d\u7684\u8ba1\u7b97\u548c\u8d4b\u503c\u3002\u4e0a\u56fe\u57fa\u672c\u5757 B3 \u7684 DAG \u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p> </p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u62f7\u8d1d\u64cd\u4f5c\u4e0d\u521b\u5efa\u65b0\u7ed3\u70b9\uff0c\u53ea\u662f\u7ed9\u7ed3\u70b9\u589e\u52a0\u4e00\u4e2a\u6807\u53f7\u3002</p> <p>\u56e0\u4e3a\u6709\u591a\u79cd\u62d3\u6251\u987a\u5e8f\uff0c\u53ef\u4ee5\u4ece DAG \u4e2d\u4ea7\u751f\u8bb8\u591a\u4e0d\u540c\u4ee3\u7801\u5e8f\u5217\uff1b\u53ef\u4ee5\u7ed3\u5408\u76ee\u6807\u673a\u5668\u7684\u80fd\u529b\u9009\u51fa\u6bd4\u8f83\u597d\u7684\u3002\u4f8b\u5982\uff0c\u4e0a\u56fe\u7684 DAG \u5c31\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u66f4\u7b80\u77ed\u7684\u4e09\u5730\u5740\u6307\u4ee4\uff1a</p> <p></p>"},{"location":"computer_organization/1_prelude/","title":"\u5199\u5728\u524d\u9762","text":"<p> \u7ea6 372 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>\u6211\u7684\u7b14\u8bb0\u6240\u8ffd\u6c42\u7684\u76ee\u6807\u662f\u6709\u903b\u8f91\u3001\u901a\u7545\u5730\u603b\u7ed3\u77e5\u8bc6\uff1b\u56e0\u6b64\u5982\u679c\u60a8\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u5728\u4efb\u4f55\u5730\u65b9\u53d1\u73b0\u4e86\u4e0d\u5bb9\u6613\u8bfb\u61c2\u7684\u90e8\u5206\uff0c\u8bf7\u52a1\u5fc5\u5728\u8bc4\u8bba\u533a\u6216\u8005\u901a\u8fc7\u5176\u5b83\u65b9\u5f0f\u544a\u77e5\u6211QWQ\uff01\u975e\u5e38\u611f\u8c22\uff01</p> <p>\u8fd9\u662f\u8ba1\u7b97\u673a\u7ec4\u6210\u8bfe\u7a0b\u7684\u5b66\u4e60\u8bb0\u5f55\u3002</p> <p>\u4f7f\u7528\u7684\u8bfe\u672c\u662f Computer Organization and Design - The Hardware / Software Interface (RISC-V Edition)\uff1a</p> <p></p> <p>\u8bf4\u660e</p> <p>\u6211\u81ea\u8ba4\u4e3a\u5728 3 Arithmetic, 4 Processor, 5 Cache \u4e09\u7ae0\u4e2d\u7684\u6574\u7406\u548c\u8bb2\u89e3\u662f\u975e\u5e38\u8be6\u7ec6\u7684\uff0c\u5982\u679c\u8fd9\u4e9b\u90e8\u5206\u5b58\u5728\u770b\u4e0d\u61c2\u7684\u5730\u65b9\uff0c\u8bf7\u52a1\u5fc5\u8054\u7cfb\u6211\u3002</p> <p>\u4f46\u662f\uff0c\u8ba1\u7ec4\u8bfe\u7a0b\u672c\u8eab\u5728 2 Instructions \u7684\u90e8\u5206\u8bb2\u89e3\u4e86\u5f88\u591a\u5173\u4e8e\u6c47\u7f16\u7a0b\u5e8f\u7684\u77e5\u8bc6\uff1b\u4f46\u662f\u6211\u4e4b\u524d\u5728\u6c47\u7f16\u8bed\u8a00\u548c\u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba\u7b49\u8bfe\u7a0b\u4e2d\u5df2\u7ecf\u5b66\u4e60\u8fc7\u4e86\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u56e0\u6b64\u5728\u672c\u7ae0\u4e2d\u53ea\u6574\u7406\u4e86 RISC-V \u7684\u6307\u4ee4\u96c6\u548c\u4e00\u4e9b\u7ea6\u5b9a\uff0c\u7701\u7565\u4e86\u5173\u4e8e\u51fd\u6570\u8c03\u7528\u3001\u9012\u5f52\u7684\u4e00\u4e9b\u5185\u5bb9\u3002</p> <p>\u540c\u65f6\uff0c\u7531\u4e8e\u65f6\u95f4\u539f\u56e0\uff0c1 Overview \u548c 6 I/O \u4e24\u7ae0\u7684\u5185\u5bb9\u4e0d\u5b8c\u6574\u3002\u6682\u65f6\u6ca1\u6709\u8865\u5168\u8ba1\u5212\u3002</p>"},{"location":"computer_organization/1_prelude/#1-intro--misc","title":"1 Intro &amp; Misc","text":"<ul> <li>Moore's Law: Integrated circuit resources double every 18-24 months.</li> <li>KB = 103 B, KiB = 210 B</li> <li>K M G T P E Z Y</li> <li>Response Time / Execution Time    \u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u65f6\u95f4</li> <li>Throughput / Bandwidth    \u5355\u4f4d\u65f6\u95f4\u5185\u5b8c\u6210\u7684\u4efb\u52a1\u6570\u91cf</li> <li>Performance   \u53ef\u4ee5\u5b9a\u4e49\u4e3a \\(\\cfrac{1}{\\text{Response Time}}\\)</li> <li>Amdahl Law \\(T_{\\text{improved}} = \\cfrac{T_{\\text{affected}}}{\\text{Improvement Factor}}+T_\\text{unaffected}\\)</li> <li>\u2026\u2026\u4e0d\u662f\u5f88\u60f3\u5b66\u4e86 \u518d\u8bf4\u5427</li> </ul>"},{"location":"computer_organization/2_instructions/","title":"2 Instructions","text":"<p> \u7ea6 1560 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Warning</p> <p>\u672c\u7ae0\u90e8\u5206\u5185\u5bb9\u5efa\u7acb\u5728\u638c\u63e1\u81f3\u5c11\u4e00\u95e8\u6c47\u7f16\u8bed\u8a00\u7684\u57fa\u7840\u4e0a\uff0c\u4f8b\u5982\u4fee\u8bfb\u8fc7\u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba\u6216\u6c47\u7f16\u8bed\u8a00\u7b49\u8bfe\u7a0b\u3002</p> <p>\u6211\u4eec\u8ba8\u8bba\u8fc7\uff0c\u8ba1\u7b97\u673a\u7684 performance \u53d7 inst#, clock cycle time \u548c clock cycles per inst (CPI) \u51b3\u5b9a\u3002\u7ed9\u5b9a\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u9700\u8981\u4f7f\u7528\u7684 inst# \u53d7\u7f16\u8bd1\u5668\u548c inst set architecture \u51b3\u5b9a\u3002</p> <p>\u672c\u7ae0\u4ecb\u7ecd RISC-V \u7684 ISA\u3002</p>"},{"location":"computer_organization/2_instructions/#21-\u5bc4\u5b58\u5668\u5bfb\u5740\u65b9\u5f0f","title":"2.1 \u5bc4\u5b58\u5668\uff0c\u5bfb\u5740\u65b9\u5f0f","text":""},{"location":"computer_organization/2_instructions/#\u5bc4\u5b58\u5668","title":"\u5bc4\u5b58\u5668","text":"<p>RISC-V architecture \u63d0\u4f9b 32 \u4e2a\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u5206\u522b\u547d\u540d\u4e3a<code>x0</code>~<code>x31</code>\uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\u662f<code>64</code>\u4f4d\u3002\u5728 RISC-V architecture \u4e2d\uff0c\u4e00\u4e2a word \u4e3a 32 \u4f4d\uff0c\u4e00\u4e2a doubleword \u4e3a 64 \u4f4d\u3002\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e2d\u7684\u4e00\u90e8\u5206\u6709\u4e13\u95e8\u7684\u7528\u9014\uff0c\u6211\u4eec\u7a0d\u540e\u5bf9\u5176\u8fdb\u884c\u8ba8\u8bba\u3002</p> <p>RISC-V architecture \u4e5f\u63d0\u4f9b\u4e00\u7cfb\u5217\u6d6e\u70b9\u6570\u5bc4\u5b58\u5668<code>f0</code>~<code>f31</code>\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u8ba8\u8bba\u7684\u91cd\u70b9\u3002</p>"},{"location":"computer_organization/2_instructions/#\u5bfb\u5740","title":"\u5bfb\u5740","text":"<p>RISC-V architecture \u7684\u5730\u5740\u662f 64 \u4f4d\u7684\uff0c\u5730\u5740\u4e3a\u5b57\u8282\u5730\u5740\uff0c\u56e0\u6b64\u603b\u5171\u53ef\u4ee5\u5bfb\u5740 \\(2^{64}\\) \u4e2a\u5b57\u8282\uff0c\u5373 \\(2^{61}\\) \u4e2a dword (doubleword, \u4e0b\u540c)\u3002</p> <p>\u5728\u4e00\u4e9b architecture \u4e2d\uff0cword \u7684\u8d77\u59cb\u5730\u5740\u5fc5\u987b\u662f word \u5927\u5c0f\u7684\u6574\u500d\u6570\uff0cdword \u4e5f\u4e00\u6837\uff0c\u8fd9\u79cd\u8981\u6c42\u79f0\u4e3a alignment restriction\u3002RISC-V \u5141\u8bb8\u4e0d\u5bf9\u9f50\u7684\u5bfb\u5740\uff0c\u4f46\u662f\u6548\u7387\u4f1a\u4f4e\u3002</p> <p>RISC-V \u4f7f\u7528 little endian \u5c0f\u7aef\u7f16\u5740\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u4eec\u4ece 0x1000 \u8fd9\u4e2a\u5730\u5740\u8bfb\u51fa\u4e00\u4e2a dword \u65f6\uff0c\u6211\u4eec\u8bfb\u5230\u7684\u5b9e\u9645\u4e0a\u662f 0x1000~0x1007 \u8fd9 8 \u4e2a\u5b57\u8282\uff0c\u5e76\u5c06 0x1000 \u5b58\u5165\u5bc4\u5b58\u5668\u5730\u4f4d\uff0c0x1007 \u5b58\u5165\u9ad8\u4f4d\u3002</p> <p>RISC-V \u652f\u6301 PC relative \u5bfb\u5740\u3001\u7acb\u5373\u6570\u5bfb\u5740 (<code>lui</code>)\u3001\u95f4\u63a5\u5bfb\u5740 (<code>jalr</code>)\u3001\u57fa\u5740\u5bfb\u5740 (<code>8(sp)</code>)\uff1a</p> <p></p>"},{"location":"computer_organization/2_instructions/#\u8865\u7801-2s-complement","title":"\u8865\u7801 2's complement","text":"<p>\\(x + \\bar x = 111\\dots111_2 = -1\\)\uff0c\u56e0\u6b64 \\(-x = \\bar x + 1\\)\u3002\u524d\u5bfc 0 \u8868\u793a\u6b63\u6570\uff0c\u524d\u5bfc 1 \u8868\u793a\u8d1f\u6570\u3002See also</p> <p>\u56e0\u6b64\u5728\u5c06\u4e0d\u8db3 64 \u4f4d\u7684\u6570\u636e\u8f7d\u5165\u5bc4\u5b58\u5668\u65f6\uff0c\u5982\u679c\u6570\u636e\u662f\u65e0\u7b26\u53f7\u6570\uff0c\u53ea\u9700\u8981\u4f7f\u7528 0 \u5c06\u5bc4\u5b58\u5668\u7684\u5176\u4ed6\u90e8\u5206\u586b\u5145 (zero extension)\uff1b\u800c\u5982\u679c\u662f\u7b26\u53f7\u6570\uff0c\u5219\u9700\u8981\u7528\u6700\u9ad8\u4f4d\u5373\u7b26\u53f7\u4f4d\u586b\u5145\u5269\u4f59\u90e8\u5206\uff0c\u79f0\u4e3a\u7b26\u53f7\u6269\u5c55 (sign extension)\u3002</p> <p>\u5373\uff0c\u5728\u6307\u4ee4\u4e2d\u7684<code>lw</code>, <code>lh</code>, <code>lb</code>\u4f7f\u7528 sign extension\uff0c\u800c<code>lwu</code>, <code>lhu</code>, <code>lbu</code>\u4f7f\u7528 zero extension\u3002</p> <p>18~19 Final</p> <p></p> \u7b54\u6848 <p>-0x52F00000, -0x0FFFFCDF</p>"},{"location":"computer_organization/2_instructions/#22-\u6307\u4ee4\u6307\u4ee4\u683c\u5f0f","title":"2.2 \u6307\u4ee4\uff0c\u6307\u4ee4\u683c\u5f0f","text":"<p>\u8bfe\u672c\u4e0a\u4ecb\u7ecd\u7684 RISC-V \u6307\u4ee4\uff08<code>lr.d</code>, <code>sc.d</code>\u88ab\u7701\u7565\u4e86\uff09\u5217\u8868\u5982\u4e0b\uff1a</p> <p> RISC-V \u7684\u8df3\u8f6c\u6307\u4ee4\u7684 offset \u662f\u57fa\u4e8e\u5f53\u524d\u6307\u4ee4\u7684\u5730\u5740\u7684\u504f\u79fb\uff1b\u8fd9\u4e0d\u540c\u4e8e\u5176\u4ed6\u4e00\u4e9b\u6c47\u7f16\u662f\u57fa\u4e8e\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u504f\u79fb\u7684\u3002\u5373\u5982\u679c\u662f\u8df3\u8f6c\u8bed\u53e5<code>PC</code>\u5c31\u4e0d +4 \u4e86\uff0c\u800c\u662f\u76f4\u63a5 +offset\u3002</p> <p><code>lw</code>, <code>lwu</code>\u7b49\u64cd\u4f5c\u90fd\u4f1a\u6e05\u96f6\u9ad8\u4f4d\u3002</p> <p>RISC-V \u6307\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p> \u5176\u4e2d<code>I</code>\u578b\u6307\u4ee4\u6709\u4e24\u4e2a\u6761\u76ee\uff1b\u8fd9\u662f\u56e0\u4e3a\u7acb\u5373\u6570\u79fb\u4f4d\u64cd\u4f5c<code>slli</code>,<code>srli</code>,<code>srai</code>\u5e76\u4e0d\u53ef\u80fd\u5bf9\u4e00\u4e2a 64 \u4f4d\u5bc4\u5b58\u5668\u8fdb\u884c\u5927\u4e8e 63 \u4f4d\u7684\u79fb\u4f4d\u64cd\u4f5c\uff0c\u56e0\u6b64 12 \u4f4d imm \u4e2d\u53ea\u6709\u540e 6 \u4f4d\u80fd\u5b9e\u9645\u88ab\u7528\u5230\uff0c\u56e0\u6b64\u524d\u9762 6 \u4f4d\u88ab\u7528\u6765\u4f5c\u4e3a\u4e00\u4e2a\u989d\u5916\u7684\u64cd\u4f5c\u7801\u5b57\u6bb5\uff0c\u5982\u4e0a\u56fe\u4e2d\u7b2c\u4e8c\u4e2a<code>I</code>\u6761\u76ee\u90a3\u6837\u3002\u5176\u4ed6<code>I</code>\u578b\u6307\u4ee4\u9002\u7528\u7b2c\u4e00\u4e2a<code>I</code>\u6761\u76ee\u3002</p> <p>\u53e6\u5916\uff0c\u4e3a\u4ec0\u4e48<code>SB</code>\u548c<code>UJ</code>\u4e0d\u5b58\u7acb\u5373\u6570\uff08\u4e5f\u5c31\u662f\u504f\u79fb\uff09\u7684\u6700\u4f4e\u4f4d\u5462\uff1f\u56e0\u4e3a\uff0c\u504f\u79fb\u7684\u6700\u540e\u4e00\u4f4d\u4e00\u5b9a\u662f 0\uff0c\u5373\u5730\u5740\u4e00\u5b9a\u662f 2 \u5b57\u8282\u5bf9\u9f50\u7684\uff0c\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u4fdd\u5b58\u3002</p> \u65e2\u7136\u6bcf\u4e2a\u6307\u4ee4\u90fd\u662f 4 \u5b57\u8282\u5bf9\u9f50\u7684\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u662f\u6700\u540e\u4e24\u4f4d\u90fd\u7701\u7565\uff0c\u800c\u662f\u53ea\u7701\u7565\u4e00\u4f4d\u5462\uff1f <p>\u5b9e\u9645\u4e0a\uff0c\u662f\u5b58\u5728\u6307\u4ee4\u957f\u4e3a 2 \u5b57\u8282\u7684 extension \u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u6ca1\u5b66\uff1a</p> <p></p> <p>\u8bfe\u672c P116</p> <p></p> <p>RISC-V Spec V20191213 P15</p>"},{"location":"computer_organization/2_instructions/#23-\u4f2a\u6307\u4ee4\u53ca\u5176\u5b9e\u73b0","title":"2.3 \u4f2a\u6307\u4ee4\u53ca\u5176\u5b9e\u73b0","text":"<p>\u6ce8\uff1a<code>j imm</code>\u4e5f\u53ef\u4ee5\u7528<code>beq x0, x0, imm</code>\u5b9e\u73b0\uff0c\u4f46\u662f\u6b64\u6cd5\u7684<code>imm</code>\u7684\u4f4d\u6570\u4f1a\u8f83\u77ed\uff0c\u6240\u4ee5\u4e0d\u91c7\u7528\u3002</p>"},{"location":"computer_organization/2_instructions/#24-\u5206\u652f\u548c\u5faa\u73af","title":"2.4 \u5206\u652f\u548c\u5faa\u73af","text":"<p>\u7565</p>"},{"location":"computer_organization/2_instructions/#25-\u8fc7\u7a0b\u8c03\u7528\u548c\u6808","title":"2.5 \u8fc7\u7a0b\u8c03\u7528\u548c\u6808","text":"<p>RISC-V \u7ea6\u5b9a\uff1a</p> <ul> <li><code>x5</code>-<code>x7</code>\u4ee5\u53ca<code>x28</code>-<code>x31</code>\u662f temp reg\uff0c\u5982\u679c\u9700\u8981\u7684\u8bdd caller \u4fdd\u5b58\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u4fdd\u8bc1\u5728\u7ecf\u8fc7\u8fc7\u7a0b\u8c03\u7528\u4e4b\u540e\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\u4e0d\u53d8\u3002</li> <li><code>x8</code>-<code>x9</code>\u548c<code>x18</code>-<code>x27</code>\u662f saved reg\uff0ccallee \u9700\u8981\u4fdd\u8bc1\u8c03\u7528\u524d\u540e\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\u4e0d\u53d8\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c callee \u8981\u7528\u5230\u8fd9\u4e9b\u5bc4\u5b58\u5668\uff0c\u5fc5\u987b\u4fdd\u5b58\u4e00\u4efd\uff0c\u8fd4\u56de\u524d\u6062\u590d\u3002</li> <li><code>x10</code>-<code>x17</code>\u662f 8 \u4e2a\u53c2\u6570\u5bc4\u5b58\u5668\uff0c\u51fd\u6570\u8c03\u7528\u7684\u524d 8 \u4e2a\u53c2\u6570\u4f1a\u653e\u5728\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e2d\uff1b\u5982\u679c\u53c2\u6570\u8d85\u8fc7 8 \u4e2a\u7684\u8bdd\u5c31\u9700\u8981\u653e\u5230\u6808\u4e0a\uff08\u653e\u5728<code>fp</code>\u4e0a\u65b9\uff0c<code>fp + 8</code>\u662f\u7b2c 9 \u4e2a\u53c2\u6570\uff0c<code>fp + 16</code>\u7684\u7b2c 10 \u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002\u540c\u65f6\uff0c\u8fc7\u7a0b\u7684\u7ed3\u679c\u4e5f\u4f1a\u653e\u5230\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e2d\uff08\u5f53\u7136\uff0c\u5bf9\u4e8e C \u8bed\u8a00\u8fd9\u79cd\u53ea\u80fd\u6709\u4e00\u4e2a\u8fd4\u56de\u503c\u7684\u8bed\u8a00\uff0c\u53ef\u80fd\u53ea\u4f1a\u7528\u5230<code>x10</code>\uff09\u3002</li> <li><code>x1</code>\u7528\u6765\u4fdd\u5b58\u8fd4\u56de\u5730\u5740\uff0c\u6240\u4ee5\u4e5f\u53eb<code>ra</code>\u3002\u56e0\u6b64\uff0c\u4f2a\u6307\u4ee4<code>ret</code>\u5176\u5b9e\u5c31\u662f<code>jalr x0, 0(x1)</code>\u3002</li> <li>\u6808\u6307\u9488\u662f<code>x2</code>\uff0c\u4e5f\u53eb<code>sp</code>\uff1b\u59cb\u7ec8\u6307\u5411 \u6808\u9876\u5143\u7d20\u3002\u6808\u4ece\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u589e\u957f\u3002<ul> <li><code>addi sp, sp, -24</code>, <code>sd x5, 16(sp)</code>, <code>sd x6, 8(sp)</code>, <code>sd x20, 0(sp)</code>\u53ef\u4ee5\u5b9e\u73b0\u5c06 x5, x6, x20 \u538b\u6808\u3002</li> </ul> </li> <li>\u4e00\u4e9b RISC-V \u7f16\u8bd1\u5668\u4fdd\u7559\u5bc4\u5b58\u5668<code>x3</code>\u7528\u6765\u6307\u5411\u9759\u6001\u53d8\u91cf\u533a\uff0c\u79f0\u4e3a global pointer <code>gp</code>\u3002</li> <li>\u4e00\u4e9b RISC-V \u7f16\u8bd1\u5668\u4f7f\u7528<code>x8</code>\u6307\u5411 activation record \u7684\u7b2c\u4e00\u4e2a dword\uff0c\u65b9\u4fbf\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\uff1b\u56e0\u6b64<code>x8</code>\u4e5f\u79f0\u4e3a frame pointer <code>fp</code>\u3002\u5728\u8fdb\u5165\u51fd\u6570\u65f6\uff0c\u7528<code>sp</code>\u5c06<code>fp</code>\u521d\u59cb\u5316\u3002<ul> <li><code>fp</code>\u7684\u65b9\u4fbf\u6027\u5728\u4e8e\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u5bf9\u5c40\u90e8\u53d8\u91cf\u7684\u6240\u6709\u5f15\u7528\u76f8\u5bf9\u4e8e<code>fp</code>\u7684\u504f\u79fb\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u4f46\u662f\u5bf9<code>sp</code>\u4e0d\u4e00\u5b9a\u3002\u5f53\u7136\uff0c\u5982\u679c\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u4ec0\u4e48\u6808\u7684\u53d8\u5316\u6216\u8005\u6839\u672c\u6ca1\u6709\u5c40\u90e8\u53d8\u91cf\uff0c\u90a3\u5c31\u6ca1\u6709\u5fc5\u8981\u7528<code>fp</code>\u4e86\u3002</li> </ul> </li> </ul> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5bc4\u5b58\u5668\u53ca\u5176\u7528\u9014\u603b\u7ed3\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e2d \"preserved on call\" \u7684\u610f\u601d\u662f\uff0c\u662f\u5426\u4fdd\u8bc1\u8c03\u7528\u524d\u540e\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\u4e0d\u53d8\u3002</p> <p></p>"},{"location":"computer_organization/2_instructions/#26-\u5176\u4ed6\u8bdd\u9898","title":"2.6 \u5176\u4ed6\u8bdd\u9898","text":"<ul> <li>\u68c0\u67e5 index out of bounds\uff1a\u5982\u679c<code>x20 = i, x11 = size</code>\uff0c\u90a3\u4e48<code>bgeu x20, x11, IndexOutOfBounds</code>\uff0c\u5373 <code>x20 &gt;= x11 || x20 &lt; 0</code></li> <li>\u5927\u7acb\u5373\u6570</li> <li><code>lui</code>\u5c06 20 \u4f4d\u5e38\u6570\u52a0\u8f7d\u5230\u76ee\u6807\u5bc4\u5b58\u5668\u7684 31 \u5230 12 \u4f4d\uff1b\u7136\u540e\u7528<code>addi</code>\u586b\u5145\u540e\u9762 12 \u4f4d\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u52a0\u8f7d\u4e00\u4e2a\u5927\u7acb\u5373\u6570\u4e86\u3002</li> <li>\u4f46\u662f\uff0c\u5982\u679c\u540e 12 \u4f4d\u7684\u9996\u4f4d\u662f 1\uff0c\u5728<code>addi</code>\u7684\u65f6\u5019\u5c31\u4f1a\u56e0\u4e3a<code>sign ext</code>\u989d\u5916\u52a0\u4e0a<code>0xFFFFF000</code>\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06<code>lui</code>\u7684 imm \u589e\u52a0 1\uff0c\u8fd9\u6837<code>lui</code>\u52a0\u8f7d\u540e\u5b9e\u9645\u4e0a\u5c31\u662f\u589e\u52a0\u4e86<code>0x00001000</code>\uff0c\u548c<code>0xFFFFF000</code>\u76f8\u52a0\u540e\u5c31\u53ef\u4ee5\u62b5\u6d88\u5f71\u54cd\u4e86\u3002</li> <li>ASCII\uff0c\u662f 8 \u4f4d\u7684\uff0c\u53ef\u4ee5\u7528<code>lbu</code></li> <li>Unicode\uff0c\u662f 16 \u4f4d\u7684\uff0c\u53ef\u4ee5\u7528<code>lhu</code></li> <li>\u5c3e\u9012\u5f52 tail call / tail recursion\uff0c\u53ef\u4ee5\u8f6c\u6210\u5faa\u73af\u3002</li> </ul>"},{"location":"computer_organization/3_arithmetic/","title":"3 Arithmetic","text":"<p> \u7ea6 2982 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p>"},{"location":"computer_organization/3_arithmetic/#31-\u4e00\u4e2a\u57fa\u672c\u7684-alu","title":"3.1 \u4e00\u4e2a\u57fa\u672c\u7684 ALU","text":"<p>\u4e16\u754c\u4e0a\u4e0d\u5b58\u5728\u51cf\u6cd5\u3002\u4f17\u6240\u5468\u77e5\uff0c\u51cf\u6cd5\u5c31\u662f\u52a0\u4e0a\u76f8\u53cd\u6570\u3002\u6240\u4ee5\u8fd9\u4e2a\u4e16\u754c\u4e0a\u4e0d\u5b58\u5728\u51cf\u6cd5\u3002</p> <p>Overflow\u3002\u786c\u4ef6\u89c4\u6a21\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u8fd0\u7b97\u7ed3\u679c\u8d85\u8fc7\u8fd9\u4e2a\u9650\u5236\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6ea2\u51fa\u3002\u5bf9\u4e8e\u6709\u7b26\u53f7\u52a0\u6cd5\uff0c\u5f53\u6b63\u6570\u548c\u6b63\u6570\u76f8\u52a0\u5f97\u5230\u8d1f\u6570\uff0c\u6216\u8005\u8d1f\u6570\u548c\u8d1f\u6570\u76f8\u52a0\u5f97\u5230\u6b63\u6570\u65f6\uff0c\u5c31\u53ef\u4ee5\u5224\u5b9a\u6ea2\u51fa\u3002\u5bf9\u4e8e\u65e0\u7b26\u53f7\u52a0\u6cd5\uff0c\u5982\u679c\u7ed3\u679c\u5c0f\u4e8e\u4e8c\u8005\u4e2d\u4efb\u610f\u4e00\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u5224\u5b9a\u6ea2\u51fa\u3002</p> <p>ALU, Arithmetic Logic Unit\uff0c\u7b97\u672f\u903b\u8f91\u5355\u5143\uff0c\u6267\u884c\u4e00\u4e9b\u7b97\u672f\u8fd0\u7b97\u6216\u8005\u903b\u8f91\u8fd0\u7b97\u3002</p>"},{"location":"computer_organization/3_arithmetic/#311-1-bit-alu","title":"3.1.1 1-bit ALU","text":"<p>\uff08\u4e0b\u9762\u8fd9\u90e8\u5206\u5185\u5bb9\u5728\u8bfe\u672c\u9644\u5f55 A.5 \u5f00\u59cb\u7684\u5730\u65b9\uff09</p> <p>\u5728\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u8fd9\u95e8\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b66\u8fc7 AND, OR, XOR \u8fd9\u4e9b gates\uff0c\u4ee5\u53ca inverter \u548c mux \u8fd9\u4e9b\u4e1c\u897f\uff0c\u6211\u4eec\u5c1d\u8bd5\u7528\u8fd9\u4e9b\u4e1c\u897f\u6512\u4e00\u4e2a ALU \u51fa\u6765\u3002\u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b ALU \u5177\u6709\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u4e0e\u8fd0\u7b97\u3001\u6216\u8fd0\u7b97\u548c\u6bd4\u8f83\u7684\u80fd\u529b\u3002</p> <p>\u6211\u4eec\u5148\u8003\u8651 1 bit ALU \u7684\u6784\u9020\u3002\u6211\u4eec\u5b66\u4e60\u8fc7 1 bit Full Adder \u7684\u6784\u9020\uff1a </p> <p>\u4e0a\u5de6\u56fe\u662f\u5168\u52a0\u5668\u7684\u5177\u4f53\u6784\u9020\uff0c\u53f3\u56fe\u662f\u6211\u4eec\u5c06\u5176\u8fdb\u884c\u5c01\u88c5\u540e\u7684\u8868\u793a\u65b9\u5f0f\u3002</p> <p>\u6211\u4eec\u7ed3\u5408\u4e00\u4e2a mux\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u652f\u6301\u4e0e\u3001\u6216\u4ee5\u53ca\u52a0\u6cd5\u8fd0\u7b97\u7684 1 bit ALU\uff1a </p> <p>\u5176\u4e2d<code>Operation</code>\u662f\u7528\u6765\u6307\u660e mux \u91c7\u53d6\u54ea\u4e2a\u7ed3\u679c\u7684\u4fe1\u53f7\uff0c\u503c\u4e3a 00 01 10 \u5206\u522b\u5bf9\u5e94\u4e0e\u3001\u6216\u3001\u52a0\u6cd5\u8fd0\u7b97\u3002</p>"},{"location":"computer_organization/3_arithmetic/#312-\u52a0\u4e0a\u51cf\u6cd5\u548c-nor","title":"3.1.2 \u52a0\u4e0a\u51cf\u6cd5\u548c NOR\uff01","text":"<p>\u51cf\u6cd5\u8fd0\u7b97\u600e\u4e48\u529e\u5462\uff1f\u4f17\u6240\u5468\u77e5\uff0c\u7531\u4e8e\u8865\u7801\u6709 \\(x + \\bar x = 111\\dots111_2 = -1\\)\uff0c\u56e0\u6b64 \\(-x = \\bar x + 1\\)\uff0c\u6240\u4ee5 \\(a - b = a + (-b) = a + \\bar b + 1\\)\u3002\u636e\u6b64\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u8fd9\u6837\u7684\u7ed3\u6784\uff1a</p> <p></p> <p>\u5176\u4e2d<code>Binvert</code>\u7528\u6765\u6307\u660e\u662f\u5426\u9700\u8981\u5c06\u7ed3\u679c\u53d6\u53cd\uff1b\u5728\u8ba1\u7b97\u51cf\u6cd5\u65f6\uff0c\u6211\u4eec\u5c06<code>Binvert</code>\u8bbe\u4e3a<code>1</code>\uff0c\u7136\u540e\u5c06<code>CarryIn</code>\u4e5f\u8bbe\u4e3a<code>1</code>\uff0c<code>Operation</code>\u8bbe\u4e3a<code>2</code>\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u7ed3\u679c\u5c31\u662f \\(a + \\bar b + 1\\)\u3002</p> <p><code>NOR</code>\u8fd0\u7b97\uff1a<code>a NOR b = NOT(a OR b) = (NOT a) AND (NOT b)</code>\uff0c\u56e0\u6b64<code>NOR</code>\u8fd0\u7b97\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a</p> <p></p> <p>\u4e0a\u53f3\u56fe\u662f\u6211\u4eec\u76ee\u524d\u7684 1 bit ALU \u7684\u62bd\u8c61\u7ed3\u6784\u3002</p>"},{"location":"computer_organization/3_arithmetic/#313-\u4e32\u8054\u5f97\u5230-64-bit-alu","title":"3.1.3 \u4e32\u8054\u5f97\u5230 64-bit ALU\uff01","text":"<p>\u6709\u4e86 1 bit \u7684 ALU\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u9020\u51fa RISC-V \u6240\u9700\u7684 64 bits \u7684 ALU \u4e86\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8e 64 \u4f4d\u7684\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001AND, OR, NOR \u8fd0\u7b97\uff0c\u8fd9\u6837\u7684 64 \u4f4d ALU \u90fd\u53ef\u4ee5\u5b8c\u6210\u3002</p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u8fd9\u91cc\u9762\u9664\u4e86\u6211\u4eec\u719f\u6089\u7684\u5185\u5bb9\u5916\uff0c\u8fd8\u591a\u4e86<code>Less</code>, <code>Set</code>\u548c<code>Overflow</code>\u8fd9\u4e9b\u4f4d\u3002\u5b83\u4eec\u662f\u7528\u6765\u5e72\u4ec0\u4e48\u7684\u5462\uff1f</p> <p>\u9996\u5148<code>Overflow</code>\u662f\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u5b83\u7528\u6765\u8868\u793a\u52a0\u6cd5\u6216\u51cf\u6cd5\u6709\u6ca1\u6709\u51fa\u73b0\u6ea2\u51fa\u7684\u73b0\u8c61\uff1b\u663e\u7136\u8fd9\u4e2a\u5224\u65ad\u53ea\u9700\u8981\u5728 ALU63\uff0c\u5373 Most Significant Bit \u624d\u9700\u8981\u8fdb\u884c\u3002\u5bb9\u6613\u8bc1\u660e\uff0c\u5982\u679c \\(C_{in} \\oplus C_{out} = 1\\)\uff0c\u90a3\u4e48\u5b58\u5728\u6ea2\u51fa\uff1b\u56e0\u6b64 ALU63 \u53ea\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684 XOR \u95e8\u5373\u53ef\u5b8c\u6210\u8fd9\u4e00\u5224\u65ad\u3002</p> <p><code>Less</code>\u548c<code>Set</code>\u5171\u540c\u4f7f\u7528\uff0c\u662f\u4e3a\u4e86\u5b9e\u73b0<code>slt rd, rs1, rs2</code>\u8fd9\u4e2a\u64cd\u4f5c\u7684\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7684\u542b\u4e49\u662f\uff0c\u5982\u679c<code>rs1 &lt; rs2</code>\uff0c\u90a3\u4e48\u5c06<code>rd</code>\u7f6e\u4e3a<code>1</code>\uff0c\u5426\u5219\u7f6e\u4e3a<code>0</code>\u3002\u5982\u4f55\u8fdb\u884c\u8fd9\u4e00\u5224\u65ad\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u5982\u679c<code>rs1 - rs2</code>\u7684\u7ed3\u679c\u4e3a\u8d1f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c<code>rs1 - rs2</code>\u7ed3\u679c\u7684\u6700\u9ad8\u4f4d\u662f<code>1</code>\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e<code>rs1 &lt; rs2</code>\u3002\u6240\u4ee5\u7b49\u4ef7\u5730\uff0c\u5bf9\u4e8e<code>slt</code>\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 ALU63 \u4e2d\u52a0\u6cd5\u5668\u7684\u7ed3\u679c\u8d4b\u503c\u7ed9<code>Result0</code>\uff0c\u5373\u8fd0\u7b97\u7ed3\u679c\u7684 Least Significant Bit\uff0c\u800c\u5c06\u5176\u4ed6\u4f4d\u7684\u7ed3\u679c<code>Result1</code>~<code>Result63</code>\u90fd\u8bbe\u6210 0\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210<code>slt</code>\u64cd\u4f5c\u4e86\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u56fe\u4e2d\uff0c\u9664\u4e86 ALU0 \u7684<code>Less</code>\u6765\u81ea ALU63 \u7684<code>Set</code>\u5916\uff0c\u5176\u4ed6 ALU \u7684<code>Less</code>\u90fd\u662f<code>0</code>\u3002</p> <p>\u7ed3\u5408\u4e0a\u8ff0\u8ba8\u8bba\uff0c\u4e0a\u56fe\u4e2d ALU0 ~ ALU62 \u7684\u7ed3\u6784\u5982\u4e0b\u5de6\u56fe\u6240\u793a\uff0cALU63 \u7684\u7ed3\u6784\u5982\u4e0b\u53f3\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\uff08\u6ce8\uff1a\u53f3\u56fe\u4e2d\u7684 Overflow Detection \u88ab\u590d\u6742\u5316\u4e86\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u901a\u8fc7<code>CarryIn</code>\u548c<code>CarryOut</code>\u7684\u5f02\u6216\u5b8c\u6210\u7684\u3002\uff09</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c<code>Operation</code>\u589e\u52a0\u4e86<code>3</code>\u7684\u53d6\u503c\uff0c\u8fd9\u4e2a\u53d6\u503c\u8868\u793a\u8fdb\u884c<code>slt</code>\u64cd\u4f5c\u3002</p>"},{"location":"computer_organization/3_arithmetic/#314-\u4e00\u70b9\u4f18\u5316","title":"3.1.4 \u4e00\u70b9\u4f18\u5316\uff01","text":"<p>\u4e4b\u524d\u6211\u4eec\u4e5f\u8ba8\u8bba\u8fc7\uff0c\u5982\u679c\u505a\u51cf\u6cd5\u6216\u8005<code>slt</code>\u7684\u8bdd\uff0c\u9700\u8981\u5c06<code>Binvert</code>\u548c ALU0 \u7684<code>CarryIn</code>\u8bbe\u6210<code>1</code>\uff0c\u5982\u679c\u662f\u52a0\u6cd5\u7684\u8bdd\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u90fd\u662f<code>0</code>\uff1b\u5176\u4ed6\u8fd0\u7b97\u7528\u4e0d\u5230\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u3002\u56e0\u6b64\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u59cb\u7ec8\u53d6\u503c\u76f8\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u5408\u5e76\u4e3a\u4e00\u4e2a\uff0c\u79f0\u4e4b\u4e3a<code>Bnegate</code>\u3002</p> <p>\u53e6\u5916\uff0c\u6211\u4eec\u4e5f\u6709<code>beq</code>\uff0c<code>bne</code>\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u7ed3\u5408 Common case fast \u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u6211\u4eec\u5c06\u5224\u65ad\u7ed3\u679c\u662f\u5426\u4e3a 0 \u7684\u529f\u80fd\u4e5f\u76f4\u63a5\u52a0\u5230 ALU \u91cc\u3002</p> <p>\u7ed3\u5408\u4e0a\u8ff0\u4e24\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u5f62\u6210\u4e86\u6700\u7ec8\u7684 64-bit ALU\uff01</p> <p></p> <p>\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e00\u4e2a ALU\uff0c\u6211\u4eec\u9700\u8981 4 bits \u7684 control lines\uff0c\u5206\u522b\u662f<code>Ainvert</code>, <code>Bnegate</code>\u548c<code>Operation</code>(2 bits)\u3002ALU \u7684\u7b26\u53f7\u548c control lines \u7684\u542b\u4e49\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"computer_organization/3_arithmetic/#315-\u66f4\u5feb\u7684\u52a0\u6cd5","title":"3.1.5 \u66f4\u5feb\u7684\u52a0\u6cd5","text":"<p>\u4e0a\u9762\u7684 64 \u4f4d\u52a0\u6cd5\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u901a\u8fc7 1 \u4f4d\u52a0\u6cd5\u5668\u4e32\u8054\u5b9e\u73b0\u7684\uff0c\u8fd9\u79cd\u65b9\u5f0f\u52bf\u5fc5\u9700\u8981\u7b49\u5f85\u524d\u4e00\u4e2a\u52a0\u6cd5\u5668\u7b97\u51fa\u7ed3\u679c\u540e\u624d\u80fd\u7b97\u540e\u4e00\u4e2a\u7684\u3002\u8fd9\u79cd\u591a\u4f4d\u52a0\u6cd5\u5668\u7684\u5b9e\u73b0\u79f0\u4e3a\u884c\u6ce2\u52a0\u6cd5\u5668 Ripple Carry Adder, RCA\u3002\u663e\u7136\uff0c\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u6bd4\u8f83\u6162\u3002</p> <p>\u90a3\u4e48\uff0c\u5982\u4f55\u52a0\u901f\u5462\uff1f</p>"},{"location":"computer_organization/3_arithmetic/#3151-carry-lookahead-adder-cla","title":"3.1.5.1 Carry Lookahead Adder, CLA","text":"<p>\u8bfe\u672c\u6307\u51fa\uff0cRCA \u7f13\u6162\u7684\u91cd\u8981\u539f\u56e0\u662f\u540e\u4e00\u4e2a adder \u9700\u8981\u7b49\u524d\u4e00\u4e2a adder \u7684 carry \u7ed3\u679c\uff1b\u4f46\u6211\u4eec\u4e0d\u59a8\u8ba8\u8bba\u51fa\u73b0 carry \u7684\u53ef\u80fd\u3002\u7b2c\u4e00\u79cd\u53ef\u80fd\u662f\uff0c\u5982\u679c \\(a\\) \u548c \\(b\\) \u90fd\u662f 1\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a \u751f\u6210 \u4e00\u4e2a carry\uff1b\u53e6\u4e00\u79cd\u53ef\u80fd\u662f\uff0c\u5982\u679c \\(a\\) \u548c \\(b\\) \u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u662f 1\uff0c\u90a3\u4e48\u5982\u679c\u4f20\u5165\u7684 carry \u662f 1\uff0c\u5219\u8fd9\u91cc\u4e5f\u4f1a carry\uff0c\u5373 carry \u88ab \u4f20\u64ad \u4e86\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\\(c_{out} = a \\cdot b + (a + b)\\cdot c_{in}\\)\u3002\u6211\u4eec\u8bb0 generate \\(g = a\\cdot b\\)\uff0cpropagate \\(p = a + b\\)\uff0c\u5219\u6709 \\(c_{out} = g + p \\cdot c_{in}\\)\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6784\u9020\u4e00\u4e2a\u5168\u52a0\u5668\uff1a</p> <p></p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u5bfc\u51fa\u5982\u4e0b\u5173\u7cfb\uff1a</p> <p></p> <p>\u5229\u7528\u8fd9\u4e2a\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u8fd9\u6837\u4e00\u4e2a\u56db\u4f4d\u52a0\u6cd5\u5668\uff1a</p> <p></p> <p>\u4e0a\u9762\u7684 PFA, Partial Fully Adder\uff0c\u5c31\u662f\u524d\u9762\u6211\u4eec\u6784\u9020\u7684\u65b0\u5168\u52a0\u5668\u7684\u4e00\u90e8\u5206\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u901f\u52a0\u6cd5\u7684\u8fd0\u7b97\uff1b\u4f46\u662f\u6ce8\u610f\u5230\u8d8a\u5230\u9ad8\u4f4d\uff0c\u95e8\u7684 fan-in \u5c31\u8d8a\u5927\uff0c\u4f46\u662f\u8fd9\u4e0d\u662f\u53ef\u4ee5\u4e00\u76f4\u589e\u52a0\u7684\u3002\u6240\u4ee5\u5bf9\u4e8e\u66f4\u591a\u4f4d\u6570\u7684\u52a0\u6cd5\u5668\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u8fd9\u6837\u6784\u6210\u7684 4-bit CLA \u518d\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u5f0f\u4e32\u8d77\u6765\uff01</p> <p></p>"},{"location":"computer_organization/3_arithmetic/#3152-carry-skip-adder-\u9a6c\u5fb7\u5148\u751f\u6ca1\u8bb2","title":"3.1.5.2 Carry Skip Adder (\u9a6c\u5fb7\u5148\u751f\u6ca1\u8bb2)","text":""},{"location":"computer_organization/3_arithmetic/#3153-carry-select-adder-csa","title":"3.1.5.3 Carry Select Adder, CSA","text":"<p>\u8fd9\u4e2a\u601d\u8def\u5176\u5b9e\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u628a\u8f93\u5165 carry \u4e3a 0 \u6216\u8005 1 \u7684\u60c5\u51b5\u90fd\u7b97\u4e00\u904d\uff0c\u7136\u540e\u6839\u636e\u5b9e\u9645\u7684\u60c5\u51b5\u4ece\u4e2d\u9009\u51fa\u6b63\u786e\u7684\u90a3\u79cd\u5c31\u597d\u4e86\uff1a</p> <p></p> <p></p>"},{"location":"computer_organization/3_arithmetic/#32-\u4e58\u6cd5-\u6682\u65f6\u4e0d\u60f3\u5b66\u4e86\u542c\u8bf4\u8003\u7684\u4e0d\u591a","title":"3.2 \u4e58\u6cd5 \u6682\u65f6\u4e0d\u60f3\u5b66\u4e86\uff0c\u542c\u8bf4\u8003\u7684\u4e0d\u591a","text":"<p>\u4e0b\u9762\u8fd9\u6837\u7684\u786c\u4ef6\u7ed3\u6784\u53ef\u4ee5\u5b9e\u73b0\u65e0\u7b26\u53f7\u4e58\u6cd5\uff1a</p> <p></p>"},{"location":"computer_organization/3_arithmetic/#33-\u9664\u6cd5-\u6682\u65f6\u4e0d\u60f3\u5b66\u4e86\u542c\u8bf4\u8003\u7684\u4e0d\u591a","title":"3.3 \u9664\u6cd5 \u6682\u65f6\u4e0d\u60f3\u5b66\u4e86\uff0c\u542c\u8bf4\u8003\u7684\u4e0d\u591a","text":""},{"location":"computer_organization/3_arithmetic/#34-\u6d6e\u70b9\u8fd0\u7b97","title":"3.4 \u6d6e\u70b9\u8fd0\u7b97","text":""},{"location":"computer_organization/3_arithmetic/#341-ieee-754-\u6d6e\u70b9\u8868\u793a","title":"3.4.1 IEEE 754 \u6d6e\u70b9\u8868\u793a","text":"<p>\u6211\u4eec\u5c06\u5c0f\u6570\u70b9\u5de6\u8fb9\u53ea\u6709 1 \u4f4d\u6570\u5b57\u7684\u8868\u793a\u6570\u7684\u65b9\u6cd5\u79f0\u4e3a \u79d1\u5b66\u8bb0\u6570\u6cd5, scientific notation\uff0c\u800c\u5982\u679c\u5c0f\u6570\u70b9\u5de6\u8fb9\u7684\u6570\u5b57\u4e0d\u662f 0\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u6570\u7684\u8868\u793a\u662f\u4e00\u4e2a \u89c4\u683c\u5316\u6570, normalized number\u3002\u79d1\u5b66\u8bb0\u6570\u6cd5\u80fd\u7528\u6765\u8868\u793a\u5341\u8fdb\u5236\u6570\uff0c\u5f53\u7136\u4e5f\u80fd\u7528\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u3002</p> <p>IEEE 754 \u89c4\u5b9a\u4e86\u4e00\u79cd\u6d6e\u70b9\u6570\u6807\u51c6\uff1a\u6211\u4eec\u5c06\u6d6e\u70b9\u6570\u8868\u793a\u4e3a \\((-1)^S \\times F \\times 2^E\\) \u7684\u5f62\u5f0f\uff0c\u8fd9\u91cc\u7684 \\(F \\times 2^E\\) \u662f\u4e00\u4e2a\u89c4\u683c\u5316\u6570\uff0c\u800c \\((-1)^S\\) \u7528\u6765\u8868\u793a\u7b26\u53f7\u4f4d\uff1a\\(S\\) \u4e3a 0 \u8bf4\u660e\u8be5\u6d6e\u70b9\u6570\u4e3a\u6574\u6570\uff0c\u4e3a 1 \u5219\u4e3a\u8d1f\u6570\uff1b\\(F\\) \u548c \\(E\\) \u4e5f\u7528\u82e5\u5e72 bits \u8868\u793a\uff0c\u5206\u522b\u8868\u793a\u5c3e\u6570\u548c\u6307\u6570\uff0c\u6211\u4eec\u7a0d\u540e\u8ba8\u8bba\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u5176\u8868\u793a\u4e3a \\(1.\\text{xxxxx}_2\\times 2^{\\text{yyyy}}\\) \u7684\u5f62\u5f0f\uff08\u4e3a\u4ec0\u4e48\u5c0f\u6570\u70b9\u5de6\u8fb9\u662f 1 \u5462\uff1f\u56e0\u4e3a\u4e8c\u8fdb\u5236\u53ea\u6709 0 \u548c 1\uff0c\u800c\u89c4\u683c\u5316\u8981\u6c42\u5c0f\u6570\u70b9\u5de6\u8fb9\u4e0d\u80fd\u4e3a 0\uff09\u3002\u6211\u4eec\u901a\u8fc7\u79d1\u5b66\u8bb0\u6570\u6cd5\u8c03\u6574\u4e86\u5c0f\u6570\u70b9\u7684\u4f4d\u7f6e\u4f7f\u5176\u6ee1\u8db3\u89c4\u683c\u5316\u7684\u8981\u6c42\uff0c\u56e0\u6b64\u6211\u4eec\u79f0\u8fd9\u79cd\u6570\u7684\u8868\u793a\u65b9\u6cd5\u4e3a \u6d6e\u70b9, floating point\u3002</p> <p>\u5c0f\u6570\u70b9\u7684\u82f1\u6587\u662f decimal point\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\u4e0d\u518d\u662f decimal \u7684\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u8d77\u4e2a\u65b0\u540d\u5b57\uff1a\u4e8c\u8fdb\u5236\u5c0f\u6570\u70b9, binary point\u3002</p> <p>IEEE 754 \u89c4\u5b9a\u4e86\u4e24\u79cd\u7cbe\u5ea6\u7684\u6d6e\u70b9\u6570\u683c\u5f0f\uff0c\u5206\u522b\u662f single precision \u548c double precision\uff08\u5206\u522b\u5bf9\u5e94 C \u8bed\u8a00\u4e2d\u7684<code>float</code>\u548c<code>double</code>\uff09\uff0cRISC-V \u8fd9\u4e24\u79cd\u90fd\u652f\u6301\uff1a</p> <p></p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0cfraction \u7684\u4f4d\u6570\u8d8a\u591a\uff0c\u6d6e\u70b9\u6570\u7684\u7cbe\u5ea6\u5c31\u8d8a\u9ad8\uff1b\u800c exponent \u7684\u4f4d\u6570\u8d8a\u591a\uff0c\u6d6e\u70b9\u6570\u80fd\u4fdd\u5b58\u7684\u8303\u56f4\u5c31\u8d8a\u5927\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e \\((-1)^S \\times F \\times 2^E\\)\uff0c\\(S\\) \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u65b9\u6cd5\u662f\u663e\u7136\u7684\uff0c\u4ec5\u9700\u8981\u4e00\u4e2a bit \u5c31\u597d\u4e86\u3002\u90a3\u4e48 \\(F\\) \u548c \\(E\\) \u600e\u4e48\u8868\u793a\u5462\uff1f\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\\(F\\) \u5c31\u662f \\(1.\\text{xxxxx}_2\\) \u7684\u5f62\u5f0f\uff0c\u8fd9\u4e2a 1 \u662f\u56fa\u5b9a\u7684\uff0c\u56e0\u6b64 \\(F\\) \u53ea\u9700\u8981\u4fdd\u5b58 \\(\\text{xxxxx}\\) \u7684\u90e8\u5206\u5c31\u53ef\u4ee5\u4e86\uff01\u90a3\u4e48 \\(E\\) \u600e\u4e48\u529e\u5462\uff1f\u6ce8\u610f\u5230\u8fd9\u4e2a\u6307\u6570\u53ef\u80fd\u662f\u6b63\u6574\u6570\u3001\u8d1f\u6574\u6570\u6216 0\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u504f\u79fb\uff0c\u5bf9\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u504f\u79fb 127\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u504f\u79fb 1023\uff08\u521a\u597d\u662f\u8868\u793a\u8303\u56f4\u7684\u4e00\u534a\uff01\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4fdd\u5b58\u7684 <code>exponent</code> \u5176\u5b9e\u662f \\(E + bias\\) \u7684\u4e8c\u8fdb\u5236\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e00\u4e2a\u8868\u793a\uff0c\u5176\u503c\u662f\uff1a</p> \\[(-1)^S\\cdot (1 + \\text{fraction}) \\cdot 2 ^ {\\text{exponent} - \\text{bias}}\\] <p>\u8bfe\u672c\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p></p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u4f1a\u95ee\uff0c0 \u5e94\u8be5\u600e\u4e48\u4fdd\u5b58\u5462\uff1f\u6bd5\u7adf 0 \u6ca1\u6709\u524d\u5bfc 1\u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u7279\u6b8a\u60c5\u5f62\uff0cIEEE 754 \u6709\u7279\u522b\u89c4\u5b9a\uff0c\u7528\u7279\u6b8a\u7684\u503c\u4fdd\u5b58\u5b83\u4eec\uff1a</p> <p></p> <p>\u5728\u4e0a\u8868\u4e2d\uff1a</p> <ul> <li>\u7b2c 1 \u6761\u8868\u793a 0\uff1b</li> <li>\u7b2c 2 \u6761\u8868\u793a\u975e\u89c4\u683c\u5316\u6570\uff0c\u8fd9\u79cd\u6570\u4e3b\u8981\u662f\u4e3a\u4e86\u7528\u6765\u8868\u793a\u4e00\u4e9b\u5f88\u5c0f\u7684\u6570\uff0c\u5b83\u7684\u53d6\u503c\u4e3a \\((-1)^S\\cdot (\\mathbf{0} + \\text{fraction}) \\cdot 2 ^ {- \\text{bias}}\\)\uff1b\u4f46\u662f\u5e76\u975e\u6240\u6709\u673a\u5668\u90fd\u652f\u6301\u8fd9\u79cd\u8868\u793a\uff0c\u6709\u7684\u673a\u5668\u4f1a\u76f4\u63a5\u629b\u51fa\u4e00\u4e2a exception\u3002\u6211\u4eec\u4e0d\u8003\u8651\u975e\u89c4\u683c\u6570\u7684\u5b58\u5728\uff1b</li> <li>\u7b2c 3 \u6761\u8868\u793a\u6b63\u5e38\u7684\u6d6e\u70b9\u6570\uff1b</li> <li>\u7b2c 4 \u6761\u8868\u793a\u65e0\u7a77\u5927\u6216\u8005\u65e0\u7a77\u5c0f\uff0c\u51fa\u73b0\u5728 exponent overflow \u6216\u8005\u6d6e\u70b9\u6570\u8fd0\u7b97\u4e2d\u975e 0 \u6570\u9664\u4ee5 0 \u7684\u60c5\u51b5\uff1b</li> <li>\u7b2c 5 \u6761\u8868\u793a\u975e\u6570\uff0c\u51fa\u73b0\u5728 0/0, inf / inf, inf - inf, inf * 0 \u7684\u60c5\u51b5</li> </ul> <p>\uff08\u5982\u679c\u6570\u5b57\u8fc7\u5927\u4e0d\u80fd\u8868\u793a\uff0c\u5373 overflow\uff0c\u5219\u7ed3\u679c\u7f6e\u4e3a inf\uff1b\u5982\u679c\u6570\u5b57\u8fc7\u5c0f\u4e0d\u80fd\u8868\u793a\uff0c\u5373 underflow\uff0c\u5219\u7ed3\u679c\u7f6e\u4e3a 0\u3002\uff09</p> <p>\u8fd9\u4e24\u79cd\u8868\u793a\u6cd5\u7684\u8303\u56f4\u548c\u7cbe\u5ea6\u5206\u522b\u662f\u591a\u5c11\u5462\uff1f</p> <ul> <li> <p>\u8303\u56f4</p> <ul> <li>\u80fd\u8868\u793a\u503c\u7684 \u7edd\u5bf9\u503c \u7684\u8303\u56f4\u662f \\(1.0_2 \\times 2^{1-\\text{bias}} \\sim 1.11\\dots 11_2 \\times 2^{11\\dots 11_2-1-\\text{bias}}\\)\uff0c\u5373 \\(1\\times 2^{1 - \\text{bias}}\\sim(2 - 2^\\text{Fra#})\\times 2^{(2^\\text{Exp#} - 1) - 1 - \\text{bias}}\\)\uff0c\u5176\u4e2d<code>Fra#</code>\u548c<code>Exp#</code>\u5206\u522b\u8868\u793a fraction \u548c exponent \u7684\u4f4d\u6570\uff1b</li> <li>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(\\pm 1\\times 2^{-126}\\sim \\pm(2 - 2^{23}) \\times 2^{127}\\)</li> <li>\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(\\pm 1\\times 2^{-1022}\\sim \\pm(2 - 2^{52}) \\times 2^{1023}\\)</li> </ul> </li> <li> <p>\u7cbe\u5ea6</p> <ul> <li>\\(2^ \\text{-Fra#}\\)</li> <li>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(2^{-23}\\)</li> <li>\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(2^{-52}\\)</li> </ul> </li> </ul> <p>18~19 Final</p> <p></p> \u7b54\u6848 <p>+inf, 0xBF800000</p> <p>\u53ef\u4ee5\u8bd5\u4e00\u4e0b -32.6\uff0c\u7ed3\u679c\u53ef\u4ee5\u81ea\u5df1\u5728 IEEE-754 Floating Point Converter \u91cc\u9762\u627e~</p>"},{"location":"computer_organization/3_arithmetic/#342-\u6d6e\u70b9\u52a0\u6cd5","title":"3.4.2 \u6d6e\u70b9\u52a0\u6cd5","text":"<p>\u4ee5 \\(1.000_2\\times2^{-1}-1.110_2\\times2^{-2}\\) \u4e3a\u4f8b\uff0c \u6d6e\u70b9\u6570\u7684\u52a0\u51cf\u6cd5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a</p> <ol> <li>\u6307\u6570\u5bf9\u9f50\uff0c\u5c06\u5c0f\u6307\u6570\u5bf9\u9f50\u5230\u5927\u6307\u6570\uff1a\\(-1.110_2\\times2^{-2} = -0.111\\times2^{-1}\\)</li> <li>Fraction \u90e8\u5206\u76f8\u52a0\u51cf\uff1a\\(1.000-0.111=0.001\\)</li> <li>\u5c06\u7ed3\u679c\u89c4\u683c\u5316\uff1a\\(0.001\\times2^{-1}=1.000\\times2^{-4}\\)\uff1b\u540c\u65f6\u9700\u8981\u68c0\u67e5\u662f\u5426\u51fa\u73b0 overflow \u6216\u8005 underflow\uff0c\u5982\u679c\u51fa\u73b0\u5219\u89e6\u53d1 Exception</li> <li>\u5c06 Fraction \u90e8\u5206\u820d\u5165\u5230\u6b63\u786e\u4f4d\u6570\uff1b\u820d\u5165\u7ed3\u679c\u53ef\u80fd\u8fd8\u9700\u8981\u89c4\u683c\u5316\uff0c\u6b64\u65f6\u56de\u5230\u6b65\u9aa4 3 \u7ee7\u7eed\u8fd0\u884c</li> </ol> <p></p> <p></p>"},{"location":"computer_organization/3_arithmetic/#343-\u6d6e\u70b9\u4e58\u6cd5","title":"3.4.3 \u6d6e\u70b9\u4e58\u6cd5","text":"<p>\u5206\u522b\u5904\u7406\u7b26\u53f7\u4f4d\u3001exponent \u548c fraction\uff1a</p> <ul> <li>Exponent \u76f8\u52a0\u5e76 \u51cf\u53bb bias\uff0c\u56e0\u4e3a bias \u52a0\u4e86 2 \u6b21</li> <li>Fraction \u90e8\u5206\u76f8\u4e58\uff0c\u5e76\u5c06\u5176\u89c4\u683c\u5316\uff1b\u6b64\u65f6\u540c\u6837\u8981\u8003\u8651 overflow \u548c underflow\uff1b\u7136\u540e\u820d\u5165\uff0c\u5982\u679c\u8fd8\u9700\u8981\u89c4\u683c\u5316\u5219\u91cd\u590d\u6267\u884c</li> <li>\u6839\u636e\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u7b26\u53f7\u51b3\u5b9a\u7ed3\u679c\u7684\u7b26\u53f7</li> </ul> <p></p>"},{"location":"computer_organization/3_arithmetic/#344-\u7cbe\u786e\u7b97\u672f","title":"3.4.4 \u7cbe\u786e\u7b97\u672f","text":"<p>IEEE 754 \u89c4\u5b9a\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u820d\u5165\u63a7\u5236\uff0c\u7528\u6765\u4fdd\u8bc1\u820d\u5165\u7684\u7cbe\u786e\u6027\u3002</p> <p>Round modes</p> <p></p> <p>Round to nearest even \u53ea\u5bf9 0.5 \u6709\u6548\uff0c\u522b\u7684\u90fd\u548c\u56db\u820d\u4e94\u5165\u4e00\u6837</p> <p>\u4e00\u822c\u7684\u6d6e\u70b9\u6570\u540e\u9762\u8fd8\u4f1a\u6709 2 bits\uff0c\u5206\u522b\u79f0\u4e3a guard \u548c round\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u8ba1\u7b97\u7ed3\u679c\u7684\u820d\u5165\u66f4\u52a0\u7684\u7cbe\u786e\uff1a </p> <p></p> <p>\u4e8b\u5b9e\u4e0a\u52a0\u6cd5\u53ea\u9700\u8981\u7528\u5230 guard\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e58\u6cd5\uff0c\u5982\u679c\u5b58\u5728\u524d\u5bfc 0\uff0c\u9700\u8981\u5c06\u7ed3\u679c\u5de6\u79fb\uff0c\u8fd9\u65f6\u5019 round bit \u5c31\u6210\u4e86\u6709\u6548\u4f4d\uff0c\u80fd\u907f\u514d\u7cbe\u5ea6\u7684\u635f\u5931\u3002</p> <p>\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a\u4f4d\u53eb sticky bit\uff0c\u5176\u5b9a\u4e49\u662f\uff1a\u53ea\u8981 round \u53f3\u8fb9\u6709\u975e\u96f6\u4f4d\uff0c\u5c31\u5c06 sticky \u7f6e 1\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u7528\u5728\u52a0\u6cd5\u7684\u53f3\u79fb\u4e2d\uff0c\u53ef\u4ee5\u8bb0\u4f4f\u662f\u5426\u6709 1 \u88ab\u79fb\u51fa\uff0c\u4ece\u800c\u80fd\u591f\u5b9e\u73b0 \"round to nearest even\"\u3002</p>"},{"location":"computer_organization/4_processor/","title":"4 Processor","text":"<p> \u7ea6 4340 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f</p> <p>Warning</p> <p>\u7531\u4e8e\u65f6\u95f4\u539f\u56e0\uff0c\u672c\u6587\u540e\u534a\u90e8\u5206\u6709\u4e00\u4e9b\u5730\u65b9\u4e0d\u5b8c\u6574\u3002</p> <p>\u6211\u4eec\u8ba8\u8bba\u8fc7\uff0c\u8ba1\u7b97\u673a\u7684 performance \u53d7 inst#, clock cycle time \u548c clock cycles per inst (CPI) \u51b3\u5b9a\u3002Clock cycle time \u548c CPI \u53d7 processor \u7684\u5b9e\u73b0\u65b9\u5f0f\u5f71\u54cd\u3002\u672c\u7ae0\u4ecb\u7ecd RISC-V \u7684 processor \u4e00\u79cd\u5b9e\u73b0\u3002</p>"},{"location":"computer_organization/4_processor/#41-datapath","title":"4.1 Datapath","text":""},{"location":"computer_organization/4_processor/#411-overview","title":"4.1.1 Overview","text":"<p>\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a RISC-V \u6838\u5fc3\u6307\u4ee4\u7684\u5b9e\u73b0\uff08\u5e76\u4e0d\u5b8c\u6574\uff09\uff0c\u5305\u62ec <code>ld</code> ,  <code>sd</code> ,  <code>add</code> ,  <code>sub</code> ,  <code>and</code> ,  <code>or</code> ,  <code>beq</code> \u3002\u6211\u4eec\u7b80\u5355\u8fdb\u884c\u5206\u6790\u3002</p> <ul> <li>PC \u5bc4\u5b58\u5668\u5b58\u50a8\u5f53\u524d\u8fd0\u884c\u5230\u7684\u6307\u4ee4\u7684\u5730\u5740\u3002PC \u5bc4\u5b58\u5668\u8fde\u5230 Instruction memory \u4e2d\uff0c\u8bfb\u51fa\u7684\u7ed3\u679c\u5c31\u662f\u5f53\u524d\u8981\u8fd0\u884c\u7684\u6307\u4ee4\u3002\u8fd9\u4e2a\u6307\u4ee4\u88ab Control \u89e3\u6790\u4ea7\u751f\u76f8\u5e94\u7684\u4fe1\u53f7\u3002\u6211\u4eec\u5728 4.1.6 \u5c0f\u8282\u4e2d\u5177\u4f53\u8bf4\u660e\u5b83\u7684\u5b9e\u73b0\u3002</li> </ul>"},{"location":"computer_organization/4_processor/#412-r-\u578b\u6307\u4ee4","title":"4.1.2 R \u578b\u6307\u4ee4","text":"<ul> <li><code>add</code> ,  <code>sub</code> ,  <code>and</code> ,  <code>or</code> \u8fd9\u51e0\u4e2a R \u578b\u6307\u4ee4\u603b\u5171\u9700\u8981\u8bbf\u95ee 3 \u4e2a\u5bc4\u5b58\u5668\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</li> </ul> <ul> <li>(1) \u5904\u53d6\u51fa\u6307\u4ee4\uff0c <code>[6:0]</code> \u88ab\u9001\u5230 Control \u4ea7\u751f\u5bf9\u5e94\u7684\u63a7\u5236\u4fe1\u53f7\uff0c\u6211\u4eec\u7a0d\u540e\u53ef\u4ee5\u770b\u5230\uff1b <code>[19:15]</code> ,  <code>[24:20]</code> ,  <code>[11:7]</code> \u5206\u522b\u5bf9\u5e94 <code>rs1</code> , <code>rs2</code> , <code>rd</code> \uff0c\u88ab\u8fde\u5165 Registers \u8fd9\u4e2a\u7ed3\u6784\uff0c\u5bf9\u5e94\u5730 <code>Read data 1</code> \u548c <code>Read data 2</code> \u4e24\u5904\u7684\u503c\u5373\u53d8\u4e3a <code>rs1</code> , <code>rs2</code> \u7684\u503c\uff1b</li> <li>(2) \u5904 MUX \u5728 <code>ALUSrc = 0</code> \u7684\u4fe1\u53f7\u4f5c\u7528\u4e0b\u9009\u62e9 <code>Read data 2</code> \u4f5c\u4e3a ALU \u7684\u8f93\u5165\u4e0e <code>Read data 1</code> \u8fdb\u884c\u8fd0\u7b97\uff0c\u5177\u4f53\u7684\u8fd0\u7b97\u7531 <code>ALU control</code> \u63d0\u4f9b\u7684\u4fe1\u53f7\u6307\u660e\uff08\u6211\u4eec\u5728 4.1.3 \u5c0f\u8282 \u8ba8\u8bba\u8fd9\u4e2a\u8bdd\u9898\uff09\u3002\u8fd0\u7b97\u7ed3\u679c\u5728 <code>ALU result</code> \u4e2d\u3002</li> <li>(3) \u5904 MUX \u5728 <code>MemtoReg = 0</code> \u7684\u4fe1\u53f7\u4f5c\u7528\u4e0b\u9009\u62e9 <code>ALU result</code> \u4f5c\u4e3a\u5199\u56de Register \u7684\u503c\uff0c\u8fde\u5230 (4) \u5904\uff1b\u5728 (5) \u5904 <code>RegWrite = 1</code> \u4fe1\u53f7\u63a7\u5236\u4e0b\uff0c\u8be5\u503c\u5199\u5165\u5230 <code>rd</code> \u5bc4\u5b58\u5668\u4e2d\u3002</li> </ul> <p>\u8fd9\u5c31\u662f R \u578b\u6307\u4ee4\u7684\u8fd0\u884c\u8fc7\u7a0b\u3002\u6267\u884c\u5b8c\u6307\u4ee4\u540e PC \u4f1a +4\uff0c\u6211\u4eec\u5728 4.1.4 \u5c0f\u8282 \u8ba8\u8bba\u8fd9\u4e00\u64cd\u4f5c\u7684\u5b9e\u73b0\u3002</p> <p>Info</p> <p>\u6709\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u4f1a\u95ee\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981 <code>RegWrite</code> \u8fd9\u4e2a\u63a7\u5236\u4fe1\u53f7\u5462\uff1f\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a <code>Write register</code> \u548c <code>Write data</code> \u8fd9\u4e24\u6761\u7ebf\u59cb\u7ec8\u662f\u8fde\u7740\u7684\uff0cReg files \u9700\u8981\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u5199\u5165\u5bc4\u5b58\u5668\uff0c\u56e0\u6b64\u53ea\u6709\u5f53 <code>RegWrite = 1</code> \u65f6\u624d\u4f1a\u88ab\u5bf9\u5e94\u5730\u5199\u5165\u3002</p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u53c8\u4f1a\u95ee\u4e86\uff0c\u4e3a\u4ec0\u4e48 <code>PC</code> \u5bc4\u5b58\u5668\u4e5f\u8981\u5199\u5165\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u63a7\u5236\u4fe1\u53f7\u5462\uff1f\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a <code>PC</code> \u5728 \u6bcf\u4e2a \u65f6\u949f\u5468\u671f\u90fd\u4f1a\u88ab\u5199\u5165\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5728\u65f6\u949f\u7684 \u6bcf\u4e2a \u4e0a\u5347\u6cbf\u6216\u8005\u4e0b\u964d\u6cbf\u89e6\u53d1\u5c31\u597d\u4e86\uff08\u6211\u4eec\u91c7\u53d6\u7684\u8bbe\u8ba1\u662f\u4e0b\u964d\u6cbf\u89e6\u53d1\uff0c\u6211\u4eec\u5728 4.2.3 \u5c0f\u8282 \u518d\u8ba8\u8bba\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bbe\u8ba1\uff09\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u63a7\u5236\u4fe1\u53f7\u4e86\u3002</p>"},{"location":"computer_organization/4_processor/#413-alu-control","title":"4.1.3 ALU Control","text":"<p>\u5728 3.1 \u8282\u4e2d\uff0c\u6211\u4eec\u8bbe\u8ba1\u7684 ALU \u9700\u8981\u8fd9\u6837\u7684\u63a7\u5236\u7ed3\u6784\uff1a</p> <p></p> <p>\u6211\u4eec\u5217\u4e00\u4e0b\u9700\u8981\u4f7f\u7528 ALU \u7684\u6307\u4ee4\u7684\u8868\u683c\uff08\u6211\u4eec\u5728\uff09\uff1a</p> <p></p> <p>\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u8868\u5217\u51fa\u771f\u503c\u8868\uff1a</p> <p></p> <p>\u5176\u4e2d\u53ef\u4ee5\u53d1\u73b0\uff0c\u6807\u4e3a\u7eff\u8272\u7684\u5217\u7684\u53d6\u503c\u8981\u4e48\u662f 0 \u8981\u4e48\u662f\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u5e76\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u771f\u503c\u8868\u6784\u9020\u95e8\u7535\u8def\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u51fa ALU control \u5355\u5143\u4e86\u3002\u5982\u56fe\u4e2d\u6240\u793a\uff0c\u8be5\u5355\u5143\u4f9d\u8d56 Control \u5355\u5143\u7ed9\u51fa\u7684 <code>ALUOp</code> \u4fe1\u53f7\u4ee5\u53ca <code>I[30, 14:2]</code> \uff1a</p> <p></p> <p>Info</p> <p>ALU control \u6a21\u5757\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a</p> <p></p> <p>\u9700\u8981\u7406\u89e3\u7684\u662f\uff0c\u6211\u4eec\u5e76\u4e0d\u662f\u6839\u636e\u673a\u5668\u7801\u6765\u6784\u9020\u7535\u8def\u7684\uff0c\u800c\u662f\u76f8\u53cd\uff1a\u7535\u8def\u7684\u8bbe\u8ba1\u53c2\u8003\u4e86\u5f88\u591a\u65b9\u9762\u7684\u95ee\u9898\uff0c\u673a\u5668\u7801\u5e94\u5f53\u4e3b\u8981\u8fce\u5408\u7535\u8def\u4f7f\u5176\u8bbe\u8ba1\u66f4\u52a0\u65b9\u4fbf\u3002</p>"},{"location":"computer_organization/4_processor/#414-\u8df3\u8f6c\u6307\u4ee4\u4e0e-imm-gen-\u6a21\u5757","title":"4.1.4 \u8df3\u8f6c\u6307\u4ee4\u4e0e Imm Gen \u6a21\u5757","text":"<ul> <li>\u5728\u4e00\u6761\u6307\u4ee4\u8fd0\u884c\u5b8c\u540e\uff0c\u5982\u679c\u4e0d\u53d1\u751f\u8df3\u8f6c\uff0cPC + 4\uff0c\u5426\u5219 PC \u8df3\u8f6c\u5230 PC + offset \u7684\u4f4d\u7f6e\u53bb\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u5982\u4f55\u5b8c\u6210\u7684\u5462\uff1f\u770b\u4e0b\u56fe\uff1a</li> </ul> <ul> <li>(1) \u4e2d\u6709\u4e24\u4e2a\u52a0\u6cd5\u5668\uff0c\u4e00\u4e2a\u7684\u7ed3\u679c\u662f PC + 4\uff0c\u53e6\u4e00\u4e2a\u662f PC + offset\uff0c\u5176\u4e2d offset \u662f\u6765\u81ea\u5f53\u524d instruction \u7684\uff1b\u8fd9\u4e24\u4e2a\u52a0\u6cd5\u5668\u901a\u8fc7 MUX \u9001\u7ed9 PC</li> <li>MUX \u7684\u63a7\u5236\u4fe1\u53f7\u6765\u81ea  (2)\uff0c (2) \u662f\u4e00\u4e2a\u4e0e\u95e8\uff0c\u5373\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u8f93\u5165\u4fe1\u53f7\u90fd\u4e3a\u771f\u65f6\u624d\u4f1a\u8f93\u51fa 1\uff0c\u4ece\u800c\u5728\u4e0a\u8ff0 MUX \u4e2d\u9009\u62e9\u8df3\u8f6c\u3002 (2) \u7684\u4e24\u4e2a\u8f93\u5165\u5206\u522b\u6765\u81ea\uff1a<ul> <li>(5) \u8fd9\u4e2a ALU \u7684 Zero \u4fe1\u53f7\uff0c\u8fd9\u662f\u7b2c 3 \u7ae0\u4e2d\u6211\u4eec\u8bbe\u8ba1\u7684\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0 <code>beq</code> \u7684\u7ed3\u6784\uff1b\u6211\u4eec\u8ba8\u8bba\u8fc7\u5b9e\u73b0 <code>beq</code> \u5176\u5b9e\u5c31\u662f\u8ba1\u7b97 <code>rs1 - rs2</code> \u5224\u65ad\u5176\u662f\u5426\u4e3a 0\uff0c\u6240\u4ee5\u8fd9\u91cc\u6839\u636e Zero \u662f\u5426\u4e3a 0 \u5c31\u80fd\u5224\u65ad\u4e24\u4e2a\u5bc4\u5b58\u5668\u662f\u5426\u76f8\u7b49</li> <li>(4) \u5904 Control \u7ed9\u51fa\u7684 <code>Branch</code> \u4fe1\u53f7\uff0c\u5373\u5982\u679c\u8fd9\u4e2a\u8bed\u53e5\u662f\u8df3\u8f6c\u8bed\u53e5\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u4fe1\u53f7\u4f1a\u7f6e\u4e3a 1</li> </ul> </li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e14\u4ec5\u5f53\u8bed\u53e5\u786e\u5b9e\u662f <code>beq</code> \u800c\u4e14 <code>Zero</code> \u4fe1\u53f7\u7684\u503c\u786e\u5b9e\u4e3a 1 \u65f6\u624d\u4f1a\u8fdb\u884c\u8df3\u8f6c\u3002</p> <ul> <li>\u518d\u6765\u770b\u770b\u5f53\u8fdb\u884c\u8df3\u8f6c\u7684\u65f6\u5019\uff0c (3) \u5904\u7684 offset \u6765\u81ea\u54ea\u91cc\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e2a offset \u6765\u81ea\u4e8e <code>I[31:0]</code> \uff0c\u4e5f\u5c31\u662f\u6574\u4e2a\u6307\u4ee4\uff1b\u5b83\u88ab\u4f20\u7ed9 Imm Gen \u6a21\u5757\uff0c\u5c06\u6307\u4ee4\u4e2d\u7684\u7acb\u5373\u6570\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d\uff1b\u7136\u540e\u5728  (3) \u5904\u5de6\u79fb 1 \u4f4d\uff08\u8bf7\u56de\u987e\uff0c\u56e0\u4e3a RISC-V \u6307\u4ee4\u603b\u662f 2 \u5b57\u8282\u5bf9\u9f50 [\u6211\u4eec\u5b66\u7684\u90fd\u662f 4 \u5b57\u8282\u5bf9\u9f50]\uff0c\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u4fdd\u5b58\u504f\u79fb\u7684\u6700\u4f4e\u4e00\u4f4d\uff09\u518d\u4e0e PC \u76f8\u52a0\u3002</li> </ul> <p>Imm Gen \u6a21\u5757</p> <p>\u8fd9\u4e2a\u6a21\u5757\u8bc6\u522b <code>load</code> \u7c7b\u6307\u4ee4\u3001 <code>store</code> \u7c7b\u6307\u4ee4\u548c <code>branch</code> \u7c7b\u6307\u4ee4\u7684\u7acb\u5373\u6570\u6a21\u5f0f\u5e76\u5c06\u5176 \u7b26\u53f7\u6269\u5c55 \u5230 64 \u4f4d\uff0c\u6839\u636e <code>I[5:6]</code> \u7684\u4e0d\u540c\u53d6\u503c\u533a\u5206\u8fd9\u4e09\u79cd\u60c5\u51b5\uff0c\u6784\u9020\u4e00\u4e2a 3:1 MUX \u9009\u62e9\u5b9e\u9645\u7684\u7acb\u5373\u6570\uff0c\u5c06\u5176\u4f20\u7ed9\u540e\u9762\u7684\u4f7f\u7528\u3002</p>"},{"location":"computer_organization/4_processor/#415-load-\u6307\u4ee4\u548c-store-\u6307\u4ee4","title":"4.1.5 Load \u6307\u4ee4\u548c Store \u6307\u4ee4","text":"<p>\u61d2\u5f97\u5199\u4e86\uff0c\u53ef\u4ee5\u81ea\u5df1\u7406\u89e3\u4e00\u4e0b\u3002</p> <p>\u7528\u6587\u5316\u4eba\u7684\u8bdd\u6765\u8bf4\uff0cLoad \u6307\u4ee4\u548c Store \u6307\u4ee4\u7684\u6570\u636e\u901a\u8def\u64cd\u4f5c\u7559\u4f5c\u4e60\u9898\u3002</p>"},{"location":"computer_organization/4_processor/#416-control","title":"4.1.6 Control","text":"<p>\u770b\u5b8c\u4e0a\u8ff0\u82e5\u5e72\u5c0f\u8282\uff0ccontrol \u5355\u5143\u7684\u8bbe\u8ba1\u4e5f\u975e\u5e38\u663e\u7136\u4e86\u3002\u6211\u4eec\u5f88\u5bb9\u6613\u7ed9\u51fa\u5982\u4e0b\u771f\u503c\u8868\uff1a</p> <p></p> <p>\u540e\u9762\u5c31\u662f\u8fde\u7535\u8def\u7684\u5de5\u4f5c\u4e86\u3002\u8fde\u51fa\u6765\u957f\u8fd9\u6837\uff1a</p> <p></p>"},{"location":"computer_organization/4_processor/#417-why-a-single-cycle-implementation-is-not-used-today","title":"4.1.7 Why a Single-Cycle Implementation is not Used Today","text":"<p>\u5355\u5468\u671f\u7684\u5b9e\u73b0\u662f\u6307\uff0c\u4e00\u4e2a\u6307\u4ee4\u7684\u6240\u6709\u5de5\u4f5c\u90fd\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u5b8c\u6210\uff0c\u4e5f\u5c31\u662f CPI = 1\u3002\u90a3\u4e48\uff0c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u7684\u957f\u5ea6\u5c31\u8981\u8db3\u591f\u6700\u957f\u7684\u90a3\u4e2a\u6307\u4ee4\u5b8c\u6210\u8fd0\u884c\u3002\u4f46\u662f\uff0c\u4f8b\u5982 <code>load</code> \u7c7b\u7684\u6307\u4ee4\u8981\u7ecf\u8fc7 inst mem, reg file, ALU, data mem, reg file \u8fd9\u4e48\u591a\u7684\u6b65\u9aa4\uff0c\u8fd9\u4f1a\u4f7f\u5f97\u65f6\u949f\u5468\u671f\u53d8\u5f97\u5f88\u957f\uff0c\u5bfc\u81f4\u6574\u4f53\u6027\u80fd\u53d8\u5f97\u5f88\u5dee\u3002\u5355\u5468\u671f\u7684\u5b9e\u73b0\u8fdd\u53cd\u4e86 common case fast \u8fd9\u4e00\u8bbe\u8ba1\u539f\u5219\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u79cd\u65b0\u7684\u5b9e\u73b0\u6280\u672f\uff0c\u53eb \u6d41\u6c34\u7ebf (Pipeline)\u3002</p>"},{"location":"computer_organization/4_processor/#42-pipeline","title":"4.2 Pipeline","text":""},{"location":"computer_organization/4_processor/#421-intro","title":"4.2.1 Intro","text":"<p>\u5728\u5c0f\u5b66\u5965\u6570\u4e2d\u6211\u4eec\u5c31\u5b66\u8fc7\uff0c\u5e76\u884c\u80fd\u591f\u63d0\u9ad8\u6574\u4f53\u7684\u6548\u7387\uff0c\u4f8b\u5982\u8fd9\u4e2a\u6d17\u8863\u670d\u7684\u4f8b\u5b50\uff1a</p> <p></p> <p>\u5bf9\u4e8e\u5355\u4e2a\u5de5\u4f5c\uff0c\u6d41\u6c34\u7ebf\u6280\u672f\u5e76\u6ca1\u6709\u7f29\u77ed\u5176\u8fd0\u884c\u65f6\u95f4\uff1b\u4f46\u662f\u7531\u4e8e\u591a\u4e2a\u5de5\u4f5c\u53ef\u4ee5\u5e76\u884c\u5730\u6267\u884c\uff0c\u6d41\u6c34\u7ebf\u6280\u672f\u53ef\u4ee5\u66f4\u597d\u5730\u538b\u69a8\u8d44\u6e90\uff0c\u4f7f\u5f97\u5b83\u4eec\u88ab\u540c\u65f6\u800c\u4e0d\u662f\u8f6e\u6d41\u4f7f\u7528\uff0c\u5728\u5de5\u4f5c\u6bd4\u8f83\u591a\u7684\u65f6\u5019\u53ef\u4ee5\u589e\u52a0\u6574\u4f53\u7684 \u541e\u5410\u7387 throughput\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u5b8c\u6210\u6574\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u3002</p> <p>\u5728\u672c\u4f8b\u4e2d\uff0c\u7531\u4e8e\u6d41\u6c34\u7ebf\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u5b8c\u5168\u5145\u6ee1\uff0c\u56e0\u6b64\u541e\u5410\u7387\u4e0d\u53ca\u539f\u6765\u7684 4 \u500d\uff1b\u4f46\u662f\u5f53\u5de5\u4f5c\u6570\u8db3\u591f\u591a\u7684\u65f6\u5019\uff0c\u541e\u5410\u7387\u5c31\u51e0\u4e4e\u662f\u539f\u6765\u7684 4 \u500d\u4e86\u3002</p> <p>\u56de\u5230 RISC-V \u4e2d\u6765\uff0c\u4e00\u4e2a\u6307\u4ee4\u901a\u5e38\u5305\u542b 5 \u4e2a\u9636\u6bb5\uff1a</p> <ol> <li>IF, Inst Fetch\uff0c\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u6307\u4ee4</li> <li>ID, Inst Decode\uff0c\u8bfb\u53d6\u5bc4\u5b58\u5668\u3001\u6307\u4ee4\u8bd1\u7801</li> <li>EX, Execute\uff0c\u8ba1\u7b97\u64cd\u4f5c\u7ed3\u679c\u548c/\u6216\u5730\u5740</li> <li>MEM, Memory\uff0c\u5185\u5b58\u5b58\u53d6\uff08\u5982\u679c\u9700\u8981\u7684\u8bdd\uff09</li> <li>WB, Write Back\uff0c\u5c06\u7ed3\u679c\u5199\u56de\u5bc4\u5b58\u5668\uff08\u5982\u679c\u9700\u8981\u7684\u8bdd\uff09</li> </ol> <p>\u5404\u9636\u6bb5\u4f1a\u7528\u5230\u7684\u7ec4\u4ef6\u5982\u4e0b\u56fe\u6240\u793a\uff08\u8fd9\u4e2a\u56fe\u8fd8\u6709\u5f88\u591a\u95ee\u9898\uff0c\u6211\u4eec\u540e\u9762\u6162\u6162\u8ba8\u8bba~\uff09\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u90e8\u5206\u662f\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u7684\uff08\u6bd4\u5982 Reg File \u53ef\u4ee5\u4e00\u8fb9\u8bfb\u4e00\u8fb9\u5199\uff09\uff1a</p> <p></p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u672c\u6765\u662f\u5728\u4e00\u4e2a\u5468\u671f\u4e2d\u5b8c\u6210\u4e00\u4e2a\u6307\u4ee4\uff0c\u800c\u73b0\u5728\u662f\u5728\u4e00\u4e2a\u5468\u671f\u4e2d\u5b8c\u6210\u4e00\u4e2a\u9636\u6bb5\u3002\u6240\u4ee5\uff0c\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u7684\u957f\u5ea6\u4e5f\u9700\u8981\u8db3\u591f\u4efb\u4f55\u4e00\u4e2a\u9636\u6bb5\u5b8c\u6210\u6267\u884c\u3002</p> <p>RISC-V \u4e5f\u6709\u5f88\u591a\u6d41\u6c34\u7ebf\u53cb\u597d\u7684\u8bbe\u8ba1\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u6240\u6709 RISC-V \u7684\u6307\u4ee4\u957f\u5ea6\u76f8\u540c\uff0c\u8fd9\u53ef\u4ee5\u65b9\u4fbf <code>IF</code> \u548c <code>ID</code> \u7684\u5de5\u4f5c</li> <li>RISC-V \u7684\u6307\u4ee4\u683c\u5f0f\u6bd4\u8f83\u5c11\uff0c\u800c\u4e14\u6e90\u5bc4\u5b58\u5668\u3001\u76ee\u6807\u5bc4\u5b58\u5668\u7684\u4f4d\u7f6e\u76f8\u540c</li> <li>\u53ea\u5728 load \u6216 store \u6307\u4ee4\u4e2d\u64cd\u4f5c data memory \u800c\u4e0d\u4f1a\u5c06\u5b58\u53d6\u7684\u7ed3\u679c\u505a\u8fdb\u4e00\u6b65\u8fd0\u7b97\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06 <code>MEM</code> \u653e\u5728\u6bd4\u8f83\u540e\u9762\u7684\u4f4d\u7f6e\uff1b\u5982\u679c\u8fd8\u80fd\u5bf9\u7ed3\u679c\u505a\u8fd0\u7b97\u5219\u8fd8\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u9636\u6bb5\uff0c\u6d41\u6c34\u7ebf\u8f83\u957f\u662f\u4e0d\u597d\u7684</li> </ul>"},{"location":"computer_organization/4_processor/#422-datapath","title":"4.2.2 Datapath","text":"<p>\u4f46\u662f\uff0c\u806a\u660e\u7684\u5c0f\u670b\u53cb\u4e5f\u53ef\u4ee5\u770b\u51fa\u4e00\u4e9b\u95ee\u9898\uff01\u6bd4\u5982\uff0c\u524d\u4e00\u4e2a\u6307\u4ee4\u5728 <code>ID</code> \u9636\u6bb5\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528\u5230\u5176\u5728 <code>IF</code> \u9636\u6bb5\u8bfb\u51fa\u7684\u6307\u4ee4\u7684\u5185\u5bb9\uff1b\u4f46\u4e0e\u6b64\u540c\u65f6\u540e\u4e00\u4e2a\u6307\u4ee4\u5df2\u7ecf\u8fd0\u884c\u5230 <code>IF</code> \u9636\u6bb5\u5e76\u8bfb\u51fa\u4e86\u65b0\u7684\u6307\u4ee4\uff0c\u90a3\u4e48\u524d\u4e00\u4e2a\u6307\u4ee4\u5c31\u6ca1\u7684\u7528\u4e86\uff01\u8fd9\u4e2a\u73b0\u8c61\u5728\u5f88\u591a\u5730\u65b9\u666e\u904d\u5b58\u5728\uff0c\u5305\u62ec Control \u4fe1\u53f7\u7684\u4f20\u9012\uff0c\u56e0\u6b64\u6211\u4eec\u5b9e\u9645\u4e0a\u4f1a\u5728\u6bcf\u4e24\u4e2a stage \u4e4b\u95f4\u7528\u4e00\u4e9b\u5bc4\u5b58\u5668\u4fdd\u5b58\u8fd9\u4e9b\u5185\u5bb9\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u9762\u8fd9\u4e2a\u56fe\u9664\u4e86\u52a0\u4e86\u4e00\u4e9b\u7ad6\u6761\u6761\u4ee5\u5916\u548c\u4e4b\u524d\u6ca1\u6709\u6d41\u6c34\u7ebf\u7684\u65f6\u5019\u51e0\u4e4e\u6ca1\u4ec0\u4e48\u5dee\u522b\u3002\u8fd9\u4e9b\u7ad6\u6761\u6761\u5c31\u662f pipeline registers\uff0c\u4f8b\u5982 <code>IF/ID</code> \u5c31\u662f <code>IF</code> \u548c <code>ID</code> \u9636\u6bb5\u4e4b\u95f4\u7684\u4e00\u4e9b\u5bc4\u5b58\u5668\u3002</p> <p>Info</p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u4f1a\u56de\u5fc6\u8d77\u6211\u4eec\u5728 4.1.2 \u5c0f\u8282 \u4e2d\u63d0\u5230\u7684\uff0c\u7531\u4e8e PC \u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u90fd\u4f1a\u88ab\u5199\u5165\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u50cf Reg files \u548c Data mem \u90a3\u6837\u9700\u8981\u989d\u5916\u7684\u63a7\u5236\u4fe1\u53f7 <code>RegWrite</code> \u548c <code>MemWrite</code> \u6765\u63a7\u5236\u5199\u5165\uff0c\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u4e0b\u964d\u6cbf\u5199\u5165\u5c31\u597d\u3002Pipeline registers \u4e5f\u662f\u8fd9\u6837\uff0c\u5b83\u4eec\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u90fd\u4f1a\u88ab\u5199\u5165\u4e00\u6b21\uff0c\u6240\u4ee5\u4e5f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4fe1\u53f7\uff0c\u4e5f\u662f\u5728\u6bcf\u4e2a\u4e0b\u964d\u6cbf\u5199\u5165\u5c31\u597d\u3002</p> <p>\u6211\u4eec\u4e4b\u524d\u5e76\u6ca1\u6709\u8ba8\u8bba\u4e3a\u4ec0\u4e48\u8981\u5728\u4e0b\u964d\u6cbf\u5199\u5165\uff0c\u672c\u8282\u4e0b\u4e00\u4e2a Info \u6846\u6846\u5c31\u4f1a\u8bf4\u660e\u5566\uff01</p> <p>\u6211\u4eec\u5173\u6ce8 datapath \u4e2d\u4e24\u4e2a\u4ece\u53f3\u5f80\u5de6\u4f20\u4e1c\u897f\u7684\u60c5\u51b5\uff01\u4e00\u4e2a\u662f <code>WB</code> \u9636\u6bb5\u5199\u56de\u6570\u636e\uff0c\u4e00\u4e2a\u662f <code>MEM</code> \u9636\u6bb5\u5224\u65ad\u662f\u5426\u53d1\u751f\u8df3\u8f6c\u3002\u5206\u522b\u5173\u6ce8\u5bf9\u5e94\u589e\u52a0\u7684 datapath\uff1a</p> <p></p> <p>\u5bf9\u4e8e <code>WB</code> \u6765\u8bf4\uff0c\u6211\u4eec\u5199\u4f1a\u65f6\u9700\u8981\u8bb0\u5f55\u5199\u5230\u54ea\u4e2a register \u4e2d\uff0c\u8fd9\u4e2a\u4fe1\u606f\u662f <code>ID</code> \u9636\u6bb5\u4ece Instruction \u4e2d <code>[11:7]</code> \u7684\u4f4d\u7f6e\u53d6\u51fa\u7684\uff0c\u4f46\u662f\u76f4\u5230 <code>WB</code> \u9636\u6bb5\u624d\u88ab\u7528\u5230\uff0c\u56e0\u6b64\u8fd9\u4e2a\u4fe1\u606f\u88ab\u5b58\u5230\u4e86 <code>ID/EX</code> \uff0c\u4e0b\u4e00\u4e2a\u5468\u671f\u5b58\u5230\u4e86 <code>EX/MEM</code> \uff0c\u4e0b\u4e00\u4e2a\u5468\u671f\u5b58\u5230\u4e86 <code>MEM/WB</code> \uff0c\u7136\u540e\u4e0b\u4e00\u4e2a\u5468\u671f\u88ab\u4f7f\u7528\u3002</p> <p><code>MEM</code> \u5224\u65ad\u662f\u5426\u53d1\u751f\u8df3\u8f6c\u7684\u903b\u8f91\u7c7b\u4f3c\uff0c\u7565\u3002</p>"},{"location":"computer_organization/4_processor/#423-data-hazards","title":"4.2.3 Data Hazards","text":"<p>\u4f46\u662f\uff0c\u806a\u660e\u7684\u5c0f\u670b\u53cb\u4ecd\u7136\u53ef\u4ee5\u770b\u51fa\u4e00\u4e9b\u95ee\u9898\uff01\u8003\u8651\u8fd9\u6837\u7684\u6307\u4ee4\u5e8f\u5217\uff1a</p> <p></p> <p>\u7528\u7b80\u5316\u7684\u6570\u636e\u901a\u8def\u67e5\u770b\u4e00\u4e0b\u5404\u6307\u4ee4\u5404 stage \u7684\u6267\u884c\u65f6\u95f4\uff1a</p> <p></p> <p>\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u5f20\u56fe\u3002\u6700\u4e0a\u9762\u662f\u6a2a\u8f74\uff0c\u4e5f\u5c31\u662f\u65f6\u95f4\u8f74\uff0cCC \u4ee3\u8868 Clock Cycle\uff1b\u4e0b\u9762\u7684 10, -20 \u8fd9\u79cd\u6570\u636e\u662f <code>x2</code> \u5bc4\u5b58\u5668\u7684\u503c\uff1b\u63a5\u4e0b\u6765\u7684\u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u4e2a\u8bed\u53e5\u7684\u6267\u884c\u8fc7\u7a0b\uff0c <code>IM</code> \u5c31\u662f inst mem\uff0c\u5bf9\u5e94 <code>IF</code> stage\uff1b <code>Reg</code> \u5c31\u662f reg file\uff0c\u5bf9\u5e94 <code>ID</code> stage\uff1b\u957f\u5f97\u50cf ALU \u7684\u5c31\u662f ALU\uff0c\u5bf9\u5e94 <code>EX</code> stage\uff1b <code>DM</code> \u5c31\u662f data mem\uff0c\u5bf9\u5e94 <code>MEM</code> stage\uff1b\u6700\u540e\u9762\u7684 <code>Reg</code> \u4e5f\u662f reg file\uff0c\u5bf9\u5e94 <code>WB</code> stage\u3002\u6bcf\u4e2a stage \u5360\u7528\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u3002</p> <p>\u56fe\u4e2d\u6df1\u8272\uff08\u7070\u8272\u3001\u84dd\u8272\uff09\u7684\u90e8\u5206\u5c31\u662f\u5bf9\u5e94\u6307\u4ee4\u4f1a\u4f7f\u7528\u5230\u7684\u7ec4\u4ef6\uff0c\u5176\u4e2d mem \u548c reg file \u7528\u5de6\u534a\u8fb9\u4e3a\u6df1\u8272\u8868\u793a \u5199\u5165\uff0c\u53f3\u534a\u8fb9\u4e3a\u6df1\u8272\u8868\u793a \u8bfb\u53d6\u3002\u6211\u4eec\u7a0d\u540e\u89e3\u91ca\u8fd9\u6837\u8868\u793a\u7684\u539f\u56e0\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u7b2c\u4e00\u6761\u8bed\u53e5 <code>sub x2, x1, x3</code> \u8fd0\u884c\u5230\u7b2c 5 \u4e2a\u65f6\u949f\u5468\u671f\u65f6\uff0c\u8ba1\u7b97\u7ed3\u679c\u624d\u88ab\u5199\u56de <code>x2</code> \uff08\u5982\u7eff\u8272\u6846\u6846\u6240\u793a\uff09\uff0c\u4f46\u662f\u5728\u7b2c 3 \u4e2a\u5468\u671f\u65f6\u7b2c\u4e8c\u6761\u8bed\u53e5 <code>and x12, x2, x5</code> \u5c31\u8fd0\u884c\u5230 <code>ID</code> \u9636\u6bb5\uff0c\u9700\u8981\u7528\u5230 <code>x2</code> \u7684\u503c\uff08\u5982\u6a59\u8272\u6846\u6846\u6240\u793a\uff09\u3002\u5982\u679c\u8fd9\u65f6\u5019\u4e0d\u52a0\u5904\u7406\uff0c\u7b2c\u4e8c\u6761\u8bed\u53e5\u8bfb\u5230\u7684\u503c\u5c31\u662f\u9519\u8bef\u7684\uff01\u8fd9\u4e00\u95ee\u9898\u540c\u65f6\u4f1a\u53d1\u751f\u5728\u7b2c 3 \u6761\u6307\u4ee4\u90a3\u91cc\uff0c\u5b83\u5728\u7b2c 4 \u4e2a\u65f6\u949f\u5468\u671f\u9700\u8981\u7528\u5230 <code>x2</code> \u7684\u503c\uff0c\u4f46\u662f\u8fd9\u65f6\u5019 <code>x2</code> \u7684\u503c\u4ecd\u672a\u88ab\u66f4\u65b0\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u7531\u4e8e\u6307\u4ee4\u6240\u9700\u7684\u6570\u636e\u4f9d\u8d56\u4e8e\u524d\u9762\u4e00\u6761\u5c1a\u672a\u5b8c\u6210\u7684\u6307\u4ee4\uff0c\u56e0\u6b64\u6307\u4ee4\u4e0d\u80fd\u5728\u9884\u671f\u7684\u65f6\u949f\u5468\u671f\u5185\u6267\u884c\uff0c\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u79f0\u4e4b\u4e3a data hazard\u3002</p> Info <p>\u5728\u7b2c 5 \u4e2a\u65f6\u949f\u5468\u671f\u5185\uff0c\u5173\u4e8e Reg files \u6211\u4eec\u9700\u8981\u5b8c\u6210 2 \u4ef6\u4e8b\uff1a <code>sub x2, x1, x3</code> \u7684 <code>WB</code> \u9636\u6bb5\u5c06 <code>x2</code> \u7684\u65b0\u503c\u5199\u5165 Reg files\uff0c\u4ee5\u53ca <code>add x14, x2, x2</code> \u7684 <code>ID</code> \u9636\u6bb5\u5c06 <code>x2</code> \u7684\u503c\u8bfb\u51fa\u6765\u5e76\u4e14\u5b58\u5230 <code>ID/EX</code> \u5bc4\u5b58\u5668\u4e2d\u3002\u8fd9\u4e24\u4e2a\u4e8b\u60c5\u6709\u6ca1\u6709\u53ef\u80fd\u6b63\u786e\u6267\u884c\u5462\uff1f\u7b54\u6848\u662f\u6709\u7684\uff01</p> <p>\u4f17\u6240\u5468\u77e5\uff0c\u65f6\u949f\u4fe1\u53f7\u6709\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\uff0c\u6211\u4eec\u65e2\u53ef\u4ee5\u89c4\u5b9a\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u7531\u4e00\u4e2a\u4e0a\u5347\u6cbf\u5f00\u59cb\u5230\u53e6\u4e00\u4e2a\u4e0a\u5347\u6cbf\u7ed3\u675f\uff0c\u4e5f\u53ef\u4ee5\u89c4\u5b9a\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u4ece\u4e00\u4e2a\u4e0b\u964d\u6cbf\u5f00\u59cb\u5230\u53e6\u4e00\u4e2a\u4e0b\u964d\u6cbf\u7ed3\u675f\uff1a</p> <p></p> <p>\u5728\u8bfe\u672c\u7684\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u91c7\u53d6\u524d\u8005\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5c31\u662f\u76f8\u90bb\u4e24\u6b21\u4e0a\u5347\u6cbf\u4e4b\u95f4\u7684\u65f6\u95f4\u6bb5\u3002</p> <p>\u800c\u5bc4\u5b58\u5668\u7684\u5199\u5165\u53ef\u4ee5\u7531\u4e0a\u5347\u6cbf\u89e6\u53d1\uff0c\u4e5f\u53ef\u4ee5\u7531\u4e0b\u964d\u6cbf\u89e6\u53d1\u3002\u5982\u679c\u6211\u4eec\u89c4\u5b9a Reg files \u4e2d\u7684\u5bc4\u5b58\u5668\u5728\u4e0a\u5347\u6cbf\u89e6\u53d1\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u5728\u524d\u534a\u4e2a\u5468\u671f\u4e2d\u5b8c\u6210\u5199\u5165 Reg files \u5bc4\u5b58\u5668\u7684\u5de5\u4f5c\uff1b\u800c\u89c4\u5b9a Pipeline registers \u5728\u4e0b\u964d\u6cbf\u89e6\u53d1\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u5728\u540e\u534a\u4e2a\u5468\u671f\u5b8c\u6210\u5199\u5165\u5de5\u4f5c\uff0c\u90a3\u4e48\uff0c\u5728\u7b2c 5 \u4e2a\u65f6\u949f\u5468\u671f\u7684\u4e0a\u534a\uff0c <code>x2</code> \u7684\u65b0\u503c\u88ab\u5199\u5165\uff1b\u4e0b\u534a\u8bfb\u51fa <code>x2</code> \u5e76\u5199\u5165 <code>ID/EX</code> \u7684\u503c\u5c31\u662f <code>x2</code> \u7684\u65b0\u503c\u4e86\u3002\u6240\u4ee5\u8bf4\uff0c\u8fd9\u6837\u7684\u8bbe\u8ba1\u4f7f\u5f97\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u51fa\u73b0 data hazard\u3002</p> <p>\u8fd9\u4e5f\u5c31\u80fd\u89e3\u91ca\u4e3a\u4ec0\u4e48 <code>PC</code> \u8981\u5728\u4e0b\u964d\u6cbf\u5199\u5165\u4e86\uff0c\u770b datapath \u7684\u8fd9\u4e00\u90e8\u5206\uff1a</p> <p></p> <p>\u5982\u679c <code>PC</code> \u5728\u4e0a\u5347\u6cbf\u5199\u5165\uff0c\u4e5f\u5c31\u662f\u5728\u4e0a\u5347\u6cbf\u66f4\u65b0\u5230\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5728\u4e0b\u964d\u6cbf\u8981\u5c06\u5f53\u524d\u6307\u4ee4\u5199\u5165 <code>IF/ID</code> \u7684\u65f6\u5019\uff0c\u4ece inst mem \u4e2d\u8bfb\u51fa\u7684\u6307\u4ee4\u5df2\u7ecf\u662f\u4e0b\u4e00\u6761\u800c\u4e0d\u662f\u5f53\u524d\u6307\u4ee4\u4e86\uff01\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u8ba9 <code>PC</code> \u5728\u4e0b\u964d\u6cbf\u5199\u5165\uff0c\u8fd9\u6837\u624d\u80fd\u8bfb\u53d6\u5230\u6b63\u786e\u7684\u6307\u4ee4\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0cReg files \u7684\u5199\u5165\u5747\u53d1\u751f\u5728\u4e0a\u534a\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4e0a\u5347\u6cbf\uff1b\u800c Pipeline registers \u548c <code>PC</code> \u7684\u5199\u5165\u5747\u53d1\u751f\u5728\u4e0b\u534a\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4e0b\u964d\u6cbf\u3002</p> <p>\u8fd9\u4e5f\u662f\u56fe\u4f8b\u4e2d reg file \u7528\u5de6\u534a\u8fb9\u4e3a\u6df1\u8272\u8868\u793a\u5199\u5165\uff0c\u53f3\u534a\u8fb9\u4e3a\u6df1\u8272\u8868\u793a\u8bfb\u53d6\u7684\u539f\u56e0\uff1a\u5199\u5165\u53d1\u751f\u5728\u4e0a\u534a\u4e2a\u5468\u671f\uff0c\u800c\u4f7f\u7528\u8bfb\u53d6\u7684\u7ed3\u679c\u53d1\u751f\u5728\u4e0b\u534a\u4e2a\u5468\u671f\u3002</p> <p>\u90a3\u4e48\uff0c\u5982\u4f55\u89e3\u51b3 data hazard \u5462\uff1f\u56de\u987e\u521a\u521a\u7684\u90a3\u5f20\u56fe\uff1a</p> <p></p> <p>\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u867d\u7136 <code>sub x2, x1, x3</code> \u5728\u7b2c 5 \u4e2a\u65f6\u949f\u5468\u671f\u7684 <code>WB</code> \u9636\u6bb5\u624d\u5c06\u7ed3\u679c\u5199\u56de\uff0c\u4f46\u662f\u5728\u7b2c 3 \u4e2a\u65f6\u949f\u5468\u671f\u7684 <code>EX</code> \u9636\u6bb5\u5176\u5b9e\u5c31\u7b97\u51fa\u6765\u4e86\uff01\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u989d\u5916\u7684\u786c\u4ef6\u7ed3\u6784\uff0c\u4f7f\u5f97 ALU \u7684\u8f93\u5165\u4e0d\u4ec5\u53ef\u4ee5\u6765\u6e90\u4e8e\u5bc4\u5b58\u5668\u4e2d\u8bfb\u51fa\u6765\u7684\u3001\u653e\u5728 <code>ID/EX</code> \u4e2d\u7684\u503c\uff0c\u8fd8\u53ef\u4ee5\u6765\u6e90\u4e8e <code>EX/MEM</code> \u4e2d\u6216\u8005 <code>MEM/WB</code> \u4e2d\u7684\u503c\uff0c\u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u524d\u4e00\u6761\u548c\u518d\u524d\u4e00\u6761\u6307\u4ee4\u7684 ALU \u7684\u8ba1\u7b97\u7ed3\u679c\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a </p> <p></p> <p>\u5728\u7b2c 3 \u4e2a\u65f6\u949f\u5468\u671f\uff0c\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u7ed3\u679c\u88ab\u7b97\u51fa\u5e76\u4fdd\u5b58\u5728 <code>EX/MEM</code> </p> <p>\u5b66\u4e0d\u5b8c\u4e86\uff0c\u6682\u65f6\u4e0d\u8be6\u7ec6\u5199\u4e86\uff0c\u5927\u610f\u5c31\u662f  <code>X = 1, 2 =  if (MEM.Rd != x0 &amp;&amp; EX.RsX == MEM.Rd) ForwardX = 10; else if (WB.Rd != x0 &amp;&amp; EX.RsX == WB.Rd) ForwardX = 01; else ForwardX = 00;</code> \uff1a</p> <p></p> <p>\u4f46\u662f\u9047\u5230 load \u6307\u4ee4\u4e0d\u5f97\u4e0d stall\uff1a</p> <p></p> <p></p> <p>\u5728 ID \u9636\u6bb5\u53ef\u4ee5\u5224\u5b9a hazard\uff1a <code>if (EX.MemRead &amp;&amp; EX.Rd == ID.RsX) Hazard();</code> </p> <p>\u5982\u4f55 stall \u5462\uff1f\u4e24\u4e2a\u4efb\u52a1\uff1a\u8ba9\u5f53\u524d\u6307\u4ee4\u4e0d\u8981\u4ea7\u751f\u6548\u679c (\u6e05\u7a7a <code>RegWrite</code> \u548c <code>MemWrite</code> )\u3001\u8ba9\u540e\u9762\u7684\u8bed\u53e5\u4e0d\u8981\u53d7\u5230\u5f71\u54cd (\u4fdd\u7559 <code>PC</code> \u548c <code>IF/ID</code> \u4e00\u5468\u671f\u4e0d\u6539)\uff1a</p> <p></p>"},{"location":"computer_organization/4_processor/#424-control-hazards--branch-hazards","title":"4.2.4 Control Hazards / Branch Hazards","text":"<p>\u4f8b\u9898</p> <p>\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\u5728\u4e0d\u8003\u8651\u89e3\u51b3 hazard \u7684\u60c5\u51b5\u4e0b\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u5047\u8bbe\u6240\u6709\u5bc4\u5b58\u5668\u521d\u59cb\u503c\u4e3a 0\uff0cMem(1) = 0x99, Mem(8) = 0xaa, Mem(9) = 0xbb\u3002</p> <p></p> \u89e3\u7b54 <p>\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u6bcf\u6761\u6307\u4ee4\u5404\u9636\u6bb5\u7684\u6267\u884c\u60c5\u51b5\uff1a</p> <p></p> <p>\u4ece\u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u603b\u7ed3\u51fa\u89c4\u5f8b\uff08\u8fd9\u548c\u6d41\u6c34\u7ebf\u7684\u5177\u4f53\u8bbe\u8ba1\u6709\u5173\uff01\uff09\uff0c\u5373\uff1a</p> <ul> <li>\u67d0\u6761\u6307\u4ee4 (\u4f8b\u5982 <code>#10</code>) <code>WB</code> \u9636\u6bb5\u505a\u7684\u5bc4\u5b58\u5668\u66f4\u6539\uff0c\u5176\u4e4b\u540e\u7b2c\u4e09\u6761\u6307\u4ee4 (<code>#13</code>) \u7684 <code>ID</code> \u9636\u6bb5\u624d\u80fd\u8bfb\u51fa\u65b0\u7684\u503c\uff1b</li> <li>\u67d0\u6761\u6307\u4ee4 (\u4f8b\u5982 <code>#10</code>) <code>MEM</code> \u9636\u6bb5\u4ea7\u751f <code>PCSrc = 1</code> \u7684\u4fe1\u53f7\uff0c\u6b64\u65f6\u5176\u4e4b\u540e\u7b2c\u4e09\u6761\u6307\u4ee4 (<code>#13</code>) \u6b63\u5728\u8fd0\u884c <code>IF</code> \u9636\u6bb5\uff0c\u5b83\u8fd0\u884c\u7ed3\u675f\u540e\u624d\u4f1a\u5c06 <code>PC</code> \u7f6e\u4e3a\u5b9e\u9645\u4e0a\u8981\u8df3\u8f6c\u7684\u6307\u4ee4\uff0c\u56e0\u6b64\u5982\u679c\u8981\u8df3\u8f6c\u7684\u8bdd\uff0c<code>#11</code>, <code>#12</code>, <code>#13</code> \u8fd9\u4e09\u6761\u8bed\u53e5\u662f\u989d\u5916\u8fd0\u884c\u7684\uff1b\u5982\u679c\u4e0d\u7528\u8df3\u8f6c\u5c31\u4ec0\u4e48\u4e8b\u90fd\u6ca1\u6709\u4e86\uff1b</li> <li>\u4e0d\u5b58\u5728\u5176\u4ed6\u5f71\u54cd\u7ed3\u679c\u7684\u60c5\u51b5\u4e86\uff01</li> </ul> <p>\u5229\u7528\u8fd9\u4e9b\u89c4\u5f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5316\u6211\u4eec\u7684\u89e3\u9898\u65b9\u5f0f\uff1a</p> <p>Reg: \u5230\u54ea\u4e00\u6b21\u6267\u884c\u7684 ID \u9636\u6bb5\u5f00\u59cb\uff0c\u8bfb\u51fa\u7684 Reg \u503c\u4f1a\u662f\u8be5\u503c PC: \u5230\u54ea\u4e00\u6b21\u6267\u884c \u4e4b\u540e\uff0cPC \u7684\u503c\u4f1a\u88ab\u6539\u4e3a\u8be5\u503c</p> <p></p>"},{"location":"computer_organization/4_processor/#425-structural-hazard","title":"4.2.5 Structural Hazard","text":""},{"location":"computer_organization/4_processor/#43-exceptions","title":"4.3 Exceptions","text":"<p>Exception \u548c Interrupt \u5728\u5f88\u591a\u5730\u65b9\u662f\u4e0d\u4f5c\u533a\u5206\u7684\uff0c\u4f46\u662f\u6211\u4eec\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u533a\u5206\uff1a</p> <p></p> <p>\u5f53 exception \u53d1\u751f\u65f6\uff0c\u5728 Supervisor Exception Program Counter, SEPC \u8fd9\u4e2a\u5bc4\u5b58\u5668\u4e2d\u4fdd\u5b58\u53d1\u751f exception \u7684\u6307\u4ee4\u5730\u5740\uff0c\u7136\u540e\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u5fc5\u987b\u77e5\u9053\u53d1\u751f exception \u7684\u539f\u56e0\uff0cRISC-V \u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5\u662f\u5728 Supervisor Exception Cause Register, SCAUSE \u8fd9\u4e2a\u5bc4\u5b58\u5668\u4e2d\u8bb0\u5f55 exception \u7684\u539f\u56e0\u3002\u53ef\u4ee5\u9009\u62e9\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f vectored interrupt\uff0c</p>"},{"location":"computer_organization/5_cache/","title":"5 Cache","text":"<p> \u7ea6 6227 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 21 \u5206\u949f</p>"},{"location":"computer_organization/5_cache/#51-memory-hierarchy-introduction","title":"5.1 Memory Hierarchy Introduction","text":"<p>\u4f17\u6240\u5468\u77e5\uff0c\u6307\u4ee4\u548c\u6570\u636e\u90fd\u9700\u8981\u5728 memory \u91cc\u624d\u80fd\u8bbf\u95ee\u3002\u800c\u8bbf\u95ee memory \u6bd4\u8f83\u6162\u3002</p> <p>\u5173\u6ce8\u5230\u7a0b\u5e8f\u5bf9 memory \u7684\u8bbf\u95ee\u6709\u5982\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>Temporal locality, \u65f6\u95f4\u5c40\u90e8\u6027\uff0c\u5373\u8fd1\u671f\u8bbf\u95ee\u7684\u9879\u76ee\u5f88\u6709\u53ef\u80fd\u4f1a\u5728\u77ed\u65f6\u95f4\u5185\u518d\u6b21\u88ab\u8bbf\u95ee\u3002\u4f8b\u5982\u5faa\u73af\u4e2d\u7684\u6307\u4ee4\u3001induction variables (\u5faa\u73af\u4e2d\u7528\u6765\u8ba1\u6570\u7684\u53d8\u91cf) \u7b49</li> <li>Spatial locality, \u7a7a\u95f4\u5c40\u90e8\u6027\uff0c\u5373\u8fd1\u671f\u8bbf\u95ee\u9879\u76ee\u9644\u8fd1\u7684\u9879\u76ee\u4e5f\u6709\u53ef\u80fd\u4f1a\u5728\u77ed\u65f6\u95f4\u5185\u518d\u6b21\u88ab\u8bbf\u95ee\u3002\u4f8b\u5982\u8fde\u7eed\u7684\u6307\u4ee4\u6267\u884c\uff0c\u6216\u8005\u6570\u7ec4\u53d8\u91cf\u7b49</li> </ul> <p>\u56e0\u6b64\uff0c\u7ed3\u6784\u5316\u7684 memory \u88ab\u8bbe\u8ba1\u51fa\u6765\u3002\u8fd1\u671f\u8bbf\u95ee\u5230\u7684\u5185\u5b58\u5355\u5143\u548c\u5b83\u9644\u8fd1\u7684\u5185\u5bb9\u88ab\u590d\u5236\u4e00\u4efd\u653e\u5728\u79bb CPU \u66f4\u8fd1\u3001\u8bbf\u95ee\u66f4\u5feb\uff0c\u4f46\u4e5f\u66f4\u5c0f\u7684 cache \u4e2d\uff0c\u4ece\u800c\u5229\u7528\u4e0a\u8ff0\u5c40\u90e8\u6027\u52a0\u901f\u8bbf\u95ee\u3002</p> <p></p> <p>\u6211\u4eec\u79f0\u590d\u5236\u7684\u5355\u4f4d\u662f block \u6216\u8005 line\uff0c\u5b83\u901a\u5e38\u662f 2 \u7684\u82e5\u5e72\u6b21\u65b9\u4e2a word \u90a3\u4e48\u5927\uff08\u4e00\u4e2a word \u662f 4 Byte\uff09\u3002</p> <p>\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8bbf\u95ee\u7684\u5185\u5b58\u5355\u5143 (\u5373\uff0c\u5b83\u6240\u5728\u7684 block) \u6070\u597d\u5728 cache \u4e2d\uff08\u4e4b\u524d\u67d0\u4e00\u6b21\u88ab\u642c\u4e0a\u6765\u4e86\uff09\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u4e00\u6b21 hit\uff0c\u8fd9\u65f6\u6211\u4eec\u53ea\u9700\u8981\u4ece\u4e2d\u8bfb\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\u5224\u65ad\u662f\u5426 hit\uff0c\u4ee5\u53ca\u8bfb\u51fa\u6765\u7684\u65f6\u95f4\u79f0\u4e3a hit time\u3002</p> <p>\u5982\u679c\u5e76\u4e0d\u5b58\u5728\uff0c\u79f0\u4e3a\u4e00\u6b21 miss\u3002\u5f53 cache miss \u65f6\uff0c\u6211\u4eec\u9700\u8981\u5148\u5c06\u5185\u5bb9\u6240\u5728\u7684 block \u4ece memory \u62ff\u5230 cache\uff0c\u7136\u540e\u518d\u5c06\u5185\u5bb9\u8bfb\u5230\u5904\u7406\u5668\uff1b\u8fd9\u4e2a\u8fc7\u7a0b\u82b1\u7684\u65f6\u95f4\u6210\u4e3a miss penalty\u3002</p> <p>\u5bf9\u5e94\u7684\u6709 hit / miss rate (\u4e5f\u79f0 ratio) \u7684\u6982\u5ff5\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"computer_organization/5_cache/#52-the-basics-of-cache","title":"5.2 The basics of Cache","text":"<p>\u4e0b\u9762\u6211\u4eec\u6765\u5177\u4f53\u8003\u8651 cache \u600e\u4e48\u5b9e\u73b0\u3002\u4e3b\u8981\u9700\u8981\u8ba8\u8bba\u7684\u95ee\u9898\u662f\uff1a\u5982\u4f55\u77e5\u9053\u4e00\u4e2a block \u662f\u5426\u5728 cache \u91cc\uff1f\u4ee5\u53ca\u5982\u679c\u77e5\u9053\u5b83\u5728\u7684\u8bdd\uff0c\u5982\u4f55\u627e\u5230\u5b83\uff1f</p>"},{"location":"computer_organization/5_cache/#531-direct-mapped-cache","title":"5.3.1 Direct Mapped Cache","text":"<p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5185\u5b58\u6709 32 \u4e2a block\uff0c\u5176\u7f16\u53f7 (block address) \u5206\u522b\u4e3a 00000 \u5230 11111\uff1bcache \u6709 8 \u4e2a block\u3002Direct mapped cache \u8fd9\u79cd\u65b9\u5f0f\u76f4\u63a5\u6309 block address \u7684\u540e 3 \u4f4d\u786e\u5b9a\u5b83\u5e94\u8be5\u653e\u5728 cache \u7684\u54ea\u4e2a block \u91cc\u3002</p> <p>\u5373\uff0c\u56fe\u4e0a\u7070\u8272\u7684 block \u7684\u7f16\u53f7\u672b 3 \u4f4d\u90fd\u662f 001\uff0c\u6240\u4ee5\u5c31\u5e94\u8be5\u653e\u5728 cache \u4e2d\u7f16\u53f7\u4e3a 001 \u7684\u7070\u8272 block \u91cc\uff1b\u6a59\u8272\u540c\u7406\u3002</p> <p>\u4e3a\u4ec0\u4e48\u662f\u4e09\u4f4d\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a cache \u6709 8 \u4e2a block \u7684\u8bdd\uff0c\u5176\u5bf9\u5e94\u7684\u5c31\u662f 3 \u4f4d\u4e8c\u8fdb\u5236\u6570\u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u51b3\u5b9a\u6620\u5c04\u5173\u7cfb\u7684\u672b\u51e0\u4f4d\u79f0\u4e3a index\u3002\u540c\u7406\uff0c\u5982\u679c cache \u6709 64 \u4e2a block \u7684\u8bdd\uff0cindex \u5c31\u662f 6 \u4f4d\u3002Cache \u7684 block \u6570\u59cb\u7ec8\u662f 2 \u7684\u5e42\u6b21\u65b9\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u786e\u5b9a\u653e\u5728 cache \u4e2d\u7f16\u53f7\u4e3a 001 \u7684\u4f4d\u7f6e\u7684 block \u7a76\u7adf\u662f 00001\uff0c\u8fd8\u662f 01001\uff0c\u8fd8\u662f\u5176\u4ed6\u7684\u54ea\u4e2a block \u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 cache \u4e2d\u989d\u5916\u5b58\u653e\u8fd9\u4e2a block \u7684 block address \u6765\u77e5\u9053\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u5f53\u7136\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u5b58\u653e\u8fd9\u4e2a block address \u7684\u524d\u82e5\u5e72\u4f4d\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u51e0\u4f4d\u5df2\u7ecf\u901a\u8fc7 index \u6765\u786e\u5b9a\u4e86\u3002\u4f8b\u5982\u56fe\u4e0a\u7684\u4f8b\u5b50\u4e2d\uff0c10001 \u5b58\u5728 index \u4e3a 001 \u7684 cache block \u4e2d\uff0c\u53ea\u9700\u8981\u989d\u5916\u5b58\u5f00\u5934\u7684 10 \u5373\u53ef\u3002\u6211\u4eec\u628a\u7528\u6765\u5224\u5b9a\u67d0\u4e2a cache block \u4e2d\u5230\u5e95\u5b58\u7684\u662f\u54ea\u4e2a memory block \u7684\u8fd9\u51e0\u4f4d\u79f0\u4e3a tag\u3002</p> <p>\u4e0b\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u4f55\u786e\u5b9a cache \u4e2d\u7684\u8fd9\u4e2a block \u662f\u5426\u6709\u6548\u5462\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u4efb\u4f55\u65f6\u5019\u8fd9\u4e2a block \u4e2d\u603b\u6709\u4e00\u4e2a\u503c\uff0c\u4f46\u662f\u5047\u8bbe\u8fd9\u4e2a\u503c\u662f\u542f\u52a8\u7684\u65f6\u5019\u81ea\u5e26\u7684\uff0c\u90a3\u4e48\u8bbf\u95ee\u5b83\u5c31\u4f1a\u53d1\u751f\u9519\u8bef\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u5bf9\u5e94\u7684 memory block \u7684\u503c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a valid bit \u6765\u8868\u793a\u8fd9\u4e2a block \u662f\u5426\u6709\u6548\uff1b\u521d\u59cb\u503c\u4e3a 0 \u8868\u793a\u65e0\u6548\uff0c\u5f53\u6709\u4e00\u6b21\u5c06 memory \u7684\u4e00\u4e2a block \u62ff\u8fdb\u6765\u4e4b\u540e\u5c31\u5c06\u5176\u7f6e\u4e3a 1\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0ccache hit \u5f53\u4e14\u4ec5\u5f53 valid bit \u662f 1 \u800c\u4e14 tag \u662f\u4e00\u81f4\u7684\u3002</p> <p>\u6211\u4eec\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u90fd\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\uff0c\u800c\u4e0a\u9762\u6211\u4eec\u8ba8\u8bba\u7684 block address \u90fd\u662f\u4ee5 block \u4e3a\u5355\u4f4d\u7684\uff0c\u8fd9\u4e24\u8005\u4e4b\u95f4\u6709\u4ec0\u4e48\u6837\u7684\u5173\u7cfb\u5462\uff1f\u975e\u5e38\u7b80\u5355\uff0c\u7531\u4e8e\u4e00\u4e2a block \u603b\u662f 2 \u7684\u82e5\u5e72\u6b21\u65b9\u4e2a word \u90a3\u4e48\u5927\uff0c \u800c\u6bcf\u4e2a word \u662f 4 Byte\uff0c\u56e0\u6b64\u6bcf\u4e2a block \u7684 byte \u6570\u4e5f\u662f 2 \u7684\u82e5\u5e72\u6b21\u65b9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53bb\u6389 byte address \u7684\u540e\u51e0\u4f4d\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u5b83\u7684 block address \u4e86\u3002\u8fd9\u6837\u76f8\u90bb\u7684 2 \u7684\u82e5\u5e72\u6b21\u65b9\u4e2a byte \u5c31\u4f1a\u805a\u5408\u6210\u4e00\u4e2a block \u4e86\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684 byte address \u7684\u524d\u82e5\u5e72\u4f4d\uff0c\u5373 block address\uff0c\u662f\u76f8\u540c\u7684\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06 byte address \u5206\u4e3a 2 \u4e2a\u90e8\u5206\uff1ablock address \u548c byte offset\uff0c\u5373\u6240\u5728 block \u7684\u7f16\u53f7\u4ee5\u53ca\u5728 block \u4e2d\u7684\u504f\u79fb\u91cf (in byte)\uff1b\u800c block address \u53c8\u5206\u4e3a\u4e86\u4e24\u4e2a\u90e8\u5206\uff0c\u5373 tag \u548c index\u3002\u5373\uff1a</p> <p></p> <p>\u800c\u5728 cache \u4e2d\uff0c\u6211\u4eec\u5b58\u50a8\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <p></p> <p>\u5373\uff0c\u6bcf\u4e2a cache block \u6709\u4e00\u4e2a index\uff0c\u5f53\u51fa\u73b0\u4e00\u6b21 miss \u540e\u4ece\u5185\u5b58\u4e2d\u62ff\u6240\u9700\u5185\u5b58\u8986\u76d6\u5230\u5bf9\u5e94\u7684 index \u6761\u76ee\u4e0a\u7684 data \u5b57\u6bb5\uff0c\u5c06 tag \u8bbe\u4e3a block address \u7684\u524d\u51e0\u4f4d\uff0c\u5c06 valid bit \u8bbe\u4e3a 1\u3002</p> \u4f8b 5.1 Direct Mapped Cache \u7684\u586b\u5145\u548c\u66ff\u6362 <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff1a</p> <p></p> \u4f8b 5.2 Direct Mapped Cache \u7684\u4f4d\u6570\u8ba1\u7b97\u548c\u8fde\u7ebf\u65b9\u5f0f <p>\u53c8\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u4e2a 64 \u4f4d\u5730\u5740\u7684\u673a\u5668\uff0ccache \u7684\u5927\u5c0f\u4e3a 1024 \u4e2a block\uff0c\u4e00\u4e2a block \u6709 1 \u4e2a word\uff0c\u5373 4 \u4e2a byte\uff0c\u90a3\u4e48 index \u7684\u4f4d\u6570\u5c31\u662f \\(\\log_2 1024 = 10\\)\uff0cbyte offset \u7684\u4f4d\u6570\u5c31\u662f \\(\\log_2 4 = 2\\)\uff0c\u56e0\u6b64 tag \u7684\u4f4d\u6570\u5c31\u662f \\(64 - 10 - 2 = 52\\)\uff1b\u53e6\u5916\u4e00\u4e2a block \u7684\u5927\u5c0f\u662f 4 \u4e2a byte\uff0c\u5373 32 \u4f4d\uff0c\u56e0\u6b64\u4e00\u4e2a cache \u7684\u6761\u76ee\u7684\u4f4d\u6570\u5c31\u662f valid bit 1 \u4f4d + tag 52 \u4f4d + word 32 \u4f4d = 85 \u4f4d\u3002</p> <p>\uff08index \u5e76\u4e0d\u9700\u8981\u5728\u8fd9\u91cc\u88ab\u8ba1\u7b97\uff0c\u56e0\u4e3a index \u4e4b\u4e8e cache \u5c31\u50cf address \u4e4b\u4e8e main memory \u4e00\u6837\uff0c\u662f\u76f4\u63a5\u7528\u6765\u8bbf\u95ee\u7684\uff09</p> <p>\u4ea6\u5373\uff1a</p> <p></p> <p>\u5f53\u7136\uff0c\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\u4e00\u4e2a block \u6709\u53ef\u80fd\u5305\u542b\u591a\u4e2a word\uff0c\u800c\u6bcf\u6b21\u5b9e\u9645\u4e0a\u53ea\u4f1a\u8bbf\u95ee\u51fa\u4e00\u4e2a word\u3002\u56e0\u6b64\u8fd9\u65f6\u6211\u4eec\u8fd8\u9700\u8981\u5728 block \u4e2d\u9009\u62e9\u5bf9\u5e94\u7684 word\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 byte offset \u8fdb\u4e00\u6b65\u7ec6\u5206\u6210\u8868\u793a block \u4e2d\u67d0\u4e2a word \u7684 block offset\uff08\u4e3a\u4ec0\u4e48\u4e0d\u53eb word offset \u5462\uff1f\uff09\uff0c\u4ee5\u53ca\u8868\u793a word \u4e2d\u67d0\u4e2a byte \u7684 byte offset\uff1a</p> <p></p> <p>\u5373\uff0c\u5bf9\u8fd9\u4e2a\u56fe\u4e2d\u7684\u60c5\u5f62\uff0c\u5730\u5740\u662f 32 \u4f4d\u7684\uff0c\u4e00\u4e2a block \u6709 16 \u4e2a word\uff0c\u6709 256 \u4e2a cache entry\u3002\u56e0\u6b64 byte offset \u7684\u4f4d\u6570\u662f \\(\\log_2 4 = 2\\)\uff0cblock offset \u7684\u4f4d\u6570\u662f \\(\\log_2 16 = 4\\)\uff0cindex \u7684\u4f4d\u6570\u662f \\(\\log_2 256 = 8\\)\uff0ctag \u7684\u4f4d\u6570\u662f \\(32-8-4-2=18\\)\uff0c\u4e00\u4e2a cache entry \u7684\u957f\u5ea6\u662f valid bit 1 \u4f4d + tag 18 \u4f4d + data 16 word * 4 byte/word * 8 bit/byte = 531 \u4f4d\u3002</p> \u4f8b 5.3 Direct Mapped Cache \u7684\u4f4d\u6570\u8ba1\u7b97 <p>\u518d\u4f8b\u5982\uff1a</p> <p></p>"},{"location":"computer_organization/5_cache/#532-handling-cache-hits--misses","title":"5.3.2 Handling Cache Hits &amp; Misses","text":"<p>\u663e\u7136\uff0c\u8bfb\u548c\u5199\u7684\u65f6\u5019\u53d1\u751f cache miss \u7684\u5904\u7406\u65b9\u5f0f\u662f\u4e0d\u4e00\u6837\u7684\uff1b\u53e6\u5916\u8bfb\u4e5f\u6709\u8bfb\u6570\u636e\u548c\u8bfb\u6307\u4ee4\u4e4b\u5206\uff08\u6307\u4ee4 cache \u548c\u6570\u636e cache \u901a\u5e38\u662f\u5206\u79bb\u7684\uff09\u3002\u6211\u4eec\u5206\u522b\u5bf9\u5176\u8fdb\u884c\u8ba8\u8bba\uff1a</p> <ul> <li>Read<ul> <li>Hit<ul> <li>\u76f4\u63a5\u4ece cache \u91cc\u8bfb\u5c31\u597d\u4e86</li> </ul> </li> <li>Miss<ul> <li>Data cache miss<ul> <li>\u4ece memory \u91cc\u628a\u5bf9\u5e94\u7684 block \u62ff\u5230 cache\uff0c\u7136\u540e\u8bfb\u53d6\u5bf9\u5e94\u7684\u5185\u5bb9\u3002</li> </ul> </li> <li>Instruction cache miss<ul> <li>\u6682\u505c CPU \u8fd0\u884c\uff0c\u4ece memory \u91cc\u628a\u5bf9\u5e94\u7684 block \u62ff\u5230 cache\uff0c\u4ece\u7b2c\u4e00\u4e2a step \u5f00\u59cb\u91cd\u65b0\u8fd0\u884c\u5f53\u524d\u8fd9\u6761\u6307\u4ee4\u3002</li> </ul> </li> </ul> </li> </ul> </li> <li>Write<ul> <li>Hit \u6709\u4e24\u79cd\u53ef\u4ee5\u9009\u7684\u65b9\u5f0f\uff1a<ul> <li>write-through\uff0c\u5373\u6bcf\u6b21\u5199\u6570\u636e\u65f6\uff0c\u65e2\u5199\u5728 cache\uff0c\u4e5f\u5199\u5728 main memory\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f cache \u548c main memory \u603b\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u5f88\u6162\u3002<ul> <li>\u4e00\u4e2a\u6539\u8fdb\u662f\u5f15\u5165\u4e00\u4e2a write buffer\uff0c\u5373\u5f53\u9700\u8981\u5199 main memory \u7684\u65f6\u5019\u4e0d\u662f\u7acb\u5373\u53bb\u5199\uff0c\u800c\u662f\u52a0\u5165\u5230\u8fd9\u4e2a\u961f\u5217\u4e2d\uff0c\u627e\u673a\u4f1a\u5199\u8fdb\u53bb\uff1b\u6b64\u65f6 CPU \u5c31\u53ef\u4ee5\u7ee7\u7eed\u8fd0\u884c\u4e86\u3002\u5f53\u7136\uff0c\u5f53 write buffer \u6ee1\u4e86\u7684\u65f6\u5019\uff0c\u4e5f\u9700\u8981\u6682\u505c\u5904\u7406\u5668\u6765\u505a\u5199\u5165 main memory \u7684\u5de5\u4f5c\uff0c\u76f4\u5230 buffer \u4e2d\u6709\u7a7a\u95f2\u7684 entry\u3002\u56e0\u6b64\uff0c\u5982\u679c main memory \u7684\u5199\u5165\u901f\u7387\u4f4e\u4e8e CPU \u4ea7\u751f\u5199\u64cd\u4f5c\u7684\u901f\u7387\uff0c\u591a\u5927\u7684\u7f13\u51b2\u90fd\u65e0\u6d4e\u4e8e\u4e8b\u3002</li> </ul> </li> <li>write-back\uff0c\u53ea\u5c06\u4fee\u6539\u7684\u5185\u5bb9\u5199\u5728 cache \u91cc\uff0c\u7b49\u5230\u8fd9\u4e2a block \u8981\u88ab\u8986\u76d6\u6389\u7684\u65f6\u5019\u5c06\u5176\u5199\u56de\u5185\u5b58\u3002\u8fd9\u79cd\u60c5\u51b5\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684 dirty bit \u6765\u8bb0\u5f55\u8fd9\u4e2a cache block \u662f\u5426\u88ab\u66f4\u6539\u8fc7\uff0c\u4ece\u800c\u76f4\u5230\u88ab\u8986\u76d6\u524d\u662f\u5426\u9700\u8981\u88ab\u5199\u56de\u5185\u5b58\u3002\u7531\u4e8e\u5bf9\u540c\u4e00\u4e2a block \u901a\u5e38\u4f1a\u6709\u591a\u6b21\u5199\u5165\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u5f0f\u6d88\u8017\u7684\u603b\u5e26\u5bbd\u662f\u66f4\u5c0f\u7684\u3002</li> </ul> </li> <li>Miss \u540c\u6837\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a<ul> <li>write allocate\uff0c\u5373\u50cf read miss \u4e00\u6837\u5148\u628a block \u62ff\u5230 cache \u91cc\u518d\u5199\u5165\u3002</li> <li>write around (or no write allocate)\uff0c\u8003\u8651\u5230\u65e2\u7136\u672c\u6765\u5c31\u8981\u53bb\u4e00\u6b21 main memory\uff0c\u4e0d\u5982\u76f4\u63a5\u5728\u91cc\u9762\u5199\u4e86\uff0c\u5c31\u4e0d\u518d\u62ff\u5230 cache \u91cc\u4e86\u3002</li> <li>write-back \u53ea\u80fd\u4f7f\u7528 write allocate\uff1b\u4e00\u822c\u6765\u8bf4\uff0cwrite-through \u4f7f\u7528 write around\uff0c\u5176\u539f\u56e0\u662f\u660e\u663e\u7684\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"computer_organization/5_cache/#533-\u5176\u4ed6\u5b9a\u4f4d\u65b9\u5f0f","title":"5.3.3 \u5176\u4ed6\u5b9a\u4f4d\u65b9\u5f0f","text":"<p>\u5728 5.3.1 \u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u6700\u7b80\u5355\u7684\u6620\u5c04\u65b9\u5f0f\uff0c\u5373\u76f4\u63a5\u6620\u5c04\uff1a\u5bf9\u4e8e\u4efb\u4e00\u7ed9\u5b9a\u7684 block address\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a cache block \u53ef\u4f9b\u5b83\u5b58\u653e\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u6620\u5c04\u65b9\u5f0f\u3002</p> <p>Fully associative\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f block can go anywhere in cache\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u597d\u5904\u662f\u53ef\u4ee5\u964d\u4f4e miss rate\uff0c\u574f\u5904\u662f\u6bcf\u6b21\u9700\u8981\u8ddf\u6240\u6709 block \u6bd4\u8f83\u662f\u5426 hit\uff1a</p> <p></p> <p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u989d\u5916\u8ba8\u8bba\u66ff\u6362\u65f6\u91c7\u7528\u4ec0\u4e48\u6837\u7684\u7b56\u7565\uff1b\u5373\uff1a\u66ff\u6362\u54ea\u4e00\u5757\u3002\u901a\u5e38\u6709\u4e09\u79cd\u7b56\u7565\uff1a</p> <ul> <li>Random replacement\uff0c\u968f\u673a\u6311\u9009\u4e00\u4e2a\u5e78\u8fd0 block \u8986\u76d6\u6389\uff08\u9700\u8981\u4e00\u4e2a\u968f\u673a\u6570\u751f\u6210\u5668\uff09</li> <li>LRU, Least Recently Used\uff0c\u9009\u62e9\u4e0a\u4e00\u6b21\u4f7f\u7528\u65f6\u95f4\u8ddd\u79bb\u73b0\u5728\u6700\u8fdc\u7684\u90a3\u4e2a block \u8986\u76d6\u6389\uff08\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u4f4d\u7528\u6765\u8bb0\u5f55\u4fe1\u606f\uff0c\u5177\u4f53\u5b9e\u73b0\u6ca1\u6709\u8bb2\uff09</li> <li>FIFO, First In First Out\uff0c\u9009\u62e9\u8fdb\u5165\u65f6\u95f4\u6700\u65e9\u7684 block \u8986\u76d6\u6389\uff08\u540c\u6837\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u4f4d\u8bb0\u5f55\u4fe1\u606f\uff0c\u540c\u6837\u6ca1\u8bb2\u5177\u4f53\u5b9e\u73b0\uff09</li> </ul> <p>\u4ecb\u4e8e direct mapping \u548c fully associative \u4e4b\u95f4\u7684\u662f set associative\uff0c\u5373\u6bcf\u4e2a block \u4ecd\u7136\u4f1a\u6839\u636e\u5176 address \u786e\u5b9a\u5176\u53ef\u4ee5\u5b58\u653e\u7684 cache block\uff0c\u4f46\u662f\u53ef\u4ee5\u653e\u7684\u5730\u65b9\u5e76\u4e0d\u662f\u4e00\u4e2a\uff0c\u800c\u662f\u4e00\u7ec4\u3002\u5373\uff1a</p> <p></p> <p>\u6700\u53f3\u8fb9\u662f\u4e00\u4e2a 2-way set-associative \u7684\u4f8b\u5b50\uff0c\u6bcf\u4e2a\u5730\u5740\u5bf9\u5e94 cache \u4e2d\u7684\u4e00\u7ec4\uff0c\u5728\u8fd9\u91cc\u4e00\u7ec4\u6709\u4e24\u4e2a cache block\u3002\u56e0\u6b64\u5728\u8bbf\u95ee\u65f6\u4e5f\u9700\u8981\u5206\u522b\u6bd4\u8f83\u8fd9\u4e24\u4e2a block \u662f\u5426 hit\u3002\u5728\u66ff\u6362\u65f6\u4e5f\u9700\u8981\u51b3\u5b9a\u66ff\u6362\u54ea\u4e00\u5757\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u524d\u8ff0\u7684\u4e09\u4e2a\u7b56\u7565\u4e2d\u7684\u4e00\u4e2a\u5b9e\u73b0\u3002</p> <p>\u76f8\u4f3c\u5730\uff0c\u4e00\u4e2a 4-way set-associative \u7684\u8bbf\u95ee\u4e2d\u5224\u65ad hit \u548c\u83b7\u53d6 data \u7684\u8fde\u7ebf\u5982\u4e0b\uff1a</p> <p></p> <p>\u6240\u4ee5\uff0c\u4e8b\u5b9e\u4e0a\uff0cdirect mapping \u548c fully associative \u5176\u5b9e\u90fd\u662f set associative \u7684\u7279\u4f8b\uff1adirect mapping \u5176\u5b9e\u5c31\u662f 1-way set associative\uff0c\u800c fully associative \u5c31\u662f n-way set associative\uff0c\u5176\u4e2d n \u662f cache block \u7684\u4e2a\u6570\uff1b\u6211\u4eec\u79f0\u4e00\u7ec4\u7684\u5927\u5c0f\u4e3a associativity\uff0c\u90a3\u4e48\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684 associativity \u5c31\u5206\u522b\u662f 1 \u548c n\u3002</p> <p>\u663e\u7136\uff0c\u5728\u67e5\u770b\u6240\u9700 block \u662f\u5426\u5728 cache \u4e2d\u65f6\uff0c\u9700\u8981\u8bbf\u95ee\u7684 cache block \u4e2a\u6570\u5c31\u7b49\u4e8e associativity\uff0c\u5373\uff1a</p> <p></p> \u4f8b 5.4 Set associative \u7684\u4f4d\u6570\u8ba1\u7b97 <p>\u5df2\u77e5 Cache size is 4K Block, Block size is 4 words, Physical address is 32bits\uff0c\u6c42 direct-mapped, 2-way associative, 4-way associative, fully associative \u65f6 tag \u548c index \u7684\u4f4d\u6570\u3002</p> <p>\u5373\u6c42 associativity \u4e3a 1, 2, 4 \u548c 4096 \u65f6 tag \u548c index \u7684\u4f4d\u6570\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u5728 direct-mapped \u4e2d index \u662f\u7528\u6765\u786e\u5b9a memory block \u653e\u5728\u54ea\u4e2a cache block \u4e2d\u7684\uff0c\u90a3\u4e48\u5728 set-associative \u4e2d\uff0cindex \u5c31\u662f\u7528\u6765\u786e\u5b9a\u653e\u5728\u54ea\u4e2a set \u4e2d\u7684\u3002\u56e0\u6b64\uff0cindex \u7684\u4f4d\u6570\u5c31\u5bf9\u5e94\u7740 set \u7684\u4e2a\u6570\uff0c\u5373\uff1a</p> \\[\\text{index}_\\# = \\log_2(\\text{set}_\\#) = \\log_2\\frac{\\text{cache block}_\\#}{\\text{associativity}}\\] <p>\u56e0\u6b64 associativity \u4e3a 1, 2, 4, 4096 \u65f6\uff0cindex \u7684\u4f4d\u6570\u5206\u522b\u662f 12, 11, 10, 0\u3002</p> <p>\u7531\u4e8e block size \u4e3a 4 words\uff0c\u5373 16 Bytes\uff0c\u56e0\u6b64 byte offset \u9700\u8981 4 \u4f4d\uff08\u6216\u8005\uff0c\u5177\u4f53\u5730\u8bf4\uff0cblock offset 2 \u4f4d\uff0cbyte offset 2 \u4f4d\uff09\u3002\u6240\u4ee5\u5269\u4e0b\u7684\u90fd\u662f tag \u4e86\uff0c\u56e0\u6b64 tag \u7684\u4f4d\u6570\u5206\u522b\u662f 16, 17, 18, 28\u3002</p> 18 - 19 Final <p></p> <p></p> \u7b54\u6848 <p></p>"},{"location":"computer_organization/5_cache/#53-measuring-cache-performance","title":"5.3 Measuring Cache Performance","text":"<p>\u518d\u8bf4\u5427</p>"},{"location":"computer_organization/5_cache/#54-virtual-machines","title":"5.4 Virtual Machines","text":"<p>\u5148\u4e0d\u5b66\u4e86</p>"},{"location":"computer_organization/5_cache/#55-virtual-memory","title":"5.5 Virtual Memory","text":""},{"location":"computer_organization/5_cache/#551-\u865a\u62df\u5185\u5b58\u6280\u672f","title":"5.5.1 \u865a\u62df\u5185\u5b58\u6280\u672f","text":"<p>\u8ba1\u7ec4\u628a main memory \u63cf\u8ff0\u4e3a secondary storage (\u5373 disk) \u7684 \"cache\"\u3002\u6216\u8005\uff0c\u53cd\u8fc7\u6765\u8bf4\uff0c\u6211\u4eec\u628a\u90a3\u4e9b\u5728 main memory \u91cc\u653e\u4e0d\u4e0b\u7684\u5185\u5bb9\u5b58\u5230 disk \u91cc\uff08\u8fd9\u6837\u66f4\u80fd\u7b26\u5408\u6211\u4eec\u719f\u6089\u7684\u201c\u53ef\u6267\u884c\u6587\u4ef6\u5fc5\u987b\u52a0\u8f7d\u5230\u5185\u5b58\u624d\u80fd\u8fd0\u884c\u201d\u7684\u4e00\u8d2f\u8ba4\u77e5\uff09\u3002\u8fd9\u79cd\u6280\u672f\u79f0\u4e3a virtual memory\u3002</p> <p>\u865a\u62df\u5185\u5b58\u6280\u672f\u53ef\u4ee5\u8ba9\u591a\u4e2a\u7a0b\u5e8f\u4e4b\u95f4\u9ad8\u6548\u3001\u5b89\u5168\u5730\u5171\u4eab\u5185\u5b58\uff0c\u540c\u65f6\u5141\u8bb8\u5355\u4e2a\u7a0b\u5e8f\u4f7f\u7528\u8d85\u8fc7\u5185\u5b58\u5bb9\u91cf\u7684\u5185\u5b58\uff08\u6b63\u5982\u867d\u7136 CPU \u53d6\u6570\u636e\u65f6\u662f\u4ece cache \u4e2d\u53d6\u7684\uff0c\u4f46\u662f\u5b83\u80fd\u8bbf\u95ee\u5230\u7684\u6570\u636e\u7684\u6570\u76ee\u6bd4 cache \u7684\u5bb9\u91cf\u8981\u5927\uff09\u3002\u5728\u8fdc\u53e4\u65f6\u671f\uff0c\u5f88\u591a\u7a0b\u5e8f\u56e0\u4e3a\u9700\u8981\u4f7f\u7528\u8fc7\u5927\u7684\u5185\u5b58\u800c\u65e0\u6cd5\u88ab\u8fd0\u884c\uff1b\u4f46\u73b0\u5728\u7531\u4e8e\u865a\u62df\u5185\u5b58\u6280\u672f\u7684\u5e7f\u6cdb\u4f7f\u7528\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u90fd\u4e0d\u6210\u95ee\u9898\u4e86\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5b9e\u9645\u4e0a\u7684 main memory\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a \u7269\u7406\u5185\u5b58, physical memory\uff09\u4e2d\u7684\u5730\u5740\u79f0\u4e3a \u7269\u7406\u5730\u5740, physical addresses\uff1b\u800c\u6211\u4eec\u7ed9\u6bcf\u4e00\u4e2a\u7a0b\u5e8f\u5185\u90e8\u4f7f\u7528\u5230\u7684\u5185\u5b58\u53e6\u5916\u7f16\u4e00\u5957\u5730\u5740\uff0c\u79f0\u4e3a \u865a\u62df\u5730\u5740, virtual addresses\uff1b\u865a\u62df\u5185\u5b58\u6280\u672f\u8d1f\u8d23\u4e86\u8fd9\u4e24\u4e2a\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362 (address translation\uff0c\u6211\u4eec\u7a0d\u540e\u518d\u8ba8\u8bba\u8f6c\u6362\u7684\u65b9\u5f0f)\uff1a</p> <p></p> <p>\u4ece\u8fd9\u5f20\u56fe\u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u51fa\u201c\u865a\u62df\u5185\u5b58\u6280\u672f\u53ef\u4ee5\u5141\u8bb8\u5355\u4e2a\u7a0b\u5e8f\u8bbf\u95ee\u8d85\u8fc7\u7269\u7406\u5185\u5b58\u5927\u5c0f\u9650\u5236\u7684\u5185\u5b58\u201d\u7684\u539f\u56e0\uff0c\u5373\u6709\u4e00\u4e9b\u5185\u5b58\u53ef\u4ee5\u88ab\u4e34\u65f6\u5730\u5b58\u653e\u5728\u78c1\u76d8\u4e0a\uff0c\u5230\u88ab\u8bbf\u95ee\u7684\u65f6\u5019\u518d\u88ab\u653e\u5230 physical memory \u4e2d\uff0c\u5c31\u50cf cache \u505a\u7684\u90a3\u6837\u3002</p> <p>\u4ece\u8fd9\u5f20\u56fe\u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6ce8\u610f\u5230 physical memory \u7684\u5b58\u653e\u5e76\u6ca1\u6709\u5206\u7ec4\u7684\u6982\u5ff5\uff0c\u5373\u7528 cache \u7684\u672f\u8bed\u6765\u8bf4\uff0cmain memory \u662f fully-associative \u7684\u3002</p> <p>\u865a\u62df\u5b58\u50a8\u7684\u6280\u672f\u548c cache \u7684\u539f\u7406\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4e00\u4e9b\u672f\u8bed\u7684\u540d\u5b57\u5e76\u4e0d\u76f8\u540c\u3002\u5bf9\u5e94\u4e8e cache \u4e2d\u7684 block / line\uff0c\u865a\u62df\u5b58\u50a8\u7684\u5185\u5b58\u5355\u5143\u79f0\u4e3a page\uff0c\u5f53\u6211\u4eec\u8981\u8bbf\u95ee\u7684 page \u4e0d\u5728\u4e3b\u5b58\u4e2d\u800c\u662f\u5728\u78c1\u76d8\u91cc\uff0c\u4e5f\u5c31\u662f miss\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u4e00\u6b21 page fault\u3002</p> Info <p>\u5728\u4e00\u4e9b\u5730\u65b9\uff0cvirtual page \u79f0\u4e3a page\uff0cphysical page \u79f0\u4e3a \u5e27, frame\uff1b\u6211\u4eec\u7684\u8bfe\u672c\u5e76\u672a\u91c7\u7528\u8fd9\u79cd\u79f0\u547c\u3002\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u5728\u770b\u5230\u5355\u72ec\u51fa\u73b0\u7684 page \u65f6\uff0c\u5e94\u5f53\u53c2\u8003\u4e0a\u4e0b\u6587\u5224\u65ad\u5b83\u662f virtual \u8fd8\u662f physical\u3002</p> <p>\u5728\u4e00\u4e9b\u5730\u65b9\uff0cvirtual address \u4e5f\u88ab\u79f0\u4e3a logical address\u3002</p>"},{"location":"computer_organization/5_cache/#552-\u5982\u4f55\u5b8c\u6210\u6620\u5c04\u5462","title":"5.5.2 \u5982\u4f55\u5b8c\u6210\u6620\u5c04\u5462","text":"<p>\u9996\u5148\u6211\u4eec\u8981\u8003\u8651\u7684\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u4e00\u4e2a page \u5e94\u8be5\u6709\u591a\u5927\u3002\u6211\u4eec\u77e5\u9053\uff0c\u8bbf\u95ee\u78c1\u76d8\u76f8\u6bd4\u4e8e\u8bbf\u95ee\u5185\u5b58\u662f\u975e\u5e38\u6162\u7684\uff08\u76f8\u5dee\u5927\u7ea6\u5341\u4e07\u500d\uff09\uff0c\u8fd9\u4e2a\u4e3b\u8981\u65f6\u5ef6\u6765\u81ea\u4e8e\u78c1\u76d8\u8f6c\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\u7684\u65f6\u95f4\u82b1\u8d39\uff1b\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u4e00\u6b21\u8bfb\u8fdb\u6765\u591a\u4e00\u70b9\u4ece\u800c\u6765\u5206\u644a\u8fd9\u4e2a\u8bbf\u95ee\u65f6\u95f4\u3002\u5178\u578b\u7684 page \u5927\u5c0f\u4ece 4KiB ~ 64KiB \u4e0d\u7b49\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u8003\u8651\u6620\u5c04\u5173\u7cfb\u3002\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\u4e00\u4e2a page \u7684\u5927\u5c0f\u662f 4KiB\uff0c\u90a3\u4e48\u5176\u9875\u5185\u7684\u504f\u79fb page offset \u5c31\u9700\u8981 12 \u4f4d\u6765\u8868\u793a\uff1b\u90a3\u4e48\u7269\u7406\u5730\u5740\u4e2d\u9664\u53bb\u540e 12 \u4f4d\u4ee5\u5916\u524d\u9762\u7684\u90e8\u5206\u5c31\u8868\u5f81\u7740\u5b83\u662f\u5c5e\u4e8e\u54ea\u4e00\u9875\u7684\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a physical page number\u3002</p> Info <p>\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0cmemory \u4f5c\u4e3a disk \u7684 \"cache\" \u662f fully-associative \u7684\uff0c\u56e0\u6b64 physical page number \u5176\u5b9e\u5c31\u662f cache \u4e2d\u7684 \"tag\"\uff0c\u800c page offset \u5c31\u662f cache \u4e2d\u7684 \"byte offset\"\uff0cfully-associative \u7684 cache \u5e76\u6ca1\u6709 index \u8fd9\u4e00\u5b57\u6bb5\u3002</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 fully-associative \u7684\u5b58\u50a8\u65b9\u5f0f\u5462\uff1f\u6211\u4eec\u5728 cache \u4e2d\u8ba8\u8bba\u8fc7\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u597d\u5904\u662f\u5931\u6548\u7387\u4f4e\uff0c\u574f\u5904\u662f\u67e5\u8be2\u96be\u5ea6\u5927\u3002\u4f46\u662f\u6211\u4eec\u4e5f\u8ba8\u8bba\u5230\u4e86\uff0cpage fault \u7684\u5f00\u9500\u662f\u975e\u5e38\u5927\u7684\uff0c\u56e0\u6b64\u6bd4\u8f83\u4f4e\u7684 page fault \u7684\u6982\u7387\u76f8\u5bf9\u4e8e\u989d\u5916\u7684\u67e5\u8be2\u6765\u8bf4\u662f\u975e\u5e38\u5212\u7b97\u7684\u3002</p> <p>\u540c\u6837\uff0c\u7531\u4e8e\u8bfb\u5199\u78c1\u76d8\u662f\u975e\u5e38\u6162\u7684\uff0cwrite through \u7684\u7b56\u7565\u5e76\u4e0d\u5408\u9002\uff0c\u56e0\u6b64\u5728 virtual memory \u7684\u6280\u672f\u4e2d\uff0c\u6211\u4eec\u91c7\u53d6 write back \u7684\u65b9\u5f0f\u3002</p> <p>\u800c virtual address \u7684\u5f62\u5f0f\u4e0e\u4e4b\u7c7b\u4f3c\uff0c\u7531\u82e5\u5e72\u4f4d page number \u548c\u82e5\u5e72\u4f4d page offset \u7ec4\u6210\u3002</p> <p>\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u6211\u4eec\u6709\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5\u627e\u5230 virtual page \u5bf9\u5e94\u7684 physical page\uff0c\u56e0\u6b64\u5f53\u6211\u4eec\u8981\u8bbf\u95ee\u4e00\u4e2a\u865a\u62df\u5730\u5740\u65f6\uff0c\u5c06\u5176 virtual page number \u901a\u8fc7\u8fd9\u79cd translation \u8f6c\u6362\u4e3a physical page number\uff08\u8fd9\u79cd translation \u4e5f\u4f1a\u8d1f\u8d23 page fault \u7684\u5904\u7406\u5e76\u7ed9\u51fa\u6b63\u786e\u7684\u8f6c\u6362\uff09\uff0c\u800c page offset \u8868\u793a\u7684\u662f\u5728\u4e00\u9875\u5185\u7684\u504f\u79fb\uff0c\u4fdd\u6301\u4e0d\u53d8\u5373\u53ef\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u83b7\u5f97\u4e86\u8fd9\u4e2a virtual address \u5bf9\u5e94\u7684 physical address\uff0c\u4e5f\u5c31\u662f\u5b83\u5728\u5b9e\u9645\u7684 main memory \u4e2d\u5b58\u50a8\u7684\u4f4d\u7f6e\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0cvirtual page number \u7684\u4f4d\u6570\u6bd4 physical \u7684\u591a\uff1b\u8fd9\u4e5f\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5f15\u5165\u865a\u62df\u5185\u5b58\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\u5c31\u662f\u4e3a\u4e86\u4f7f\u7528\u6bd4 main memory \u66f4\u5927\u7684\u5185\u5b58\u3002</p> Info <p>\u5982\u679c\u6211\u4eec\u628a translation \u770b\u6210\u4e00\u4e2a\u51fd\u6570\uff08\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u4e4b\u540e\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u79cd translation \u786e\u5b9e\u7b26\u5408\u51fd\u6570\u7684\u5b9a\u4e49\uff09\uff0c\u90a3\u4e48\u4e8b\u5b9e\u4e0a virtual page number \u5230 physical page number \u7684\u8f6c\u6362\u662f direct mapped \u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4ece\u4e00\u4e2a virtual page number \u53ef\u4ee5\u786e\u5207\u5730\u627e\u5230 \u4e00\u4e2a physical page number\uff0c\u800c\u4e0d\u662f\u5728\u4e00\u7ec4\u4e2d\u518d\u53bb\u5bfb\u627e\u3002\u56e0\u6b64\uff0cvirtual page number \u5b9e\u9645\u4e0a\u5bf9\u5e94\u4e86 cache \u4e2d\u7684 \"index\"\uff0ctag \u5e76\u4e0d\u9700\u8981\u3002</p> <p>\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u8ba4\u4e3a virtual address \u4e4b\u4e8e physical address \u662f direct mapped \u7684\uff0cvirtual page number \u5bf9\u5e94 cache \u4e2d\u7684 index\uff0cpage offset \u5bf9\u5e94 byte offset\uff1b\u800c physical address \u4e4b\u4e8e secondary storage \u662f fully associative \u7684\uff0cphysical page number \u5bf9\u5e94 cache \u4e2d\u7684 tag\uff0cpage offset \u5bf9\u5e94 byte offset\u3002</p> <p>\uff08\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u6211\u4e2a\u4eba\u5e76\u4e0d\u8ba4\u540c\u628a virtual memory \u548c cache \u7c7b\u6bd4\u8d77\u6765\u3002\uff09</p>"},{"location":"computer_organization/5_cache/#553-\u9875\u8868","title":"5.5.3 \u9875\u8868","text":"<p>\u6211\u4eec\u4e0b\u9762\u8ba8\u8bba\u8fd9\u79cd translation \u7684\u5177\u4f53\u65b9\u6848\u3002\u4e4b\u524d\u4e5f\u63d0\u5230\uff0cfully-associative \u7684\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u5c31\u662f\u5982\u4f55\u53bb\u5b9a\u4f4d\u67d0\u4e00\u9879\uff1b\u8fd9\u91cc\u6211\u4eec\u5f15\u5165 page table \u8fd9\u79cd\u7ed3\u6784\uff0c\u5b83\u88ab\u5b58\u653e\u5728 main memory \u4e2d\uff0c\u6bcf\u4e2a\u7a0b\u5e8f\uff08\u5b9e\u9645\u4e0a\u662f\u8fdb\u7a0b\uff0c\u4f46\u662f\u5199\u8bfe\u672c\u7684\u4eba\u597d\u50cf\u73b0\u5728\u5e76\u4e0d\u60f3\u5f15\u5165\u8fd9\u4e2a\u6982\u5ff5\uff09\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684 page table\uff1b\u540c\u65f6\u786c\u4ef6\u4e0a\u6709\u4e00\u4e2a page table register \u4fdd\u5b58\u5f53\u524d\u8fdb\u7a0b\u8fd9\u4e2a\u9875\u8868\u7684\u5730\u5740\u3002</p> <p>\u4f7f\u7528\u9875\u8868\u65f6\uff0c\u6211\u4eec\u6839\u636e virtual page number \u627e\u5230\u5bf9\u5e94 page table entry, PTE \u5728 page table \u4e2d\u7684\u504f\u79fb\uff0c\u7136\u540e\u4e0e page table register \u76f8\u52a0\u5f97\u5230\u5bf9\u5e94 entry \u7684 physical address\uff0c\u4ece\u4e2d\u8bfb\u53d6\u5bf9\u5e94\u7684 entry\u3002\u5176\u5b9e\u5c31\u662f\u8bf4\uff0cpage table \u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c<code>page_table[i]</code>\u8868\u793a\u7b2c<code>i</code>\u4e2a virtual page \u5bf9\u5e94\u7684 physical page number\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6bcf\u4e2a entry \u4e2d\u5305\u542b\u4e86\u4e00\u4e2a valid bit \u548c physical page number\u3002\u5982\u679c valid bit = 1\uff0c\u90a3\u4e48\u8f6c\u6362\u5b8c\u6210\uff1b\u5426\u5219\u89e6\u53d1\u4e86 page fault\uff0chandle \u4e4b\u540e\u518d\u8fdb\u884c\u8f6c\u6362\u3002</p> <p></p> <p>Page fault \u4f1a\u5f15\u53d1\u4e00\u4e2a exception\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u63a5\u7ba1\u63a7\u5236\uff0c\u5904\u7406\u5b8c\u4e4b\u540e\u518d\u5c06\u63a7\u5236\u4ea4\u8fd8\u7ed9\u8fdb\u7a0b\u3002\u64cd\u4f5c\u7cfb\u7edf\u8981\u505a\u7684\u4e8b\u60c5\u662f\u5728 secondary storage \u4e2d\u627e\u5230\u8fd9\u4e00 page\uff0c\u5c06\u5176\u653e\u5230 main memory \u91cc\uff08\u53ef\u80fd\u9700\u8981\u4e0e\u5f53\u524d\u4e3b\u5b58\u4e2d\u7684\u67d0\u4e2a page \u4ea4\u6362\uff09\uff0c\u7136\u540e\u66f4\u65b0 page table\u3002</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u5728\u521b\u5efa\u8fdb\u7a0b\u65f6\u5728 disk (\u6216\u8005 flash memory) \u4e0a\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u5730\u5740\u7a7a\u95f4\u90a3\u4e48\u5927\u7684\u7a7a\u95f4\uff0c\u4ee5\u4fbf\u4e0a\u8ff0\u7684\u4ea4\u6362\uff1b\u8fd9\u4e2a\u7a7a\u95f4\u79f0\u4e3a \u4ea4\u6362\u533a, swap space\u3002\u4e0b\u9762\u7684\u95ee\u9898\u662f\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u5728 swap space \u4e2d\u627e\u5230\u9700\u8981\u7684 page\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c page table entry \u7684 valid bit \u4e3a 0\uff0c\u90a3\u4e48\u540e\u9762\u7684 physical page number \u662f\u6ca1\u6709\u7528\u5230\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5b57\u6bb5\u5b58\u50a8\u5bf9\u5e94 page \u88ab\u4ea4\u6362\u5230\u4e86 disk \u7684\u54ea\u4e2a\u4f4d\u7f6e\uff1b\u6216\u8005\u53e6\u5916\u5f00\u8f9f\u4e00\u4e2a\u7d22\u5f15\u7ed3\u6784\uff0c\u5728\u5176\u4e2d\u8bb0\u5f55\u6bcf\u4e2a virtual page number \u5bf9\u5e94\u7684 disk \u4f4d\u7f6e\u3002\u4f5c\u4e3a\u524d\u8005\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8bf7\u770b\u4e0b\u56fe\uff1a</p> <p></p> <p>\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u4f1a\u8ddf\u8e2a\u54ea\u4e9b\u8fdb\u7a0b\u548c\u865a\u62df\u5730\u5740\u6b63\u5728\u4f7f\u7528\u54ea\u4e2a\u7269\u7406\u9875\uff0c\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u8ba9\u4ea4\u6362\u5f15\u53d1\u540e\u7eed page fault \u7684\u6b21\u6570\u5c3d\u53ef\u80fd\u5c11\u3002\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684 LRU, Least Recently Used \u7684\u7b56\u7565\u5904\u7406\u4ea4\u6362\u3002</p> <p>LRU \u7684\u4ee3\u4ef7\u6709\u70b9\u592a\u5927\u4e86\uff0c\u6bd5\u7adf\u5982\u679c\u4f7f\u7528 LRU \u7684\u8bdd\u9700\u8981\u904d\u5386\u6574\u4e2a main memory\u3002\u56e0\u6b64\uff0c\u5f88\u591a\u64cd\u4f5c\u7cfb\u7edf\u5f15\u5165\u4e86 reference bit (\u6216\u8005\u79f0\u4e3a use bit) \u6765\u8fd1\u4f3c\u5730\u5b9e\u73b0 LRU\u3002\u5f53\u4e00\u4e2a page \u88ab\u8bbf\u95ee\u65f6\u8fd9\u4e2a bit \u88ab\u7f6e\u4e3a 1\uff1b\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u671f\u5c06 reference bit \u6e05\u96f6\u3002\u56e0\u6b64\uff0c\u5728\u9700\u8981\u4ea4\u6362\u65f6\uff0c\u53ea\u9700\u8981\u627e\u4e00\u4e2a reference bit \u4e3a 0 \u7684\u5c31\u53ef\u4ee5\u8bf4\u660e\u5b83\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u3002</p> <p>\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0cvirtual memory \u4f7f\u7528 write back \u7684\u7b56\u7565\uff0c\u56e0\u6b64\u8fd8\u9700\u8981\u4e00\u4e2a dirty bit\u3002</p>"},{"location":"computer_organization/5_cache/#554-\u7528\u591a\u7ea7\u9875\u8868\u89e3\u51b3\u9875\u8868\u8fc7\u5927\u7684\u95ee\u9898","title":"5.5.4 \u7528\u591a\u7ea7\u9875\u8868\u89e3\u51b3\u9875\u8868\u8fc7\u5927\u7684\u95ee\u9898","text":"<p>\u6211\u4eec\u4e0d\u59a8\u5173\u6ce8\u4e00\u4e0b page table \u6709\u591a\u5927\u3002\u5728\u6211\u4eec\u4e4b\u524d\u7684\u4f8b\u5b50\u4e2d\uff0cvirtual address \u6709 48 bit\uff0c\u6bcf\u4e2a page \u7684\u5927\u5c0f\u4e3a 4KiB\uff0c\u6240\u4ee5 page table entry \u7684\u6570\u76ee\u662f  \\(\\cfrac{2^{48} \\text{ B}}{4\\text{ KiB}} = \\cfrac{2^{48}}{4\\times 2^{10}} = 2^{36}\\)\uff1b\u800c RISC-V \u6bcf\u4e2a\u8868\u9879\u6709 8 Byte\uff0c\u6240\u4ee5 page table \u7684\u603b\u5927\u5c0f\u6765\u5230\u4e86 \\(2^{39}\\text{ B} = 0.5 \\text{TiB}\\)\uff0c\u8fd9\u662f\u6781\u5176\u4e0d\u5408\u7406\u7684\uff1b\u5c24\u5176\u662f\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a page table \u7684\u524d\u63d0\u4e0b\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u591a\u7ea7\u9875\u8868\u7684\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8ff0\uff0c\u9875\u8868\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c <code>page_table[i]</code> \u4e2d\u5b58\u50a8\u7684\u662f page number \u4e3a i \u7684 page \u6240\u5bf9\u5e94\u7684 frame number\u3002\u8003\u8651\u6211\u4eec\u7684\u903b\u8f91\u5730\u5740\u7ed3\u6784\uff1a</p> <p></p> <p>\u8fd9\u6837\u7684\u903b\u8f91\u5730\u5740\u7ed3\u6784\u9700\u8981\u4e00\u4e2a\u5b58\u50a8 2p\u00a0\u4e2a\u5143\u7d20\u7684 page table\uff0c\u5373\u9700\u8981\u8fd9\u4e48\u5927\u7684\u8fde\u7eed\u5185\u5b58\uff0c\u8fd9\u662f\u975e\u5e38\u5927\u7684\u6d88\u8017\u3002\u6211\u4eec\u8003\u8651\u5c06 p \u518d\u5206\u4e3a p1\u00a0\u548c p2\u00a0\uff1a</p> <p></p> <p></p> <p>\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4e24\u7ea7\u9875\u8868\uff0c <code>outer_page_table[i]</code>\u00a0\u4e2d\u5b58\u50a8\u7684\u662f p1\u00a0\u4e3a i \u7684 inner page table\uff0c\u5373<code>inner_page_table[i][]</code> \u7684\u57fa\u5730\u5740\uff1b\u800c <code>inner_page_table[i][j]</code> \u4e2d\u5b58\u50a8\u7684\u5c31\u662f p1\u00a0\u4e3a i\uff0cp2\u00a0\u4e3a j \u7684 page \u5bf9\u5e94\u7684 frame number\uff0c\u5373 page number \u4e3a p1p2\u00a0\uff08\u6ca1\u6709\u5206\u5272\u65f6\u7684 p\uff09\u5bf9\u5e94\u7684 frame number\u3002</p> <p>\u8fd9\u91cc\uff0c\u6211\u4eec\u79f0 p1\u00a0\u4e3a page directory number\u00a0\uff0cp2\u00a0\u4e3a page table number\uff0cd \u4e3a page offset\u3002</p> <p></p> <p>\u8003\u8651\u8fd9\u6837\u505a\u7684\u597d\u5904\uff1ahierarchical paging \u5176\u5b9e\u5c31\u662f\u5bf9\u9875\u8868\u7684\u5206\u9875\uff08page the page table\uff09\u3002\u56e0\u6b64\uff0c\u5b83\u907f\u514d\u4e86 page table \u5fc5\u987b\u5904\u5728\u8fde\u7eed\u5185\u5b58\u7684\u95ee\u9898\uff0c\u8fd9\u4e00\u95ee\u9898\u5728 p\u00a0\u6bd4\u8f83\u5927\u65f6\u5c24\u5176\u4e25\u91cd\u3002</p> <p>\u53e6\u5916\uff0c\u8fd9\u6837\u505a\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8282\u7701\u7a7a\u95f4\u3002\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u9875\u8868\u4e0d\u4e00\u5b9a\u4f1a\u5168\u90e8\u4f7f\u7528\uff1b\u5e76\u4e14\u7531\u4e8e\u903b\u8f91\u5730\u5740\u662f\u8fde\u7eed\u7684\uff0c\u56e0\u6b64\u7528\u5230\u7684\u9875\u8868\u9879\u4e5f\u662f\u8fde\u7eed\u7684\uff0c\u90fd\u6392\u5728\u9875\u8868\u7684\u5934\u90e8\u3002\u56e0\u6b64\u5982\u679c\u6211\u4eec\u91c7\u7528\u4e86\u4e8c\u7ea7\u9875\u8868\uff0c\u90a3\u4e48\u8bb8\u591a\u6392\u5728\u540e\u9762\u7684 inner page table \u5c06\u5b8c\u5168\u4e3a\u7a7a\uff1b\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0d\u7ed9\u8fd9\u4e9b inner page table \u5206\u914d\u7a7a\u95f4\uff0c\u5373\u6211\u4eec\u53ea\u5206\u914d\u6700\u5927\u7684 p1\u00a0\u90a3\u4e48\u591a\u4e2a inner page table\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u8282\u7701\u5f88\u591a\u7a7a\u95f4\u3002\u5373\u4f7f\u5728\u6700\u5dee\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u9875\u8868\u90fd\u88ab\u4f7f\u7528\u4e86\uff0c\u6211\u4eec\u7684\u9875\u8868\u6240\u7528\u7684\u603b\u6761\u76ee\u6570\u4e5f\u53ea\u6709 \\(2^{p_1}+2^{p_1}\\cdot 2^{p_2} = 2^{p_1} + 2^{p_1 + p_2}\\)\u00a0\u4e2a\uff0c\u53ea\u6bd4\u5355\u7ea7\u9875\u8868\u7ed3\u6784\u591a\u4e86 \\(2^{p_1}\\)\uff0c\u662f\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\u7684\u3002</p> <p>\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u66f4\u591a\u7ea7\u7684\u9875\u8868\u3002\u4f8b\u5982\uff0c64 \u4f4d\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u4f7f\u7528\u4e8c\u7ea7\u9875\u8868\u5c31\u662f\u4e0d\u591f\u7684\uff0c\u5426\u5219\u5b83\u7684\u9875\u8868\u5c31\u4f1a\u957f\u6210\u8fd9\u6837\uff1a</p> <p></p> <p>\u8fd9\u6837 outer page \u5c31\u4f1a\u8d85\u7ea7\u5927\u3002\u6211\u4eec\u53ef\u4ee5 page the outer page\uff1a</p> <p></p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5efa\u7acb\u4e86\u4e00\u4e2a\u4e09\u7ea7\u9875\u8868\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u4e0d\u5fc5\u4f7f\u7528\u5168\u90e8\u7684 64 \u4f4d\uff0c\u5373\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u4e2a 64 \u4f4d\u90a3\u4e48\u5de8\u5927\u7684 virtual address space\u3002AMD-64 \u652f\u6301 48-bit \u7684\u865a\u62df\u5730\u5740\uff0cARM64 \u652f\u6301 39-bit \u548c 48-bit \u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff1a</p> <p></p>"},{"location":"computer_organization/5_cache/#555-\u4f7f\u7528-tlb-\u52a0\u5feb\u5730\u5740\u8f6c\u6362","title":"5.5.5 \u4f7f\u7528 TLB \u52a0\u5feb\u5730\u5740\u8f6c\u6362","text":"<p>\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u4f7f\u7528\u9875\u8868\u65f6\uff0c\u6211\u4eec\u6839\u636e virtual page number \u627e\u5230\u5bf9\u5e94 page table entry \u5728 page table \u4e2d\u7684\u504f\u79fb\uff0c\u7136\u540e\u4e0e page table register \u76f8\u52a0\u5f97\u5230\u5bf9\u5e94 entry \u7684 physical address\uff0c\u4ece\u4e2d\u8bfb\u53d6\u5bf9\u5e94\u7684 entry\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u7684\u6548\u7387\u5b58\u5728\u95ee\u9898\u3002\u8981\u8bbf\u95ee virtual address \u5bf9\u5e94\u7684 physical address\uff0c\u6211\u4eec\u9996\u5148\u8981\u6839\u636e page table register \u548c page number \u6765\u627e\u5230\u9875\u8868\u5728\u5185\u5b58\u7684\u4f4d\u7f6e\uff0c\u5e76\u5728\u5176\u4e2d\u5f97\u5230 page \u5bf9\u5e94\u7684 frame number\uff0c\u8fd9\u9700\u8981\u4e00\u6b21\u5185\u5b58\u8bbf\u95ee\uff1b\u7136\u540e\u6211\u4eec\u6839\u636e frame number \u548c page offset \u7b97\u51fa\u771f\u5b9e\u7684 physical address\uff0c\u5e76\u8bbf\u95ee\u5bf9\u5e94\u7684\u5b57\u8282\u5185\u5bb9\u3002\u5373\uff0c\u8bbf\u95ee\u4e00\u4e2a\u5b57\u8282\u9700\u8981\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\uff0c\u8fd9\u4f1a\u52a0\u500d\u539f\u672c\u7684\u5185\u5b58\u8bbf\u95ee\u7684\u65f6\u95f4\uff0c\u8fd9\u662f\u96be\u4ee5\u63a5\u53d7\u7684\u3002</p> <p>\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u7528\u5230\u4e00\u4e2a\u4e13\u7528\u7684\u9ad8\u901f\u67e5\u627e\u786c\u4ef6 cache\uff0c\u8fd9\u91cc\u79f0\u5b83\u4e3a translation look-aside buffer (TLB)\u3002\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f page table \u7684\u4e13\u7528 cache\uff08\u5b83\u771f\u7684\u662f cache\uff1bpage table \u5e76\u4e0d\u662f cache\uff0c\u53ea\u662f\u50cf cache\uff09\uff0c\u5176 associativity \u7684\u8bbe\u8ba1\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u51b3\u5b9a\u3002</p> <p>\u4e0b\u56fe\u662f\u4e00\u4e2a fully-associative \u7684 TLB \u7684\u4f8b\u5b50\uff1b\u7531\u4e8e\u662f fully-associative\uff0c\u5e76\u4e0d\u9700\u8981 index\uff1a</p> <p></p> <p>\u5f53 TLB miss \u7684\u65f6\u5019\uff0c\u5904\u7406\u5668\u53bb page table \u67e5\u627e\u5bf9\u5e94\u7684\u9879\uff1b\u5982\u679c\u53d1\u73b0\u5bf9\u5e94\u9879\u662f valid \u7684\uff0c\u90a3\u4e48\u5c31\u628a\u4ed6\u62ff\u5230 TLB \u91cc\uff08\u6b64\u65f6\u88ab\u66ff\u6362\u6389\u7684 TLB entry \u7684 dirty bit \u5982\u679c\u662f 1\uff0c\u4e5f\u8981\u5199\u4f1a page table\uff09\uff1b\u5426\u5219\u5c31\u4f1a\u89e6\u53d1\u4e00\u4e2a page fault\uff0c\u7136\u540e\u5728\u505a\u4e0a\u8ff0\u7684\u4e8b\u3002</p> <p></p>"},{"location":"computer_organization/5_cache/#556-memory-protection","title":"5.5.6 Memory Protection","text":"<p>\u6682\u65f6\u4e0d\u60f3\u5b66QWQ</p>"},{"location":"computer_organization/5_cache/#56-the-three-cs--\u5bf9-cache-miss-\u7684\u5f52\u7c7b","title":"5.6 The Three Cs | \u5bf9 cache miss \u7684\u5f52\u7c7b","text":"<p>Danger</p> <p>\u6b64\u5904\u5185\u5bb9\u5b58\u7591</p> <ul> <li>Compulsory misses / Cold-start misses\uff1a\u5bf9\u4e00\u4e2a\u5757\u7b2c\u4e00\u6b21\u8bbf\u95ee\u65f6\u5f15\u53d1\u7684 miss</li> <li>Capacity misses\uff1a\u5728 fully-associative cache \u4e2d\uff0c\u67d0\u4e2a\u5757\u867d\u7136\u8bbf\u95ee\u8fc7\uff0c\u4f46\u662f\u7531\u4e8e\u5bb9\u91cf\u4e0d\u591f\u88ab\u6362\u51fa\u53bb\u4e86\uff0c\u518d\u8bbf\u95ee\u65f6\u5c31 miss \u4e86</li> <li>Conflict misses / Collision misses\uff1a\u5728 set-associative \u6216 direct-mapped cache \u4e2d\uff0c\u67d0\u4e2a\u5757\u867d\u7136\u8bbf\u95ee\u8fc7\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u4e2a\u7ec4\u91cc\u7684\u5bb9\u91cf\u4e0d\u591f\u88ab\u6362\u51fa\u53bb\u4e86\uff0c\u518d\u8bbf\u95ee\u65f6\u5c31 miss \u4e86</li> </ul>"},{"location":"computer_organization/5_cache/#57-using-fsm-to-control-a-simple-cache","title":"5.7 Using FSM to Control a Simple Cache","text":"<p>FSM\uff0cFinite State Machine\uff0c\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\uff1b\u5176\u5b9e\u5c31\u662f\u6839\u636e\u5f53\u524d\u72b6\u6001\u548c\u8f93\u5165\u8f6c\u6362\u72b6\u6001\u7684\u4e1c\u897f\u3002\u8fd9\u91cc\u6839\u636e\u5f53\u524d\u7684\u72b6\u6001\u4ee5\u53ca\u53d1\u751f\u7684\u4e8b\u4ef6\u8f6c\u6362\u72b6\u6001\uff0c\u5e76\u7ed9\u51fa\u4e00\u4e9b\u63a7\u5236\u4fe1\u53f7\u7684\u8f93\u51fa\uff1a</p> <p></p> <p></p>"},{"location":"computer_organization/6_IO/","title":"6 I/O","text":"<p> \u7ea6 0 \u4e2a\u5b57 </p>"},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/","title":"\u5173\u4e8e\u8003\u8bd5","text":"<p> \u7ea6 547 \u4e2a\u5b57  18 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#2022-\u671f\u672b\u56de\u5fc6\u5377","title":"2022 \u671f\u672b\u56de\u5fc6\u5377","text":""},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#\u9009\u62e9\u9898","title":"\u9009\u62e9\u9898","text":"<ul> <li>\u7ed9\u673a\u5668\u7801\u7ffb\u8bd1\u6210\u6307\u4ee4</li> <li>\u7ed932\u4f4d\u5927\u7acb\u5373\u6570\u5730\u5740\u53d6\u51fa\u5176\u4e2d\u5185\u5bb9\uff08lui+lw\uff09</li> <li>\u6d6e\u70b9\u6570\u52a0\u6cd5\u8fc7\u7a0b\uff1a0.1234510^2 \u548c 0.1234510^(-2) \u5bf9\u9f50\u540e 10 \u7684\u5e42\u6b21\u662f\u591a\u5c11</li> <li>\u56db\u4e2a\u9009\u9879\u9009\u5bf9\u7684\uff1a<ul> <li>PTE \u6570=\u7269\u7406\u9875\u6570</li> <li>\u589e\u52a0 associativity \u53ef\u4ee5\u51cf\u5c11 capa miss</li> <li>async bus \u7684\u6982\u5ff5</li> <li>\u5185\u5b58\u7ed3\u6784\u4e2d\u8017\u65f6\u6700\u591a\u7684\u662f\u6700\u4e0a\u5c42</li> </ul> </li> <li>IEEE 754\uff1a1.355-2.105 \u7528\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8868\u793a</li> <li>\u5355\u5468\u671f\u7684\u65f6\u5019\u65f6\u949f\u5468\u671f\u5b8c\u4e0d\u6210\u54ea\u4e2a\u5de5\u4f5c(\u8bfb\u5e76\u5199\u5185\u5b58)</li> <li>TLB \u6709 tlb \u7684\u65f6\u5019\u5148\u770b\u8c01\uff1atlb pgtbl cache phymem</li> <li>RAID \u662f\u5e72\u5565\u7684</li> <li>cache \u589e\u5927 block size \u53ef\u4ee5\u51cf\u5c11\u54ea\u79cd miss</li> <li>write through \u6307\u4ec0\u4e48</li> <li>6 \u4e2a block\uff0c\u6bcf\u4e2a block 4words\uff0c\u6c42 840 \u5bf9\u5e94\u7684 block \u53f7</li> </ul>"},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#\u5927\u9898","title":"\u5927\u9898","text":""},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#1","title":"1","text":"<p>(1) \u628a\u8fd96\u4e2a\u6570\u6392\u5e8f\uff1a\u5728\u539f\u7801\u3001\u8865\u7801\u3001\u7b26\u53f7\u8868\u793a\u3001IEEE754 \u4e0b\u7684 0xF0000000\uff0c\u5728\u539f\u7801\u3001\u8865\u7801\u4e0b\u7684 0xFFFFFFFF(2) \u4e0d\u7528\u522b\u7684\u5bc4\u5b58\u5668\uff0c\u4ea4\u6362 x10 \u548c x11(3) \u4e66\u4e0aIndexOutOfBound \u90a3\u4e2a\u4f8b\u5b50\uff0c\u5224\u65ad\u6570\u7ec4\u8d8a\u754c</p>"},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#2-\u5199\u6c47\u7f16","title":"2 \u5199\u6c47\u7f16","text":"<pre><code>void main(char *s,int *n){\nchar c,ch;\nc = '3';\nch = '5';\n*n = replace(*s,c,ch);\n}\n\nint replace(char *u,char c,char ch){\nint i = 0;\nwhile(u[i]!=0){\nif(u[i]==c){\nu[i]=ch;\nbreak;\n}\ni++;\n}\nreturn i;\n}\n</code></pre>"},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#3-cache\u4e0d\u786e\u5b9a\u5b8c\u5168\u4e00\u81f4","title":"3 cache(\u4e0d\u786e\u5b9a\u5b8c\u5168\u4e00\u81f4)","text":"<p>(1) 32B \u7684 cache\uff0c\u4e00\u4e2a entry 8B\uff0c\u76f4\u63a5\u6620\u5c04\uff0cwrite through+write around\uff0c\u7ed9\u51fa\u5982\u4e0b\u8bbf\u95ee\uff1a0 16 48 8 56 16 8 56 32 0 60\uff0c\u95ee\u6bcf\u4e00\u6b21\u7684index, tag, \u662f\u5426hit(\u6ce8\u610f write around) (2) 128B \u7684 cache\uff0c\u4e00\u4e2a entry 16B\uff0c2\u8def\u7ec4\u5173\u8054 LRU\uff0cwrite back\uff0c\u7ed9\u51fa\u8bbf\u95ee\uff1a64 32 64 0 112 64 128 48 240 0\uff0c\u95ee\u7684\u8ddf\u4e0a\u9762\u4e00\u6837\uff0c\u5916\u52a0\u6700\u540e\u7684dirty block number</p>"},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#4-\u865a\u62df\u5185\u5b58","title":"4 \u865a\u62df\u5185\u5b58","text":"<p>\u9875\u8868\u5927\u5c0f\uff0c\u4ee5\u53ca\u7ed9\u5b9a\u60c5\u51b5\u95ee TLB \u80fd\u4e0d\u80fd\u5bb9\u7eb3 8MiB \u5185\u5b58</p>"},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#5-\u6d41\u6c34\u7ebf","title":"5 \u6d41\u6c34\u7ebf","text":"<p>(1)\u5148\u95ee\u4e86 sub \u7684\u65f6\u5019\u9664\u4e86 ALUOp \u4ee5\u5916\u5404\u4e2a\u4fe1\u53f7\u7684\u503c\u7ed9\u4e86\u4e00\u6bb5\u4ee3\u7801\uff0c\u5e94\u8be5\u662f<code>sub x5,x7,x11  ld x13, 0(x5)  ld x7,0(x2)  add x13,x5,x13  sd x13, 0(x5)</code>\u95ee\uff1a(2) \u5982\u679c\u6ca1\u6709 forward \u548c hazard detection\uff0c\u5728\u4ee3\u7801\u63d2 nop \u4f7f\u5176\u80fd\u6b63\u786e(3) \u5982\u679c\u6709 forward \u6ca1\u6709 hazard detection\uff0c\u5e72(2)\u7684\u4e8b(4) \u5982\u679c\u6709 forward\uff0c\u5199\u524d7\u4e2a\u65f6\u949f\u5468\u671f ForwardA \u548c ForwardB \u7684\u4fe1\u53f7\u503c</p>"},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#\u5386\u5e74\u5377","title":"\u5386\u5e74\u5377","text":"<p>https://www.cc98.org/topic/5114223</p> <p>https://www.cc98.org/topic/5118209</p>"},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#\u5c0f\u8003\u70b9","title":"\u5c0f\u8003\u70b9","text":"<ul> <li>Intro &amp; Misc</li> <li>Instructions<ul> <li>machine code</li> <li>addressing method</li> <li>floating point inst</li> </ul> </li> <li>Arithmetic<ul> <li>1's complement, 2's complement</li> <li>sign extensions</li> <li>floating point calc steps</li> <li>what is underflow</li> <li>IEEE 754 </li> </ul> </li> <li>Processor</li> <li>Cache<ul> <li>write-through, etc.</li> </ul> </li> <li>Virtual Memory<ul> <li>TLB</li> <li>usage of dirty bit</li> </ul> </li> <li>I/O<ul> <li>SCSI Bus, etc.</li> <li>memory-mapped I/O system</li> </ul> </li> </ul>"},{"location":"computer_organization/%E5%8E%86%E5%B9%B4%E5%8D%B7/#\u5927\u9898_1","title":"\u5927\u9898","text":"<ul> <li>\u7ed9 C \u5199\u6c47\u7f16 [19(14)]</li> <li>Cache \u7b97\u4f4d\u6570 [19(12)]</li> </ul> <p>  D</p>"},{"location":"cpp/","title":"C++ \u5b66\u4e60","text":"<p> \u7ea6 43 \u4e2a\u5b57 </p> <p>\u611f\u89c9 C++ \u8fd8\u662f\u592a\u83dc\u4e86\uff09\uff09\u6162\u6162\u968f\u7f18\u770b\u770b\u76f8\u5173\u7684\u6587\u7ae0\u5427QWQ</p> <p>\u6bd4\u8f83\u60f3\u770b\u7684\u5185\u5bb9\uff1a</p> <ul> <li>The C++ Programming Language</li> <li>Effective C++</li> <li>The Design and Evolution of C++</li> </ul>"},{"location":"cpp/cpp_for_contests/","title":"\u5feb\u901f\u5165\u95e8 C++ \u5199\u9898","text":"<p> \u7ea6 3675 \u4e2a\u5b57  29 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>Abstract</p> <p>\u672c\u6587\u6240\u9700\u9884\u5907\u77e5\u8bc6\uff1a C / C++ \u57fa\u7840</p> <p>\u672c\u6587\u9762\u5411\u5bf9\u8c61\uff1a \u9700\u8981\u505a\u7b97\u6cd5\u9898\u7684\u840c\u65b0!</p> <p>\u5728\u505a LeetCode \u6216\u8005\u5404\u79cd\u7b14\u8bd5\u7684\u7b97\u6cd5\u9898\u7684\u65f6\u5019\uff0c\u907f\u514d\u9020\u8f6e\u5b50\u53ef\u4ee5\u4e3a\u6211\u4eec\u8282\u7701\u5f88\u591a\u5199\u4ee3\u7801\u548c\u8c03\u8bd5\u7684\u65f6\u95f4\uff1b\u800c C++ \u5728\u4e0d\u65ad\u7684\u53d1\u5c55\u4e2d\u4e3a\u6211\u4eec\u5b9e\u73b0\u4e86\u8bb8\u591a\u597d\u7528\u7684\u7279\u6027\u3002\u5f88\u591a\u5c0f\u670b\u53cb\u53ea\u5728\u57fa\u7840\u8bfe\u7a0b\u4e2d\u5b66\u8fc7 C \u8bed\u8a00\uff0c\u5b66\u6821\u5f00\u8bbe\u7684 C++ \u76f8\u5173\u8bfe\u7a0b\u53ef\u80fd\u4e5f\u6ca1\u6709\u6db5\u76d6\u5f88\u591a\u8fd9\u65b9\u9762\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u672c\u5468\u6211\u4eec\u8bd5\u56fe\u53d1\u73b0\u90a3\u4e9b\u5728\u5199\u9898\u4e2d\u5e38\u7528\u7684\u6280\u5de7\uff0c\u5e76\u52a0\u4ee5\u5206\u6790\u548c\u603b\u7ed3\u3002</p> <p>\u672c\u6587\u51c6\u5907\u4ed3\u4fc3\uff0c\u53ef\u80fd\u6709\u5f88\u591a\u9057\u6f0f\u548c\u4e0d\u4e25\u8c28\u4e4b\u5904\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63 QWQ</p> \u63a8\u8350\u9605\u8bfb <p>\u548c\u672c\u6587\u65e0\u5173\uff0c\u4f46\u662f\u63a8\u8350\u9605\u8bfb\uff1a\u5982\u4f55\u4ece\u4e24\u9898\u9009\u624b\u53d8\u6210\u7a33\u5b9a\u4e09\u9898\u9009\u624b\u4ee5\u53ca ak \u5468\u8d5b\uff1f</p> <p>\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u4ecb\u7ecd\u53ea\u4e3a\u6ee1\u8db3\u6700\u57fa\u672c\u7684\u4f7f\u7528\uff1b\u5728\u641c\u7d22\u5f15\u64ce\u641c\u7d22\uff0c\u53ef\u4ee5\u627e\u5230\u66f4\u591a\u7684\u7528\u6cd5\u3002\u5f53\u81ea\u5df1\u7f16\u7a0b\u800c\u4e0d\u662f\u5728 LeetCode \u4e4b\u7c7b\u7684\u5730\u65b9\u505a\u51fd\u6570\u9898\u65f6\uff0c\u8bf7\u81ea\u884c\u641c\u7d22\u5b83\u4eec\u6240\u9700\u7684\u5934\u6587\u4ef6\u7b49\u4fe1\u606f\u3002</p> <p>\u5982\u672a\u7279\u6b8a\u8bf4\u660e\uff0c\u672c\u6587\u8ba8\u8bba\u7684\u5185\u5bb9\u90fd\u5728 <code>namespace std</code> \u91cc\uff1b\u672c\u6587\u7684\u4f8b\u5b50\u5927\u591a\u6765\u6e90\u4e8e cppreference.com\u3002</p>"},{"location":"cpp/cpp_for_contests/#1-\u57fa\u7840","title":"1 \u57fa\u7840","text":"<p>\u4f7f\u7528 C++ \u7b54\u9898\u65f6\uff0c\u6709\u4e00\u4e9b\u975e\u5e38\u57fa\u7840\u548c\u5e38\u7528\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd\u5b83\u4eec\uff01</p>"},{"location":"cpp/cpp_for_contests/#11-\u5f15\u7528","title":"1.1 \u5f15\u7528","text":"<p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u7b26\u53f7 <code>&amp;</code> \u662f \u53d6\u5730\u5740\u7b26 \u3002\u800c\u5728 C++ \u4e2d\uff0c<code>&amp;</code> \u6709\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\uff1a\u5b9a\u4e49\u5f15\u7528\u53d8\u91cf\u3002\u5f15\u7528\u5c31\u662f\u67d0\u4e00\u4e2a\u53d8\u91cf\u7684\u522b\u540d\uff0c \u5bf9\u5f15\u7528\u7684\u64cd\u4f5c\u548c\u5bf9\u53d8\u91cf\u76f4\u63a5\u64cd\u4f5c\u5b8c\u5168\u4e00\u6837 \u3002\u5b9a\u4e49\u8bed\u6cd5\u4e3a\uff1a <code>Type &amp;refVarName = varName;</code> \u3002</p> <p>\u5f15\u7528\u4e0e\u6307\u9488\u7c7b\u4f3c\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u7684\u6709\uff1a</p> <ul> <li>\u4e0d\u5b58\u5728\u7a7a\u5f15\u7528\u3002\u5f15\u7528\u5fc5\u987b\u8fde\u63a5\u5230\u4e00\u5757\u5408\u6cd5\u7684\u5185\u5b58\uff0c\u56e0\u6b64 \u58f0\u660e\u5f15\u7528\u65f6\uff0c\u5fc5\u987b\u540c\u65f6\u8fdb\u884c\u521d\u59cb\u5316 \u3002</li> <li>\u5f15\u7528\u53d8\u91cf\u58f0\u660e\u5b8c\u6bd5\u540e\uff0c \u76f8\u5f53\u4e8e\u539f\u53d8\u91cf\u6709\u4e862\u4e2a\u540d\u79f0\uff0c\u5373\u5f15\u7528\u540d\u548c\u539f\u540d\u3002 \u5f15\u7528\u4e0d\u5360\u5b58\u50a8\u5355\u5143\uff0c\u5bf9\u5f15\u7528\u548c\u539f\u53d8\u91cf\u53d6\u5740\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684 \u3002</li> <li>\u4e00\u65e6\u5f15\u7528\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c31\u4e0d\u80fd\u88ab\u6307\u5411\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\u5373 \u4e0d\u80fd\u5c06\u4e00\u4e2a\u5f15\u7528\u540d\u91cd\u65b0\u4f5c\u4e3a\u5176\u4ed6\u53d8\u91cf\u540d\u7684\u522b\u540d \u3002</li> <li>\u4e0d\u80fd\u5efa\u7acb\u6570\u7ec4\u7684\u5f15\u7528\u3002</li> </ul> <p>\u6307\u9488\u89e3\u51b3\u4e86\u6211\u4eec\u5728\u4f20\u9012\u53c2\u6570\u65f6\u590d\u5236\u5e26\u6765\u7684\u6548\u7387\u548c\u7a7a\u95f4\u6d88\u8017\u7b49\u95ee\u9898\u3002\u800c\u5f15\u7528\u76f8\u6bd4\u4e8e\u6307\u9488\u66f4\u52a0\u5b89\u5168\uff08\u907f\u514d\u5bf9\u5185\u5b58\u7684\u975e\u6cd5\u5f15\u7528\uff09\u3001\u53ef\u8bfb\u6027\u66f4\u9ad8\uff0c\u540c\u65f6\u4e0d\u9700\u8981\u989d\u5916\u5206\u914d\u5185\u5b58\u5355\u5143\u3002</p> <p>\u548c\u6307\u9488\u7c7b\u4f3c\uff0c<code>int &amp;a = b, c = d</code> \u4e2d\uff0c<code>a</code> \u7684\u7c7b\u578b\u662f <code>int &amp;</code>\uff0c\u800c <code>c</code> \u7684\u7c7b\u578b\u662f <code>int</code>\u3002</p> <p>\u5f15\u7528\u5176\u5b9e\u5c31\u662f\u6307\u9488\u5305\u88c5\u4e86\u4e00\u4e0b\u3002</p> <p>\u901a\u8fc7\u5f15\u7528\u53d6\u4e00\u4e2a\u522b\u540d\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u5f15\u7528\u7684\u76ee\u7684\u4e3b\u8981\u7528\u4e8e\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\u3002\u4f8b\u5982\uff1a</p> <pre><code>void swap(int &amp;a, int &amp;b){\nint temp = a;\na = b;\nb = temp;\n}\nint main(){\nint var1 = 1, var2 = 2;\nswap(var1, var2);\ncout &lt;&lt; var1 &lt;&lt; \" \" &lt;&lt; var2 &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u8f93\u51fa\u662f\uff1a <code>2 1</code> \u3002</p> <p>\u5173\u4e8e\u5f15\u7528\u7684\u5176\u4ed6\u7528\u6cd5\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"cpp/cpp_for_contests/#12-vector","title":"1.2 vector","text":"<p><code>#include &lt;vector&gt;</code> </p> <p>vector \u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u81ea\u52a8\u6269\u5c55\u957f\u5ea6\u7684\u6570\u7ec4\u3002</p> <p>\u6784\u9020\uff1a</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7  <code>vector&lt;int&gt; v;</code> \u7684\u65b9\u5f0f\u6784\u9020\u4e00\u4e2a\u7a7a\u7684\u3001\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u5747\u4e3a <code>int</code> \u7684 vector\uff0c\u5176\u540d\u5b57\u4e3a <code>v</code> \u3002\u53ef\u4ee5\u7528\u5176\u4ed6\u7c7b\u578b\uff0c\u5305\u62ec\u81ea\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\u66ff\u6362\u8fd9\u91cc\u7684 <code>int</code> \u3002</li> <li>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c <code>vector&lt;int&gt; v = {1, 2, 3};</code> \u7684\u65b9\u5f0f\u521d\u59cb\u5316\u3002</li> <li>\u540c\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>vector&lt;int&gt; v(n);</code> \u7684\u65b9\u5f0f\u6784\u9020\u4e00\u4e2a\u5305\u542b <code>n</code> \u4e2a\u5143\u7d20\u7684 vector\u3002</li> <li>\u53ef\u4ee5\u901a\u8fc7 <code>vector&lt;int&gt; v(n, 1);</code> \u7684\u65b9\u5f0f\u6784\u9020\u4e00\u4e2a\u5927\u5c0f\u4e3a <code>n</code> \u4e14\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u4e3a <code>1</code> \u7684 vector\u3002 </li> </ul> <p>\u83b7\u53d6\u957f\u5ea6\u3002\u53ef\u4ee5\u901a\u8fc7 <code>v.size()</code> \u83b7\u53d6 vector  <code>v</code> \u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u3002</p> <p>\u5728\u672b\u5c3e\u63d2\u5165\u5143\u7d20\u3002\u53ef\u4ee5\u901a\u8fc7 <code>v.push_back(x)</code> \u7684\u65b9\u5f0f\u5c06 <code>x</code> \u63d2\u5165\u5230 vector  <code>v</code> \u7684\u672b\u5c3e\u3002\u8fd9\u91cc\u7684\u63d2\u5165\u662f\u4f7f\u7528\u62f7\u8d1d\u6784\u9020\u7684\uff0c\u800c\u4f7f\u7528 <code>v.emplace_back(...)</code> \u5219\u53ef\u4ee5\u5728 <code>vector</code> \u4e2d\u8fdb\u884c\u201c\u539f\u5730\u6784\u9020\u201d\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u7279\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u6548\u7387\u66f4\u597d\uff0c\u5199\u8d77\u6765\u4e5f\u66f4\u7b80\u5355\u3002</p> <p>\u8bbf\u95ee\uff08\u8bfb\u53d6 / \u4fee\u6539\uff09\u5143\u7d20\u3002\u548c\u6570\u7ec4\u4e00\u6837\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>v[i]</code> \u7684\u65b9\u5f0f\u8bbf\u95ee vector  <code>v</code> \u7684\u7b2c <code>i</code> \u4e2a\u5143\u7d20\uff0c\u4e0b\u6807\u4ece 0 \u5f00\u59cb\u3002\u6ce8\u610f\uff0c\u5f53 <code>i &gt;= v.size()</code> \u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u53ef\u80fd\u53d1\u751f\u8fd0\u884c\u65f6\u9519\u8bef\u3002</p> <p>\u904d\u5386\u3002<code>C++11</code> \u9664\u4e86\u4f7f\u7528  <code>for (int i = 0; i &lt; v.size(); i++) sum += v[i];</code> \u7684\u65b9\u5f0f\u904d\u5386\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a <code>for (auto a : v) sum += a;</code> \u3002\u8fd9\u79cd\u5199\u6cd5\u53eb\u505a range-based for loop\u3002<code>C++11</code> \u8fd9\u91cc\u7684 <code>auto</code> \u4f1a\u81ea\u52a8\u63a8\u65ad\u51fa <code>a</code> \u7684\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f vector <code>v</code> \u4e2d\u5143\u7d20\u7684\u7c7b\u578b\uff0c\u5b98\u65b9\u79f0\u547c\u662f Placeholder type specifiers\u3002\u5728\u505a LeetCode \u7684\u7edd\u5927\u591a\u6570\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>for (auto &amp;a : v)</code> \uff0c\u52a0\u4e0a\u4e00\u4e2a\u5f15\u7528\u3002\u52a0\u4e0a\u8fd9\u4e2a\u5f15\u7528\u540e\u5c31\u4e0d\u4f1a\u5728\u904d\u5386\u7684\u8fc7\u7a0b\u4e2d\u6bcf\u6b21\u5faa\u73af\u90fd\u6784\u9020\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u5728\u904d\u5386\u4e8c\u7ef4 <code>vector</code> \u7684\u65f6\u5019\u5c24\u4e3a\u6709\u610f\u4e49\u3002\u5f53\u7136\u52a0\u4e0a\u5f15\u7528\u540e\u5bf9\u8fd9\u4e2a\u53d8\u91cf <code>a</code> \u505a\u7684\u6539\u52a8\u4f1a\u771f\u5b9e\u5730\u5f71\u54cd\u5230 <code>vector v</code> \u3002</p> \u9884\u7559\u5927\u5c0f <p>\u53ef\u4ee5\u901a\u8fc7 <code>v.reserve(n)</code> \u6765\u5c06 vector \u7684 capacity\uff08\u800c\u975e size\uff09\u9884\u7559\u4e3a <code>n</code>\u3002\u5982\u679c\u7406\u89e3 vector \u7684\u5b9e\u73b0\u903b\u8f91\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u7684\u610f\u4e49\uff08\u53ef\u4ee5\u770b cppref \u91cc\u7684\u4f8b\u5b50\uff09\u3002\u5982\u679c\u4e0d\u7406\u89e3\u7684\u8bdd\u53ef\u4ee5\u6682\u65f6\u5f53\u505a\u6ca1\u770b\u89c1\u8fd9\u4e00\u6761\u3002</p>"},{"location":"cpp/cpp_for_contests/#13-string","title":"1.3 string","text":"<p><code>#include &lt;string&gt;</code></p> <p>string \u662f C++ \u4e2d\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u3002\u5176\u5b9e\u73b0\u548c C \u4e2d\u7684\u5b57\u7b26\u6570\u7ec4\u4e00\u81f4\uff0c\u4e5f\u662f\u4ee5 <code>'\\0'</code> \u6807\u8bc6\u7ed3\u675f\u3002</p> <p>\u6784\u9020\u3002\u53ef\u4ee5\u901a\u8fc7 <code>string s;</code> \u6216\u8005 <code>string s = \"123\";</code> \u7684\u65b9\u5f0f\u6784\u9020\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p> <p>\u83b7\u53d6\u957f\u5ea6\u3002\u53ef\u4ee5\u901a\u8fc7 <code>s.length()</code> \u6216\u8005 <code>s.size()</code> \u7684\u65b9\u5f0f\u83b7\u53d6\u5176\u957f\u5ea6\uff0c\u8be5\u957f\u5ea6\u4e0d\u542b\u672b\u5c3e\u7684 <code>'\\0'</code> \u3002</p> <p>\u62fc\u63a5\u3002\u53ef\u4ee5\u901a\u8fc7 <code>s1 + s2</code> \u6216\u8005 <code>s + 'a'</code> \u7684\u65b9\u5f0f\u5c06\u5b57\u7b26\u4e32\u4e0e\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u5b57\u7b26\uff08\u5747\u53ef\u4ee5\u662f\u5b57\u9762\u91cf\uff09\u62fc\u63a5\u3002</p> <p>\u8bbf\u95ee\u5b57\u7b26\u3002\u548c\u6570\u7ec4\u3001vector \u4e00\u6837\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>s[i]</code> \u7684\u65b9\u5f0f\u8bbf\u95ee\u5b57\u7b26\u4e32\u7684\u7b2c i \u4e2a\u5b57\u7b26\u3002</p> <p>\u904d\u5386\u3002<code>C++11</code> \u7c7b\u4f3c vector\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>for (auto c : s)</code> \u7684\u65b9\u5f0f\u904d\u5386\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u3002</p> <p>\u6bd4\u8f83\u3002\u53ef\u4ee5\u901a\u8fc7 <code>==</code> ,  <code>!=</code> ,  <code>&gt;</code> \u7b49\u6bd4\u8f83\u8fd0\u7b97\u7b26\u6309\u5b57\u5178\u5e8f\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u3002</p>"},{"location":"cpp/cpp_for_contests/#14-pair","title":"1.4 pair","text":"<p><code>#include &lt;utility&gt;</code></p> <p>pair \u53ef\u4ee5\u5c06\u4e24\u4e2a\u4e0d\u5fc5\u76f8\u540c\u7684\u7c7b\u578b\u6512\u8d77\u6765\uff0c\u4f8b\u5982 <code>pair&lt;int, int&gt; p1;</code> \u6216\u8005 <code>pair&lt;int, string&gt; p2;</code> \u3002</p> <p>\u53ef\u4ee5\u7528  <code>pair&lt;int, double&gt; p{1, 1.3};</code> \u7684\u65b9\u5f0f\u6784\u9020\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7  <code>p = make_pair(0, -3.1)</code> \u7684\u65b9\u5f0f\u8d4b\u503c\u3002pair \u4e4b\u95f4\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u3002</p> <p>\u53ef\u4ee5\u7528 <code>p1.first</code> \u3001 <code>p1.second</code> \u7684\u65b9\u5f0f\u8bbf\u95ee\u5176\u6210\u5458\u3002</p> <p>pair \u9ed8\u8ba4\u7684\u6bd4\u8f83\u65b9\u6cd5\u662f\u5148\u6309\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u6bd4\u8f83\uff0c\u76f8\u540c\u518d\u6309\u7b2c\u4e8c\u4e2a\u5b57\u6bb5\u6bd4\u8f83\u3002</p>"},{"location":"cpp/cpp_for_contests/#2-\u4e0d\u90a3\u4e48\u57fa\u7840","title":"2 \u4e0d\u90a3\u4e48\u57fa\u7840","text":"<p>Note</p> <p>\u540e\u9762\u7684\u90e8\u5206\u57fa\u672c\u662f\u60f3\u5230\u54ea\u5199\u5230\u54ea\uff0c\u6240\u4ee5\u4e0d\u5b8c\u5168\u6709\u903b\u8f91\u548c\u96be\u5ea6\u7684\u987a\u5e8f\uff09\uff09\uff09</p> <p>\u7528 \u2606 \u6807\u660e\u4e2a\u4eba\u8ba4\u4e3a\u6bd4\u8f83\u5e38\u7528\u7684\u5185\u5bb9\uff01</p>"},{"location":"cpp/cpp_for_contests/#21--sort","title":"2.1 \u2606\u2606\u2606 sort","text":"<p><code>#include &lt;algorithm&gt;</code></p> <p><code>sort</code> \u7528\u4e8e\u5bf9\u6570\u7ec4\u6216 vector \u7b49\u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\u4e14\u5143\u7d20\u53ef\u6bd4\u8f83\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u6392\u5e8f\u3002\u590d\u6742\u5ea6\u662f \\(O(n\\log n)\\)\u3002</p> <p>\u4f8b\u5982\uff1a <pre><code>int a[] = {3, 1, 4, -2, 5, 3};\nsort(a, a + 6);\n</code></pre> \u6b64\u65f6 <code>a</code> \u4e2d\u7684\u503c\u4e3a -2 1 3 3 4 5\uff0c\u5373\u5347\u5e8f\u6392\u5217\u3002</p> <p>\u8fd9\u91cc <code>a</code> \u548c <code>a + 6</code> \u662f\u5de6\u95ed\u53f3\u5f00\u7684\u6392\u5e8f\u533a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c <code>sort(a + 1, a + 4)</code>  \u7684\u65b9\u5f0f\u5bf9\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\u3002</p> <p>\u5bf9\u4e8e vector\uff0c\u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u4f7f\u7528\uff1a <pre><code>vector&lt;int&gt; v = {3, 1, 4, -2, 5, 3};\nsort(v.begin(), v.end());\n</code></pre></p> <p>\u5982\u679c\u60f3\u8981\u964d\u5e8f\u600e\u4e48\u529e\u5462\uff1f\u65b9\u6cd5\u4e4b\u4e00\u662f\uff1a <pre><code>vector&lt;int&gt; v = {3, 1, 4, -2, 5, 3};\nsort(v.begin(), v.end(), greater&lt;int&gt;());\n</code></pre> \u6b64\u65f6 <code>v</code> \u4e2d\u7684\u503c\u662f 5 4 3 3 1 -2\u3002</p> <p>\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u3002\u6bd4\u8f83\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u5143\u7d20\u7684\u5f15\u7528\uff0c\u8fd4\u56de\u4e00\u4e2a bool \u503c\u8868\u793a\u524d\u8005\u662f\u5426\u5e94\u5f53\u5728\u540e\u8005\u4e4b\u524d\uff1a <pre><code>bool cmp(const int&amp; a, const int&amp; b) { return a &gt; b; }\nvector&lt;int&gt; v = {3, 1, 4, -2, 5, 3};\nsort(v.begin(), v.end(), cmp);\n</code></pre> \u6ce8\u610f\uff0c\u6bd4\u8f83\u51fd\u6570\u903b\u8f91\u4e0a\u76f8\u5f53\u4e8e <code>a &lt; b</code> \u3002\u56e0\u6b64\u5f53\u4e24\u4e2a\u5143\u7d20\u76f8\u7b49\u65f6\uff0c\u6bd4\u8f83\u51fd\u6570\u603b\u662f\u5e94\u5f53\u8fd4\u56de false\u3002</p> <p><code>C++11</code> \u4e5f\u53ef\u4ee5\u4f7f\u7528 lambda \u8868\u8fbe\u5f0f\uff08\u5176\u5b9e\u5c31\u662f\u533f\u540d\u51fd\u6570\uff0c\u8fd9\u91cc\u4e0d\u5c55\u5f00\u4e86\uff0c\u6709\u7f18\u518d\u804a XD\uff09\u7b80\u5316\u5199\u6cd5\uff1a <pre><code>vector&lt;int&gt; v = {3, 1, 4, -2, 5, 3};\nsort(v.begin(), v.end(), [](const int&amp; a, const int&amp; b) { return a &gt; b; });\n</code></pre></p> <p>\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u53ef\u4ee5\u9002\u7528\u66f4\u590d\u6742\u7684\u6392\u5e8f\uff0c\u4f8b\u5982\u9700\u8981\u6bd4\u8f83\u7684\u5143\u7d20\u672c\u8eab\u5e76\u6ca1\u6709\u5185\u7f6e\u7684\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u65f6\u5019\u3002\u4f8b\u5982\uff1a <pre><code>bool cmp(const vector&lt;int&gt;&amp; a, const vector&lt;int&gt;&amp; b) {\nreturn a[0] == b[0] ? a[1] &lt; b[1] : a[0] &lt; b[0];\n}\n</code></pre> \u8fd9\u4e2a\u6bd4\u8f83\u51fd\u6570\u53ef\u4ee5\u7528\u4e8e <code>vector&lt;vector&lt;int&gt;&gt;</code> \u7c7b\u578b\u7684\u6392\u5e8f\u3002</p> <p>\u5e38\u7528\u7684\u6807\u51c6\u5e93\uff08\u5982 libgc++\uff09\u4e2d\u5bf9\u4e8e <code>std::sort</code> \u7684\u5b9e\u73b0\u4fdd\u8bc1\u590d\u6742\u5ea6\u662f \\(O(n\\log n)\\)\uff0c\u800c\u4e0d\u4f1a\u9000\u5316\u6210\u5feb\u6392\u7684 \\(O(n^2)\\)\u3002\u56e0\u4e3a\u5b83\u4f7f\u7528\u7684\u662f\u4e00\u79cd\u5feb\u6392\u3001\u5806\u6392\u4ee5\u53ca\u63d2\u5165\u6392\u5e8f\u7684\u7ed3\u5408\u4f53\u3002</p> <p>\uff08\u8fd8\u6709\u66f4\u591a\u6bd4\u8f83\u5668\u7684\u5199\u6cd5\uff0c\u8fd9\u91cc\u6682\u65f6\u4e0d\u5c55\u5f00\u5566\uff09</p>"},{"location":"cpp/cpp_for_contests/#22--upper_bound--lower_bound--binary_search--equal_range","title":"2.2 \u2606 upper_bound &amp; lower_bound &amp; binary_search &amp; equal_range","text":"<p><code>#include &lt;algorithm&gt;</code></p> <p>\u7528\u4e8e\u6709\u5e8f\u7684\u6570\u7ec4\uff01 \u53ef\u4ee5\u50cf <code>sort</code> \u4e00\u6837\u6307\u5b9a\u6bd4\u8f83\u51fd\u6570\u3002</p> <ul> <li><code>auto u = upper_bound(data.begin(), data.end(), i)</code> \u8fd4\u56de\u7b2c\u4e00\u4e2a \u4e25\u683c\u5927\u4e8e <code>i</code> \u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff08\u548c\u6307\u9488\u5dee\u4e0d\u591a\uff0c\u53ef\u4ee5\u7528 <code>*u</code> \u83b7\u53d6\u5176\u503c\uff09\uff1b\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u5373 <code>data.end()</code> \u3002</li> <li> <p><code>lower_bound</code> \u8fd4\u56de\u7b2c\u4e00\u4e2a \u5927\u4e8e\u7b49\u4e8e <code>i</code> \u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff1b\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u8fd9\u91cc\u6f14\u793a\u7684\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u7684\u4f8b\u5b50\uff08\u53ef\u4ee5\u770b\u5230\uff0c\u4f20\u5165\u7684\u5f85\u67e5\u627e\u53c2\u6570\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u548c\u5bb9\u5668\u5185\u5143\u7d20\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u53ea\u8981\u548c\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u543b\u5408\u5373\u53ef\uff09\uff1a <pre><code>auto prc_info = lower_bound(prices.begin(), prices.end(), i,\n[](const PriceInfo&amp; info, double value){ return info.price &lt; value; });\n</code></pre></p> </li> <li> <p><code>binary_search(v.begin(), v.end(), i)</code> \u8fd4\u56de\u4e00\u4e2a bool\uff0c\u8868\u793a <code>i</code> \u662f\u5426\u5728 <code>v</code> \u4e2d\u3002</p> </li> </ul> <p>\u6ce8\u610f\uff1a\u8fd9 3 \u4e2a\u51fd\u6570\u5747\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u56e0\u6b64\u5982\u679c\u539f\u6570\u7ec4\u4e0d\u662f\u6709\u5e8f\u7684\uff0c\u7ed3\u679c\u5c31\u53ef\u80fd\u662f\u9519\u8bef\u7684\u3002\u590d\u6742\u5ea6\u5747\u4e3a \\(O(\\log n)\\)</p>"},{"location":"cpp/cpp_for_contests/#23-gcd--lcm-c17","title":"2.3 gcd &amp; lcm <code>C++17</code>","text":"<p><code>#include &lt;numeric&gt;</code></p> <p>\u7ecf\u5e38\u8bb0\u4e0d\u4f4f\u8f97\u8f6c\u76f8\u9664\u6cd5\u600e\u4e48\u5199\u2026\u2026\u8fd9\u4e0b\u4e0d\u7528\u8bb0\u4e86\uff01</p> <p><code>cout &lt;&lt; gcd(18, 12) &lt;&lt; \" \" &lt;&lt; lcm(18, 12) &lt;&lt; endl;</code> \uff0c\u8f93\u51fa\u4e3a  <code>6 36</code> \u3002</p>"},{"location":"cpp/cpp_for_contests/#24-unique","title":"2.4 unique","text":"<p><code>#include &lt;algorithm&gt;</code></p> <p>\u7528\u6765\u53bb\u9664\u8fde\u7eed\u7684\u91cd\u590d\u5143\u7d20\u3002\u4f8b\u5982 <code>std::vector&lt;int&gt; v{1, 2, 1, 1, 3, 3, 3, 4, 5, 4};</code>, \u7ecf\u8fc7 <code>auto last = std::unique(v.begin(), v.end());</code> \u540e <code>v</code> now holds <code>{1 2 1 3 4 5 4 x x x}</code>, where <code>x</code> is indeterminate\uff1b\u53ef\u4ee5\u7528 <code>v.erase(last, v.end());</code> \u5220\u9664\u540e\u9762\u7684\u591a\u4f59\u4f4d\u7f6e\u3002</p> <p>\u5f53\u7136\uff0csort \u540e unique \u5219\u53ef\u4ee5\u6392\u5e8f\u5e76\u5b8c\u5168\u53bb\u91cd\u3002</p>"},{"location":"cpp/cpp_for_contests/#25-algorithm-\u5e93\u91cc\u5176\u4ed6\u770b\u8d77\u6765\u6709\u7528\u7684\u4e1c\u897f","title":"2.5 Algorithm \u5e93\u91cc\u5176\u4ed6\u770b\u8d77\u6765\u6709\u7528\u7684\u4e1c\u897f","text":"<p>\uff08\u4e0b\u9762\u7684\u201c\u6570\u7ec4\u201d\u4e0d\u4ec5\u53ef\u4ee5\u662f\u6570\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u4e00\u4e9b\u6ee1\u8db3\u76f8\u5173\u6761\u4ef6\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e14\u6761\u4ef6\u53ef\u80fd\u5404\u4e0d\u76f8\u540c\uff1b\u5728\u6b64\u6682\u4e0d\u5c55\u5f00\uff09</p> <ul> <li><code>C++17</code>\u8fd4\u56de\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u548c sort \u4e00\u6837\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff1a <code>std::max_element</code> \uff0c\u4e5f\u6709 min https://en.cppreference.com/w/cpp/algorithm/max_element </li> <li><code>C++17</code>\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff1a <code>std::merge</code> https://en.cppreference.com/w/cpp/algorithm/merge</li> <li><code>C++17</code>\u9006\u8f6c\u4e00\u4e2a\u6570\u7ec4\uff1a <code>std::reverse</code> https://en.cppreference.com/w/cpp/algorithm/reverse</li> </ul>"},{"location":"cpp/cpp_for_contests/#26-\u5176\u4ed6","title":"2.6 \u5176\u4ed6","text":"<ul> <li>\u5185\u7f6e\u7c7b\u578b\u7684\u6700\u5927 / \u6700\u5c0f\u503c\uff1a<ul> <li><code>#include &lt;limits&gt;</code></li> <li><code>std::numeric_limits&lt;int&gt;::max()</code> \u3001 <code>std::numeric_limits&lt;char&gt;::min()</code> \u4e4b\u7c7b\u7684</li> </ul> </li> <li>\u53ef\u4ee5\u7528  <code>(x &amp; (x - 1)) == 0</code> \u68c0\u9a8c <code>x</code> \u662f\u4e0d\u662f 2 \u7684\u6574\u6570\u6b21\u5e42</li> <li>\u53ef\u4ee5\u7528  <code>x &amp; (-x)</code> \u8ba1\u7b97 <code>x</code> \u6700\u5927\u7684 2 \u7684\u6574\u6570\u6b21\u5e42\u56e0\u5b50 (the greatest power of 2 that divides X)</li> <li>\u53ef\u4ee5\u7528  <code>__builtin_popcount(x)</code> \u8ba1\u7b97 int  <code>x</code> \u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d 1 \u7684\u4e2a\u6570\uff1b <code>__builtin_popcountll</code> \u53ef\u4ee5\u7528\u4e8e long long\u3002</li> </ul>"},{"location":"cpp/cpp_for_contests/#3-\u6570\u636e\u7ed3\u6784\u4e4b\u7c7b\u7684\u4e1c\u897f","title":"3 \u6570\u636e\u7ed3\u6784\u4e4b\u7c7b\u7684\u4e1c\u897f","text":"Note <p>\u8fd9\u90e8\u5206\u5176\u5b9e\u4e0d\u592a\u6e05\u695a\u8be5\u600e\u4e48\u5199QWQ\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\u5927\u6982\u63cf\u8ff0\u6bcf\u79cd\u6570\u636e\u7ed3\u6784\u662f\u5e72\u4ec0\u4e48\u7684\u4ee5\u53ca\u5b83\u7684\u7528\u6cd5\uff1b\u5173\u4e8e\u5177\u4f53\u7684\u5b9e\u73b0\u76f8\u5173\u7684\u77e5\u8bc6\u6211\u5c3d\u91cf\u8d34\u4e0a\u94fe\u63a5~</p> <p>\u5b83\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7 <code>a.size()</code> \u83b7\u53d6\u5143\u7d20\u4e2a\u6570\u3001 <code>a.empty()</code> \u5224\u65ad\u662f\u5426\u4e3a\u7a7a\uff08\u8fd4\u56de bool\uff09\uff0c\u5c31\u4e0d\u5728\u6bcf\u4e2a\u91cc\u9762\u5199\u4e00\u904d\u4e86\uff01</p> <p>\u672a\u7279\u6b8a\u8bf4\u660e\u7684\u64cd\u4f5c\uff0c\u590d\u6742\u5ea6\u5747\u4e3a \\(O(1)\\)\u3002</p> <p>\u4e0b\u9762\u5747\u4ee5\u5143\u7d20\u7c7b\u578b\u4e3a <code>int</code> \u4e3a\u4f8b\uff0c\u4f46\u662f\u8fd9\u4e2a\u7c7b\u578b\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u4efb\u610f\u7c7b\u578b\uff0c\u6bd4\u5982 <code>stack&lt;map&lt;string, Foo&gt;&gt;</code> \u4e4b\u7c7b\u7684\u4e5f\u90fd\u53ef\u4ee5\uff01</p>"},{"location":"cpp/cpp_for_contests/#31-stack--queue--priority_queue--container-adaptors","title":"3.1 stack &amp; queue &amp; priority_queue | Container adaptors","text":"<p>Info</p> <p>\u8fd9\u4e09\u79cd\u6570\u636e\u7ed3\u6784\u662f\u4e0d\u80fd\u904d\u5386\u7684\u3002\u201c\u5982\u679c\u4f60\u9700\u8981\u904d\u5386\u5b83\u4eec\uff0c\u90a3\u4e48\u4f60\u5c31\u4e0d\u5e94\u5f53\u9009\u62e9\u5b83\u4eec\u3002\u201d</p>"},{"location":"cpp/cpp_for_contests/#311--stack--queue","title":"3.1.1 \u2606 stack &amp; queue","text":"<p>\u6808</p> <p>\u6808\uff08stack\uff09\u662f\u4e00\u4e2a\u540e\u8fdb\u5148\u51fa\uff08LIFO\uff09\u8868\uff0c\u9650\u5236\u4e86\u63d2\u5165\u548c\u5220\u9664\u53ea\u80fd\u5728\u8868\u7684\u672b\u7aef\uff08\u6210\u4e3a\u6808\u9876\uff0ctop\uff09\u8fdb\u884c\u3002\u5178\u578b\u7684\u64cd\u4f5c\u662f Push, Pop \u548c Top\uff08\u8bfb\u53d6\u6808\u9876\u5143\u7d20\u7684\u503c\uff09\u3002</p> <p><code>#include &lt;stack&gt;</code></p> <ul> <li>\u6784\u9020\uff1a <code>stack&lt;int&gt; s;</code> </li> <li>\u538b\u6808\uff1a <code>s.push(1)</code> </li> <li>\u51fa\u6808\uff1a <code>s.pop()</code> </li> <li>\u8bbf\u95ee\u6808\u9876\uff1a <code>s.top()</code> </li> </ul> <p>\u961f\u5217</p> <p>\u961f\u5217\uff08queue\uff09\u662f\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u8868\u3002\u5165\u961f\uff08Enqueue\uff09\u5728\u961f\u5c3e\uff08rear\uff09\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u51fa\u961f\uff08Dequeue\uff09\u5219\u5220\u9664\u961f\u5934\uff08front\uff09\u7684\u4e00\u4e2a\u5143\u7d20\u3002</p> <p><code>#include &lt;queue&gt;</code></p> <ul> <li>\u6784\u9020\uff1a <code>queue&lt;int&gt; q;</code> </li> <li>\u5165\u961f\uff1a <code>q.push(2)</code> </li> <li>\u51fa\u961f\uff1a <code>q.pop()</code> </li> <li>\u8bbf\u95ee\u961f\u9996 / \u961f\u5c3e\u5143\u7d20\uff1a <code>q.front()</code> ,  <code>q.back()</code> </li> </ul> <p>\uff08\u53e6\u5916\u8fd8\u6709 <code>deque</code> \uff0c\u53cc\u7aef\u961f\u5217\uff0c\u7701\u7565\uff09</p> <p>See Also\uff1a - \u8868\u3001\u6808\u548c\u961f\u5217 | Lists, Stacks and Queues</p>"},{"location":"cpp/cpp_for_contests/#312--priority_queue","title":"3.1.2 \u2606\u2606 priority_queue","text":"<p>\u4f18\u5148\u961f\u5217</p> <p>\u4f18\u5148\u961f\u5217\uff08priority queue\uff09\u662f\u59cb\u7ec8\u4fdd\u8bc1\u961f\u5934\u5143\u7d20\u662f\u961f\u5217\u4e2d\u6700\u5c0f\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u91cc\u7528\u5806\u5b9e\u73b0\u3002\u652f\u6301\u7684\u4e3b\u8981\u64cd\u4f5c\u6709\uff1a\u63d2\u5165\uff08\u5165\u961f\uff09\uff0c\u67e5\u8be2\u548c\u5220\u9664\u6700\u5c0f\u503c\uff08\u51fa\u961f\uff09\u3002</p> <p><code>#include &lt;queue&gt;</code></p> <ul> <li> <p>\u6784\u9020</p> <ul> <li><code>priority_queue&lt;int&gt; q1</code> \uff1a\u961f\u9996\u59cb\u7ec8\u662f\u6700\u5c0f\u503c</li> <li><code>priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; q2</code> \uff1a\u961f\u9996\u59cb\u7ec8\u662f\u6700\u5927\u503c</li> <li> <p>\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff1a     <pre><code>auto cmp = [](const int &amp;a, const int &amp;b) {return a &gt; b;};\npriority_queue&lt;int, vector&lt;int&gt;, decltype(cmp)&gt; q3(cmp);\n</code></pre></p> </li> <li> <p>\u8fd8\u53ef\u4ee5\u7528\u5df2\u6709\u7684\u6570\u7ec4\u521d\u59cb\u5316\u4f18\u5148\u961f\u5217\uff1a</p> <ul> <li><code>priority_queue&lt;int&gt; q1(v.begin(), v.end());</code> </li> <li><code>priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; q2(v.begin(), v.end());</code> </li> <li><code>priority_queue&lt;int, vector&lt;int&gt;, decltype(cmp)&gt; q3(v.begin(), v.end(), cmp);</code> </li> <li>\u8fd9\u6837\u521d\u59cb\u5316\u7684\u590d\u6742\u5ea6\u662f \\(O(N)\\) \u7684\u3002</li> </ul> </li> </ul> </li> <li> <p>\u5165\u961f\uff1a <code>q.push(2)</code> </p> </li> <li>\u51fa\u961f\uff1a <code>q.pop()</code> </li> <li> <p>\u5165\u961f\u548c\u51fa\u961f\u7684\u590d\u6742\u5ea6\u662f \\(O(\\log N)\\) \u7684\u3002</p> </li> <li> <p>\u8bbf\u95ee\u961f\u9996\uff08\u6700\u5c0f\uff09\u5143\u7d20\uff1a <code>q.top()</code> </p> </li> </ul> <p>See Also\uff1a - \u4f18\u5148\u961f\u5217\u7684\u5b9e\u73b0\uff1a\u5806 | Heaps</p>"},{"location":"cpp/cpp_for_contests/#32--set--map--multiset--multimap--associative-containers","title":"3.2 \u2606 set &amp; map &amp; multiset &amp; multimap | Associative containers","text":"<p>Note</p> <p><code>std::set</code> \u662f\u552f\u4e00\u3001\u6709\u5e8f\u5143\u7d20\u7684\u96c6\u5408\uff0c\u8fd9\u91cc\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\u3002</p> <p><code>std::map</code> \u662f\u952e\u503c\u5bf9\u7684\u96c6\u5408\uff0c\u952e\u552f\u4e00\u3001\u6709\u5e8f\uff0c\u8fd9\u91cc\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\u3002</p> <p><code>std::multiset</code> \u548c <code>std::multimap</code> \u5206\u522b\u662f\u5b83\u4eec\u7684\u53ef\u91cd\u7248\u672c\uff0c\u5373\u952e\u4e0d\u552f\u4e00\u3002</p> <p>\u8fd9\u56db\u79cd\u6570\u636e\u7ed3\u6784\u662f\u53ef\u4ee5\u904d\u5386\u7684\uff0c\u4e14\u904d\u5386\u65f6\u4e5f\u662f\u6709\u5e8f\u7684\u3002</p>"},{"location":"cpp/cpp_for_contests/#321-set--multiset","title":"3.2.1 set &amp; multiset","text":"<p><code>#include &lt;set&gt;</code></p> <ul> <li>\u6784\u9020\uff1a <code>set&lt;int&gt; s;</code>  \u6216  <code>multiset&lt;int&gt; s;</code> <ul> <li>\u4e5f\u53ef\u4ee5\u7c7b\u4f3c priority_queue \u7528\u6570\u7ec4\u7b49\u6784\u9020\uff0c\u590d\u6742\u5ea6\u662f \\(O(N\\log N)\\) \u7684</li> <li>\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff1a <code>auto cmp = [](int a, int b) { return ... };  std::set&lt;int, decltype(cmp)&gt; s(cmp);</code> </li> </ul> </li> <li>\u63d2\u5165\uff1a <code>s.insert(3);</code> \uff0c\u590d\u6742\u5ea6\u662f \\(O(\\log N)\\) \u7684</li> <li>\u5220\u9664\uff1a <code>s.erase(2)</code> \uff0c\u8fd4\u56de\u5220\u9664\u4e86\u591a\u5c11\u4e2a\uff0c\u590d\u6742\u5ea6\u662f \\(O(\\log N + k)\\) \u7684\uff0c\\(k\\) \u662f\u627e\u5230\u7684\u4e2a\u6570</li> <li>\u8ba1\u6570\uff1a <code>s.count(3)</code> \uff0c\u8fd4\u56de\u6709\u591a\u5c11\u4e2a\u5bf9\u5e94\u5143\u7d20\uff0c\u590d\u6742\u5ea6\u662f \\(O(\\log N + k)\\) \u7684\uff0c\\(k\\) \u662f\u627e\u5230\u7684\u4e2a\u6570</li> <li>\u67e5\u627e\uff1a <code>s.find(2)</code> \uff0c\u8fd4\u56de\u4e00\u4e2a\u503c\u76f8\u7b49\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u5982\u679c\u6ca1\u627e\u5230\uff0c\u8fd4\u56de <code>s.end()</code> \u3002\u590d\u6742\u5ea6\u662f \\(O(\\log N)\\) \u7684</li> <li>\u4e5f\u6709  <code>s.lower_bound(2)</code> \u3001 <code>s.upper_bound(3)</code> \u51fd\u6570\u3002\u590d\u6742\u5ea6\u662f \\(O(\\log N)\\) \u7684</li> </ul>"},{"location":"cpp/cpp_for_contests/#322-map","title":"3.2.2 map","text":"<p><code>#include &lt;map&gt;</code></p> <ul> <li>\u6784\u9020\uff1a <code>map&lt;int, string&gt; s;</code> <ul> <li>\u9644\u6ce8\u540c set &amp; multiset</li> <li>\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528  <code>s[1] = \"123\"</code> \u7684\u65b9\u5f0f\u65b0\u5efa\u952e\u503c\u5bf9\u6216\u8005\u8986\u76d6\u5df2\u6709\u7684\uff0c\u65e0\u8bba key  <code>1</code> \u4e4b\u524d\u662f\u5426\u5b58\u5728\u3002</li> <li>\u4e0b\u9762\u4e24\u4e2a\u5e76\u4e0d\u5e38\u7528\uff1a</li> <li>\u63d2\u5165\uff1a <code>s.insert({1, \"123\"});</code> \uff0c\u5982\u679c key  <code>1</code> \u5df2\u7ecf\u5b58\u5728\u5219\u4e0d\u4f1a\u8986\u76d6\u3002\u590d\u6742\u5ea6\u662f \\(O(\\log N)\\) \u7684</li> <li>\u8bbf\u95ee\uff1a <code>s.at(1)</code> \uff0c\u5982\u679c key <code>1</code> \u5b58\u5728\u5219\u8fd4\u56de\u5bf9\u5e94 value \u7684\u5f15\u7528\uff0c\u5426\u5219\u629b\u51fa\u5f02\u5e38\u3002\u590d\u6742\u5ea6\u662f \\(O(\\log N)\\) \u7684</li> </ul> </li> <li>\u5220\u9664\uff1a <code>s.erase(2)</code> \uff0c\u8fd4\u56de\u5220\u9664\u4e86\u591a\u5c11\u4e2a\uff0c\u590d\u6742\u5ea6\u662f \\(O(\\log N)\\) \u7684</li> <li>\u8ba1\u6570\uff1a <code>s.count(3)</code> \uff0c\u8fd4\u56de\u6709\u591a\u5c11\u4e2a key \u76f8\u7b49\u7684\u5143\u7d20\uff0c\u590d\u6742\u5ea6\u662f \\(O(\\log N)\\) </li> <li>\u67e5\u627e\uff1a <code>s.find(2)</code> \uff0c\u8fd4\u56de key \u76f8\u7b49\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u5982\u679c\u6ca1\u627e\u5230\uff0c\u8fd4\u56de <code>s.end()</code> \u3002\u590d\u6742\u5ea6\u662f \\(O(\\log N)\\) \u7684</li> <li>\u4e5f\u6709  <code>s.lower_bound(2)</code> \u3001 <code>s.upper_bound(3)</code> \u51fd\u6570\u3002\u590d\u6742\u5ea6\u662f \\(O(\\log N)\\) \u7684</li> </ul>"},{"location":"cpp/cpp_for_contests/#323-multimap","title":"3.2.3 multimap","text":"<p><code>#include &lt;map&gt;</code></p> <p>\u4e0d\u592a\u5e38\u7528\uff0c\u6682\u7565</p> <p>See Also\uff1a - \u7ea2\u9ed1\u6811\uff1a\u5e73\u8861\u641c\u7d22\u6811 | Balanced Search Tree</p>"},{"location":"cpp/cpp_for_contests/#33--unordered_set--unordered_map--unordered-associative-containers","title":"3.3 \u2606\u2606 unordered_set &amp; unordered_map | Unordered associative containers","text":"<p>Note</p> <p><code>std::unordered_set</code> \u548c <code>std::unordered_map</code> \u5206\u522b\u662f <code>std::set</code> \u548c <code>std::map</code> \u7684\u65e0\u5e8f\u7248\u672c\uff0c\u5373\u952e\u4e0d\u7ecf\u8fc7\u6392\u5e8f\u3002\u8fd9\u91cc\u7528\u54c8\u5e0c\u5b9e\u73b0\u3002</p> <p>\u8fd9\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u4e5f\u662f\u53ef\u4ee5\u904d\u5386\u7684\u3002</p> <p><code>#include &lt;unordered_set&gt;</code> <code>#include &lt;unordered_map&gt;</code></p> <p>\u6210\u5458\u51fd\u6570\u4e0e set \u548c map \u7c7b\u4f3c\uff0c\u4f46\u662f\u56e0\u4e3a\u65e0\u5e8f\u6240\u4ee5\u6ca1\u6709 <code>lower_bound</code> \u548c <code>upper_bound</code> \u3002</p> <p>\u540c\u65f6\u7531\u4e8e\u662f\u4f7f\u7528\u54c8\u5e0c\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u63d2\u5165\u3001\u5220\u9664\u3001\u8bbf\u95ee\u3001\u67e5\u627e\u7684\u5e73\u5747\u590d\u6742\u5ea6\u5747\u4e3a \\(O(1)\\)\u3002\u56e0\u6b64\uff0c\u5728\u6ca1\u6709\u6392\u5e8f\u9700\u6c42\u65f6\u53ef\u4ee5\u9996\u9009\u8fd9\u4e24\u4e2a\u5bb9\u5668\u3002</p> <p>See Also\uff1a - \u54c8\u5e0c\uff08\u4e4c\u4e4c\u6211\u6ca1\u6709\u7b14\u8bb0\uff09</p> <p>\uff08\u4e5f\u6709 unordered_multiset \u548c unordered_multimap\uff0c\u4f46\u662f\u597d\u50cf\u4e0d\u600e\u4e48\u5e38\u7528\uff09</p>"},{"location":"cpp/cpp_for_contests/#4-\u7ed3\u8bed","title":"4 \u7ed3\u8bed","text":"<p>\u4e8b\u5b9e\u4e0a\uff0c\u5728\u505a\u529b\u6263\u5468\u8d5b\u548c\u5404\u79cd\u7b14\u9762\u8bd5\u7684\u7b97\u6cd5\u9898\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u81ea\u5df1\u4f1a\u7528\u5230\u7684 C++ \u5c42\u9762\u4e0a\u80fd\u63d0\u4f9b\u7684\u5e2e\u52a9\u5927\u6982\u4e5f\u5c31\u4e0a\u9762\u8fd9\u4e9b\uff1b\u5176\u4e2d\u8fd8\u6709\u76f8\u5f53\u4e00\u90e8\u5206\u662f\u53ef\u4ee5\u81ea\u5df1\u7b80\u5355\u5b9e\u73b0\u7684\u3002\u800c\u505a\u51fa\u9898\u76ee\u7684\u5173\u952e\u66f4\u591a\u8fd8\u662f\u9760\u7b97\u6cd5\u7684\u8bbe\u8ba1\u3002\u6211\u672c\u8eab\u4e5f\u6ca1\u6709\u505a\u8fc7\u591a\u5c11\u9898\uff0c\u76ee\u524d\u7684\u6c34\u5e73\u4e5f\u662f\u5728\u5c1d\u8bd5\u5728\u5468\u8d5b\u4e2d\u80fd\u7a33\u5b9a\u505a\u51fa\u4e09\u9898\uff0c\u611f\u89c9\u57fa\u7840\u7b97\u6cd5\u3001\u601d\u8def\u548c\u89c1\u8bc6\u65b9\u9762\u8fd8\u6709\u5f88\u591a\u6b20\u7f3a\u3002\u6574\u7406\u4e0a\u9762\u8fd9\u4e9b\u5185\u5bb9\uff0c\u4e5f\u5e0c\u671b\u80fd\u7ed9\u81ea\u5df1\u548c\u8bfb\u8005\uff08\u5982\u679c\u6709\uff09\u5e26\u6765\u4e00\u70b9\u70b9\u5e2e\u52a9\uff01</p> <p>\u4e5f\u6b22\u8fce\u5927\u5bb6\u4e92\u76f8\u4ea4\u6d41\u3001\u4e92\u76f8 push \u505a\u9898\u9884\u9632\u8001\u5e74\u75f4\u5446\uff0c\u540c\u65f6\u4e5f\u8bf7\u529b\u6240\u80fd\u53ca\u7684\u5927\u5c0f\u670b\u53cb\u4eec\u6765\u9c7c\u8086\u5468\u62a5\u5199\u5199\u4e1c\u897fQWQ\uff01\u611f\u8c22\u5927\u5bb6~</p> <p>P.S.  \u5982\u679c\u6709\u5176\u4ed6\u597d\u7528\u7684\u4e1c\u897f\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u5206\u4eab ~</p>"},{"location":"cpp/%E7%90%86%E8%A7%A3%20STL%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1/","title":"\u7406\u89e3 STL - \u8fed\u4ee3\u5668\u4e0e\u51fd\u6570\u5bf9\u8c61","text":"<p> \u7ea6 7396 \u4e2a\u5b57  33 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 25 \u5206\u949f</p> <p>Abstract</p> <p>\u672c\u6587\u6240\u9700\u9884\u5907\u77e5\u8bc6\uff1a C / C++ \u57fa\u7840\uff0cC++ \u6a21\u677f\u57fa\u7840\uff1b</p> <p>\u5efa\u8bae\u9884\u5907\u77e5\u8bc6\uff1a \u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u57fa\u7840</p> <p>\u5728 \u5feb\u901f\u5165\u95e8 C++ \u5199\u9898\uff01\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u7684\u5185\u5bb9\u5927\u591a\u6570\uff08\u9664\u4e86 1.1, 1.3 \u548c 2.5\uff09\u90fd\u5c5e\u4e8e STL (Standard Template Library)\u3002\u867d\u7136\u638c\u63e1\u4e00\u4e9b\u63a5\u53e3\u5c31\u8db3\u591f\u6211\u4eec\u7528\u5b83\u4eec\u6765\u505a\u7b97\u6cd5\u9898\uff0c\u4f46\u662f\u597d\u5947\u7684\u5c0f\u670b\u53cb\u4eec\u53ef\u80fd\u4e5f\u4f1a\u5bf9\u4e00\u4e9b\u5177\u4f53\u7684\u5b9e\u73b0\u611f\u5174\u8da3\u3002\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u4ece \u8bed\u8a00 \u5c42\u9762\uff08\u800c\u975e\u7b97\u6cd5\u5c42\u9762\uff09\u5bf9 STL \u7684\u8fd9\u90e8\u5206\u5b9e\u73b0\u5c55\u5f00\u4e00\u4e9b\u8ba8\u8bba\u548c\u4ecb\u7ecd\u3002</p> <p>\u611f\u8c22 \u767d\u91d1\u732b\u732b\u300127rabbit \u5bf9\u672c\u6587\u7684\u5ba1\u6821\u548c\u5efa\u8bae\uff01</p> <p>\u7531\u4e8e\u4f5c\u8005\u80fd\u529b\u6709\u9650\uff0c\u6587\u4e2d\u96be\u514d\u6709\u9519\u6f0f\u4e4b\u5904\u3002\u6073\u8bf7\u5927\u5bb6\u6279\u8bc4\u6307\u6b63QWQ</p> <p>Tips</p> <p>\u672c\u6587\u4e2d\u8fd9\u6837\u7684\u6bb5\u843d\u5c5e\u4e8e\u8865\u5145\u8bf4\u660e\uff0c\u8bfb\u8005\u53ef\u4ee5\u9009\u8bfb</p> <p>Info</p> <p>\u672c\u6587\u4e2d\u8fd9\u6837\u7684\u6bb5\u843d\u5c5e\u4e8e\u6574\u6d3b\uff0c\u8bfb\u8005\u53ef\u4ee5\u4e0d\u8bfb</p> <p>\u7531\u4e8e\u672c\u6587\u4ecb\u7ecd\u7684\u662f STL\uff0c\u56e0\u6b64\u82e5\u65e0\u7279\u6b8a\u8bf4\u660e\uff0c\u6211\u4eec\u9ed8\u8ba4 <code>using namespace std;</code> \u3002</p> <p>STL \u7531 4 \u90e8\u5206\u7ec4\u6210\uff1a\u5bb9\u5668 (Containers)\u3001\u8fed\u4ee3\u5668 (Iterators)\u3001\u7b97\u6cd5 (Algorithms) \u548c\u51fd\u6570\u5bf9\u8c61 (Function objects)\u3002\u6211\u4eec\u5df2\u7ecf\u5bf9 vector, map \u7b49\u5404\u79cd\u5bb9\u5668\u6709\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u8ba4\u8bc6\uff0c\u540c\u65f6\u5bf9 sort, lower_bound \u7b49\u5404\u79cd\u7b97\u6cd5\u4e5f\u6709\u4e86\u4e00\u4e9b\u4e86\u89e3\u3002\u90a3\u4e48\uff0c \u8fed\u4ee3\u5668 \u548c \u51fd\u6570\u5bf9\u8c61 \u662f\u4ec0\u4e48\u4e1c\u897f\u5462\uff1f</p>"},{"location":"cpp/%E7%90%86%E8%A7%A3%20STL%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1/#0-quiz-\u65f6\u95f4","title":"0 Quiz \u65f6\u95f4\uff01","text":"<p>\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u629b\u51fa\u82e5\u5e72\u95ee\u9898\u4f9b\u5927\u5bb6\u601d\u8003\uff1b\u8fd9\u5176\u4e2d\u7684\u95ee\u9898\u751a\u81f3\u5305\u62ec\u6211\u5728\u9762\u8bd5\u4e2d\u9047\u5230\u7684\u539f\u9898\u5594\uff01\uff08\u4f60\u5982\u679c\u77e5\u9053\u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e0d\u7528\u770b\u8fd9\u7bc7\u6587\u7ae0\u4e86 XD\uff09</p> <ol> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>for (auto &amp;a : c)</code> \u7684\u65b9\u5f0f\u904d\u5386\u8bf8\u5982 vector, set, unordered_set \u7b49\u7684\u5bb9\u5668\u3002\u8fd9\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f</li> <li>\u6211\u4eec\u77e5\u9053 map \u662f\u80fd\u591f\u7528\u4e0a\u8ff0\u65b9\u5f0f\u904d\u5386\u7684\u3002\u5bf9\u4e8e <code>map&lt;int, int&gt; m;</code> \uff0c\u6211\u4eec\u4f7f\u7528 <code>sort(m.begin(), m.end());</code> \u53ef\u4ee5\u5417\uff1f</li> <li><code>sort</code> \u7684\u51fd\u6570\u7b7e\u540d\u662f\u4ec0\u4e48\u6837\u7684\uff1f\u5373\uff0c <code>template &lt;</code><code>-1-</code><code>&gt; std::sort(</code><code>-2-</code><code>)</code> \u7684 -1- \u548c -2- \u4e24\u5904\u662f\u4ec0\u4e48\uff1f\u5177\u4f53\u800c\u8a00\uff1a<ol> <li>\u4e3a\u4ec0\u4e48\u5b83\u65e2\u80fd\u5bf9 vector \u8fd9\u6837\u7684\u5bb9\u5668\u8fdb\u884c\u6392\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u4f20\u7edf\u7684\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff1f</li> <li>\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u5982\u4f55\u9002\u914d\u6709\u548c\u6ca1\u6709\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u7684\u4e24\u79cd\u60c5\u51b5\u7684\uff1f</li> </ol> </li> <li>\u6709\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570 <code>bool cmp(const int&amp; a, const int&amp; b) { return a &gt; b; }</code> \uff0c\u6211\u4eec\u53ef\u4ee5\u5199 <code>sort(v.begin(), v.end(), cmp);</code> \u6765\u7528 <code>cmp</code> \u8fdb\u884c\u6392\u5e8f\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u7528 <code>cmp</code> \u4f5c\u4e3a priority_queue \u7b49\u5bb9\u5668\u7684\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u5e94\u8be5\u600e\u4e48\u505a\u5462\uff1f</li> </ol>"},{"location":"cpp/%E7%90%86%E8%A7%A3%20STL%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1/#1-why-\u8fed\u4ee3\u5668","title":"1 Why \u8fed\u4ee3\u5668","text":"<p>\u6211\u4eec\u5148\u6765\u770b\u770b\u7b2c 1 \u4e2a\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48 <code>for (auto &amp;a : c)</code> \u53ef\u4ee5\u904d\u5386\u8bf8\u5982 vector, set, unordered_set \u7b49\u7684\u5bb9\u5668\u5462\uff1f\u904d\u5386 vector \u7684\u65b9\u6cd5\u5176\u5b9e\u975e\u5e38\u5bb9\u6613\u7406\u89e3\uff0c\u7c7b\u4f3c\u4e8e <code>for (int i = 0; i &lt; c.size(); i++)</code> \u3002\u4f46\u662f\u6211\u4eec\u77e5\u9053\uff0cset \u662f\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\uff0c\u7ea2\u9ed1\u6811\u662f\u4e00\u79cd\u4e8c\u53c9\u641c\u7d22\u6811\uff1b\u904d\u5386\u8fd9\u6837\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u548c\u904d\u5386\u4e00\u4e2a\u6570\u7ec4\u7684\u65b9\u6cd5\u80af\u5b9a\u662f\u4e0d\u4e00\u6837\u7684\u3002\u8fd9\u600e\u4e48\u529e\u5462\uff1f</p> <p>\u5176\u5b9e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5b9e\u73b0\uff1a <code>for (auto i = c.begin(); i != c.end(); c.go_to_next_node(i))</code> \uff1b\u5176\u4e2d <code>c.begin()</code> \u548c <code>c.end()</code> \u53ef\u4ee5\u662f\u6307\u9488\uff0c\u5206\u522b\u6307\u5411\u5bb9\u5668\u91cc \u7b2c\u4e00\u4e2a \u548c \u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u7684\u4f4d\u7f6e\uff0c\u5373\u6700\u5c0f\u548c\u6700\u5927\u7684\u5143\u7d20\uff1b\u800c <code>c.go_to_next_node(i)</code> \u5b9e\u73b0\u6839\u636e\u8fd9\u4e2a\u6307\u9488\u627e\u5230\u5176\u4e0b\u4e00\u4e2a\u5143\u7d20\uff08\u5b66\u8fc7\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5c0f\u670b\u53cb\u4eec\u5e94\u8be5\u80fd\u591f\u60f3\u5230\u8fd9\u4e2a\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1b\u4e0d\u77e5\u9053\u4e5f\u6ca1\u5173\u7cfb\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u4eca\u5929\u7684\u91cd\u70b9\uff09\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u4e00\u4e2a set \u7684\u904d\u5386\u4e86\u3002</p> <p></p> <p>\u8fd9\u65f6\u56de\u5934\u770b\u770b\u6211\u4eec\u5bf9 vector \u7684\u904d\u5386\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u4f3c\u4e4e vector \u4e5f\u80fd\u5199\u6210\u540e\u9762\u8fd9\u79cd\u5f62\u5f0f\uff0c\u5373 <code>for (auto i = c.begin(); i != c.end(); c.go_to_next_node(i))</code> \uff1a <code>c.begin()</code> \u548c <code>c.end()</code> \u4ecd\u7136\u5206\u522b\u6307\u5411\u5bb9\u5668\u91cc \u7b2c\u4e00\u4e2a \u548c \u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u7684\u4f4d\u7f6e\uff0c\u800c <code>c.go_to_next_node(i)</code> \u5e72\u7684\u4e8b\u60c5\u53ea\u662f\u6307\u9488\u7684 <code>++</code> \u800c\u5df2\u3002</p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u4e00\u5b9a\u80fd\u53d1\u73b0\uff0c\u8fd9\u79cd\u904d\u5386\u7684\u5173\u952e\u53ea\u6709 3 \u70b9\uff1a\u4ece\u54ea\u91cc\u5f00\u59cb\u3001\u5230\u54ea\u91cc\u7ed3\u675f\u3001\u600e\u4e48\u8d70\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\uff1b\u8fd9\u5b9e\u9645\u4e0a\u5c31\u5bf9\u5e94\u7740\u4e24\u4e2a\u6307\u9488\u4ee5\u53ca\u6211\u4eec\u719f\u6089\u7684\u6307\u9488\u7684 <code>++</code> \u8fd0\u7b97\u7b26\u3002\u806a\u660e\u7684\u5c0f\u670b\u53cb\u4eec\u53ef\u80fd\u5c31\u60f3\u5230\u4e86\uff1a\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u6837\u7684\u6307\u9488\u5305\u88c5\u6210\u4e00\u4e2a\u7c7b\uff0c\u5e76\u91cd\u8f7d\u5b83\u7684 <code>++</code> \u8fd0\u7b97\u7b26\uff08\u8fd9\u91cc\u6307\u524d\u7f6e\u7684 <code>++</code> \uff0c\u4e0b\u540c\uff09\uff0c\u8fd9\u6837\u4e0d\u540c\u7684\u5bb9\u5668\u5c31\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u7684\u65b9\u6cd5\u904d\u5386\u6216\u8005\u505a\u5176\u4ed6\u64cd\u4f5c\u4e86\uff01</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u5c31\u662f \u8fed\u4ee3\u5668 (Iterator) \u89e3\u51b3\u7684\u95ee\u9898\u3002\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u5199\u7a0b\u5e8f\u7684\u76ee\u7684\u5c31\u662f \u5904\u7406\u3001\u67e5\u8be2\u3001\u4f7f\u7528\u6570\u636e\uff0c\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u662f\u6211\u4eec\u7684\u5de5\u5177\u3002\u5728\u6982\u5ff5\u5c42\u9762\u4e0a\uff0c\u5404\u79cd\u5bb9\u5668\u6216\u8005\u6570\u636e\u7ed3\u6784\u7684\u610f\u4e49\u662f\u4ee5\u4e00\u5b9a\u7684\u65b9\u5f0f\u6216\u8005\u6027\u8d28 \u5bb9\u7eb3 \u6570\u636e\uff0c\u4f46\u662f\u5b83\u672c\u8eab\u4e0d\u5177\u5907\u5904\u7406\u6570\u636e\u7684\u80fd\u529b\uff1b\u800c\u5404\u79cd\u7b97\u6cd5\u7684\u610f\u4e49\u662f\u6309\u4e00\u5b9a\u7684\u65b9\u6cd5 \u5904\u7406 \u6570\u636e\uff0c\u5b83\u672c\u8eab\u5e76\u4e0d\u6301\u6709\u4efb\u4f55\u6570\u636e\u3002\u800c\u8fed\u4ee3\u5668\u5c31\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u6865\u6881\u2014\u2014\u4e00\u4e2a\u5bb9\u5668\u53ef\u80fd\u662f\u4e00\u4e2a\u6570\u7ec4\u3001\u4e00\u68f5\u4e8c\u53c9\u6811\u3001\u4e00\u4e2a\u94fe\u8868\uff0c\u6216\u8005\u5176\u4ed6\u4efb\u4f55\u53ef\u80fd\u7684\u6570\u636e\u7ed3\u6784\uff1b\u4e00\u79cd\u7b97\u6cd5\u9700\u8981\u5bf9\u5bb9\u5668\u505a\u904d\u5386\u6216\u8005\u5176\u4ed6\u7c7b\u578b\u7684\u8bbf\u95ee\uff1b\u4f46\u662f\u904d\u5386\u4e00\u4e2a\u6570\u7ec4\u548c\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u65b9\u5f0f\u80af\u5b9a\u662f\u4e0d\u540c\u7684\u2014\u2014\u8fed\u4ee3\u5668\u5b58\u5728\u7684\u610f\u4e49\u5c31\u662f\u901a\u8fc7\u8fd0\u7b97\u7b26\u91cd\u8f7d\u6216\u8005\u5176\u4ed6\u65b9\u5f0f\uff0c\u6765\u5411\u7b97\u6cd5\u9690\u85cf\u5bb9\u5668\u7684\u4e0d\u540c\u7ec6\u8282\uff1b\u7b97\u6cd5\u53ea\u9700\u8981\u4f7f\u7528 <code>++</code> \u5c31\u80fd\u83b7\u5f97\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u901a\u8fc7 <code>*</code> \u5c31\u80fd\u8bbf\u95ee\u5f53\u524d\u8fed\u4ee3\u5668\u6307\u5411\u7684\u5143\u7d20\uff0c\u5b83\u4e0d\u9700\u8981\u5173\u5fc3\u5230\u5e95\u662f\u5982\u4f55\u8bbf\u95ee\u7684\uff1b\u8fd9\u5176\u5b9e\u4e0a\u5c31\u662f\u6307\u9488\u7684\u62bd\u8c61\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\uff0cSTL \u4fdd\u6301\u4e86\u5b83\u7684\u7b80\u6d01\u6027\uff0c\u63d0\u5347\u4e86\u4ee3\u7801\u7684\u590d\u7528\u3002</p> <p>\u8865\u5145 1.1</p> <p>\u4e3a\u4ec0\u4e48\u8bf4\u662f \u201c\u5728\u6982\u5ff5\u5c42\u9762\u4e0a\u201d \u5462\uff1f\u56e0\u4e3a\u5728\u5b9e\u9645\u7684\u5b9e\u73b0\u4e2d\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\u6216\u8005\u6613\u7528\u6027\uff0c\u4e00\u4e9b\u5bb9\u5668\u4e5f\u5c06\u4e00\u4e9b\u7b97\u6cd5\u653e\u5230\u4e86\u81ea\u5df1\u7684\u6210\u5458\u51fd\u6570\u4e2d\uff0c\u4f8b\u5982 <code>map</code> \u548c <code>set</code> \u7684 <code>lower_bound</code> \u7b49\u3002\u4f46\u662f\u4ece\u6982\u5ff5\u89d2\u5ea6\u4e0a\uff0c\u5bb9\u5668\u5c31\u4ec5\u4ec5\u662f\u4e2a\u5305\u88c5\u597d\u4e86\u7684\u6570\u636e\u7ed3\u6784\u800c\u5df2\u3002</p> <p></p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5176\u5b9e\u4e5f\u5c31\u77e5\u9053\u4e86 <code>for (auto &amp;a : c)</code> \u662f\u5982\u4f55\u5b9e\u73b0\u7684\u4e86\uff01\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u6709\u8fed\u4ee3\u5668\u7684\u5bb9\u5668\uff08stack, queue, priority_queue \u5e76\u6ca1\u6709\u8fed\u4ee3\u5668\uff0c\u56e0\u4e3a\u4f60\u4e0d\u5e94\u5f53\u5c1d\u8bd5\u53bb\u904d\u5386\u6216\u8005\u4ee5\u5176\u4ed6\u81ea\u7531\u7684\u5f62\u5f0f\u8bbf\u95ee\u8fd9\u4e9b\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff09\uff0c\u5b83\u7684\u6210\u5458\u51fd\u6570 <code>begin()</code> \u548c <code>end()</code> \u8fd4\u56de\u7684\u90fd\u662f\u67d0\u79cd\u8fed\u4ee3\u5668\uff1b\u8fd9\u4e9b\u8fed\u4ee3\u5668\u90fd\u91cd\u8f7d\u4e86 <code>++</code> \u8fd0\u7b97\u7b26\uff08\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u5bb9\u5668\uff0c\u5b9e\u73b0 <code>++</code> \u8fd0\u7b97\u7b26\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u6574\u4e2a\u5bb9\u5668\u7684\u7ed3\u6784\uff1b\u4f8b\u5982\u5728\u7ea2\u9ed1\u6811\u4e2d\u627e\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e0d\u5fc5\u77e5\u9053\u6839\u8282\u70b9\u662f\u4ec0\u4e48\u3002\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\uff09\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u8fd9\u6837\u5305\u542b\u6210\u5458\u51fd\u6570 <code>begin()</code> \u548c <code>end()</code> \uff0c\u4e14\u5176\u8fd4\u56de\u503c\u7c7b\u578b\u652f\u6301\u8fd0\u7b97\u7b26 <code>++</code> \u3001 <code>*</code> \u548c <code>!=</code> \u7684\u7c7b\uff0c <code>for (auto &amp;a : c) {/* A */}</code> \u7684\u5b9e\u73b0\u65b9\u6cd5\u5c31\u7c7b\u4f3c\u4e8e\uff1a <code>for (auto it = c.begin(); it != c.end(); ++it) {auto &amp;a = *it; /* A */}</code> \u3002\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u5176\u5b9e\u548c\u6211\u4eec\u521a\u521a\u7684\u60f3\u6cd5\u975e\u5e38\u76f8\u4f3c\uff01</p> <p>\u8865\u5145 1.2</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e <code>std::vector&lt;int&gt; v;</code> \uff0c <code>v.begin()</code> \u7684\u8fd4\u56de\u503c\u7c7b\u578b\u53ef\u80fd\u662f <code>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int&gt;&gt;</code> \uff1b\u5bf9\u4e8e <code>std::map&lt;int, double&gt; m;</code> \uff0c <code>m.begin()</code> \u7684\u8fd4\u56de\u503c\u7c7b\u578b\u53ef\u80fd\u662f <code>std::_Rb_tree_iterator&lt;std::pair&lt;const int, double&gt;&gt;</code> \u3002\u611f\u5174\u8da3\u7684\u5c0f\u670b\u53cb\u53ef\u4ee5\u81ea\u5df1\u5728 https://godbolt.org/z/6s5x66rdG \u5c1d\u8bd5\uff08\u8fd9\u91cc\u4e5f\u5c55\u793a\u4e86\u4e00\u79cd\u67e5\u770b\u8868\u8fbe\u5f0f\u7c7b\u578b\u7684\u5c0f\u6280\u5de7\uff09\uff01</p> <p>\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 C++ Insights \u6765\u67e5\u770b\uff1ahttps://cppinsights.io/s/cd95e24b </p> <p></p> <p>\u6574\u6d3b 1.3</p> <p>\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u4f7f\u7528\u8fd9\u79cd range-based for loop\uff0c\u53ea\u9700\u8981\u7c7b\u201c\u5305\u542b\u6210\u5458\u51fd\u6570 <code>begin()</code> \u548c <code>end()</code> \uff0c\u4e14\u5176\u8fd4\u56de\u503c\u7c7b\u578b\u652f\u6301\u8fd0\u7b97\u7b26 <code>++</code> \u3001 <code>*</code> \u548c <code>!=</code> \u201d\uff0c\u6240\u4ee5\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u8fd9\u6837\u7684\u4ee3\u7801 XD\uff1a</p> <p></p> <p>\u611f\u5174\u8da3\u7684\u5c0f\u670b\u53cb\u53ef\u4ee5\u6765\u73a9\u4e00\u73a9\uff1ahttps://godbolt.org/z/813b9e9Pd</p> <p>\u8865\u5145 1.4</p> <p>\u53e6\u5916\uff0c\u9664\u4e86 <code>begin()</code> \uff0c\u5bb9\u5668\u8fd8\u4f1a\u63d0\u4f9b <code>cbegin()</code> , <code>rbegin()</code> , <code>crbegin()</code> \u8fd9\u4e09\u79cd\u6210\u5458\u51fd\u6570\uff0c\u63d0\u4f9b\u4e0d\u540c\u7684\u8fed\u4ee3\u5668\uff1b\u4e5f\u6709\u5bf9\u5e94\u7684 <code>end()</code> \u7248\u672c\u3002\u8fd9\u91cc <code>c</code> \u662f\u6307 const\uff0c\u5373\u8fed\u4ee3\u5668\u6307\u5411\u7684\u53d8\u91cf\u662f\u53ea\u8bfb\u7684\uff1b <code>r</code> \u662f\u6307 reverse\uff0c\u5373\u8fd9\u79cd\u8fed\u4ee3\u5668\u662f\u9006\u5e8f\u7684\uff0c\u5373\uff1a</p> <p></p> <p></p>"},{"location":"cpp/%E7%90%86%E8%A7%A3%20STL%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1/#2-\u8fed\u4ee3\u5668\u7684\u5206\u7c7b","title":"2 \u8fed\u4ee3\u5668\u7684\u5206\u7c7b","text":"<p>\u6211\u4eec\u4e0b\u9762\u518d\u6765\u770b\u7b2c 2 \u4e2a\u95ee\u9898\uff1a\u5df2\u77e5 map \u53ef\u4ee5\u904d\u5386\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u662f\u6709\u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\u7684\uff1b\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528 sort \u5bf9 map \u8fdb\u884c\u6392\u5e8f\u5417\uff1f</p> <p>\u4f17\u6240\u5468\u77e5\uff0csort \u7684\u5b9e\u73b0\u672c\u8d28\u4e0a\u662f\u5feb\u901f\u6392\u5e8f\uff08\u5b9e\u9645\u4e0a\u4e0d\u5b8c\u5168\u662f\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc\uff09\uff1b\u800c\u5feb\u901f\u6392\u5e8f\u672c\u8eab\u662f\u9700\u8981 \u968f\u673a\u8bbf\u95ee \u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u7684\uff0c\u5373\u80fd\u591f\u4ee5 \\(O(1)\\) \u7684\u65f6\u95f4\u4f7f\u7528\u7c7b\u4f3c <code>c[i]</code> \u7684\u65b9\u5f0f\u8bbf\u95ee\u5230\u5bb9\u5668\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\uff1b\u540c\u65f6\u4e5f\u9700\u8981\u80fd\u591f\u4ee5 \\(O(1)\\) \u7684\u65f6\u95f4\u8ba1\u7b97\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684 \u8ddd\u79bb\u3002\u4f46\u662f\uff0cmap \u672c\u8eab\u5e76\u4e0d\u80fd\u591f\u6ee1\u8db3\u4e0a\u8ff0\u8981\u6c42\u3002</p> <p>\u6240\u4ee5\uff0c\u5982\u679c\u5927\u5bb6\u5c1d\u8bd5\u5199\u7528 sort \u5bf9 map \u6392\u5e8f\u7684\u4ee3\u7801\u5c31\u4f1a\u53d1\u73b0\u8fd9\u6837\u7684\u62a5\u9519\uff1a</p> <p></p> <p>\u5b83\u544a\u8bc9\u6211\u4eec\uff0c <code>std::_Rb_tree_iterator&lt;...&gt;</code> \u4e4b\u95f4\u7684 <code>-</code> \u8fd0\u7b97\u7b26\u5e76\u6ca1\u6709\u88ab\u5b9a\u4e49\uff1b\u5373 map \u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\u5e76\u4e0d\u652f\u6301\u8ba1\u7b97\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u8ddd\u79bb\u7684\u529f\u80fd\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0cC++ \u5bf9\u8fed\u4ee3\u5668\u4f5c\u4e86\u82e5\u5e72\u5206\u7c7b\uff08\u786e\u5207\u5730\u8bf4\uff0c\u662f \u5177\u540d\u8981\u6c42 named requirements\uff09\uff0c\u4e0d\u540c\u7684\u7b97\u6cd5\u4e5f\u5bf9\u6240\u9700\u7684\u8fed\u4ee3\u5668\u7684\u5206\u7c7b\u505a\u4e86\u4e0d\u540c\u7684\u8981\u6c42\u3002\u6211\u4eec\u8f83\u4e3a\u901a\u4fd7\u5730\u6982\u62ec\u5404\u7c7b\u8fed\u4ee3\u5668\u6240\u652f\u6301\u7684\u529f\u80fd\uff08\u53ef\u80fd\u5b58\u5728\u4e0d\u591f\u5b8c\u6574\u548c\u4e25\u8c28\u7684\u5730\u65b9\uff0c\u4f46\u662f\u7406\u89e3\u4e3a\u4e3b\uff09\uff1a</p> <ol> <li> <p>LegacyInputIterator - \u80fd\u591f\u7528\u6765\u6807\u8bc6\u3001 \u904d\u5386 \u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u80fd\u591f\u4ece\u6240\u6307\u7684\u5143\u7d20\u4e2d \u8bfb\u53d6 \u503c\u3002</p> <ul> <li>\u6ce8\uff1aLegacyInputIterator \u53ea\u9700\u8981\u4fdd\u8bc1 \u5355\u8d9f \u7b97\u6cd5\u7684\u6709\u6548\u6027\uff1a\u4e00\u65e6\u4e00\u4e2a LegacyInputIterator <code>it</code> \u88ab <code>++</code> \u540e\uff0c\u5b83\u4e4b\u524d\u6240\u6307\u7684\u503c\u53ca\u5176\u6240\u6709\u62f7\u8d1d\u90fd\u4e0d\u518d\u9700\u8981\u4fdd\u8bc1\u6709\u6548\u6027</li> </ul> \u5177\u4f53\u8981\u6c42 <p>\u6ee1\u8db3\u8fd9\u79cd\u8981\u6c42\u7684\u7c7b\u578b\u7684 <code>It</code> \u9700\u8981\u652f\u6301\uff1a</p> <ul> <li><code>++it</code> \uff08\u8fd4\u56de <code>It &amp;</code> \uff09</li> <li><code>*it</code> \uff08\u8fd4\u56de\u4e00\u4e2a\u5f15\u7528\uff0c\u4e14\u80fd\u8f6c\u5316\u4e3a <code>value_type</code> \uff09</li> <li><code>it1 != it2</code> \uff08\u8fd4\u56de\u503c\u80fd\u8f6c\u5316\u4e3a <code>bool</code> \uff0c\u4e14\u5982\u679c <code>==</code> \u6709\u5b9a\u4e49\uff0c\u4e0e <code>!(it1 == it2)</code> \u503c\u76f8\u540c\uff09</li> <li><code>it-&gt;m</code> \uff08\u7b49\u4ef7\u4e8e <code>(*it).m</code> \uff09</li> <li><code>it++</code> \uff08\u8fd4\u56de\u503c\u80fd\u8f6c\u5316\u4e3a <code>const It&amp;</code> \uff09</li> <li><code>*it++</code> \uff08\u5373 <code>*(it++)</code> \uff0c\u8fd4\u56de\u503c\u80fd\u8f6c\u5316\u4e3a <code>value_type</code> \uff09</li> </ul> </li> <li> <p>LegacyForwardIterator - \u5728 LegacyInputIterator  \u7684\u57fa\u7840\u4e0a\uff0c\u80fd\u591f\u652f\u6301 \u591a\u8d9f \u7b97\u6cd5\u3002</p> \u5177\u4f53\u8981\u6c42 <p>\u6ee1\u8db3\u8fd9\u79cd\u8981\u6c42\u7684\u7c7b\u578b <code>It</code> \u9700\u8981\uff1a</p> <ul> <li>\u6ee1\u8db3 LegacyInputIterator </li> <li>\u5982\u679c <code>it1 == it2</code> \uff0c\u90a3\u4e48\u8981\u4e48\u5b83\u4eec\u90fd\u6ca1\u6709\u6307\u5411\u4e00\u4e2a\u6709\u6548\u7684\u5bf9\u8c61\uff08\u4f8b\u5982 <code>nullptr</code> \u6216\u8005\u7c7b\u4f3c <code>c.end()</code> \u7684\u8fed\u4ee3\u5668\uff0c\u6211\u4eec\u79f0\u5b83\u4eec\u662f \u4e0d\u53ef\u89e3\u5f15\u7528\u7684 undereferenceable\uff09\uff0c\u8981\u4e48\u5b83\u4eec\u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5143\u7d20\u3002</li> <li>\u5982\u679c <code>*it1</code> \u548c <code>*it2</code> \u5f15\u7528\u540c\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48 <code>it1 == it2</code> </li> <li><code>it</code> \u88ab <code>++</code> \u540e\uff0c\u518d\u6b21\u8bfb\u53d6\u5176\u539f\u6765\u6307\u5411\u5bf9\u8c61\u7684\u503c\uff0c\u7ed3\u679c\u4e0d\u5e94\u53d1\u751f\u53d8\u5316</li> <li>\u5982\u679c <code>it1 == it2</code> \uff0c\u90a3\u4e48 <code>++it1 == ++it2</code> </li> </ul> </li> <li> <p>LegacyBidirectionalIterator - \u5728 _LegacyForwardIterator _ \u7684\u57fa\u7840\u4e0a\uff0c\u80fd\u591f \u53cc\u5411\u79fb\u52a8 \u3002</p> \u5177\u4f53\u8981\u6c42 <p>\u6ee1\u8db3\u8fd9\u79cd\u8981\u6c42\u7684\u7c7b\u578b <code>It</code> \u9700\u8981\uff1a</p> <ul> <li>\u6ee1\u8db3 _LegacyForwardIterator _ </li> <li>\u652f\u6301 <code>--it</code> , <code>it--</code> , <code>*it--</code> \uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u4e0e\u524d\u8ff0 <code>++</code> \u76f8\u540c\uff0c\u4e14\uff1a</li> <li><code>--(++it) == it</code> </li> <li>\u5982\u679c <code>--it1 == --it2</code> \uff0c\u90a3\u4e48 <code>it1 == it2</code> </li> </ul> </li> <li> <p>LegacyRandomAccessIterator - \u5728 LegacyBidirectionalIterator \u7684\u57fa\u7840\u4e0a\uff0c\u80fd\u591f\u5728 \u5e38\u6570 \u65f6\u95f4\u5185\u79fb\u52a8\u4ece\u800c\u6307\u5411 \u4efb\u4e00 \u5143\u7d20\u3002</p> \u5177\u4f53\u8981\u6c42 <p>\u6ee1\u8db3\u8fd9\u79cd\u8981\u6c42\u7684\u7c7b\u578b <code>It</code> \u9700\u8981\uff1a</p> <ul> <li>\u6ee1\u8db3 LegacyBidirectionalIterator </li> <li>\u652f\u6301 <code>it += n</code> , <code>it -= n</code> , <code>it + n</code> , <code>it - n</code> , <code>n + it</code> , <code>it[n]</code> , <code>it1 &lt; it2</code> , <code>it1 &gt; it2</code> , <code>it1 &lt;= it2</code> , <code>it1 &gt;= it2</code> \uff08\u6bd4\u8f83\u8fd0\u7b97\u7b26\u9700\u8981\u5728\u81ea\u53cd\u3001\u4ea4\u6362\u3001\u4f20\u9012\u4e0b\u6709\u6b63\u786e\u8868\u73b0\uff09, <code>it1 - it2</code> \uff08\u8ba1\u7b97\u4e24\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u5143\u7d20\u7684\u8ddd\u79bb\uff09 \uff0c\u542b\u4e49\u7565\uff0c\u4f46\u590d\u6742\u5ea6\u987b\u662f \\(O(1)\\) \u7684</li> </ul> </li> <li> <p><code>C++17</code> LegacyContiguousIterator- \u5728 LegacyRandomAccessIterator \u7684\u57fa\u7840\u4e0a\uff0c\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u5143\u7d20\u5728\u5185\u5b58\u91cc \u7269\u7406\u4e0a\u4e5f\u76f8\u90bb\u3002</p> <ul> <li>\u6ce8\uff1a\u6307\u5411\u6570\u7ec4\u4e2d\u5143\u7d20\u7684 \u6307\u9488 \u6ee1\u8db3 LegacyContiguousIterator \u7684\u6240\u6709\u8981\u6c42\u3002</li> </ul> </li> </ol> <p>\u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u79cd LegacyOutputIterator\uff0c\u5b83\u548c LegacyInputIterator \u7c7b\u4f3c\uff0c\u9700\u8981\u80fd\u591f\u7528\u6765\u6807\u8bc6\u3001 \u904d\u5386 \u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u80fd\u591f\u5411\u6240\u6307\u7684\u5143\u7d20\u4e2d \u5199\u5165 \u503c\uff1b\u540c\u6837\u4e0d\u9700\u8981\u4fdd\u8bc1\u591a\u8d9f\u7b97\u6cd5\u7684\u6709\u6548\u6027\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\uff0cLegacyOutputIterator \u548c\u524d\u8ff0 5 \u4e2a\u5177\u540d\u8981\u6c42\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u79f0\u6ee1\u8db3\u524d\u8ff0 5 \u4e2a\u5177\u540d\u8981\u6c42\u4e2d\u67d0\u4e00\u4e2a\u7684\u540c\u65f6\u8fd8\u6ee1\u8db3 LegacyOutputIterator  \u7684\u8fed\u4ee3\u5668\u4e3a mutable \u7684\u3002</p> <p>\u8fd9\u5f20\u8868\u683c\u6982\u62ec\u4e86\u4e0a\u8ff0\u5185\u5bb9\uff1a</p> <p></p> <p></p>"},{"location":"cpp/%E7%90%86%E8%A7%A3%20STL%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1/#\u53c8\u662f-quiz-\u65f6\u95f4","title":"\u53c8\u662f Quiz \u65f6\u95f4\uff01","text":"<p>\u90a3\u4e48\uff0c\u8bf7\u5927\u5bb6\u6839\u636e\u81ea\u5df1\u7684\u7406\u89e3\uff0c\u7ed3\u5408\u5bf9\u5e94\u5bb9\u5668\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5199\u51fa\u5b83\u4eec\u63d0\u4f9b\u6ee1\u8db3\u4ec0\u4e48\u8981\u6c42\u7684\u8fed\u4ee3\u5668\uff01</p> <p></p> <p>\u56fe\u6ce8</p> <p>*  \u5bf9\u4e8e deque\uff0c\u4f8b\u5982\u6bcf\u4e2a\u5b9a\u957f\u6570\u7ec4\u957f\u5ea6\u4e3a 100\uff0c\u90a3\u4e48\u8bbf\u95ee <code>q[514]</code> \u5176\u5b9e\u5c31\u662f\u8bbf\u95ee <code>a[5][14]</code> \uff0c\u4e5f\u5c31\u662f\u7b2c 6 \u4e2a\u6570\u7ec4\u91cc\u7684\u7b2c 15 \u4e2a\u5143\u7d20\u3002</p> <p>\\(\\dagger\\) \u4e0a\u8868\u4e2d Unordered Associative Containers \u7684\u5b9e\u73b0\u8003\u8651\u4e86\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u6709 \\(m = 10^6\\) \u4e2a bucket\uff0c\u4f46\u662f\u53ea\u6709 \\(n = 100\\) \u4e2a\u5143\u7d20\uff0c\u5982\u679c\u76f4\u63a5\u904d\u5386 bucket \u7684\u8bdd\u590d\u6742\u5ea6\u662f \\(O(m+n) &gt;&gt; O(n)\\) \u7684\uff1b\u56e0\u6b64\u5b9e\u73b0\u4e2d\u989d\u5916\u7528\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u7ef4\u62a4\u6240\u6709\u6709\u5143\u7d20\u7684 bucket \u5217\u8868\uff0c\u904d\u5386\u65f6\u6839\u636e\u8fd9\u4e2a\u5217\u8868\u53bb\u627e\u5143\u7d20\uff0c\u590d\u6742\u5ea6\u5c31\u4ec5\u662f \\(O(n)\\) \u7684\u4e86\u3002</p> <p>\u7b54\u6848\u6765\u54af\uff01</p> <p></p> <p>\u56fe\u6ce8</p> <p>#  \u7279\u522b\u5730\uff0c <code>vector&lt;bool&gt;</code> \u662f <code>vector</code> \u7684\u4e00\u4e2a\u7279\u5316\uff0c\u6807\u51c6\u5e0c\u671b\u5b9e\u73b0\u8005\u53ef\u4ee5\u8003\u8651\u7528\u66f4\u8282\u7701\u7a7a\u95f4\u7684\u65b9\u5f0f\u4fdd\u5b58 <code>vector&lt;bool&gt;</code> \uff0c\u4f46\u662f\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u662f implementation defined \u7684\uff08\u6807\u51c6\u4e0d\u6307\u660e\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4f46\u662f\u5177\u4f53\u7684\u5b9e\u73b0\u8005\u9700\u8981\u7ed9\u51fa\u8bf4\u660e\uff09\uff1b\u56e0\u6b64 <code>vector&lt;bool&gt;</code> \u63d0\u4f9b\u7684\u8fed\u4ee3\u5668\u6ee1\u8db3\u7684\u5177\u540d\u8981\u6c42\u4e5f\u662f implementation defined \u7684\u3002</p> <p>\u56de\u987e\u6211\u4eec\u63d0\u5230\u7684\u7b97\u6cd5\uff0c <code>sort</code> \u9700\u8981\u4f20\u5165\u7684\u8fed\u4ee3\u5668\u6ee1\u8db3 LegacyRandomAccessIterator\uff1b\u8fd9\u4e00\u9650\u5236\u7684\u5b9e\u73b0\u65b9\u5f0f\u5176\u5b9e\u5c31\u662f\uff0c <code>sort</code> \u7684\u5b9e\u73b0\u4e2d\u4f1a\u5305\u542b <code>it1 - it2</code> \uff0c <code>it + n</code> \u4e4b\u7c7b\u7684\u8fd0\u7b97\uff0c\u5982\u679c\u4e0d\u652f\u6301\u8fd9\u4e9b\u8fd0\u7b97\u5c31\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\u3002</p> <p>\u540c\u65f6\uff0c <code>lower_bound</code> \u548c <code>upper_bound</code> \u53ea\u9700\u8981\u4f20\u5165\u7684\u8fed\u4ee3\u5668\u6ee1\u8db3 LegacyForwardIterator\uff1b\u4f46\u662f\u5982\u679c\u8fd8\u6ee1\u8db3 LegacyRandomAccessIterator\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u662f \\(O(\\log n)\\) \u7684\uff1b\u5426\u5219\u662f \\(O(n)\\) \u7684\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e <code>set</code> , <code>map</code> , <code>multiset</code> \u548c <code>multimap</code> \uff0c\u5b83\u4eec\u63d0\u4f9b\u7684\u8fed\u4ee3\u5668\u4e0d\u6ee1\u8db3 LegacyRandomAccessIterator\uff0c\u4f46\u662f\u5b83\u4eec\u672c\u8eab\u7c7b\u5185\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684 <code>lower_bound</code> \u51fd\u6570\uff0c\u56e0\u6b64\u6b64\u65f6\u5e94\u8be5\u7528\u7c7b\u5185\u7684\u8fd9\u4e9b\u51fd\u6570\u3002</p> <p>\u8865\u5145 2.1</p> <p>\u8fd9\u79cd\u5728\u6ee1\u8db3\u548c\u4e0d\u6ee1\u8db3 _LegacyRandomAccessIterator _\u65f6\u6709\u4e0d\u540c\u590d\u6742\u5ea6\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\uff0c\u6bcf\u4e2a iterator <code>It</code> \u90fd\u9700\u8981\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684 <code>iterator_traits&lt;It&gt;</code> \uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a <code>iterator_category</code> \uff0c\u5b83\u7528\u6765\u6807\u8bc6\u8fd9\u4e2a\u8fed\u4ee3\u5668\u6ee1\u8db3\u54ea\u79cd\u8981\u6c42\u3002\u5bf9\u4e8e\u6307\u5411\u5bf9\u8c61\u7684\u6307\u9488\u7c7b\u578b\uff0c <code>iterator_traits</code> \u6709\u5bf9\u5e94\u7684\u7279\u5316\uff0c\u5176 <code>iterator_category</code> \u4e3a <code>random_access_iterator_tag</code> \u3002</p> <p> \u5728 <code>lower_bound</code> \u4e2d\uff0c\u4f7f\u7528 <code>it + n</code> \u8fd9\u6837\u7684\u64cd\u4f5c\u53ef\u80fd\u662f\u901a\u8fc7 <code>std::advance(it, n)</code> \u7684\u65b9\u5f0f\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e2a\u51fd\u6570\u5bf9\u4e8e\u4e0d\u540c\u7684 <code>iterator_traits</code> \u6709\u4e0d\u540c\u7684\u91cd\u8f7d\uff1b\u5bf9\u4e8e\u652f\u6301\u968f\u673a\u8bbf\u95ee\u7684\uff0c\u5c31\u4f1a\u901a\u8fc7 <code>it + n</code> \u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u800c\u5982\u679c\u4e0d\u652f\u6301\uff0c\u5219\u901a\u8fc7\u5faa\u73af\u5b9e\u73b0\u3002</p> <p></p>"},{"location":"cpp/%E7%90%86%E8%A7%A3%20STL%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1/#3-\u8fed\u4ee3\u5668\u4f55\u5fc5\u662f\u8fed\u4ee3\u5668","title":"3 \u8fed\u4ee3\u5668\u4f55\u5fc5\u662f\u8fed\u4ee3\u5668","text":"<p>\u6211\u4eec\u6765\u770b\u7b2c 3 \u4e2a\u95ee\u9898\uff01 <code>sort</code> \u7684\u51fd\u6570\u7b7e\u540d\u662f\u4ec0\u4e48\u6837\u7684\uff1f\u5373\uff0c <code>template &lt;</code><code>-1-</code><code>&gt; std::sort(</code><code>-2-</code><code>)</code> \u7684 -1- \u548c -2- \u4e24\u5904\u662f\u4ec0\u4e48\uff1f\u5177\u4f53\u800c\u8a00\uff1a</p> <p>a. \u4e3a\u4ec0\u4e48\u5b83\u65e2\u80fd\u5bf9 vector \u8fd9\u6837\u7684\u5bb9\u5668\u8fdb\u884c\u6392\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u4f20\u7edf\u7684\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff1f b. \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u5982\u4f55\u9002\u914d\u6709\u548c\u6ca1\u6709\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u7684\u4e24\u79cd\u60c5\u51b5\u7684\uff1f</p> <p>\u6211\u4eec\u5148\u6765\u8ba8\u8bba a \u95ee\u9898\u3002</p> <p>\u524d\u4e00\u8282\u4e2d\u6211\u4eec\u8ba8\u8bba\u8fc7\uff0c <code>sort</code> \u8981\u6c42\u4f20\u5165\u7684\u8fed\u4ee3\u5668\u6ee1\u8db3 LegacyRandomAccessIterator\uff0c\u8fd9\u4e00\u8981\u6c42\u662f\u56e0\u4e3a <code>sort</code> \u7684\u5b9e\u73b0\u4e2d\u4f1a\u5305\u542b\u7c7b\u4f3c <code>end - begin</code> , <code>it + n</code> , <code>*it</code> \u4e4b\u7c7b\u7684\u64cd\u4f5c\u3002\u6211\u4eec\u5728\u524d\u4e00\u8282\u4e5f\u8ba8\u8bba\u8fc7\u4e86\uff0c\u6ee1\u8db3 LegacyRandomAccessIterator \u7684\u8fed\u4ee3\u5668\u9700\u8981\u652f\u6301\u4e0a\u8ff0\u64cd\u4f5c\uff1b\u800c\u540c\u65f6\uff0c\u6307\u9488\u7c7b\u578b\u4e5f\u652f\u6301\u8fd9\u6837\u7684\u64cd\u4f5c\u3002</p> <p>\u548c \u6574\u6d3b 1.3 \u4e2d\u7684\u4f8b\u5b50\u7c7b\u4f3c\uff0c\u5176\u5b9e\u53ea\u8981\u6211\u4eec\u4f20\u5165\u7684\u7c7b\u578b\u652f\u6301\u4e0a\u8ff0\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\u800c\u5982\u679c\u7c7b\u578b\u5e76\u4e0d\u652f\u6301\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u5219\u4f1a\u7f16\u8bd1\u9519\u8bef\uff0c\u4f8b\u5982\u7b2c 2 \u8282\u5f00\u5934\u6f14\u793a\u7528 sort \u5bf9 map \u7684 begin \u548c end \u6392\u5e8f\u5176\u5b9e\u62a5\u7684\u9519\u5c31\u662f\u201c\u5e76\u6ca1\u6709\u8fd9\u4e24\u4e2a\u8fed\u4ee3\u5668\u4e4b\u95f4\u7684 <code>-</code> \u8fd0\u7b97\u201d\uff1a</p> <p></p> <p>\u4e3a\u4e86\u8fdb\u4e00\u6b65\u89e3\u91ca\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u5c0f\u7684 demo\uff1a</p> <p></p> <p>\uff08\u53ef\u4ee5\u5728 https://godbolt.org/z/Peh17Ye5o \u91cc\u73a9\u4e00\u4e0b\uff09</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u7684 <code>demo</code> \u7528\u5230\u4e86\u524d\u8ff0\u4e09\u79cd\u64cd\u4f5c\uff0c\u800c 15 \u548c 16 \u884c\u7528\u6307\u9488\u548c vector \u7684\u8fed\u4ee3\u5668\u8c03\u7528\u5b83\u7684\u65f6\u5019\u90fd\u53ef\u4ee5\u6b63\u5e38\u7f16\u8bd1\u901a\u8fc7\uff1b\u4f46\u662f 17 \u884c\u5c31\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\uff1a</p> <p></p> <p>\u6240\u4ee5\u8bf4\uff0c <code>sort</code> \u65e2\u9002\u7528\u4e8e\u4f20\u7edf\u6570\u7ec4\uff0c\u4e5f\u9002\u7528\u4e8e vector \u7b49\u5bb9\u5668\u662f\u81ea\u7136\u7684\uff1a\u6307\u9488\u548c\u6ee1\u8db3 LegacyRandomAccessIterator \u7684\u8fed\u4ee3\u5668\u90fd\u652f\u6301 <code>sort</code> \u51fd\u6570\u91cc\u7528\u5230\u7684\u5404\u79cd\u8fd0\u7b97\uff0c\u56e0\u6b64\u81ea\u7136\u5c31\u80fd\u901a\u8fc7\u7f16\u8bd1\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u6c42 <code>sort</code> \u4f20\u5165\u7684\u7c7b\u578b\u6ee1\u8db3 LegacyRandomAccessIterator \u5e76\u4e0d\u662f\u4e00\u4e2a\u524d\u63d0\uff0c\u800c\u662f\u4e00\u4e2a \u7ed3\u679c \u2014\u2014 \u6211\u4eec\u628a <code>sort</code> \u4ee5\u53ca\u548c\u5b83\u7c7b\u4f3c\u7684\u51fd\u6570\uff0c\u5bf9\u4f20\u5165\u53c2\u6570\u7c7b\u578b\u201c\u80fd\u591f\u5728 \u5e38\u6570 \u65f6\u95f4\u5185\u79fb\u52a8\u4ece\u800c\u6307\u5411 \u4efb\u4e00 \u5143\u7d20\u7684\u51fd\u6570\u201d\u7684\u8981\u6c42\u8d77\u4e86\u4e2a\u540d\u5b57\uff0c\u53eb\u505a LegacyRandomAccessIterator\u3002\u800c\u8fd9\u79cd\u8981\u6c42\u5728\u8bed\u8a00\u4e2d\u7684\u4f53\u73b0\uff0c\u4e5f\u5e76\u4e0d\u662f\u4f7f\u7528\u4e13\u95e8\u7684 tag \u6765\u6807\u8bb0\u67d0\u4e2a\u8fed\u4ee3\u5668\u7b26\u5408\u4ec0\u4e48\u6837\u7684\u5177\u540d\u8981\u6c42\uff0c\u800c\u53ea\u662f\u4e0d\u7b26\u5408\u8fd9\u79cd\u8981\u6c42\u7684\u7c7b\u578b\u81ea\u7136\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff0c\u56e0\u4e3a\u5bf9\u5e94\u51fd\u6570\u4e2d\u4f7f\u7528\u4e86\u8981\u6c42\u6240\u8bf4\u660e\u7684\u4e00\u4e9b\u64cd\u4f5c\u3002</p> <p>\u8865\u5145 3.1</p> <p>\u8fd9\u5176\u5b9e\u5c31\u518d\u6b21\u5411\u6211\u4eec\u5c55\u73b0\u4e86 template \u6240\u652f\u6301\u7684\u6cdb\u578b\u7f16\u7a0b\u7684\u610f\u4e49\u2014\u2014\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5141\u8bb8\u6211\u4eec\u5199\u4e00\u4e2a\u652f\u6301\u67d0\u4e00\u7c7b\u578b\uff08\u57fa\u7c7b\uff09\u4ee5\u53ca\u5c5e\u4e8e\u8fd9\u4e00\u7c7b\u578b\u7684\u5176\u4ed6\u7c7b\u578b\uff08\u5b50\u7c7b\uff09\u7684\u51fd\u6570\uff1b\u800c\u6cdb\u578b\u7f16\u7a0b\u5219\u5141\u8bb8\u6211\u4eec\u5199\u4e00\u4e2a\u652f\u6301\u6ee1\u8db3\u67d0\u4e00\u6761\u4ef6\uff08\u62e5\u6709\u67d0\u4e9b\u7279\u5b9a\u6210\u5458\uff09\u7684\u6240\u6709\u7c7b\u578b\u7684\u51fd\u6570\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u7ee7\u627f\u548c\u591a\u6001\u6765\u5c06\u4e0d\u540c\u7684\u7c7b\u578b\u62bd\u8c61\u8d77\u6765\uff0c\u7528\u201c\u5b50\u7c7b\u5bf9\u8c61\u662f\u4e00\u4e2a\u7236\u7c7b\u5bf9\u8c61\u201d\u7684\u903b\u8f91\u6765\u5728\u9700\u8981\u65f6\u628a\u5b50\u7c7b\u5bf9\u8c61\u5f53\u505a\u7236\u7c7b\u5bf9\u8c61\u4f7f\u7528\uff0c\u4ece\u800c\u63d0\u9ad8\u4ee3\u7801\u7684\u7b80\u6d01\u6027\u548c\u91cd\u7528\u5ea6\uff1b\u800c\u5728\u6cdb\u578b\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u7c7b\u4f3c\u4e0a\u6587\u4e2d <code>sort</code> \u7684\u65b9\u5f0f\uff0c\u5c06\u4e0d\u540c\u7c7b\u578b\u5171\u540c\u5177\u6709\u7684\u4e00\u4e9b\u51fd\u6570\u6216\u5b57\u6bb5\u4f5c\u4e3a\u8981\u6c42\u3002\u5373\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u51fd\u6570\u6240\u63d0\u51fa\u7684\u8981\u6c42\u662f \"is\"\uff0c\u800c\u6cdb\u578b\u7f16\u7a0b\u7684\u51fd\u6570\u6240\u63d0\u51fa\u7684\u8981\u6c42\u662f \"has\"\u3002\u8fd9\u4e5f\u662f\u6cdb\u578b\u7f16\u7a0b\u76f8\u6bd4\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6765\u8bf4\u66f4\u52a0\u81ea\u7136\u4ee5\u53ca\u81ea\u7531\u4e4b\u5904\u3002</p> <p>\u8865\u5145 3.2</p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u53c8\u8981\u95ee\u4e86\u2014\u2014\u6cdb\u578b\u7f16\u7a0b\u7684\u903b\u8f91\u662f \"has\"\uff0c\u800c\u5728\u524d\u6587\u4e2d <code>sort</code> \u7684\u4f8b\u5b50\u91cc\uff0c\u5982\u679c\u5bf9\u5e94\u7c7b\u578b\u5e76\u4e0d \"has\" \u90a3\u4e9b\u8fd0\u7b97\u7b26\uff0c\u5c31\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5206\u5f00 \"has\" \u548c \"\u4e0d has\" \u4e24\u79cd\u60c5\u51b5\uff0c\u4f7f\u5b83\u4eec\u5206\u522b\u8c03\u7528\u4e0d\u540c\u7684\u51fd\u6570\u91cd\u8f7d\uff0c\u600e\u4e48\u529e\u634f\uff1f\u8fd9\u65f6\u5c31\u9700\u8981\u4ecb\u7ecd\u4f1f\u5927\u7684 SFINAE (Substitution Fail Is Not An Error) \u6280\u672f\u4e86\u3002\u8fd9\u5e76\u4e0d\u662f\u672c\u6587\u7684\u91cd\u70b9\uff0c\u6211\u4eec\u4ee5\u540e\u6709\u673a\u4f1a\u7684\u8bdd\u53ef\u80fd\u4f1a\u5c55\u5f00\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002\u597d\u5947\u7684\u5c0f\u670b\u53cb\u4eec\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u4e00\u4e9b\u76f8\u5173\u7684\u8d44\u6599\uff1a</p> <ul> <li>https://en.cppreference.com/w/cpp/language/sfinae</li> <li>https://stackoverflow.com/questions/982808/c-sfinae-examples</li> </ul> <p>\u4e0b\u9762\u6211\u4eec\u6765\u8ba8\u8bba b \u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u76f8\u5bf9\u7b80\u5355\u3002</p> <p>\u9996\u5148\u8ba8\u8bba\u6211\u4eec\u7ed9 sort \u4f20\u5165\u7684\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u6307\u9488\u7684\u60c5\u5f62\uff0c\u6211\u4eec\u91c7\u7528 \u5feb\u901f\u5165\u95e8 C++ \u5199\u9898\uff01 \u4e2d\u7684\u4f8b\u5b50\uff1a</p> <pre><code>bool cmp(const int&amp; a, const int&amp; b) { return a &gt; b; }\nvector&lt;int&gt; v = {3, 1, 4, -2, 5, 3};\nsort(v.begin(), v.end(), cmp);\n</code></pre> <p>\u5728 <code>sort</code> \u4e2d\uff0c\u6211\u4eec\u4f20\u5165\u7684 <code>cmp</code> \u88ab\u600e\u6837\u4f7f\u7528\u4e86\u5462\uff1f\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u51fd\u6570\u6307\u9488 <code>fp</code> \u53ef\u4ee5\u901a\u8fc7 <code>fp(args...)</code> \u7684\u65b9\u5f0f\u76f4\u63a5\u8c03\u7528\uff1a</p> <p></p> <p>\u90a3\u4e48\uff0c\u5176\u5b9e <code>sort</code> \u4e2d\u76f4\u63a5\u8c03\u7528 <code>cmp(*it1, *it2)</code> \u5c31\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u4e24\u4e2a\u5143\u7d20\u7684\u6bd4\u8f83\u4e86\uff01\u6240\u4ee5\uff0c <code>sort</code> \u7684\u51fd\u6570\u7b7e\u540d\u53ef\u4ee5\u662f\uff1a</p> <pre><code>template&lt;typename Iterator, typename CompFuncPtr&gt; bool sort(Iterator begin, Iterator end, CompFuncPtr cmp)\n</code></pre> <p>\u8fd9\u91cc\u7684\u6a21\u677f\u53c2\u6570 <code>Iterator</code> \u7528\u6765\u9002\u914d\u4e0d\u540c\u7684\u8fed\u4ee3\u5668\u7c7b\u578b\uff08\u5305\u62ec\u6307\u9488\uff09\uff1b\u800c <code>CompFuncPtr</code> \u7528\u6765\u9002\u914d\u4e0d\u540c\u7684\u6bd4\u8f83\u51fd\u6570\u6307\u9488\uff0c\u56e0\u4e3a\u6bd4\u8f83\u51fd\u6570\u6307\u9488\u7684\u7c7b\u578b\u56e0\u5176\u53c2\u6570\u7c7b\u578b\u7684\u4e0d\u540c\u800c\u4e0d\u540c\u3002</p> <p>\u4e0d\u8fc7\uff0c\u4e8b\u60c5\u8fd8\u6ca1\u7ed3\u675f\uff01\uff08\u8ba9\u6211\u4eec\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u8282\u2014\u2014\uff09</p> <p></p>"},{"location":"cpp/%E7%90%86%E8%A7%A3%20STL%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1/#4-\u51fd\u6570\u53c8\u4f55\u5fc5\u662f\u51fd\u6570","title":"4 \u51fd\u6570\u53c8\u4f55\u5fc5\u662f\u51fd\u6570","text":"<p>\u5feb\u901f\u5165\u95e8 C++ \u5199\u9898\uff01 \u4e2d\u7ed9\u51fa\u4e86 <code>sort</code> \u7684\u53e6\u4e00\u79cd\u4f7f\u7528\u793a\u4f8b\uff1a</p> <pre><code>vector&lt;int&gt; v = {3, 1, 4, -2, 5, 3};\nsort(v.begin(), v.end(), greater&lt;int&gt;());\n</code></pre> <p>\u8fd9\u79cd\u5199\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u5347\u5e8f\u6392\u5217\u3002\u90a3\u4e48\u8fd9\u4e2a <code>greater&lt;int&gt;()</code> \u662f\u4ec0\u4e48\u5462\uff1f\u4e00\u79cd\u53ef\u80fd\u7684\u5b9e\u73b0\u957f\u8fd9\u6837\uff1a</p> <pre><code>template&lt;typename T&gt;\nstruct greater {\nbool operator ()(const T &amp;lhs, const T &amp;rhs) {\nreturn lhs &gt; rhs;\n}\n};\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c <code>greater</code> \u5176\u5b9e\u662f\u4e2a\u7ed3\u6784\u4f53\uff0c\u6216\u8005\u8bf4\u662f\u4e2a\u7c7b\uff1b\u5b83\u91cc\u9762\u6709\u4e00\u4e2a\u5bf9\u8fd0\u7b97\u7b26 <code>()</code> \u7684\u91cd\u8f7d\u3002\u6807\u51c6 \u4e2d\u6307\u51fa\uff0c\u5982\u679c <code>a</code> \u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48 <code>a(b...)</code> \u5176\u5b9e\u7b49\u540c\u4e8e <code>(a).operator()(b...)</code> \uff0c\u5176\u5b9e\u5c31\u662f\u5c06 <code>b...</code> \u4f5c\u4e3a\u53c2\u6570\u5217\u8868\uff0c\u8c03\u7528\u4e86 <code>()</code> \u8fd0\u7b97\u7b26\u3002\u6211\u4eec\u628a <code>()</code> \u8fd0\u7b97\u7b26\u79f0\u4e3a\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 (function call operator)\uff0c\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u8868\u793a\u51fd\u6570\u8c03\u7528\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a <code>greater&lt;T&gt;</code> \u7c7b\u7684\u5bf9\u8c61 <code>cmp</code> \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 <code>cmp(a, b)</code> \u6765\u8c03\u7528 <code>(cmp).operator()(a, b)</code> \uff0c\u4ece\u800c\u8fd4\u56de\u6bd4\u8f83\u7684\u7ed3\u679c\u3002</p> <p>\u518d\u56de\u5230 <code>sort(v.begin(), v.end(), greater&lt;int&gt;());</code> \u4e2d\u6765\u3002\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u4ee5\u770b\u51fa\uff0c <code>greater&lt;int&gt;()</code> \u5176\u5b9e\u5c31\u662f\u8c03\u7528 <code>greater&lt;int&gt;</code> \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u6784\u9020\u4e86\u4e00\u4e2a <code>greater&lt;int&gt;</code> \u7c7b\u578b\u7684\u5bf9\u8c61\u4f20\u9012\u7ed9 <code>sort</code> \u3002\u4e0d\u59a8\u8bbe\u5bf9\u5e94\u5f62\u53c2\u540d\u4e3a <code>cmp</code> \uff0c\u90a3\u4e48\u5728 <code>sort</code> \u4e2d\uff0c\u6211\u4eec\u5c31\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7 <code>cmp(a, b)</code> \u6765\u8c03\u7528 <code>greater&lt;int&gt;</code> \u4e2d\u7684 <code>operator ()</code> \u6765\u5b9e\u73b0\u6bd4\u8f83\u3002</p> <p>\u6211\u4eec\u56de\u987e\u7b2c 3 \u8282\u4e2d\u5199\u51fa\u7684\u51fd\u6570\u7b7e\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u51fd\u6570\u7b7e\u540d\u7adf\u4ecd\u7136\u9002\u914d <code>greater&lt;int&gt;()</code> \u8fd9\u6837\u7684\u53c2\u6570\uff01</p> <pre><code>template&lt;typename Iterator, typename CompFuncPtr&gt; void sort(Iterator begin, Iterator end, CompFuncPtr cmp)\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>CompFuncPtr</code> \u73b0\u5728\u5e76\u4e0d\u662f\u4e00\u4e2a <code>bool (*)(const T &amp;, const T &amp;)</code> \u7684\u51fd\u6570\u6307\u9488\u4e86\uff0c\u800c\u662f <code>greater&lt;int&gt;</code> \u7c7b\u578b\uff0c\u800c <code>cmp</code> \u5219\u662f\u8be5\u7c7b\u578b\u7684\u4e00\u4e2a\u5bf9\u8c61\u3002\u5728 <code>sort</code> \u7684\u5b9e\u73b0\u4e2d\uff0c\u4ecd\u7136\u53ef\u4ee5\u50cf\u51fd\u6570\u6307\u9488\u4e00\u6837\u901a\u8fc7 <code>cmp(a, b)</code> \u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u6bd4\u8f83\u3002\u5f53\u7136\uff0c <code>CompFuncPtr</code> \u8fd9\u4e2a\u540d\u5b57\u5c31\u4e0d\u592a\u59a5\u5f53\u4e86\uff0c\u56e0\u4e3a\u6bd4\u8f83\u5668\u4e0d\u4e00\u5b9a\u662f\u4e2a\u51fd\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u6539\u540d\u4e3a <code>Comparator</code> \u3002</p> <p>\u90a3\u4e48\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5199 <code>sort(v.begin(), v.end());</code> \u6765\u5b9e\u73b0\u5347\u5e8f\u6392\u5e8f\u3002\u8fd9\u53c8\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u5462\uff1f\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u91cd\u8f7d\u5373\u53ef\uff1a</p> <pre><code>template&lt;typename Iterator&gt;\nvoid sort(Iterator begin, Iterator end)\n</code></pre> <p>\u800c\u8fd9\u4e2a\u51fd\u6570\u7684\u5b9e\u73b0\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \u7c7b\u4f3c <code>sort(begin, end, less&lt;decltype(*begin)&gt;());</code> \u7684\u5199\u6cd5\uff0c\u5373\u4f7f\u7528 <code>less&lt;T&gt;()</code> \u6765\u4f5c\u4e3a\u6bd4\u8f83\u5668\u3002</p> <p>\u8865\u5145 4.1</p> <p>\u5b9e\u9645\u7684\u4ee3\u7801\u4e2d\uff0c\u8fd9\u91cc\u5e76\u4e0d\u662f <code>less&lt;decltype(*begin)&gt;()</code> \u8fd9\u6837\u7684\u5199\u6cd5\uff0c\u800c\u662f\u7c7b\u4f3c <code>less&lt;typename iterator_traits&lt;Iterator&gt;::value_type&gt;()</code> \u7684\u5199\u6cd5\u3002\u5373\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u5668\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684 traits\uff0c\u5176\u4e2d\u4fdd\u5b58\u4e86\u8fed\u4ee3\u5668\u5bf9\u5e94\u7684\u503c\u7c7b\u578b\u3002\u672c\u6587\u5e76\u4e0d\u60f3\u5f15\u5165 traits \u7684\u6982\u5ff5\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u884c\u67e5\u9605\u8d44\u6599\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa\u7b2c 3 \u4e2a\u95ee\u9898\u7684\u7b54\u6848\uff1a <code>sort</code> \u7684\u51fd\u6570\u7b7e\u540d\u53ef\u4ee5\u662f\uff1a</p> <pre><code>template&lt;typename Iterator&gt;\nvoid sort(Iterator begin, Iterator end);\n\ntemplate&lt;typename Iterator, typename Comparator&gt; bool sort(Iterator begin, Iterator end, Comparator cmp);\n</code></pre> <p>\u8865\u5145 4.2</p> <p>\u5b9e\u9645\u4e0a\uff0c\u67e5\u9605\u6807\u51c6\u53ef\u4ee5\u770b\u5230\uff0cC++17 \u8fd8\u5f15\u5165\u4e86\u4e24\u4e2a\u5305\u542b <code>ExecutionPolicy</code> \u7684\u7248\u672c\u3002\u8fd9\u4e2a\u548c\u672c\u6587\u7684\u4e3b\u9898\u65e0\u5173\uff08\u4e3b\u8981\u662f\u6211\u4e5f\u4e0d\u4f1a\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u884c\u7565\u8fc7\u3002</p> <p> </p> <p></p>"},{"location":"cpp/%E7%90%86%E8%A7%A3%20STL%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1/#\u51fd\u6570\u5bf9\u8c61-function-object--functor","title":"\u51fd\u6570\u5bf9\u8c61 (Function Object / Functor)","text":"<p>\u5728\u8ba8\u8bba\u51fd\u6570\u5bf9\u8c61\u662f\u4ec0\u4e48\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u56de\u987e\u4e00\u4e0b\u4ec0\u4e48\u662f \u5bf9\u8c61 (object) \u3002\u5bf9\u8c61\u8981\u6709\u503c\u3001\u7c7b\u578b\u3001size\u3001\u751f\u547d\u5468\u671f\u7b49\u5c5e\u6027\uff0c\u63cf\u8ff0\u7684\u662f\u4e00\u5757\u5185\u5b58\u4e0a\u7684\u6570\u636e\u53ca\u5176\u542b\u4e49\u3002\u4e0b\u5217\u5e38\u89c1\u7684\u5b9e\u4f53\u4e0d\u662f\u5bf9\u8c61\uff1a</p> <ul> <li>struct / class\uff0c\u5305\u542b\u5176\u6a21\u677f\u53ca\u7279\u5316\uff0c\u5b83\u7528\u6765 \u63cf\u8ff0 \u4e00\u7c7b\u5bf9\u8c61\u7684\u5185\u5b58\u5b89\u6392\uff08\u867d\u7136\u5b83\u4eec\u53ef\u80fd\u5305\u542b\u865a\u51fd\u6570\u8868\uff09\uff1b</li> <li>struct / class \u7684\u975e static \u6210\u5458\u53d8\u91cf\uff1b</li> <li>function\uff0c\u5305\u542b\u5176\u6a21\u677f\u53ca\u7279\u5316\uff0c\u5b83\u662f\u4e00\u6bb5\u4ee3\u7801\uff1b</li> <li>reference\uff0c\u5b83\u53ea\u662f\u5df2\u6709\u5bf9\u8c61\u6216\u51fd\u6570\u7684\u522b\u540d\uff0c\u7f16\u8bd1\u5668\u4e0d\u5fc5\u4e3a\u5b83\u4eec\u5206\u914d\u5185\u5b58\uff08\u56e0\u6b64\u4e0d\u5b58\u5728\u5f15\u7528\u6570\u7ec4\u3001\u5f15\u7528\u7684\u5f15\u7528\u548c\u6307\u5411\u5f15\u7528\u7684\u6307\u9488\uff09\uff1b\u7b49\u3002</li> </ul> <p>\u4e0a\u8ff0\u5185\u5bb9\u66f4\u4e25\u8c28\u7684\u8868\u8ff0\u53c2\u89c1 https://en.cppreference.com/w/cpp/language/object\u3002</p> <p>\u8bf7\u6ce8\u610f\uff1a\u4e0a\u8ff0\u201c\u5bf9\u8c61\u201d\u7684\u6982\u5ff5\u548c OOP \u4e2d\u201c\u5bf9\u8c61\u201d\u7684\u6982\u5ff5\u5e76\u4e0d\u4e00\u81f4\u3002\u5728 C++ \u7684\u4e0a\u8ff0\u5b9a\u4e49\u4e2d\uff0c <code>int</code> \u548c <code>int*</code> \u662f\u5bf9\u8c61\u3002</p> <p>\u4e0a\u9762\u7684\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u4e00\u4ef6\u4e8b\u2014\u2014\u51fd\u6570\u4e0d\u662f\u5bf9\u8c61\u3002\u4f46\u662f\uff0c\u5728\u4e0a\u8ff0\u5bf9\u95ee\u9898 3 \u7684\u8ba8\u8bba\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86 2 \u79cd\u80fd\u591f\u88ab\u5f53\u6210\u51fd\u6570\u4f7f\u7528\u7684\u5bf9\u8c61\uff1a\u51fd\u6570\u6307\u9488\uff0c\u4ee5\u53ca\u91cd\u8f7d\u4e86 function call operator <code>operator ()</code> \u7684\u7c7b\u7684\u5bf9\u8c61\u3002\u4e8b\u5b9e\u4e0a\uff0cC++ \u5c06\u4efb\u4f55\u5b9a\u4e49\u4e86 function call operator \u7684\u5bf9\u8c61\u7edf\u79f0\u4e3a \u51fd\u6570\u5bf9\u8c61 (Function Object) \u3002\u5177\u4f53\u6765\u8bf4\uff0c\u51fd\u6570\u5bf9\u8c61\u5305\u62ec\uff1a</p> <ul> <li>\u51fd\u6570\u6307\u9488\uff1b</li> <li>\u4efb\u4f55\u80fd\u591f\u8f6c\u5316\u5230\u51fd\u6570\u6307\u9488\u7684\u7c7b\u7684\u503c\uff08\u5982\u65e0\u72b6\u6001\uff0c\u5373\u6ca1\u6709\u6355\u83b7\u4efb\u4f55\u4e1c\u897f\u7684 lambda \u8868\u8fbe\u5f0f\uff09\uff1b</li> <li>\u4efb\u4f55\u91cd\u8f7d\u4e86 function call operator \u7684\u7c7b\u7684\u503c\uff08\u5982 lambda \u8868\u8fbe\u5f0f\uff09\u3002</li> </ul> <p>\u8865\u5145 4.3</p> <p>\u5f88\u591a\u4eba\u5c06\u51fd\u6570\u5bf9\u8c61\u79f0\u4e3a \u4eff\u51fd\u6570 (Functor)\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u76f4\u81f3 C++20\uff0c\u8fd9\u4e2a\u540d\u79f0\u5728\u6807\u51c6\u4e2d \u4ece\u672a\u51fa\u73b0\u8fc7\u3002\u6240\u4ee5\u8bf7\u4e0d\u8981\u4f7f\u7528\u8fd9\u4e2a\u540d\u79f0\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u51fd\u6570\u8c03\u7528\u8bed\u53e5 <code>E(A...)</code> \u65f6\uff0c <code>E</code> \u53ef\u4ee5\u662f\u51fd\u6570\u3001\u51fd\u6570\u5f15\u7528\u3001\u51fd\u6570\u5bf9\u8c61\uff0c\u6216\u8005\u5176\u4ed6\u503c\u4e3a\u51fd\u6570\u5f15\u7528\u6216\u51fd\u6570\u5bf9\u8c61\u7684\u8868\u8fbe\u5f0f\u3002\u51fd\u6570\u7528\u6765\u8d4b\u503c\u6216\u8005\u4f5c\u4e3a\u53c2\u6570\u88ab\u4f20\u9012\u65f6\uff0c\u5982\u679c\u63a5\u6536\u65b9\u4e0d\u662f\u5f15\u7528\uff0c\u5219\u4f1a\u53d1\u751f function-to-pointer \u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u5373\u88ab\u9690\u5f0f\u8f6c\u6362\u6210\u51fd\u6570\u6307\u9488\u3002\u56e0\u6b64\u5f53\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u88ab\u4f20\u9012\u65f6\uff0c\u63a5\u6536\u65b9\u8981\u4e48\u63a5\u6536\u5230\u4e00\u4e2a\u5f15\u7528\uff0c\u8981\u4e48\u63a5\u6536\u5230\u4e00\u4e2a\u6307\u9488\u3002</p> <p>\u77e5\u9053\u4e86\u8fd9\u4e9b\u5185\u5bb9\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u5f88\u591a\u79cd\u7ed9 <code>sort</code> \u4e4b\u7c7b\u7684\u51fd\u6570\u4f20\u9012\u51fd\u6570\u7684\u65b9\u5f0f\u4e86\uff01</p> <p></p> <p>\u8865\u5145 4.4</p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u4f1a\u95ee\u4e86\u2014\u2014\u7b2c 15 \u884c\u4f20\u9012\u5f15\u7528\u4e3a\u4ec0\u4e48\u90a3\u4e48\u9ebb\u70e6\u5440\uff01\u5176\u5b9e\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u4e0d\u663e\u793a\u7ed9\u51fa\u6a21\u677f\u53c2\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u50cf 13 \u884c\u4e00\u6837\u88ab\u89e3\u91ca\u6210\u51fd\u6570\u6307\u9488\u800c\u4e0d\u662f\u51fd\u6570\u5f15\u7528\u3002\u8fd9\u662f\u56e0\u4e3a\u5e76\u4e0d\u5b58\u5728 funtion-to-reference \u7684\u9690\u5f0f\u8f6c\u6362\u3002\u56e0\u6b64\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u8981\u8ba9\u5b83\u662f\u4e00\u4e2a\u5f15\u7528\uff0c\u90a3\u5c31\u53ea\u80fd\u663e\u5f0f\u5730\u5199\u51fa\u5176\u7c7b\u578b\uff1b\u5982\u679c\u5199 <code>decltype(cmp1)</code> \u7684\u8bdd\uff0c\u867d\u7136\u6a21\u677f\u53c2\u6570\u662f\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\uff0c\u4f46\u662f\u4f20\u8fdb\u53bb\u7684\u5176\u5b9e\u8fd8\u662f\u4e2a\u51fd\u6570\u6307\u9488\u800c\u4e0d\u662f\u5f15\u7528\uff0c\u56e0\u4e3a\u51fd\u6570\u672c\u8eab\u4e0d\u662f\u5bf9\u8c61\uff0c\u6211\u4eec\u4e0d\u80fd\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u7684\u53d8\u91cf\u3002\u4f46\u662f\u5982\u679c\u5199 <code>decltype(*cmp1)</code> \u7684\u8bdd\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\uff0c\u6240\u4ee5\u4f20\u8fdb\u53bb\u7684\u5c31\u662f\u4e00\u4e2a\u5f15\u7528\u4e86\u3002</p> <p>\u5f53\u7136\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5199 <code>bool (&amp;)(const int &amp;, const int &amp;)</code> \u3002</p> <p></p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u53c8\u4f1a\u95ee\u4e86\u2014\u2014\u4e3a\u4ec0\u4e48\u7b2c 15 \u884c\u4f20\u9012\u5f15\u7528\u5199 <code>cmp1</code> \u800c\u4e0d\u662f <code>*cmp1</code> \u5440\uff01\u5176\u5b9e\u5199 <code>*cmp1</code> \u4e5f\u884c\uff0c\u4f46\u662f <code>cmp1</code> \u66f4\u81ea\u7136\u3002 <code>*cmp1</code> \u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u663e\u7136\u6211\u4eec\u4e0d\u80fd\u5bf9\u4e00\u4e2a\u51fd\u6570\u89e3\u5f15\u7528\uff0c\u56e0\u6b64\u6b64\u65f6 <code>cmp1</code> \u4f1a\u88ab\u9690\u5f0f\u8f6c\u6362\u6210\u51fd\u6570\u6307\u9488\uff0c\u89e3\u5f15\u7528\u4e4b\u540e\u5f97\u5230\u6307\u5411 <code>cmp1</code> \u7684\u4e00\u4e2a\u5de6\u503c\uff1b\u4e5f\u5c31\u662f\u8bf4 <code>*cmp1</code> \u548c <code>cmp1</code> \u5176\u5b9e\u8fd8\u662f\u4e00\u4e2a\u4e1c\u897f\u3002\u4e5f\u662f\u540c\u6837\u7684\u539f\u7406\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5199 <code>*********cmp1</code> \uff0c\u5176\u5b9e\u5c31\u662f\u53cd\u590d\u89e6\u53d1 function-to-pointer \u548c\u89e3\u5f15\u7528\u3002\u4f8b\u5982\uff1a</p> <p>\u8865\u5145 4.5</p> <p>\u51fd\u6570\u5bf9\u8c61\u9664\u4e86\u80fd\u591f\u7528\u6765\u5c06\u51fd\u6570\u5f53\u505a\u53c2\u6570\u4f20\u9012\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u6784\u9020\u95ed\u5305 (closure)\u3002\u95ed\u5305\u5728\u51fd\u6570\u4e4b\u5916\uff0c\u8fd8\u80fd\u591f\u901a\u8fc7\u6210\u5458\u53d8\u91cf\u4fdd\u5b58\u4e00\u4e9b\u72b6\u6001\uff1b\u4e14\u4e0d\u540c\u4e8e\u51fd\u6570\u5185\u90e8 static \u53d8\u91cf\u7684\u662f\uff0c\u62e5\u6709\u7edf\u4e00\u51fd\u6570\u4f53\u7684\u4e0d\u540c\u51fd\u6570\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u4fdd\u5b58\u4e0d\u540c\u7684\u72b6\u6001\u3002\u8fd9\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u540c\u4e00\u4e2a\u7c7b\u7684\u4e0d\u540c\u5b9e\u4f8b\u3002</p> <p>\u4e0d\u8fc7\uff0c\u8fd9\u5e76\u4e0d\u662f\u672c\u6587\u7684\u91cd\u70b9\u3002\u611f\u5174\u8da3\u7684\u5c0f\u670b\u53cb\u4eec\u53ef\u4ee5\u81ea\u884c\u8fdb\u4e00\u6b65\u63a2\u7d22\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u6765\u5230\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u5566\uff01</p> <p>\u6709\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570 <code>bool cmp(const int&amp; a, const int&amp; b) { return a &gt; b; }</code> \uff0c\u6211\u4eec\u53ef\u4ee5\u5199 <code>sort(v.begin(), v.end(), cmp);</code> \u6765\u7528 <code>cmp</code> \u8fdb\u884c\u6392\u5e8f\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u7528 <code>cmp</code> \u4f5c\u4e3a priority_queue \u7b49\u5bb9\u5668\u7684\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u5e94\u8be5\u600e\u4e48\u505a\u5462\uff1f</p> <p>priority_queue \u662f\u4e00\u4e2a\u6a21\u677f\u7c7b\uff1b\u5b83\u548c sort \u7684\u6700\u5927\u533a\u522b\u662f\uff0c\u4f20\u5165\u7684\u6bd4\u8f83\u51fd\u6570\u9700\u8981\u4f5c\u4e3a\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\u5b58\u5728\u5b9e\u4f8b\u5f53\u4e2d\u3002\u5173\u952e\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>template&lt;class T,\nclass Container = std::vector&lt;T&gt;,\nclass Compare = std::less&lt;typename Container::value_type&gt;\n&gt; class priority_queue {\npublic:\npriority_queue() : priority_queue(Compare(), Container()) { }\nexplicit priority_queue( const Compare&amp; compare )\n: priority_queue(compare, Container()) { }\npriority_queue( const Compare&amp; compare, Container&amp;&amp; cont );\n/* ... Many Other Constructors and Other Members ... */\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0cpriority_queue \u63a5\u6536 3 \u4e2a\u6a21\u677f\u53c2\u6570\uff0c\u5206\u522b\u89c4\u5b9a\u4e86\u5185\u90e8\u5143\u7d20\u7c7b\u578b\u3001\u5e95\u5c42\u5bb9\u5668\u7c7b\u578b\u548c\u6bd4\u8f83\u5668\uff1b\u5176\u4e2d\u5e95\u5c42\u5bb9\u5668\u7c7b\u578b\u9ed8\u8ba4\u4e3a <code>std::vector&lt;T&gt;</code> \uff0c\u800c\u6bd4\u8f83\u5668\u53ef\u4ee5\u8ba4\u4e3a\u9ed8\u8ba4\u4e3a <code>std::less&lt;T&gt;</code> \u3002</p> <p>\u7b2c 9 \u884c\u7684\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6bd4\u8f83\u5668\u5bf9\u8c61\u548c\u4e00\u4e2a\u5bb9\u5668\u5bf9\u8c61\uff0c\u5b83\u4eec\u5c06\u4f1a\u4f5c\u4e3a\u6784\u9020\u51fa\u7684\u5b9e\u4f8b\u7684\u6210\u5458\u3002</p> <p>\u5f53\u6211\u4eec\u5199\u7c7b\u4f3c <code>priority_queue&lt;int&gt; pq;</code> \u7684\u4ee3\u7801\u65f6\uff0c\u6211\u4eec\u663e\u5f0f\u6307\u5b9a <code>T</code> \u4e3a <code>int</code> \uff0c\u5176\u4ed6\u53c2\u6570\u4e3a\u9ed8\u8ba4\u503c\uff0c\u5e76\u8c03\u7528\u4e86\u7b2c 6 \u884c\u7684\u6784\u9020\u51fd\u6570\uff1b\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u8c03\u7528\u4e86 <code>Container</code> \u548c <code>Compare</code> \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u8c03\u7528\u7b2c 9 \u884c\u7684\u6784\u9020\u51fd\u6570\uff0c\u4ece\u800c\u6784\u9020\u51fa\u4e86\u672c\u5b9e\u4f8b\u7684\u6bd4\u8f83\u5668\u5bf9\u8c61\u548c\u5bb9\u5668\u5bf9\u8c61\u3002</p> <p>\u5f53\u6211\u4eec\u5199\u7c7b\u4f3c <code>priority_queue&lt;int, vector&lt;int&gt;, decltype(lambda)&gt; pq(lambda);</code> \u7684\u4ee3\u7801\u65f6\uff08 <code>lambda</code> \u662f\u4e00\u4e2a lambda \u8868\u8fbe\u5f0f\uff09\uff0c\u5176\u5b9e\u5c31\u662f\u663e\u5f0f\u5730\u8bf4\u660e\u4e86\u6a21\u677f\u53c2\u6570\uff0c\u5e76\u8c03\u7528\u7b2c 7 \u884c\u7684\u6784\u9020\u51fd\u6570\uff0c\u5c06\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u4f5c\u4e3a\u672c\u5b9e\u4f8b\u7684\u6bd4\u8f83\u5668\u5bf9\u8c61\u3002\u5bb9\u5668\u5bf9\u8c61\u4ecd\u7136\u662f\u8c03\u7528\u5bf9\u5e94\u6784\u9020\u51fd\u6570\u6784\u9020\u7684\u3002</p> <p>\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u6709\u5f88\u591a\u79cd\u7ed9 priority_queue \u7b49\u5bb9\u5668\u4f20\u6bd4\u8f83\u5668\u7684\u65b9\u5f0f\uff01</p> <p></p> <p>\u8865\u5145 4.6</p> <p>\u4e0a\u56fe\u4e2d (4) \u7684\u5199\u6cd5\u4f1a\u62a5\u8fd9\u6837\u7684\u7f16\u8bd1\u9519\u8bef\uff1a  \u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u91cc <code>_Compare</code> \u5373 <code>decltype(func)</code> \u5373 <code>bool (const int &amp;, const int &amp;)</code> \u662f\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\uff0c\u6211\u4eec\u4e0d\u80fd\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u3002</p> <p></p>"},{"location":"cpp/%E7%90%86%E8%A7%A3%20STL%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1/#5-\u603b\u7ed3","title":"5 \u603b\u7ed3","text":"<p>\u6211\u4eec\u56de\u987e\u6587\u9996\u63d0\u51fa\u7684\u51e0\u4e2a\u95ee\u9898\uff0c\u5176\u5b9e\u5b83\u4eec\u5faa\u5e8f\u6e10\u8fdb\uff0c\u6784\u6210\u4e86\u8fd9\u7bc7\u6587\u7ae0\u7684\u8109\u7edc\u3002\u6211\u4eec\u6807\u6ce8\u51fa\u5b83\u4eec\u5206\u522b\u5f15\u51fa\u4e86\u4ec0\u4e48\u7279\u6027\uff0c\u5e2e\u52a9\u5927\u5bb6\u56de\u987e\u548c\u590d\u4e60\uff1a</p> <ol> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>for (auto &amp;a : c)</code> \u7684\u65b9\u5f0f\u904d\u5386\u8bf8\u5982 vector, set, unordered_set \u7b49\u7684\u5bb9\u5668\u3002\u8fd9\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\uff08\u4ec0\u4e48\u662f\u8fed\u4ee3\u5668\uff09</li> <li>\u6211\u4eec\u77e5\u9053 map \u662f\u80fd\u591f\u7528\u4e0a\u8ff0\u65b9\u5f0f\u904d\u5386\u7684\u3002\u5bf9\u4e8e <code>map&lt;int, int&gt; m;</code> \uff0c\u6211\u4eec\u4f7f\u7528 <code>sort(m.begin(), m.end());</code> \u53ef\u4ee5\u5417\uff1f\uff08\u8fed\u4ee3\u5668\u7684\u5206\u7c7b\uff09</li> <li><code>sort</code> \u7684\u51fd\u6570\u7b7e\u540d\u662f\u4ec0\u4e48\u6837\u7684\uff1f\u5373\uff0c <code>template &lt;</code><code>-1-</code><code>&gt; std::sort(</code><code>-2-</code><code>)</code> \u7684 -1- \u548c -2- \u4e24\u5904\u662f\u4ec0\u4e48\uff1f\u5177\u4f53\u800c\u8a00\uff1a<ol> <li>\u4e3a\u4ec0\u4e48\u5b83\u65e2\u80fd\u5bf9 vector \u8fd9\u6837\u7684\u5bb9\u5668\u8fdb\u884c\u6392\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u4f20\u7edf\u7684\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff1f\uff08\u4f60\u7684\u8fed\u4ee3\u5668\u4f55\u5fc5\u662f\u8fed\u4ee3\u5668\uff1f\u2014\u2014\u53ea\u8981\u5b83\u6709 <code>++</code> \u548c <code>*</code> \u4e4b\u7c7b\u7684\u57fa\u672c\u529f\u80fd\uff0c\u5b83\u5c31\u53ef\u4ee5\u88ab\u5f53\u6210\u8fed\u4ee3\u5668\u7528\uff09</li> <li>\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u5982\u4f55\u9002\u914d\u6709\u548c\u6ca1\u6709\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u7684\u4e24\u79cd\u60c5\u51b5\u7684\uff1f\uff08\u5f15\u5165\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u7684\u5b9e\u73b0\uff09</li> </ol> </li> <li>\u6709\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570 <code>bool cmp(const int&amp; a, const int&amp; b) { return a &gt; b; }</code> \uff0c\u6211\u4eec\u53ef\u4ee5\u5199 <code>sort(v.begin(), v.end(), cmp);</code> \u6765\u7528 <code>cmp</code> \u8fdb\u884c\u6392\u5e8f\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u7528 <code>cmp</code> \u4f5c\u4e3a priority_queue \u7b49\u5bb9\u5668\u7684\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u5e94\u8be5\u600e\u4e48\u505a\u5462\uff1f\uff08\u65e2\u7136\u8fed\u4ee3\u5668\u4e0d\u4e00\u5b9a\u662f\u8fed\u4ee3\u5668\uff0c\u90a3\u51fd\u6570\u4e00\u5b9a\u662f\u51fd\u6570\u5417\uff1f\u2014\u2014\u53ea\u8981\u5b83\u6709 <code>()</code> \uff0c\u5b83\u5c31\u53ef\u4ee5\u88ab\u5f53\u6210\u51fd\u6570\u7528\uff09</li> </ol> <p></p>"},{"location":"cpp/%E7%90%86%E8%A7%A3%20STL%20-%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1/#references","title":"References","text":"<ul> <li>https://stackoverflow.com/questions/5606973/understanding-iterators-in-the-stl/5607206#5607206</li> <li>https://en.cppreference.com/w/cpp/language/range-for#Explanation</li> <li>https://en.cppreference.com/w/cpp/named_req/Iterator</li> <li>https://stackoverflow.com/a/22444975/14430730</li> <li>https://en.cppreference.com/w/cpp/utility/functional/greater</li> <li>https://github.com/llvm/llvm-project/blob/e7fc254875ca9e82b899d5354fae9b5b779ff485/libcxx/include/__algorithm/sort.h#L264</li> <li>https://github.com/gcc-mirror/gcc/blob/d9375e490072d1aae73a93949aa158fcd2a27018/libstdc%2B%2B-v3/include/bits/stl_algo.h#L1950</li> <li>https://cppdepend.com/blog/?p=729</li> <li>https://en.cppreference.com/w/cpp/language/functions</li> <li>https://en.cppreference.com/w/cpp/utility/functional</li> <li>http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/n4861.pdf</li> </ul>"},{"location":"cpp/cpp_restart/","title":"C++ \u5b66\u4e60","text":"<p> \u7ea6 917 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>\u6211\u5728\u9ad8\u4e2d\u9636\u6bb5\u6253 OI \u7684\u65f6\u5019\u7b2c\u4e00\u6b21\u63a5\u89e6\u4e86 C++\uff1b\u90a3\u65f6\u5bf9 C++ \u7684\u638c\u63e1\u5dee\u4e0d\u591a\u5c31\u662f C + cin/cout + sort \u4e86\u3002\u5927\u4e00\u4e0b\u9009\u4e86 oop\uff0c\u6211\u628a Thinking in C++ \u5b8c\u6574\u5730\u8bfb\u4e86\u4e00\u904d\uff0c\u5bf9 C++\uff08\u5c24\u5176\u662f\u9762\u5411\u5bf9\u8c61\uff09\u6709\u4e86\u57fa\u672c\u7684\u8ba4\u8bc6\uff1b\u5728\u6b64\u540e\u51fa\u4e8e\u81ea\u5df1\u7684\u7231\u597d\u3001\u5de5\u7a0b\u7684\u9700\u8981\u3001\u9762\u8bd5\u7684\u8003\u5bdf\uff0c\u4ee5\u53ca\u548c 27rabbit \u7b49\u7ecf\u8425\u9c7c\u8086\u65f6\u7684\u5b66\u4e60\uff0c\u5bf9 C++ \u7684\u8ba4\u8bc6\u5f00\u59cb\u6df1\u5165\u8d77\u6765\u3002\u6b64\u65f6\u518d\u53bb\u53cd\u601d\u81ea\u5df1\u7684 C++ \u5b66\u4e60\uff0c\u611f\u89c9\u4ecd\u7136\u6709\u8bb8\u591a\u6ca1\u6709\u5b8c\u5168\u6216\u8005\u5b8c\u6574\u7406\u89e3\u7684\u5730\u65b9\uff0c\u5b66\u4e60\u8def\u5f84\u4e5f\u5b58\u5728\u4e00\u5b9a\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u6211\u60f3\u8981\u5c55\u5f00\u4e00\u6b21\u91cd\u65b0\u5b66\u4e60\u548c\u6574\u7406\u3002</p> <p>\u867d\u7136\u4e0d\u8bb0\u5f97\u8fd9\u4e2a\u6982\u5ff5\u662f\u4ece\u54ea\u91cc\u542c\u6765\u7684\u4e86\uff0c\u4f46\u662f\u6211\u8ba4\u4e3a\u5b66\u4e60\u4e00\u95e8\u77e5\u8bc6\u7684\u91cd\u8981\u8282\u70b9\u662f\u300c\u81ea\u4e3e\u300d\u3002\u653e\u5230 C++ \u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u4e86\u89e3\u5230\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5\u5e76\u5e0c\u671b\u5b66\u4e60\u5b83\u65f6\uff0c\u80fd\u6bd4\u8f83\u5bb9\u6613\u5730\u6839\u636e standard \u6216\u8005 c++ reference \u7406\u89e3\u5b83\u7684\u5404\u79cd\u4fe1\u606f\uff0c\u800c\u4e0d\u9700\u8981\u53bb\u641c\u7d22\u5f15\u64ce\u641c\u7d22\u5404\u79cd\u8bb2\u89e3\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7b97\u662f\u5b8c\u6210\u4e86 C++ \u5b66\u4e60\u7684\u300c\u81ea\u4e3e\u300d\u3002</p> <p>\u6211\u8ba4\u4e3a\u8fd9\u6837\u7684\u80fd\u529b\u6bd4\u8f83\u91cd\u8981\u7684\u539f\u56e0\u662f\uff1a\u9996\u5148\u8fd9\u79cd\u80fd\u529b\u8bf4\u660e\u4e86\u6211\u4eec\u5bf9\u4e8e\u57fa\u7840\u6982\u5ff5\u7684\u7406\u89e3\u662f\u8fbe\u5230\u4e86\u57fa\u672c\u6c34\u5e73\u7684\uff0c\u540c\u65f6\u770b\u300c\u4e00\u624b\u300d\u7684\u8d44\u6599\u6548\u7387\u4e5f\u4f1a\u9ad8\u5f88\u591a\u3002\u6211\u8ba4\u4e3a\u8fbe\u5230\u300c\u81ea\u4e3e\u300d\u7684\u6c34\u5e73\u5e76\u4e0d\u592a\u96be\uff0c\u81f3\u5c11\u6211\u8ba4\u4e3a\u5728\u5b66\u6821\u5b89\u6392\u7684\u8bfe\u7a0b\u65f6\u95f4\u5185\u8db3\u4ee5\u8fbe\u5230\u4e86\u3002\u6240\u4ee5\u6211\u4e5f\u5c1d\u8bd5\u8bc1\u660e\u4e00\u4e0b\u8fd9\u79cd\u8ba4\u8bc6\u2014\u2014\u4ece\u81ea\u5df1\u4f53\u9a8c\u548c\u6574\u7406\u4e00\u904d\u5f00\u59cb\uff01</p> <p>Danger</p> <p>\u672c\u6587\u8fd8\u6ca1\u6709\u6b63\u5f0f\u542f\u52a8\uff01\u6211\u6b63\u5728\u5c55\u5f00\u4e00\u4e9b\u57fa\u672c\u7684\u9605\u8bfb\u548c\u6574\u7406\uff0c\u5e76\u5c06\u770b\u5230\u7684\u5404\u79cd\u4e1c\u897f\u8bb0\u5f55\u5728\u5bfc\u822a\u4e0b\u7684\u5404\u79cd\u300cnotes\u300d\u91cc\u3002</p>"},{"location":"cpp/cpp_restart/#\u5185\u5bb9\u5b89\u6392","title":"\u5185\u5bb9\u5b89\u6392","text":"<p>\u521d\u6b65\u60f3\u7684\u5185\u5bb9\uff08\u5212\u5220\u9664\u7ebf\u7684\u662f\u53ef\u80fd\u5ef6\u540e\u7684\u5185\u5bb9\uff09\uff1a</p> <p>\uff08\u5199\u597d\u4e86\u7684\u5c31\u6253\u52fe\uff09</p> <ol> <li> C++ \u8bde\u751f</li> <li> \u7f16\u7a0b\u8303\u5f0f</li> <li> \u5f15\u5165 oop\uff08list &amp; shape\uff09</li> <li> \u7c7b\uff1a\u6210\u5458\u3001\u6784\u9020\u4e0e\u6790\u6784 (defaulted and deleted functions)\u3001inline functions\u3001private &amp; public &amp; friend &amp; protected\u3001\u7ee7\u627f\uff08\u591a\u7ee7\u627f\u3001\u51fd\u6570\u91cd\u5199\uff09\u3001\u62bd\u8c61\u7c7b<ul> <li>Properties of classesclass.prop \u6682\u65f6\u8df3\u8fc7\u4e86</li> </ul> </li> <li> \u4ece\u7c7b\u5f15\u51fa default arguments, <code>operator =</code> overload\uff0c\u7136\u540e\u5f15\u51fa\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d</li> <li> \u8ba8\u8bba\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u548c <code>explicit</code>\uff0c\u8ba8\u8bba copy elision</li> <li> \u4ece\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5f15\u51fa\u5f15\u7528</li> <li> \u7c7b\uff1a\u865a\u51fd\u6570\u3001\u591a\u7ee7\u627f\uff08\u865a\u7ee7\u627f\uff09</li> <li> \u7c7b\uff1anew &amp; delete, const \u548c static \u6210\u5458\u51fd\u6570\u3001mutable \u3001pointers to members\u3001final and override</li> <li> \u4ece const \u5f15\u51fa UB</li> <li> \u5f15\u5165\u6a21\u677f</li> <li> STL</li> </ol>"},{"location":"cpp/cpp_restart/#topics","title":"Topics","text":"<p>\uff08\u5df2\u7ecf\u5b89\u6392\u5728\u4e0a\u9762\u7684\u5c31\u6253\u52fe\u4e86\uff09</p> <ul> <li> \u7c7b (1979, C with Classes)\uff1a\u7c7b\u4e0e\u6210\u5458\u3001\u7ee7\u627f\u3001private &amp; public\u3001\u53cb\u5143\u3001inline functions</li> <li> default arguments, <code>operator =</code> overload (1979, C with Classes)</li> <li> \u7c7b (1985, Release 1.0)\uff1a\u865a\u51fd\u6570\u3001new &amp; delete\u3001<code>::</code></li> <li> \u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d (1985, Release 1.0)</li> <li> I/O stream (1985, Release 1.0; C++98)</li> <li> string (1985, Release 1.0; C++98)</li> <li> \u7c7b (1989, Release 2.0)\uff1a\u591a\u7ee7\u627f\u3001\u62bd\u8c61\u7c7b\u3001<code>const</code> \u548c <code>static</code> \u6210\u5458\u51fd\u6570\u3001\u6bcf\u4e2a\u7c7b\u7684 new &amp; delete\u3001protected\u3001pointers to members</li> <li> namespace (1990, ARM)</li> <li> exception (1990, ARM)</li> <li> \u6a21\u677f (1990, ARM)</li> <li> \u7c7b (C++98)\uff1amutable</li> <li> \u7c7b (C++98)\uff1aRTTI\u3001covariant return types</li> <li> cast operators (C++98)</li> <li> bool (C++98)</li> <li> \u6a21\u677f (C++98)\uff1atemplate instantiations\u3001member templates</li> <li> STL (C++98)\uff1acontainers, iterators, algorithms, function objects (<code>std::function</code> C++11)</li> <li> \u521d\u59cb\u5316\uff1avalue initialization (C++03)\u3001 list initialization (C++11)\u3001brace-or-equal initializers (C++11)\u3001designated initialization (C++20)</li> <li> \u7c7b (C++11)\uff1adefaulted and deleted functions</li> <li> \u53f3\u503c\u5f15\u7528\u548c\u79fb\u52a8\u8bed\u4e49 (C++11)</li> <li> \u7c7b (C++11)\uff1amove constructors and move assignment operators\u3001delegating and inherited constructors</li> <li> smart pointers (C++11)</li> <li> lambda expressions (C++11); generic lambda (C++14); capture <code>*this</code> (C++17)</li> <li> auto (C++11); return type deduction (C++14)</li> <li> range-based for loop (C++11); init-statement in range-for (C++20)</li> <li> type aliases (C++11)</li> <li> alias template (C++11)</li> <li> trailing return type (C++11)</li> <li> type traits (C++11)</li> <li> constexpr (C++11); consteval, constinit (C++20)</li> <li> \u4e00\u4e9b\u9057\u7559\u95ee\u9898 (C++11): final, override, nullptr</li> <li> concurrency support (C++11), memory model (C++11), thread local storage (C++11)</li> <li> variable template (C++14)</li> <li> string_view (C++17)</li> <li> inline variables (C++17)</li> <li> structured bindings (C++17)</li> <li> initializers for if and switch (C++17)</li> <li> Order of evaluation</li> <li> <code>std::tuple</code>, <code>std::any</code>, <code>std::optional</code>, <code>std::variant</code> (C++17)</li> <li> 3-way comparison (C++20)</li> <li> signed integers are 2's complement (C++20)</li> <li> modules (C++20)</li> <li> UB</li> </ul>"},{"location":"cpp/cpp_restart/1_birth/","title":"1 C++ \u7684\u8bde\u751f","text":"<p> \u7ea6 1259 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>C++ \u4ed6\u7239 Bjarne Stroustrup \u4e0a\u5b66\u7684\u65f6\u5019\u7528 Simula \u5199\u4e86\u4e2a\u6a21\u62df\u5668\u3002\u4ed6\u5199\u5f97\u5341\u5206\u5f00\u5fc3\uff0c\u56e0\u4e3a Simula \u63d0\u4f9b\u4e86 \u7c7b (class) \u7684\u6982\u5ff5\uff1b\u8fd9\u4f7f\u5f97\u4ed6\u80fd\u628a\u5177\u4f53\u95ee\u9898\u4e2d\u7684\u6982\u5ff5\u76f4\u63a5\u6620\u5c04\u5230\u8bed\u8a00\u7ed3\u6784\u4e2d\uff0c\u4ece\u800c\u63d0\u4f9b\u975e\u5e38\u597d\u7684\u53ef\u8bfb\u6027\u3002</p> <p>\u8fd9\u91cc\u63d0\u5230\u7684\u300c\u7c7b\u300d\u4f1a\u5728\u4e0b\u4e00\u8282\u5177\u4f53\u8ba8\u8bba\uff1b\u300c\u534f\u7a0b\u300d\u7684\u8ba8\u8bba\u53ef\u80fd\u4f1a\u66f4\u665a\u4e00\u4e9b\u3002</p> <p>\u4ed6\u63d0\u5230\uff0cSimula \u7684\u7c7b\u3001\u534f\u7a0b (coroutine) \u548c\u5e7f\u6cdb\u6df1\u5165\u7684\u7c7b\u578b\u68c0\u67e5\u975e\u5e38\u6709\u52a9\u4e8e\u7f16\u5199\u5927\u89c4\u6a21\u7684\u7a0b\u5e8f\uff1b\u8fd9\u4e9b\u7279\u6027\u4f7f\u5f97\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u5e76\u6ca1\u6709\u968f\u7740\u4ee3\u7801\u89c4\u6a21\u589e\u52a0\u800c\u964d\u4f4e\u3002\u6574\u4e2a\u7a0b\u5e8f\u66f4\u50cf\u662f\u82e5\u5e72\u5c0f\u7a0b\u5e8f\u7684\u7ec4\u5408\uff0c\u56e0\u800c\u66f4\u5bb9\u6613\u5199\u3001\u7406\u89e3\u548c\u6392\u9664\u9519\u8bef\u3002</p> <p>\u4e0d\u8fc7\uff0cSimula \u7684\u6027\u80fd\u5f88\u5dee\u3002\u5176\u7f16\u8bd1\u548c\u94fe\u63a5\u5f88\u6162\uff0c\u8fd0\u884c\u65f6\u7684\u8868\u73b0\u4e5f\u56e0\u4e3a\u5e7f\u6cdb\u5b58\u5728\u7684\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u3001\u52a8\u6001\u5185\u5b58\u5206\u914d\u3001\u5783\u573e\u56de\u6536 (GC) \u7b49\u7b49\u800c\u975e\u5e38\u5dee\u3002\u8fd9\u4f7f\u5f97 BS \u4e0d\u5f97\u4e0d\u7528 BCPL \u91cd\u65b0\u5199\u4e86\u4e00\u904d\u4ed6\u7684\u6a21\u62df\u5668\uff1b\u4ece\u800c\u7ed9\u4ed6\u7559\u4e0b\u4e86\u6df1\u523b\u7684\u5fc3\u7406\u9634\u5f71\u3002\u4ed6\u53d1\u8a93\uff1a\u300c\u5728\u6ca1\u6709\u5408\u9002\u5de5\u5177\u7684\u60c5\u51b5\u4e0b\u7edd\u4e0d\u53bb\u51b2\u51fb\u4e00\u4e2a\u95ee\u9898\u3002\u300d</p> <p>\u5173\u4e8e\u4ec0\u4e48\u662f\u300c\u5408\u9002\u7684\u5de5\u5177\u300d\uff0c\u4ed6\u4e3b\u5f20\u4e09\u4e2a\u65b9\u9762\uff1a</p> <ol> <li>\u7c7b\u4f3c Simula \u7684\u5bf9\u7a0b\u5e8f\u7ec4\u7ec7\u7684\u652f\u6301\u3002\u4ed6\u5e0c\u671b\u4e00\u4e2a\u597d\u7684\u5de5\u5177\u5e94\u8be5\u6709\u7c7b\u4f3c\u300c\u7c7b\u300d\u7684\u5206\u5c42\u7ed3\u6784\uff0c\u4ece\u800c\u80fd\u591f\u63a5\u8fd1\u5177\u4f53\u95ee\u9898\u4e2d\u7684\u6982\u5ff5\uff0c\u5e76\u5c06\u7a0b\u5e8f\u5207\u5206\u4e3a\u72ec\u7acb\u7684\u5355\u5143\uff1b\u540c\u65f6\u5e0c\u671b\u6709\u826f\u597d\u7684\u7c7b\u578b\u68c0\u67e5\u3002\u8fd9\u6837\u7684\u8bed\u8a00\u7f16\u5199\u51fa\u6765\u7684\u7a0b\u5e8f\u624d\u80fd\u9002\u5e94\u8fc5\u901f\u589e\u957f\u7684\u89c4\u6a21\u548c\u590d\u6742\u6027\u3002</li> <li>\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u8fd0\u884c\u5e94\u5f53\u50cf BCPL \u4e00\u6837\u9ad8\u6548\u3002\u4ed6\u5e0c\u671b\u5404\u79cd\u4f18\u96c5\u7684\u7279\u6027\u76f8\u5bf9\u4e8e\u6734\u7d20\u7684\u5199\u6cd5\u4e0d\u5e94\u4ed8\u51fa\u989d\u5916\u7684\u8fd0\u884c\u65f6\u95f4\u548c\u7a7a\u95f4\u4f5c\u4e3a\u4ee3\u4ef7\u3002\u540c\u65f6\u4e5f\u5e94\u5f53\u65b9\u4fbf\u548c\u5176\u4ed6\u8bed\u8a00\u5199\u6210\u7684\u5355\u5143\u94fe\u63a5\u5728\u4e00\u8d77\u3002</li> <li>\u5e94\u5f53\u4fdd\u8bc1\u826f\u597d\u7684\u53ef\u79fb\u690d\u6027\u3002</li> </ol> <p>\u5f88\u5feb\uff0cBS \u5728 1979 \u5e74\u5c31\u9047\u5230\u4e86\u300c\u6ca1\u6709\u5408\u9002\u5de5\u5177\u300d\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u4ed6\u5f00\u59cb\u6309\u7167\u4e0a\u8ff0\u89c2\u70b9\u5f00\u53d1\u4e00\u4e2a\u5de5\u5177\u3002\u4e3a\u4e86\u4e0a\u8ff0\u300c\u53ef\u79fb\u690d\u6027\u300d\uff0c\u4ed6\u81ea\u7136\u4e0d\u4f1a\u53bb\u5f00\u53d1\u4e00\u4e2a\u5d2d\u65b0\u7684\u8bed\u8a00\uff1b\u4ed6\u9009\u62e9\u57fa\u4e8e\u67d0\u79cd\u5df2\u7ecf\u5b58\u5728\u7684\u8bed\u8a00\u5f00\u53d1\u4e00\u5957\u9884\u5904\u7406\u5668\uff0c\u4ece\u800c\u5c06\u652f\u6301\u4e86\u7c7b\u7684\u8bed\u8a00\u53d8\u4f53\u5904\u7406\u6210\u5bf9\u5e94\u8bed\u8a00\u672c\u8eab\u5c31\u63a5\u53d7\u7684\u7a0b\u5e8f\u3002</p> <p>\u9009\u62e9\u54ea\u95e8\u8bed\u8a00\u5462\uff1fBS \u5728\u5404\u79cd\u7cfb\u7edf\u7a0b\u5e8f\u7f16\u7a0b\u8bed\u8a00\u4e2d\u6bd4\u8f83\u559c\u6b22 C\uff0c\u56e0\u4e3a\u5b83\u7075\u6d3b\uff08\u901a\u7528\uff09\u3001\u9ad8\u6548\u3001\u5404\u79cd\u5e73\u53f0\u90fd\u6709 C \u7f16\u8bd1\u5668\u3001\u53ef\u79fb\u690d\u3002\u4ed6\u540e\u6765\u6307\u51fa\uff0c\u5e0c\u671b C++ \u4e00\u65b9\u9762\u80fd\u591f\u50cf C \u4e00\u6837\u63a5\u8fd1\u673a\u5668\uff0c\u53e6\u4e00\u65b9\u9762\u53c8\u80fd\u63a5\u8fd1\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002</p> <p>Note</p> <p>\u6211\u753b\u4e86\u5f20\u56fe\uff01</p> <p></p> <p>\u5bb9\u6613\u7406\u89e3\uff0c\u968f\u7740\u62bd\u8c61\u7a0b\u5ea6\u7684\u589e\u52a0\uff0c\u7a0b\u5e8f\u7684\u6027\u80fd\u5f88\u6709\u53ef\u80fd\u53d7\u5230\u635f\u5931\u3002\u4f8b\u5982 Python \u4e2d\u80fd\u4fdd\u5b58\u4efb\u610f\u6574\u6570\u7684 bignum \u7684\u6027\u80fd\u4e00\u5b9a\u4e0d\u4f1a\u4f18\u4e8e CPU \u539f\u751f\u652f\u6301\u7684\u6574\u578b\u3002\u800c C++ \u7684\u671f\u671b\u5219\u662f\uff0c\u628a\u63e1\u8fd9\u91cc\u7684\u300cor equal\u300d\uff0c\u5373\u5728\u4e0d\u635f\u5931\u6027\u80fd\u7684\u524d\u63d0\u4e0b\u63d0\u4f9b\u5fc5\u8981\u7684\u6570\u636e\u62bd\u8c61\u3002</p> <p>\u4e8e\u662f\uff0c\u4ed6\u8bbe\u8ba1\u51fa\u4e86 C with Classes\uff08\u5176\u4e2d\u7684\u540d\u5b57\u300cclass\u300d\u6765\u81ea Simula\uff09\uff0c\u5e76\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u9884\u5904\u7406\u7a0b\u5e8f Cpre\uff081981/12 \u9996\u6b21\u53d1\u5e03\uff09\uff0c\u6765\u5c06 C with Classes \u5904\u7406\u6210 C\u3002</p> <p>BS \u5230 1982 \u5e74\u7684\u65f6\u5019\u8ba4\u4e3a\uff0cC with Classes \u662f\u6210\u529f\u7684\uff0c\u4f46\u662f\u53c8\u4e0d\u592a\u6210\u529f\uff1a\u5b83\u786e\u5b9e\u5f88\u6709\u7528\uff0c\u800c\u4e14\u6709\u4e0d\u5c11\u4eba\u7528\uff0c\u4ece\u800c\u4e5f\u80fd\u652f\u6301\u7ef4\u62a4\u6210\u672c\uff1b\u4f46\u662f\u7528\u7684\u4eba\u53c8\u4e0d\u591f\u591a\uff0c\u56e0\u6b64\u4e0d\u8db3\u4ee5\u652f\u6301\u4e00\u4e2a\u5f00\u53d1\u7ec4\u7ec7\u3002\u8fd9\u6837\u7684\u60c5\u51b5\u4f1a\u4f7f\u5f97 BS \u672c\u4eba\u88ab\u56f0\u5728\u8fd9\u91cc\uff0c\u56e0\u6b64\u4ed6\u51b3\u5b9a\u57fa\u4e8e\u5728 C with Classes \u7684\u7ecf\u9a8c\uff0c\u5f00\u53d1\u4e00\u79cd\u65b0\u7684\u3001\u66f4\u597d\u7684\u8bed\u8a00\u3002\u7ecf\u8fc7\u4e00\u4e9b\u8ba8\u8bba\u548c\u53d1\u5c55\uff0c\u8fd9\u95e8\u8bed\u8a00\u88ab\u547d\u540d\u4e3a C++\u3002</p> <p>BS  \u8ba8\u8bba\u4e86\u300c\u7528\u6237\u4f1a\u662f\u54ea\u4e9b\u4eba\u300d\u300c\u4ed6\u4eec\u4f7f\u7528\u4ec0\u4e48\u6837\u7684\u7cfb\u7edf\u300d\u300c\u4f5c\u8005\u5982\u4f55\u907f\u514d\u8d1f\u8d23\u63d0\u4f9b\u5de5\u5177\u300d\uff0c\u4ece\u800c\u8ba8\u8bba\u300c\u8fd9\u4e9b\u95ee\u9898\u5c06\u5982\u4f55\u5f71\u54cd\u8bed\u8a00\u7684\u5b9a\u4e49\u300d\u3002\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u7684\u7ed3\u8bba\u662f\uff0cC++ \u4e0d\u80fd\u5e26\u6709\u7279\u522b\u590d\u6742\u7684\u7f16\u8bd1\u7684\u6216\u8fd0\u884c\u65f6\u7684 feature\uff0c\u540c\u65f6\u5fc5\u987b\u80fd\u4f7f\u7528\u539f\u6765\u7684\u94fe\u63a5\u5668\uff0c\u5e76\u4e14\u4ea7\u751f\u7684\u4ee3\u7801\u4e00\u5f00\u59cb\u5c31\u8981\u548c C \u7684\u4e00\u6837\u9ad8\u6548\u3002</p> <p>1982~83 \u5e74\uff0cBS \u8bbe\u8ba1\u4e86 Cfront\u3002\u5b83\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u7f16\u8bd1\u5668\u524d\u7aef\uff0c\u8d1f\u8d23\u5bf9 C++ \u7a0b\u5e8f\u8fdb\u884c\u8bed\u6cd5\u548c\u8bed\u4e49\u7684\u5206\u6790\u548c\u68c0\u67e5\uff0c\u5728 1984/8 \u9996\u6b21\u53d1\u5e03 (Release 1.0)\u3002\u6e90\u4ee3\u7801\u4f1a\u5148\u901a\u8fc7\u9884\u5904\u7406\u5668 Cpp \u5b8c\u6210\u9884\u5904\u7406\uff0c\u7136\u540e\u4ea4\u7ed9 Cfront \u68c0\u67e5\u5e76\u751f\u6210 C \u4ee3\u7801\u3002\u751f\u6210 C \u4ee3\u7801\u662f\u4e3a\u4e86\u53ef\u79fb\u690d\u6027\u7684\u4fdd\u8bc1\u3002</p> <p>\u4ece\u6b64\u4e4b\u540e\uff0cC++ \u9010\u6b65\u53d1\u5c55\uff0c\u5728 1989 \u5e74\u53d1\u5e03\u4e86 Release 2.0\uff1b1991 \u5e74\u53d1\u5e03\u4e86 Release 3.0\u30021990 \u5e74\u5f00\u59cb\uff0cC++ \u4e5f\u8d70\u4e0a\u4e86\u6807\u51c6\u5316\u4e4b\u8def\uff1bC++98 \u6210\u4e3a\u4e86\u7b2c\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u53d1\u5e03\u3002\u6b64\u540e\uff0cC++98, C++03, C++11, C++14, C++17, C++20 \u9010\u6b65\u8fed\u4ee3\uff0c\u4e0b\u4e00\u4ee3\u6807\u51c6 C++23 \u4e5f\u4f1a\u5728\u4e0d\u4e45\u540e\u53d1\u5e03\u3002</p> <p>\u76f8\u5173\u94fe\u63a5</p> <ul> <li>History of C++ | cppreference</li> <li>C++ # History | wikipedia</li> </ul>"},{"location":"cpp/cpp_restart/2_paradigm/","title":"2 \u7f16\u7a0b\u8303\u5f0f | Programming Paradigm","text":"<p> \u7ea6 1279 \u4e2a\u5b57  14 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Takeaway</p> <p>\u4ece\u6c47\u7f16\u4e0e C/C++ \u4ee3\u7801\u7684\u5bf9\u6bd4\u4e2d\u7406\u89e3\u7ed3\u6784\u5316\u7f16\u7a0b\uff0c\u8fdb\u800c\u7406\u89e3\u7f16\u7a0b\u8303\u5f0f\u4e0e\u62bd\u8c61\u3002</p> <p>\u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u63d0\u5230\u4e86 \u7c7b (class)\u3002\u5728\u7f16\u7a0b\u8bed\u8a00\u7684\u4e16\u754c\u91cc\uff0c\u8fd9\u4e2a\u8bcd\u6765\u81ea\u4e8e \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 (OOP, Object-Oriented Programming)\u3002OOP \u662f\u4e00\u79cd \u7f16\u7a0b\u8303\u5f0f (programming paradigm)\u3002\u5728\u8ba8\u8bba OOP \u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u804a\u804a\u7f16\u7a0b\u8303\u5f0f\u3002</p> <p>C++ \u662f\u4e00\u79cd\u591a\u8303\u5f0f (multi-paradigm) \u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u5305\u542b\u4e86\u8bb8\u591a\u79cd\u7f16\u7a0b\u8303\u5f0f\u7684\u7279\u6027\u3002</p> <p>\u7f16\u7a0b\u8303\u5f0f\u8bf4\u660e\u4e86\u7f16\u7a0b\u8bed\u8a00\u7684\u4e0d\u540c\u7279\u70b9\uff1b\u5206\u7c7b\u4f9d\u636e\u5305\u62ec\u8bed\u8a00\u7684\u4ee3\u7801\u7ec4\u7ec7\u65b9\u5f0f\u3001\u8fd0\u884c\u65f6\u6a21\u578b\u3001\u8bed\u6cd5\u98ce\u683c\u7b491\u3002\u6211\u4eec\u63d0\u5230\u7684 OOP\uff0c\u5c31\u662f\u6309\u7167\u300c\u4ee3\u7801\u7ec4\u7ec7\u65b9\u5f0f\u300d\u5206\u7c7b\u7684\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u7279\u70b9\u3002</p> <p>\u4e3a\u4e86\u8ba9\u5927\u5bb6\u66f4\u597d\u5730\u611f\u53d7\u5230\u4f55\u4e3a\u300c\u6309\u4ee3\u7801\u7ec4\u7ec7\u65b9\u5f0f\u5206\u7c7b\u300d\uff0c\u6211\u4eec\u7b80\u5355\u56de\u987e\u4e00\u4e0b\u76f8\u5173\u7684\u5386\u53f2\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u5728\u901a\u7528\u8ba1\u7b97\u673a\u88ab\u53d1\u660e\u65f6\uff0c\u4ee3\u7801\u90fd\u662f\u7528 \u673a\u5668\u7801 (machine code) \u7f16\u5199\u7684\uff1b\u5728\u673a\u5668\u7801\u4e2d\uff0c\u6307\u4ee4\u7531\u4e00\u5806 01 \u4e32\u6765\u8868\u793a\u3002\u4e3a\u4e86\u65b9\u4fbf\u9605\u8bfb\u548c\u8c03\u8bd5\uff0c\u4eba\u4eec\u5f15\u5165\u4e86 \u52a9\u8bb0\u7b26 (mnemonics) \u548c labels \u7b49\u6765\u4ee5\u66f4\u6613\u7406\u89e3\u7684\u65b9\u5f0f\u8868\u793a\u673a\u5668\u6307\u4ee4\uff0c\u4ece\u800c\u53d1\u660e\u4e86 \u6c47\u7f16\u8bed\u8a00 (assembly)\u3002</p> <p>\u6c47\u7f16\u8bed\u8a00\u4ee5\u53ca\u4e4b\u540e\u51fa\u73b0\u7684 BASIC, Fortran \u7b49\u7f16\u7a0b\u8bed\u8a00\u7684\u65e9\u671f\u7248\u672c\u90fd\u662f \u975e\u7ed3\u6784\u5316\u7684 (non-structured) \u7f16\u7a0b\u8bed\u8a00\u3002\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6211\u4eec\u6765\u770b\u4e00\u770b\u6211\u4eec\u719f\u6089\u7684\u5206\u652f\u548c\u5faa\u73af\u8bed\u53e5\u5728\u6c47\u7f16\u4e2d\u662f\u5982\u4f55\u8868\u793a\u7684\uff1a</p> <p> </p> <p>\u4e0a\u9762\u4e24\u5f20\u56fe\u4f9d\u6b21\u662f C++ \u6e90\u7801\u548c\u7f16\u8bd1\u51fa\u7684\u6c47\u7f16\u4ee3\u7801\u3002\u53ef\u4ee5\u770b\u5230\uff1a</p> <ul> <li>\u5982\u679c <code>a &lt;= 10</code>\uff1a<ul> <li>\u6c47\u7f16\u4ee3\u7801\u7684\u7b2c 5 \u884c <code>cmp</code> (compare) \u5c06 <code>DWORD PTR [rbp-4]</code>\uff08\u524d\u9762\u7684\u51e0\u884c\u628a\u4f20\u5165\u53c2\u6570 <code>a</code> \u653e\u5230\u4e86\u8fd9\u91cc\uff09\u4e0e <code>10</code> \u4f5c\u6bd4\u8f83</li> <li>\u7b2c 6 \u884c <code>jle</code> (jump if less or equal) \u6839\u636e\u4e0a\u9762\u6bd4\u8f83\u7684\u7ed3\u679c\uff0c\u5728 <code>a &lt;= 10</code> \u7684\u60c5\u5f62\u4e0b \u8df3\u8f6c \u81f3 <code>.L2</code>\uff0c\u4e5f\u5c31\u662f\u7b2c 10 \u884c</li> <li>\u7b2c 10 \u884c <code>mov</code> (move) \u5c06 <code>0</code> \u8d4b\u503c\u7ed9\u5bc4\u5b58\u5668 <code>eax</code>\uff0c\u800c <code>eax</code> \u5c31\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c</li> <li>\u7b2c 12 \u548c 13 \u884c\u5b8c\u6210\u51fd\u6570\u7684\u8fd4\u56de</li> </ul> </li> <li>\u5982\u679c <code>a &gt; 10</code>\uff1a<ul> <li>\u6c47\u7f16\u4ee3\u7801\u7684\u7b2c 5 \u884c <code>cmp</code> (compare) \u5c06 <code>DWORD PTR [rbp-4]</code>\uff08\u4f20\u5165\u53c2\u6570 <code>a</code>\uff09\u4e0e <code>10</code> \u4f5c\u6bd4\u8f83</li> <li>\u7b2c 6 \u884c <code>jle</code> \u7531\u4e8e <code>a &gt; 10</code> \u56e0\u6b64\u4e0d\u751f\u6548\uff0c\u4e0d\u8fdb\u884c\u8df3\u8f6c</li> <li>\u7b2c 7 \u884c <code>mov</code> \u5c06\u8fd4\u56de\u503c <code>eax</code> \u8d4b\u503c\u4e3a <code>1</code></li> <li>\u7b2c 8 \u884c <code>jmp</code> (jump) \u8df3\u8f6c\u5230 <code>.L3</code>\uff0c\u4e5f\u5c31\u662f\u7b2c 12 \u884c</li> <li>\u7b2c 12 \u548c 13 \u884c\u5b8c\u6210\u51fd\u6570\u7684\u8fd4\u56de</li> </ul> </li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6c47\u7f16\u4e2d\u5e76\u4e0d\u5b58\u5728\u76f4\u63a5\u5b8c\u6210\u300c\u5206\u652f\u300d\u7684\u8bed\u8a00\u7ed3\u6784\uff0c\u800c\u662f\u901a\u8fc7\u6bd4\u8f83\u548c\u8df3\u8f6c\u6307\u4ee4\u7684\u7ec4\u5408\u6765\u5b8c\u6210\u76f8\u5e94\u7684\u6548\u679c\u7684\u3002</p> <p>\u7c7b\u4f3c\u5730\uff0c\u4e0b\u9762\u7684\u4e24\u5f20\u56fe\u4e5f\u662f C++ \u6e90\u7801\u548c\u7f16\u8bd1\u51fa\u7684\u6c47\u7f16\u4ee3\u7801\u3002\u6c47\u7f16\u4ee3\u7801\u5b8c\u6210\u5faa\u73af\u64cd\u4f5c\u7684\u65b9\u5f0f\u7559\u505a\u7ec3\u4e60\u3002</p> <p> </p> \u63d0\u793a <p>\u6c47\u7f16\u4ee3\u7801\u7684 2~4 \u884c\u5c06 <code>DWORD PTR [rbp-20]</code> \u7684\u521d\u59cb\u503c\u8bbe\u7f6e\u4e3a\u4f20\u5165\u53c2\u6570 <code>a</code>\uff1b\u7b2c 5 \u884c\u5c06\u8868\u793a\u5c40\u90e8\u53d8\u91cf <code>ans</code> \u7684 <code>DWORD PTR [rbp-4]</code> \u7684\u521d\u59cb\u503c\u8bbe\u7f6e\u4e3a <code>0</code>\u3002</p> <p>\u7b2c 11 \u884c\u7684 <code>jg</code> \u662f jump if greater \u7684\u610f\u601d\u3002\u7b2c 12 \u884c\u5c06\u8868\u793a\u5c40\u90e8\u53d8\u91cf <code>ans</code> \u7684 <code>DWORD PTR [rbp-4]</code> \u8d4b\u503c\u7ed9\u5bc4\u5b58\u5668 <code>eax</code>\uff0c\u5373\u5b8c\u6210\u8fd4\u56de\u503c\u7684\u8bbe\u7f6e\u300213~14 \u884c\u5b8c\u6210\u51fd\u6570\u7684\u8fd4\u56de\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u6c47\u7f16\u8bed\u8a00\u4e2d\uff0c\u5e76\u4e0d\u5b58\u5728\u8bf8\u5982\u5206\u652f\u3001\u5faa\u73af\u4e4b\u7c7b\u7684\u8bed\u8a00\u7ed3\u6784\uff1b\u65e9\u671f\u7684 BASIC \u7b49\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5373\u4f7f\u5b58\u5728\u8868\u793a\u7c7b\u4f3c\u542b\u4e49\u7684\u5173\u952e\u5b57\uff0c\u4f46\u662f\u7531\u4e8e\u4e0d\u5b58\u5728\u4ee3\u7801\u5757\u4e4b\u7c7b\u7684\u7ed3\u6784\uff0c\u56e0\u6b64\u5206\u652f\u3001\u5faa\u73af\u4e4b\u7c7b\u7684\u63a7\u5236\u6d41\u4ecd\u7136\u9700\u8981\u901a\u8fc7 <code>jmp</code> \u6216\u8005 <code>goto</code> \u7b49\u542b\u4e49\u7c7b\u4f3c\u7684\u8bed\u53e5\u6765\u5b8c\u6210\uff0c\u4f8b\u5982 BASIC \u53ef\u80fd\u6709\u8fd9\u6837\u7684\u4ee3\u7801\uff1a</p> <pre><code>10 let a = 6\n20 let b = 7\n30 if a &lt; b goto 60\n40 print(a)\n50 goto 70\n60 print(b)\n70 end\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u867d\u7136\u6709 <code>if</code>\uff0c\u4f46\u662f\u4e3a\u4e86\u5b8c\u6210\u5206\u652f\u7684\u6548\u679c\uff0c\u4ecd\u7136\u9700\u8981 <code>goto</code> \u6765\u5e2e\u52a9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u8fd9\u79cd\u8bed\u8a00\u4e2d\u7684\u4ee3\u7801\u662f\u4ee5 \u5355\u6761\u4ee3\u7801 \u4e3a\u5355\u4f4d\u7684\uff0c\u800c\u4e0d\u662f\u50cf C++ \u4e2d\u4ee5 \u8bed\u53e5\u5757 \u4e3a\u5355\u4f4d\u7684\uff1a</p> <pre><code>a = 6;\nb = 7;\nif (a &lt; b) {\nprint(b);\n} else {\nprint(a);\n}\n</code></pre> <p>\u8bf7\u6ce8\u610f\uff0c\u4e0a\u9762\u8fd9\u6bb5 C++ \u4ee3\u7801\u53ea\u6709 3 \u6761\u8bed\u53e5\uff0c\u56e0\u4e3a 3~7 \u884c\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u8bed\u53e5 (selection-statement stmt.select.general#1)\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u719f\u6089\u7684 C \u548c C++ \u7b49\u7f16\u7a0b\u8bed\u8a00\u90fd\u662f \u7ed3\u6784\u5316\u7f16\u7a0b\u8bed\u8a00 (structured programming languages)\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u8bf8\u5982\u5206\u652f\u3001\u5faa\u73af\u3001\u8bed\u53e5\u5757\u3001\u51fd\u6570\u4e4b\u7c7b\u7684\u8bed\u8a00\u7ed3\u6784\u3002</p> <p>\u5f53\u6211\u4eec\u8ba8\u8bba\u4ece\u975e\u7ed3\u6784\u5316\u5230\u7ed3\u6784\u5316\u7f16\u7a0b\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u6539\u53d8\u65f6\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u770b\u5230\uff1a\u7f16\u7a0b\u8bed\u8a00\u4ece\u300c\u66f4\u8d34\u8fd1\u8ba1\u7b97\u673a\u884c\u4e3a\u300d\u5411\u300c\u66f4\u63a5\u8fd1\u4eba\u7c7b\u601d\u7ef4\u300d\u7684\u65b9\u5411\u8fc8\u4e86\u4e00\u6b65\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684 \u62bd\u8c61 (abstraction)\u3002\u8ba1\u7b97\u673a\u7684\u884c\u4e3a\u662f\u5177\u4f53\u7684\u3001\u4e0e\u673a\u5668\u548c\u73af\u5883\u9ad8\u5ea6\u76f8\u5173\u7684\uff0c\u800c\u4eba\u7c7b\u601d\u7ef4\u662f\u66f4\u52a0\u666e\u904d\u7684\u3001\u8fdc\u79bb\u7ec6\u8282\u7684\uff1b\u300c\u62bd\u8c61\u300d\u7684\u597d\u5904\u5c31\u662f\u80fd\u591f\u63d0\u5347\u7a0b\u5e8f\u6216\u8005\u7f16\u7a0b\u8bed\u8a00\u7684\u901a\u7528\u6027\u3001\u6613\u8bfb\u6027\u3001\u6613\u5199\u6027\u3001\u53ef\u79fb\u690d\u6027\uff0c\u800c\u574f\u5904\u662f\u53ef\u80fd\u4f1a\u635f\u5931\u4e00\u4e9b\u66f4\u52a0\u7cbe\u7ec6\u7684\u63a7\u5236\uff0c\u4e5f\u6709\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u7f16\u8bd1\u65f6\u6216\u8fd0\u884c\u65f6\u7684\u6027\u80fd\u3002</p> <p>\u56de\u987e\u4e00\u4e0b\u8fd9\u5f20\u56fe\u5427\uff01</p> <p></p> <p>\u7ed3\u6784\u5316\u7f16\u7a0b\u5728\u4e0a\u4e16\u7eaa 70 \u5e74\u4ee3\u672b 80 \u5e74\u4ee3\u521d\u88ab\u5e7f\u6cdb\u8ba4\u77e5\uff1b90 \u5e74\u4ee3\u5f00\u59cb\u5e7f\u6cdb\u8ba4\u8bc6 OOP\u3002C++ \u652f\u6301\u7684 \u6cdb\u578b\u7f16\u7a0b (generic programming) \u4e5f\u662f\u4e00\u79cd\u7f16\u7a0b\u8303\u5f0f\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u7684\u7ae0\u8282\u91cc\u8ba8\u8bba\u8fd9\u79cd\u7f16\u7a0b\u8303\u5f0f\u3002\u7f16\u7a0b\u8303\u5f0f\u8fd8\u6709\u5f88\u591a\uff0c\u4f8b\u5982\u8457\u540d\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u7b49\u3002\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u5df1\u770b\u4e00\u770b\uff01</p> <p>\u76f8\u5173\u94fe\u63a5</p> <p>\u672c\u8282\u90e8\u5206\u5185\u5bb9\u53c2\u8003\u4e86\u7fc1\u607a\u8001\u5e08 2021~2022 \u5e74\u7684\u300c\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u5b66\u300d\u8bfe\u7a0b\u3002</p> <ol> <li> <p>Programming paradigm | Wikipedia \u21a9</p> </li> </ol>"},{"location":"cpp/cpp_restart/3_oop/","title":"3 \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 | Object-Oriented Programming","text":"<p> \u7ea6 4377 \u4e2a\u5b57  224 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 17 \u5206\u949f</p> <p>\u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u7f16\u7a0b\u8303\u5f0f\u548c\u62bd\u8c61\u7684\u76f8\u5173\u5185\u5bb9\u3002\u800c\u6211\u4eec\u8981\u4ecb\u7ecd\u7684 OOP \u4e5f\u662f\u4e00\u79cd\u7f16\u7a0b\u8303\u5f0f\uff1b\u5b83\u5728\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u7840\u4e0a\u505a\u4e86\u8fdb\u4e00\u6b65\u7684\u62bd\u8c61\u3002</p> <p>OOP \u5f3a\u8c03\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001\u3002\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u4f8b\u5b50\u6765\u89e3\u91ca\u8fd9\u4e9b\u601d\u60f3\u3002</p> <p>Warning</p> <p>\u672c\u8282\u7684\u4e3b\u8981\u76ee\u6807\u662f\u4ecb\u7ecd OOP \u7684\u601d\u60f3\uff0c\u5176\u4e2d\u5305\u542b\u7684\u4e00\u4e9b\u5b9e\u73b0\u548c\u8bed\u8a00\u7ec6\u8282\u4e0d\u4e00\u5b9a\u5b8c\u5168\u5408\u7406\u548c\u51c6\u786e\uff1b\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u6211\u4eec\u4f1a\u66f4\u52a0\u7cbe\u786e\u5730\u63cf\u8ff0 C++ \u4e2d\u7684\u76f8\u5173\u8bed\u6cd5\u3002</p>"},{"location":"cpp/cpp_restart/3_oop/#31-\u5c01\u88c5--encapsulation","title":"3.1 \u5c01\u88c5 | Encapsulation","text":""},{"location":"cpp/cpp_restart/3_oop/#struct-\u6982\u5ff5\u7684\u6269\u5c55","title":"<code>struct</code> \u6982\u5ff5\u7684\u6269\u5c55","text":"<p>\u6211\u4eec\u6765\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u60c5\u666f\u3002\u5047\u5982\u6211\u4eec\u548c\u961f\u53cb\u4e00\u8d77\u505a\u5927\u7a0b\uff0c\u60f3\u8981\u505a\u4e00\u4e2a\u7ed8\u56fe\u677f\u3002\u5728\u8fd9\u4e2a\u5de5\u7a0b\u4e2d\uff0c\u4f1a\u6709\u4e00\u4e9b\u5730\u65b9\u8981\u4f7f\u7528\u5230\u7ebf\u6027\u8868 (list)\u3002\u6211\u4eec\u77e5\u9053\uff0c\u7ebf\u6027\u8868\u662f\u4e00\u79cd\u62bd\u8c61\u6570\u636e\u7ed3\u6784 (ADT, Abstract Data Type)\uff1b\u5b83\u80fd\u591f\u6709\u5e8f\u5730\u5b58\u653e\u82e5\u5e72\u6570\u636e\uff0c\u6570\u636e\u662f\u53ef\u4ee5\u6709\u91cd\u7684\uff1b\u5b83\u652f\u6301\u7684\u64cd\u4f5c\u53ef\u80fd\u5305\u62ec\u521b\u5efa\u8868\u3001\u83b7\u53d6\u5927\u5c0f\u3001\u63d2\u5165\u5143\u7d20\u3001\u5220\u9664\u5143\u7d20\u3001\u8bbf\u95ee\u5143\u7d20\u7b49\u3002</p> \u5982\u679c\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u7ebf\u6027\u8868\u6216\u8005\u62bd\u8c61\u6570\u636e\u7ed3\u6784 <p>\u62bd\u8c61\u6570\u636e\u7ed3\u6784 \u662f\u6570\u636e\u7c7b\u578b\u7684\u4e00\u79cd\u62bd\u8c61\u6a21\u578b\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u6570\u7ec4\u548c\u94fe\u8868\u90fd\u53ef\u4ee5\u5b9e\u73b0\u6709\u5e8f\u5730\u5b58\u653e\u82e5\u5e72\u53ef\u91cd\u6570\u636e\u7684\u529f\u80fd\uff0c\u5b83\u4eec\u652f\u6301\u7684\u64cd\u4f5c\u4e5f\u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u5176\u5185\u90e8\u5b9e\u73b0\u548c\u8fd9\u4e9b\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e0d\u540c\u3002\u4f46\u662f\uff0c\u6709\u65f6\u4f7f\u7528\u8005\u6216\u8005\u7cfb\u7edf\u7684\u8bbe\u8ba1\u8005\u5e76\u4e0d\u9700\u8981\u5173\u5fc3\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u800c\u53ea\u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u7c7b\u578b\u80fd\u591f\u63d0\u4f9b\u54ea\u4e9b\u529f\u80fd\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u5176\u5b9e\u5c31\u548c\u6211\u4eec\u4e0a\u4e00\u8282\u63d0\u5230\u7684\u300c\u62bd\u8c61\u300d\u7684\u542b\u4e49\u4e00\u81f4\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6570\u7ec4\u548c\u94fe\u8868\u90fd\u662f\u5177\u4f53\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u5b83\u4eec\u63d0\u4f9b\u7684\u529f\u80fd\u662f\u4e00\u81f4\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u5b83\u4eec\u62bd\u8c61\u4e3a\u540c\u4e00\u79cd ADT\uff0c\u5373\u7ebf\u6027\u8868\u3002</p> <p>\u7ebf\u6027\u8868\u7684\u5e38\u89c1\u5b9e\u73b0\u65b9\u5f0f\u5305\u62ec\u6570\u7ec4 (array list) \u548c\u94fe\u8868 (linked list)\uff0c\u6211\u4eec\u548c\u961f\u53cb\u5206\u522b\u5b9e\u73b0\u4e00\u79cd\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u5206\u522b\u5199\u51fa\u8fd9\u6837\u7684\u4ee3\u7801\uff1a</p> <p>\uff08\u4e0b\u9762\u7684 <code>elem</code> \u662f\u7ebf\u6027\u8868\u5143\u7d20\u7684\u7c7b\u578b\uff0c\u4f8b\u5982 <code>typedef Shape elem</code>\u3002\uff09</p> <p>\u94fe\u8868\u7684\u7248\u672c \uff08\u53ef\u4ee5\u73a9\u4e00\u4e0b https://godbolt.org/z/GYWjsKhbM)\uff1a</p> <pre><code>struct node {\nelem* val;\nstruct node* next;\n};\ntypedef struct node* linkedlist;\n\nlinkedlist create();\nint size(linkedlist llist);\nelem* get(linkedlist llist, int index);\nvoid add(linkedlist llist, elem val);\n// ...\n</code></pre> <p>\u6570\u7ec4\u7684\u7248\u672c\uff08\u53ef\u4ee5\u73a9\u4e00\u4e0b https://godbolt.org/z/39G916Yq5\uff09\uff1a</p> <pre><code>#define MAX_SIZE 1024\n\nstruct arraylist_ {\nelem* val[MAX_SIZE];\nint size;\n};\ntypedef struct arraylist_* arraylist;\n\narraylist create();\nint size(arraylist alist);\nelem* get(arraylist alist, int index);\nvoid add(arraylist alist, elem val);\n// ...\n</code></pre> <p>\u4e0a\u9762\u7684\u4e24\u4e2a\u7248\u672c\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u4ee3\u7801\u6267\u884c\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\ntypedef int elem;\n#include \"linkedlist.h\" // OR: #include \"arraylist.h\"\n\nint main() {\nstruct linkedlist list = create(); // OR: struct arraylist list = create();\nadd(list, 1);\nadd(list, 2);\nadd(list, 4);\nadd(list, 2);\nadd(list, 4);\nfor (int i = 0; i &lt; size(list); i++) {\nprintf(\"%d \", *get(list, i));\n}\nreturn 0;\n}\n</code></pre> <p>\u5b83\u4eec\u5355\u72ec\u4f7f\u7528\u90fd\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5f53\u6211\u4eec\u628a\u8fd9\u4e24\u4efd\u4ee3\u7801 include \u5230\u4e00\u8d77\u65f6\u5c31\u53d1\u751f\u4e86\u9519\u8bef\uff01\u56e0\u4e3a C \u8bed\u8a00\u5e76\u4e0d\u5141\u8bb8\u540c\u540d\u51fd\u6570\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u7248\u672c\u3002\u4e0b\u9762\u662f\u62a5\u9519\u4e4b\u4e00\uff1a</p> <p></p> <p>\u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5728\u540c\u4e00\u4e2a\u5de5\u7a0b\u91cc\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u4e2a\u5e93\uff0c\u6211\u4eec\u5c31\u4e0d\u5f97\u4e0d\u7ed9\u76f8\u5173\u51fd\u6570\u6539\u4e2a\u540d\uff0c\u4f8b\u5982 <code>create()</code> \u5206\u522b\u6539\u4e3a <code>llist_create()</code> \u548c <code>alist_create()</code> \u7b49\u3002</p> <p>\u4f46\u662f\u8fd9\u5f88\u4e0d\u4f18\u96c5\uff01\u800c\u4e14\u5f53\u6211\u4eec\u5e0c\u671b\u66f4\u6539\u90e8\u5206\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u7ebf\u6027\u8868\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6240\u6709\u4f7f\u7528\u5230\u76f8\u5173\u51fd\u6570\u7684\u5730\u65b9\u90fd\u6539\u4e00\u904d\u540d\u5b57\uff01\u8fd9\u592a\u96be\u8fc7\u4e86\u3002\u95ee\u9898\u51fa\u5728\u54ea\u91cc\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c<code>create</code>, <code>add</code> \u4e4b\u7c7b\u7684\u51fd\u6570\u90fd\u5e94\u5f53\u5c5e\u4e8e\u5bf9\u5e94\u7684 <code>linkedlist</code> \u6216\u8005 <code>arraylist</code> \u8fd9\u6837\u7684\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u5e94\u5f53\u5c5e\u4e8e\u5168\u5c40\uff1b\u4f46 C \u8bed\u8a00\u5f31\u5316\u4e86\u8fd9\u4e00\u70b9\u3002\u5728 OOP \u7684\u601d\u60f3\u4e2d\uff0c\u6211\u4eec\u4f1a\u5c06 \u6570\u636e \u548c \u64cd\u7eb5\u6570\u636e\u7684\u51fd\u6570 \u7528\u66f4\u52a0\u660e\u663e\u7684\u65b9\u5f0f\u6346\u7ed1\u5728\u4e00\u8d77\uff1b\u4ece\u8bed\u6cd5\u4e0a\u8bf4\uff0c\u5c31\u662f\u6211\u4eec\u6269\u5c55\u4e86 struct\uff1a\u73b0\u5728 struct \u4e0d\u4ec5\u80fd\u5305\u542b \u6210\u5458\u53d8\u91cf\uff0c\u8fd8\u80fd\u5305\u542b \u6210\u5458\u51fd\u6570 \u4e86\uff1a</p> <p>\u94fe\u8868\u7684\u7248\u672c\uff08\u53ef\u4ee5\u73a9\u4e00\u4e0b https://godbolt.org/z/x4M8e86KW\uff09\uff1a</p> <p>Tips</p> <p>\u5927\u5bb6\u4e0d\u5fc5\u592a\u5728\u610f\u8fd9\u91cc\u7684\u8bed\u6cd5\u7ec6\u8282\uff08\u4f8b\u5982 <code>static</code> \u548c <code>const</code> \u4e4b\u7c7b\u7684\uff09\uff0c\u540e\u9762\u4f1a\u6162\u6162\u8bb2\u7684\uff01\u8fd9\u91cc\u53ea\u9700\u8981\u4e86\u89e3\u5230 struct \u7684\u6210\u5458\u73b0\u5728\u4e5f\u53ef\u4ee5\u6709\u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\uff01</p> <pre><code>struct node {\nelem* val;\nstruct node* next;\n};\n\nstruct linkedlist {\nstruct node* llist;\n\nstatic linkedlist create();\nint size() const;\nelem* get(int index) const;\nvoid add(elem val);\n// ...\n};\n</code></pre> <p>\u6570\u7ec4\u7684\u7248\u672c\uff08\u53ef\u4ee5\u73a9\u4e00\u4e0b https://godbolt.org/z/TM7GTf58n\uff09\uff1a</p> <pre><code>#define MAX_SIZE 1024\n\nstruct arraylist_ {\nelem* val[MAX_SIZE];\nint size;\n};\n\nstruct arraylist {\nstruct arraylist_* alist;\n\nstatic arraylist create();\nint size() const;\nelem* get(int index) const;\nvoid add(elem val);\n// ...\n};\n</code></pre> <p>\u7ecf\u8fc7\u4e86\u8fd9\u6837\u7684\u4fee\u6539\u540e\uff0c\u6211\u4eec\u8c03\u7528\u4e00\u4e9b\u6210\u5458\u51fd\u6570\u65f6\u5c31\u4e0d\u518d\u662f\u4f7f\u7528 <code>size(list)</code> \u4e86\uff0c\u800c\u662f\u4f7f\u7528 <code>list.size()</code>\uff1b\u6210\u5458\u51fd\u6570 <code>size()</code> \u80fd\u591f\u83b7\u53d6\u8c03\u7528\u8005\u7684\u6570\u636e\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u4e00\u4e9b\u8ba1\u7b97\u3002</p> <p>\u300c\u5c06 \u6570\u636e \u548c \u64cd\u7eb5\u6570\u636e\u7684\u51fd\u6570 \u6346\u7ed1\u5728\u4e00\u8d77\u300d\u662f \u5c01\u88c5 (encapsulation) \u601d\u60f3\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u79cd\u6269\u5c55\u540e\u7684 struct\uff0c\u5728 C++ \u4e2d\u4e5f\u79f0\u4e3a class\uff0c\u5373 \u7c7b\u3002\u6211\u4eec\u4f1a\u5728\u7a0d\u540e\u89e3\u91ca C++ \u4e2d class \u548c struct \u7684\u533a\u522b\u3002</p> <p>\u8fd9\u6837\uff0c\u5728\u5c06\u4e24\u4efd\u4ee3\u7801\u5171\u540c\u4f7f\u7528\u65f6\u5c31\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u4e86\uff1b\u56e0\u4e3a\u867d\u7136\u5b58\u5728\u540c\u540d\u51fd\u6570\uff0c\u4f46\u662f\u5b83\u4eec\u5206\u5c5e\u4e8e\u4e0d\u540c\u7684\u7c7b\u91cc\u3002\u4f8b\u5982\u4e24\u4e2a\u7c7b\u4e2d\u7684 <code>get</code> \u51fd\u6570\u5b9e\u9645\u4e0a\u5206\u522b\u53eb\u505a <code>linkedlist::get</code> \u548c <code>arraylist::get</code>\u3002\u8fd9\u91cc\u7684 <code>::</code> \u53eb\u505a scope resolution operator\uff0c\u7528\u6765\u6307\u793a\u300c<code>linkedlist</code> \u4e2d\u7684\u90a3\u4e2a <code>get</code>\u300d\u6216\u8005\u300c<code>arraylist</code> \u4e2d\u7684\u90a3\u4e2a <code>get</code>\u300d\u3002</p>"},{"location":"cpp/cpp_restart/3_oop/#\u5bf9\u8c61\u548c\u7c7b","title":"\u5bf9\u8c61\u548c\u7c7b","text":"<p>\u6240\u4ee5\uff0c\u5728\u9762\u5411\u5bf9\u8c61\u7684\u4e16\u754c\u91cc\uff0c\u300c\u7c7b\u300d\u5230\u5e95\u63cf\u8ff0\u7684\u662f\u4ec0\u4e48\u4e1c\u897f\u5462\uff1f\u300c\u5bf9\u8c61\u300d\u53c8\u662f\u4ec0\u4e48\u5462\uff1f</p> <p>\u5bf9\u8c61\u7684\u82f1\u6587\u662f object\uff0c\u5b83\u7684\u4e00\u4e2a\u610f\u9879\u662f\u300c\u7269\u4f53\u3001\u7269\u54c1\u300d\u3002\u5b9e\u9645\u4e0a\u4e00\u5207\u4e8b\u7269\u90fd\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\uff08\u7814\u7a76\u67d0\u9879\u95ee\u9898\uff09\u7684\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u5176 \u72b6\u6001 \u548c \u884c\u4e3a\u3002\u4f8b\u5982\uff0c\u4f60\u7684\u7537\u670b\u53cb\uff08\u5982\u679c\u6709\uff09\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff1a\u4ed6\u7684\u72b6\u6001\u5305\u62ec\u5e74\u9f84\u3001\u8eab\u9ad8\u3001\u804c\u4e1a\u3001\u8d44\u4ea7\u7b49\u7b49\uff0c\u884c\u4e3a\u5305\u62ec\u5b66\u4e60\u3001\u8d5a\u94b1\u3001\u82b1\u94b1\u3001\u957f\u9ad8\u7b49\u7b49\u3002</p> <p>\u4ece\u7f16\u7a0b\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u300c\u72b6\u6001\u300d\u53ef\u4ee5\u7531\u6570\u636e\u53d8\u91cf\u8868\u793a\uff0c\u300c\u884c\u4e3a\u300d\u53ef\u4ee5\u7531\u51fd\u6570\u6765\u5b9e\u73b0\u3002</p> <p>\u7c7b\u53c8\u63cf\u8ff0\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u521a\u624d\u6211\u4eec\u63d0\u5230\u7684\u300c\u4f60\u7684\u7537\u670b\u53cb\u300d\u7684 \u72b6\u6001 \u548c \u884c\u4e3a\uff0c\u5728\u5176\u4ed6\u7684\u4eba \uff08\u6211\u4eec\u59d1\u4e14\u5047\u8bbe\u4f60\u7684\u7537\u670b\u53cb\u662f\u4eba\u7c7b\uff09 \u8eab\u4e0a\u4e5f\u5177\u5907\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4efb\u4f55\u4e00\u4e2a\u4eba\u90fd\u5177\u6709\u4e0a\u8ff0\u7279\u6027\uff08\u72b6\u6001\u548c\u884c\u4e3a\uff09\uff0c\u56e0\u6b64\u300c\u4eba\u7c7b\u300d\u5c31\u662f\u8fd9\u4e9b\u4eba\u5171\u540c\u6240\u5c5e\u7684\u7c7b\u578b\u3002\u518d\u62bd\u8c61\u4e00\u70b9\u6765\u8bb2\uff0c\u5c31\u662f\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5c5e\u4e8e\u4e00\u4e2a\u63cf\u8ff0\u5176\u7279\u6027\u7684\u7c7b\uff0c\u7c7b\u662f\u4e00\u4e2a\u5171\u4eab\u76f8\u540c\u7ed3\u6784\u548c\u884c\u4e3a\u7684\u5bf9\u8c61\u7684\u96c6\u5408\u3002</p> <p>\u4ece\u7f16\u7a0b\u7684\u89d2\u5ea6\u770b\uff0c\u7c7b\u5176\u5b9e\u662f\u4e00\u79cd\uff08\u7528\u6237\u81ea\u5b9a\u4e49\u7684\uff09\u6570\u636e\u7c7b\u578b\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u521b\u5efa\u8fd9\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\uff08\u79f0\u4e3a \u5bf9\u8c61 \u6216 \u5b9e\u4f8b (instance)\uff09\u5e76\u64cd\u7eb5\u8fd9\u4e9b\u53d8\u91cf\uff08\u5bf9\u5176\u53d1\u9001\u8bf7\u6c42\uff0c\u5bf9\u8c61\u6839\u636e\u4fe1\u606f\u8fdb\u884c\u64cd\u4f5c\uff09\u3002\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u662f\u72b6\u6001\u548c\u884c\u4e3a\u7684\u96c6\u5408\uff0c\u901a\u5e38\u4ee5\u53d8\u91cf\u548c\u51fd\u6570\u6765\u63cf\u8ff0\u548c\u5b9a\u4e49\u3002\u8fd9\u4e9b\u53d8\u91cf\u548c\u51fd\u6570\uff0c\u662f\u8fd9\u4e2a\u7c7b\u7684 \u6210\u5458\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728 C \u8bed\u8a00\u8fd9\u79cd\u975e OOP \u7684\u8bed\u8a00\u4e2d\uff0c\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u53ea\u80fd\u5b9a\u4e49\u300c\u72b6\u6001\u300d\u800c\u4e0d\u80fd\u5b9a\u4e49\u300c\u884c\u4e3a\u300d\uff1b\u8fd9\u79cd\u601d\u8003\u65b9\u5f0f\u66f4\u8d34\u8fd1\u4e8e\u673a\u5668\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5728\u771f\u6b63\u7684\u6c47\u7f16\u4ee3\u7801\u4e2d\u786e\u5b9e\u4e0d\u80fd\u6709\u540c\u540d\u7684\u51fd\u6570\u3002\u4e0d\u8fc7\uff0cOOP \u5728\u6b64\u57fa\u7840\u4e0a\u505a\u4e86\u8fdb\u4e00\u6b65\u62bd\u8c61\uff0c\u8ba9\u4ee3\u7801\u66f4\u52a0\u8d34\u8fd1\u4eba\u4eec\u5bf9\u4e8e\u300c\u7c7b\u300d\u8fd9\u79cd\u81ea\u7136\u4ea7\u751f\u7684\u6982\u5ff5\u7684\u7406\u89e3\uff1b\u5176\u5b9e\u73b0\u5219\u4ea4\u7531\u7f16\u8bd1\u5668\u6765\u5b8c\u6210\u3002</p>"},{"location":"cpp/cpp_restart/3_oop/#\u8bbf\u95ee\u63a7\u5236","title":"\u8bbf\u95ee\u63a7\u5236","text":"<p>\u5173\u4e8e\u5c01\u88c5\u7684\u542b\u4e49\uff0c\u6211\u4eec\u518d\u8003\u8651\u53e6\u4e00\u4e2a\u95ee\u9898\uff01</p> <p>\u6bd4\u5982\u6211\u4eec\u8bbe\u8ba1\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a\u7c7b\uff1a</p> <pre><code>struct User {\nint id, age;\nchar* password;\n\nbool checkPassword(char* pw); // check if pw == password\n// ...\n};\n</code></pre> <p>\u4f46\u662f\uff0c\u5916\u90e8\u4ee3\u7801\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a</p> <ul> <li>\u7a83\u53d6\u6570\u636e\uff1a<code>printf(\"%s\", user1.password);</code></li> <li>\u7be1\u6539\u6570\u636e\uff1a<code>user1.password = str;</code></li> <li>\u586b\u5165\u975e\u6cd5\u503c\uff1a<code>user1.age = -100;</code></li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u5bf9\u5916\u90e8\u76f4\u63a5\u53ef\u8bbf\u95ee\u7684\u60c5\u51b5\u4e0b\uff0c\u5bb9\u6613\u5bfc\u81f4\u4fe1\u606f\u4e22\u5931\u548c\u903b\u8f91\u6df7\u4e71\u3002C++ \u63d0\u4f9b\u4e86 access-specifier \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>Access-specifier \u7528\u6765\u63d0\u4f9b\u8bbf\u95ee\u63a7\u5236\uff0c\u5305\u62ec <code>public</code>, <code>private</code> \u548c <code>protected</code> \u4e09\u79cd\uff0c\u5176\u4e2d <code>protected</code> \u662f\u5728 Release 2.0 \u4e2d\u52a0\u5165\u7684\u3002\u6211\u4eec\u8ba8\u8bba\u524d\u9762\u4e24\u79cd\u3002</p> <p>\u6240\u8c13 <code>public</code>\uff0c\u662f\u8bf4\u8fd9\u4e4b\u540e\u7684\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u5bf9\u5916\u90e8\u53ef\u89c1\uff1b\u800c <code>private</code> \u5219\u662f\u8bf4\u8fd9\u4e4b\u540e\u7684\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u5728\u7c7b\u5916\u88ab\u8bbf\u95ee\uff0c\u53ea\u80fd\u5728\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5185\u8bbf\u95ee\u6216\u8c03\u7528\u3002\u4f8b\u5982\u4e0a\u9762\u7684 <code>User</code> \u53ef\u4ee5\u6539\u6210\u8fd9\u6837\uff1a</p> <pre><code>struct User {\nprivate:\nint id, age;\nchar* password;\npublic:\nbool checkPassword(char* pw); // check if pw == password\nvoid setAge(int v) {\nif (v &gt;= 0)\nage = v;\n}\nint getAge() { return age; }\n// ...\n};\n</code></pre> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5916\u90e8\u4ee3\u7801\u5c1d\u8bd5\u8bbf\u95ee private \u53d8\u91cf\uff0c\u5c31\u4f1a\u88ab\u7f16\u8bd1\u5668\u62d2\u7edd\uff1a</p> <p></p> <p>\u8fd9\u662f\u5c01\u88c5\u601d\u60f3\u7684\u53e6\u4e00\u90e8\u5206\uff0c\u5373\u9650\u5236\u5bf9\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\u72b6\u6001\u548c\u884c\u4e3a\u7684\u76f4\u63a5\u8bbf\u95ee\u3002\u90e8\u5206\u6210\u5458\u53d8\u91cf\u53ef\u80fd\u4f1a\u88ab\u62d2\u7edd\u8bbf\u95ee\uff0c\u53ea\u80fd\u88ab\u5185\u90e8\u4f7f\u7528\uff08\u4f8b\u5982\u4e0a\u9762\u7684 <code>password</code>\uff09\uff1b\u53e6\u4e00\u90e8\u5206\u53d8\u91cf\u53ef\u80fd\u4f1a\u88ab\u6709\u9650\u5236\u6216\u8005\u7ecf\u68c0\u67e5\u5730\u8bbf\u95ee\uff08\u4f8b\u5982\u4e0a\u9762\u7684 <code>age</code>\uff09\u3002</p> C++ \u4e2d <code>class</code> \u548c <code>struct</code> \u7684\u533a\u522b <p>\u4e8b\u5b9e\u4e0a\uff0c\u5728 C++ \u4e2d <code>class</code> \u548c <code>struct</code> \u7684 \u552f\u4e00 \u533a\u522b\u662f\uff1a<code>class</code> \u7684\u6240\u6709\u6210\u5458\u9ed8\u8ba4\u662f <code>private</code> \u7684\uff0c\u800c <code>struct</code> \u7684\u6240\u6709\u6210\u5458\u9ed8\u8ba4\u662f <code>public</code> \u7684class.access.general#3\uff1b\u6ca1\u6709\u5176\u4ed6\u4efb\u4f55\u5dee\u522b\u3002\u56e0\u6b64\uff0c<code>class Foo { /* something */ };</code> \u548c <code>struct Foo {private: /* something */ };</code> \u662f\u5b8c\u5168\u7b49\u4ef7\u7684\u3002</p>"},{"location":"cpp/cpp_restart/3_oop/#\u5c0f\u7ed3","title":"\u5c0f\u7ed3","text":"<p>\u603b\u7ed3\u6765\u8bf4\uff0c\u5c01\u88c5 \u601d\u60f3\u5c06\u6570\u636e\u4e0e\u64cd\u7eb5\u6570\u636e\u7684\u51fd\u6570\u4ee5\u66f4\u52a0\u660e\u786e\u7684\u65b9\u5f0f\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u5e76\u7ed9\u4e88\u5fc5\u8981\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u4ece\u800c\u9632\u6b62\u5916\u90e8\u968f\u610f\u8bbf\u95ee\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u6216\u51fd\u6570\u3002</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u6709\u52a9\u4e8e\u964d\u4f4e\u7cfb\u7edf\u7684\u590d\u6742\u6027\u548c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\uff0c\u4f8b\u5982\u5728\u524d\u4f8b\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u6a21\u7cca\u6240\u6709\u8f93\u51fa\u7684\u5e74\u9f84\u6570\u636e\uff08\u4f8b\u5982\u820d\u5165\u5230 10\uff09\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539 <code>getAge()</code> \u4e2d\u7684\u4ee3\u7801\uff0c\u800c\u4e0d\u9700\u8981\u5728\u6240\u6709\u8bbf\u95ee\u8fc7 <code>user.age</code> \u7684\u5730\u65b9\u505a\u4fee\u6539\u3002</p>"},{"location":"cpp/cpp_restart/3_oop/#32-\u7ee7\u627f--\u591a\u6001--inheritance--polymorphism","title":"3.2 \u7ee7\u627f &amp; \u591a\u6001 | Inheritance &amp; Polymorphism","text":"<p>\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff01\u6211\u4eec\u5728 3.1 \u4e2d\u5047\u8bbe\u6211\u4eec\u548c\u961f\u53cb\u4e00\u8d77\u505a\u5927\u7a0b\uff0c\u60f3\u8981\u505a\u4e00\u4e2a\u7ed8\u56fe\u677f\uff1b\u6211\u4eec\u5df2\u7ecf\u505a\u597d\u4e86\u67d0\u79cd <code>list</code>\uff0c\u7528\u6765\u4fdd\u5b58\u6211\u4eec\u7684\u5404\u79cd\u56fe\u5f62\u3002\u5047\u8bbe\u6211\u4eec\u76ee\u524d\u652f\u6301 2 \u79cd\u56fe\u5f62\uff1a\u5706\u5f62\u548c\u957f\u65b9\u5f62\u3002\u6211\u4eec\u8bbe\u8ba1\u4e86\u5982\u4e0b\u7684\u7c7b\uff1a</p> <pre><code>class Point { /* ... */ };  // \u7528\u6765\u4fdd\u5b58\u5750\u6807\n\nclass Circle {\npublic:\nPoint center;\nint radius;\nvoid draw() {\n// \u505a\u4e00\u4e9b\u51c6\u5907\uff08\u4f8b\u5982\u51c6\u5907\u753b\u7b14\uff09\n// \u753b\u5706\uff01\n// \u505a\u4e00\u4e9b\u540e\u7eed\u5904\u7406\uff08\u4f8b\u5982\u91cd\u7f6e\u753b\u7b14\uff09\n}\n};\n\nclass Rectangle {\npublic:\nPoint center;\nint width, height;\nvoid draw() {\n// \u505a\u4e00\u4e9b\u51c6\u5907\uff08\u4f8b\u5982\u51c6\u5907\u753b\u7b14\uff09\n// \u753b\u957f\u65b9\u5f62\uff01\n// \u505a\u4e00\u4e9b\u540e\u7eed\u5904\u7406\uff08\u4f8b\u5982\u91cd\u7f6e\u753b\u7b14\uff09\n}\n};\n</code></pre> <p>Tips</p> <p>\u5728 C++ \u4e2d\uff0c\u5982\u679c\u6709\u5bf9 <code>struct Foo</code> \u7684\u5b9a\u4e49\uff0c\u5728\u4f7f\u7528\u8fd9\u4e2a\u7ed3\u6784\u4f53\u65f6\u53ea\u9700\u8981\u5199 <code>Foo</code> \u5373\u53ef\uff0c\u800c\u65e0\u9700\u50cf C \u8bed\u8a00\u90a3\u6837\u5e26\u4e0a\u5173\u952e\u5b57 <code>struct</code>\u3002<code>class</code> \u4e5f\u7c7b\u4f3c\u3002\u4e0a\u9762\u4ee3\u7801\u7b2c 5 \u884c\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002</p> <p>\u8fd9\u79cd\u8bbe\u8ba1\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\u3002</p> <p>\u5176\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 <code>Circle</code> \u548c <code>Rectangle</code> \u5305\u542b\u4e86\u4e00\u4e9b\u516c\u5171\u7684\u90e8\u5206\uff0c\u4f8b\u5982 <code>center</code> \u6210\u5458\u548c <code>draw()</code> \u4e2d\u7684\u51c6\u5907\u548c\u540e\u7eed\u5904\u7406\u3002\u8fd9\u79cd\u8bbe\u8ba1\u7684\u95ee\u9898\u662f\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8c03\u6574\u51c6\u5907\u548c\u540e\u7eed\u5904\u7406\u7684\u5185\u5bb9\uff08\u4f8b\u5982\u8bbe\u7f6e\u753b\u7b14\u989c\u8272\uff09\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e24\u4e2a\u7c7b\u4e2d\u90fd\u505a\u4e00\u6b21\u76f8\u540c\u7684\u4fee\u6539\uff1b\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a\u300c\u51c6\u5907\u300d\u548c\u300c\u540e\u7eed\u5904\u7406\u300d\u63d0\u51fa\u6210\u51fd\u6570\u6765\u90e8\u5206\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff08\u867d\u7136\u8fd9\u6837\u4f1a\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7834\u574f\u5c01\u88c5\u6027\uff09\uff1a</p> <pre><code>void draw_prepare() { /* \u505a\u4e00\u4e9b\u51c6\u5907\uff08\u4f8b\u5982\u51c6\u5907\u753b\u7b14\uff09*/ } void draw_finalize() { /* \u505a\u4e00\u4e9b\u540e\u7eed\u5904\u7406\uff08\u4f8b\u5982\u91cd\u7f6e\u753b\u7b14\uff09*/ }\n\nclass Circle {\npublic:\nPoint center;\nint radius;\nvoid draw() {\ndraw_prepare();\n// \u753b\u5706\uff01\ndraw_finalize();\n}\n};\n\nclass Rectangle {\npublic:\nPoint center;\nint width, height;\nvoid draw() {\ndraw_prepare();\n// \u753b\u957f\u65b9\u5f62\uff01\ndraw_finalize();\n}\n};\n</code></pre> <p>\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u7ed9\u5404\u4e2a\u56fe\u5f62\u7c7b\u6dfb\u52a0\u4e00\u4e9b\u516c\u5171\u7684\u5c5e\u6027\uff08\u4f8b\u5982\u989c\u8272\uff09\uff0c\u6211\u4eec\u5c31\u4ecd\u7136\u4e0d\u5f97\u4e0d\u5728\u5404\u4e2a\u7c7b\u4e2d\u90fd\u505a\u4e00\u6b21\u76f8\u540c\u7684\u4fee\u6539\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u6ca1\u529e\u6cd5\u901a\u8fc7\u7c7b\u4f3c\u4e0a\u9762\u7684\u65b9\u5f0f\u89e3\u51b3\u4e86\u3002\u800c\u4e14\u5982\u679c\u6211\u4eec\u652f\u6301\u66f4\u591a\u7684\u56fe\u5f62\u79cd\u7c7b\uff0c\u8fd9\u79cd\u91cd\u590d\u4f1a\u66f4\u591a\u3002\u8fd9\u8bf4\u660e\u6211\u4eec\u7684\u4ee3\u7801\u590d\u7528\u6027\u8f83\u5dee\u3001\u7ef4\u62a4\u96be\u5ea6\u8f83\u9ad8\u3002</p> <p>\u5176\u4e8c\uff0c\u5728\u8fd9\u6837\u7684\u8bbe\u8ba1\u4e0b\uff0c\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u524d\u9762\u7684\u67d0\u79cd\u7ebf\u6027\u8868\u4fdd\u5b58\u65f6\uff0c\u4e0d\u5f97\u4e0d\u4fdd\u5b58\u4e3a\u4e24\u4e2a\u7ebf\u6027\u8868\uff1b\u4f46\u662f\u7531\u4e8e <code>typedef</code> \u4e0d\u80fd\u50cf <code>#define</code> \u90a3\u6837\u53d6\u6d88\u5b9a\u4e49\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u80fd\u5199\u51fa\u8fd9\u6837\u7684\u4e11\u964b\u4ee3\u7801\uff1a</p> <pre><code>#define elem Circle\n#include \"linkedlist.h\"\n#undef elem\n\n#define elem Rectangle\n#include \"linkedlist.h\"\n#undef elem\n</code></pre> <p>\u800c\u4e14\u5176\u5b9e\u8fd9\u4e2a\u4ee3\u7801\u8fd8\u6ca1\u529e\u6cd5\u6210\u529f\u7f16\u8bd1\uff0c\u56e0\u4e3a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u6709\u4e24\u4efd\u4e0d\u540c\u7684 <code>node</code> \u548c <code>linkedlist</code> \u5b9a\u4e49\uff1a</p> <p></p> <p>\u5373\u4f7f\u4e0d\u8003\u8651\u8bed\u8a00\u7684\u9650\u5236\uff0c\u4e5f\u4f1a\u51fa\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff1a\u5982\u679c\u6211\u4eec\u652f\u6301 16 \u79cd\u4e0d\u540c\u7684\u56fe\u5f62\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981 16 \u4e2a\u4e0d\u540c\u7684\u94fe\u8868\u6765\u4fdd\u5b58\u8fd9\u4e9b\u56fe\u5f62\uff1b\u5728\u6bcf\u6b21\u904d\u5386\u3001\u67e5\u627e\u3001\u5220\u9664\u3001\u63d2\u5165\u7b49\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u4ee3\u7801\u90fd\u9700\u8981\u5904\u7406\u8fd9 16 \u4e2a\u94fe\u8868\uff0c\u8fd9\u662f\u975e\u5e38\u4e0d\u4f18\u96c5\u7684\u3002\u66f4\u4e0d\u4f18\u96c5\u7684\u662f\uff0c\u5982\u679c\u8981\u589e\u52a0\u4e00\u79cd\u65b0\u7684\u56fe\u5f62\uff0c\u6211\u4eec\u9700\u8981\u5728 \u6bcf\u5904 \u4f7f\u7528\u94fe\u8868\u7684\u5730\u65b9\u90fd\u589e\u52a0\u5bf9\u65b0\u7684\u56fe\u5f62\u5bf9\u5e94\u94fe\u8868\u7684\u5904\u7406\uff08\u9ad8\u4eae\u5904\u8868\u793a\u589e\u52a0\u4e00\u79cd\u65b0\u7684\u56fe\u5f62\u9700\u8981\u505a\u7684\u66f4\u6539\uff09\uff1a</p> <pre><code>enum shape_type { CIRCLE, RECTANGLE, TRIANGLE };\n\nlinkedlist_circle lc;\nlinkedlist_rectange lr;\nlinkedlist_triangle lt;\n\nvoid drawall() {\nfor (int i = 0; i &lt; lc.size(); i++)\nlc.get(i)-&gt;draw();\nfor (int i = 0; i &lt; lr.size(); i++)\nlr.get(i)-&gt;draw();\nfor (int i = 0; i &lt; lt.size(); i++)\nlt.get(i)-&gt;draw();\n}\n\nvoid remove(shape_type type, int index) {\nif (type == CIRCLE)\nlc.remove(index);\nelse if (type == RECTANGLE)\nlr.remove(index);\nelse if (type == TRIANGLE)\nlt.remove(index);\n}\n</code></pre> <p>\u8fd9\u4e5f\u8bf4\u660e\u6211\u4eec\u5f53\u524d\u7684\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u8f83\u4f4e\u3002</p> <p>\u6211\u4eec\u4ecb\u7ecd OOP \u4e2d\u7684 \u7ee7\u627f (inheritance) \u673a\u5236\uff0c\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u79cd\u673a\u5236\u5141\u8bb8\u6211\u4eec\u5efa\u7acb\u300c\u6709\u5c42\u6b21\u7684\u300d\u7c7b\uff0c\u800c\u975e\u72ec\u7acb\u7684\u4e00\u4e2a\u4e00\u4e2a\u7684\u7c7b\u3002</p> <p>\u4f8b\u5982\u6211\u4eec\u5b9a\u4e49\u4e86\u300c\u4eba\u7c7b\u300d\u8fd9\u4e2a\u7c7b\uff0c\u6709\u65f6\u6211\u4eec\u9700\u8981\u66f4\u7ec6\u81f4\u7684\u5212\u5206\u3002\u4f8b\u5982\u6211\u4eec\u9700\u8981\u300c\u5b66\u751f\u300d\u8fd9\u6837\u4e00\u4e2a\u7c7b\u3002\u663e\u7136\uff0c\u300c\u5b66\u751f\u300d\u662f\u300c\u4eba\u7c7b\u300d\u7684\u771f\u5b50\u96c6\uff0c\u56e0\u6b64\u300c\u5b66\u751f\u300d\u8fd9\u4e2a\u7c7b\u5fc5\u7136\u62e5\u6709\u300c\u4eba\u7c7b\u300d\u7684\u72b6\u6001\u548c\u884c\u4e3a\u3002\u800c\u4e0d\u540c\u7684\u662f\uff0c\u300c\u5b66\u751f\u300d\u4f5c\u4e3a\u4e00\u4e2a\u66f4\u7ec6\u7684\u5212\u5206\uff0c\u5177\u6709\u4e00\u4e9b\u300c\u4eba\u7c7b\u300d\u4e0d\u4e00\u5b9a\u5177\u6709\u7684\u72b6\u6001\u548c\u884c\u4e3a\uff0c\u4f8b\u5982\u5747\u7ee9\u548c\u4ea4\u4f5c\u4e1a\u3002\u7ee7\u627f \u53ef\u4ee5\u8ba9\u6211\u4eec\u514b\u9686\u5df2\u7ecf\u5b58\u5728\u7684\u7c7b\u7684\u72b6\u6001\u548c\u884c\u4e3a\uff0c\u5e76\u5728\u514b\u9686\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e00\u4e9b\u589e\u52a0\u6216\u4fee\u6539\uff0c\u4ece\u800c\u83b7\u5f97\u6211\u4eec\u9700\u8981\u7684\u7c7b\u3002\u6211\u4eec\u628a\u88ab\u7ee7\u627f\u7684\u7c7b\u79f0\u4e3a \u57fa\u7c7b (base class)\uff0c\u800c\u7ee7\u627f\u4ea7\u751f\u7684\u65b0\u7c7b\u79f0\u4e3a \u6d3e\u751f\u7c7b (derived class)\u3002</p> <p>\u518d\u6b21\u63d0\u793a\uff01\u672c\u8282\u4e2d\uff0c\u5927\u5bb6\u4e0d\u5fc5\u592a\u5728\u610f\u8bed\u6cd5\u7ec6\u8282\u3002</p> <p>\u57fa\u7c7b\u4e5f\u88ab\u79f0\u4e3a \u7236\u7c7b (parent class) \u6216\u8005 \u8d85\u7c7b (super class)\uff1b\u6d3e\u751f\u7c7b\u4e5f\u88ab\u79f0\u4e3a \u5b50\u7c7b (child class / sub class)\u3002 </p> <p>\u62ff\u524d\u9762\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u8fd9\u6837\u7684\u7c7b\uff1a</p> <pre><code>class Shape {       // \u57fa\u7c7b Shape\nprivate:\nvoid prepare()  { /* \u505a\u4e00\u4e9b\u51c6\u5907\uff08\u4f8b\u5982\u51c6\u5907\u753b\u7b14\uff09*/ } void finalize() { /* \u505a\u4e00\u4e9b\u540e\u7eed\u5904\u7406\uff08\u4f8b\u5982\u91cd\u7f6e\u753b\u7b14\uff09*/ }\npublic:\nPoint center;   // \u5171\u6709\u7684\u6210\u5458\u53d8\u91cf\n\nvoid draw() {   // \u5171\u6709\u7684\u6210\u5458\u51fd\u6570\nprepare();\ndo_draw();\nfinalize();\n}\nvirtual void do_draw() = 0; // \u8981\u6c42\u6240\u6709\u6d3e\u751f\u7c7b\u90fd\u5b9e\u73b0 do_draw()\n};\n</code></pre> <p>\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u57fa\u7c7b <code>Shape</code>\uff0c\u5b83\u4fdd\u5b58\u4e86\u5404\u79cd\u56fe\u5f62\u5171\u540c\u5177\u6709\u7684\u72b6\u6001\uff08<code>center</code>\uff09\u548c\u884c\u4e3a\uff08<code>draw()</code>\uff09\uff1b\u540c\u65f6\u89c4\u5b9a\u4e86\u6240\u6709\u6d3e\u751f\u7c7b\u90fd\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a <code>do_draw()</code> \u51fd\u6570\u6765\u5b8c\u6210\u7ed8\u5236\u81ea\u8eab\u7684\u5b9e\u9645\u64cd\u4f5c\u3002</p> <p>\u8fd9\u6837\uff0c\u5b50\u7c7b\u901a\u8fc7 <code>class Circle : public Shape</code> \u7684\u8bed\u6cd5\u8bf4\u660e\u5b83\u7ee7\u627f\u81ea <code>Shape</code>\uff0c\u5373\u8bf4\u660e\u4e86\u300c\u4e00\u4e2a <code>Circle</code> \u662f\u4e00\u4e2a <code>Shape</code>\u300d\u7684\u903b\u8f91\uff0c\u56e0\u6b64 <code>Circle</code> \u7c7b\u81ea\u7136\u5305\u542b\u4e86 <code>Shape</code> \u4e2d\u7684\u6240\u6709\u72b6\u6001\u548c\u884c\u4e3a\uff08\u5373 <code>center</code> \u548c <code>draw</code>\uff09\u3002\u8fd9\u6837\uff0c\u5b50\u7c7b\u5c31\u53ea\u9700\u8981\u5904\u7406\u81ea\u5df1\u72ec\u6709\u7684\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u7684\u5b9e\u73b0\u4e86\uff1a</p> <pre><code>class Circle : public Shape {   // Circle \u7ee7\u627f Shape\npublic:\nint radius;     // \u72ec\u6709\u7684\u6210\u5458\u53d8\u91cf\n\nvoid do_draw() {\n// \u753b\u5706\uff01\n}\n};\n\nclass Rectangle : public Shape { // Rectangle \u7ee7\u627f Shape\npublic:\nint width, height; // \u72ec\u6709\u7684\u6210\u5458\u51fd\u6570\n\nvoid do_draw() {\n// \u753b\u957f\u65b9\u5f62\uff01\n}\n};\n</code></pre> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u57fa\u7c7b\u4e2d\u7684 <code>draw()</code> \u51fd\u6570\u4e2d\u5b8c\u6210\u4e86\u5171\u6709\u7684\u300c\u51c6\u5907\u300d\u548c\u300c\u540e\u7eed\u5904\u7406\u300d\u7684\u64cd\u4f5c\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u91cd\u7528\u5ea6\uff1b\u5e76\u8c03\u7528\u4e86 <code>do_draw()</code> \u51fd\u6570\u6765\u4f7f\u7528 \u5b50\u7c7b \u7684\u7ed8\u56fe\u64cd\u4f5c\u5b8c\u6210\u771f\u6b63\u7684\u7ed8\u56fe\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u867d\u7136\u4ee3\u7801\u4e2d\u5199\u7684\u662f <code>do_draw()</code>\uff0c\u4f46\u662f\u4ee3\u7801\u8fd0\u884c\u65f6\u4f1a\u6839\u636e\u8c03\u7528\u5b83\u7684\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6765\u51b3\u5b9a\u5230\u5e95\u8c03\u7528 <code>Circle::do_draw()</code> \u8fd8\u662f <code>Rectangle::do_draw()</code> \u3002\u8fd9\u79cd\u673a\u5236\u5c31\u662f OOP \u4e2d\u7684 \u591a\u6001 (polymorphism)\u3002</p> <p>\u7ee7\u627f\u548c\u591a\u6001\u7684\u5171\u540c\u4f5c\u7528\uff0c\u4f7f\u5f97\u4e0a\u9762\u7684\u4ee3\u7801\u5c55\u73b0\u51fa\u4e86\u975e\u5e38\u597d\u7684\u53ef\u7ef4\u62a4\u6027\uff01\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u662f\u975e\u5e38\u65b9\u4fbf\u7684\uff1a</p> <pre><code>typedef Shape elem;\n#include \"linkedlist.h\"\n\nlinkedlist list;\n\nvoid drawall() {\nfor (int i = 0; i &lt; list.size(); i++)\nlist.get(i)-&gt;draw();\n}\n</code></pre> <p>\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u628a\u6307\u5411 <code>Circle</code> \u548c <code>Rectangle</code> \u7684\u6307\u9488\u5f53\u505a\u6307\u5411 <code>Shape</code> \u7684\u6307\u9488\u4f5c\u4e3a <code>list</code> \u4e2d\u7684\u5143\u7d20\uff0c\u8fd9\u79cd\u5c06\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5f53\u505a\u57fa\u7c7b\u5bf9\u8c61\u5904\u7406\u7684\u673a\u5236\u53eb\u505a \u5411\u4e0a\u8f6c\u578b (upcasting)\u3002\u8fd9\u6837\u505a\u7684\u5408\u6cd5\u6027\u662f\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u56e0\u4e3a\u7ee7\u627f\u5173\u7cfb\u672c\u6765\u5c31\u662f\u300c\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u662f\u57fa\u7c7b\u7684\u5bf9\u8c61\u300d\u7684\u610f\u601d\u3002\u90a3\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u7a0b\u5e8f\u5982\u4f55\u77e5\u9053\u8fd9\u4e2a\u5bf9\u8c61\u5230\u5e95\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b\u5462\uff1f\u6211\u4eec\u7559\u5230\u540e\u9762\u5177\u4f53\u8ba8\u8bba C++ \u4e2d\u7684\u7c7b\u7684\u65f6\u5019\u518d\u5c55\u5f00\uff01</p> <p>\u6211\u4eec\u4e3e\u4f8b\u8bf4\u660e\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3002\u4f8b\u5982\u6211\u4eec\u60f3\u8981\u7ed9\u6240\u6709\u56fe\u5f62\u589e\u52a0\u300c\u989c\u8272\u300d\u5c5e\u6027\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 <code>Shape</code> \u4e2d\u589e\u52a0\u4e00\u4e2a\u5b57\u6bb5\uff0c\u5e76\u4e14\u5728 <code>prepare()</code> \u4e2d\u589e\u52a0\u8bbe\u7f6e\u753b\u7b14\u989c\u8272\u7684\u4ee3\u7801\uff0c\u5fc5\u8981\u7684\u8bdd\u5728 <code>finalize()</code> \u4e2d\u589e\u52a0\u91cd\u7f6e\u753b\u7b14\u989c\u8272\u7684\u4ee3\u7801\u5373\u53ef\u3002</p> <p>\u518d\u4f8b\u5982\u6211\u4eec\u60f3\u8981\u589e\u52a0\u4e00\u79cd\u65b0\u7684\u56fe\u5f62\uff1a\u6587\u672c\u6846\uff1b\u5e76\u4e14\u5e0c\u671b\u7ed9\u5b83\u589e\u52a0\u300c\u753b\u7b14\u7c97\u7ec6\u300d\u7684\u63a7\u5236\u529f\u80fd\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u73b0\u6709\u4ee3\u7801\u505a\u4efb\u4f55\u66f4\u6539\uff1a</p> <pre><code>class Textbox : public Shape {\npublic:\nchar* text;\nint penwidth;\n\nvoid do_draw() {\nint old_penwidth = get_penwidth();\nset_penwidth(penwidth);\n// \u753b\u51fa\u6587\u672c\u6846\u548c\u6587\u672c\u5185\u5bb9\nset_penwidth(old_penwidth);\n}\n}\n</code></pre>"},{"location":"cpp/cpp_restart/3_oop/#33-\u603b\u7ed3","title":"3.3 \u603b\u7ed3","text":"<p>\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86 OOP \u7684\u4e09\u4e2a\u91cd\u8981\u601d\u60f3\uff0c\u5373\u5c01\u88c5\u3001\u7ee7\u627f\u548c\u591a\u6001\u3002\u5c01\u88c5\u5f3a\u8c03\u300c\u6570\u636e\u300d\u4e0e\u300c\u64cd\u7eb5\u6570\u636e\u7684\u51fd\u6570\u300d\u7684\u7ed1\u5b9a\u4ee5\u53ca\u5fc5\u8981\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u4ece\u800c\u62bd\u8c61\u51fa\u300c\u7c7b\u300d\u548c\u300c\u5bf9\u8c61\u300d\u7684\u6982\u5ff5\uff1b\u7ee7\u627f\u5219\u8fdb\u4e00\u6b65\u523b\u753b\u51fa\u4e86\u73b0\u5b9e\u95ee\u9898\u4e2d\u300c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u662f\u57fa\u7c7b\u5bf9\u8c61\u300d\u7684\u300cis-a relationship\u300d\uff0c\u4ece\u800c\u5f62\u6210\u300chierarchy of classes\u300d\uff0c\u6709\u52a9\u4e8e\u63d0\u9ad8\u4ee3\u7801\u91cd\u7528\u6027\uff1b\u800c\u591a\u6001\u5219\u5728\u8fd9\u79cd\u300chierarchy of classes\u300d\u7684\u7ed3\u6784\u4e2d\u63d0\u4f9b\u4e86\u8fdb\u4e00\u6b65\u7684\u62bd\u8c61\uff0c\u5141\u8bb8\u7a0b\u5e8f\u5458\u628a\u300c\u5224\u65ad\u5bf9\u8c61\u5230\u5e95\u662f\u54ea\u4e2a\u5b50\u7c7b\u300d\u7684\u4efb\u52a1\u4ea4\u7ed9\u8ba1\u7b97\u673a\uff0c\u4ece\u800c\u80fd\u591f\u5728\u4ee3\u7801\u6269\u5c55\u65f6\u4e0d\u9700\u8981\u4fee\u6539\u539f\u6709\u4ee3\u7801\u5c31\u80fd\u81ea\u52a8\u9002\u914d\u65b0\u7684\u7c7b\u578b\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\u968f\u7740\u62bd\u8c61\u7a0b\u5ea6\u7684\u9010\u6b65\u63d0\u9ad8\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u4e5f\u4f1a\u5f97\u5230\u8fdb\u4e00\u6b65\u7684\u63d0\u5347\uff0c\u4ee3\u7801\u4f1a\u66f4\u63a5\u8fd1\u4e8e\u7a0b\u5e8f\u5458\u5bf9\u95ee\u9898\u7684\u5efa\u6a21\uff0c\u800c\u66f4\u5c11\u5730\u5173\u6ce8\u673a\u5668\u5b9e\u73b0\u7684\u7ec6\u8282\u3002\u5f53\u7136\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u7701\u7565\u7684\u8fd9\u4e9b\u7ec6\u8282\u4e5f\u9700\u8981\u8bed\u8a00\u672c\u8eab\u5728\u7f16\u8bd1\u65f6\u6216\u8005\u8fd0\u884c\u65f6\u5b8c\u6210\u5177\u4f53\u7684\u5b9e\u73b0\u3002\u5728\u540e\u9762\u7684\u82e5\u5e72\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba C++ \u5bf9 OOP \u7684\u652f\u6301\u3002</p> <p>\u6211\u4eec\u5c06\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u8fd9\u91cc\u63d0\u5230\u7684\u300c\u7ec4\u5408\u300d\u4ee5\u53ca\u300c\u6cdb\u578b\u7f16\u7a0b\u300d\u3002</p> <p>\u4e0d\u8fc7\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u7c7b\u3001\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\u7684\u6982\u5ff5\u5e76\u975e OOP \u72ec\u6709\u7684\uff1b\u751a\u81f3\u53ef\u80fd\u5404\u4f4d\u5728\u66fe\u7ecf\u7684\u7f16\u7a0b\u8fc7\u7a0b\u4e2d\u4e5f\u81ea\u7136\u800c\u7136\u5730\u4f7f\u7528\u4e86\u76f8\u4f3c\u7684\u505a\u6cd5\u6216\u601d\u60f3\u3002\u540c\u65f6\uff0cOOP \u53ea\u662f C++ \u652f\u6301\u7684\u591a\u79cd\u7f16\u7a0b\u8303\u5f0f\u4e4b\u4e00\uff1b\u5b83\u5c06\u7c7b\u7ed3\u6784\u5316\uff0c\u5e76\u4f7f\u7528\u591a\u6001\u6765\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u64cd\u63a7\u3001\u901a\u8fc7\u7ee7\u627f\u6269\u5c55\u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u5982\u679c\u95ee\u9898\u672c\u8eab\u5e76\u4e0d\u5177\u6709\u7ee7\u627f\u7684\u7ed3\u6784\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u5f3a\u884c\u4f7f\u7528 OOP\u3002\u5728\u4e00\u4e9b\u60c5\u51b5\u91cc\uff0c\u4f7f\u7528\u5355\u72ec\u7684\u7c7b\u3001\u5355\u72ec\u7684\u51fd\u6570\uff0c\u6216\u8005\u4f7f\u7528\u7ec4\u5408\u800c\u975e\u7ee7\u627f\uff0c\u53c8\u6216\u8005\u4f7f\u7528\u6cdb\u578b\u7f16\u7a0b\uff0c\u53ef\u80fd\u66f4\u52a0\u9002\u5408\u3002</p>"},{"location":"cpp/cpp_restart/4_class_1/","title":"4 \u7c7b (I)","text":"<p> \u7ea6 1206 \u4e2a\u5b57  76 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Warning</p> <p>\u4ece\u672c\u8282\u5f00\u59cb\uff0c\u6211\u4eec\u5728\u90e8\u5206\u5185\u5bb9\u4f1a\u5c1d\u8bd5\u76f4\u63a5\u4f7f\u7528 standard \u7684\u76f8\u5e94\u5185\u5bb9\u8bb2\u89e31\u3002\u7531\u4e8e\u4f1a\u6d89\u53ca\u5230\u4e00\u4e9b\u5c1a\u672a\u8ba8\u8bba\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u8fd9\u4e9b\u5185\u5bb9\u6211\u4eec\u4f1a\u901a\u8fc7\u811a\u6ce8\u7684\u65b9\u5f0f\u7ed9\u51fa\u3002\u521d\u5b66\u8005\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e9b\u811a\u6ce8\u3002</p> <p>\u56e0\u6b64\uff0c\u4ece\u672c\u8282\u5f00\u59cb\uff0c\u7c7b\u4f3c\u672c\u8282\u8fd9\u6837\u6709\u6bd4\u8f83\u5927\u91cf\u7684\u53c2\u8003\u8d44\u6599\u6807\u6ce8\u548c\u811a\u6ce8\u7684\u6587\u7ae0\uff0c\u4f1a\u63d0\u4f9b\u4e0b\u9762\u7684\u6309\u94ae\u6765\u5e2e\u52a9\u63d0\u9ad8\u9605\u8bfb\u8d28\u91cf\uff08\u6587\u672b\u4e5f\u4f1a\u6709\u4e00\u4efd\uff09\uff1a</p> <p>  function toggleVisibility() {   const links = document.querySelectorAll('a');   const buttons = document.querySelectorAll('.xyx-toggle');   links.forEach(link =&amp;gt; {     if (!link.classList.contains('md-nav__link') &amp;amp;&amp;amp;         !link.classList.contains('md-tabs__link') &amp;amp;&amp;amp;         !link.classList.contains('md-source') &amp;amp;&amp;amp;         !link.classList.contains('md-header__button') &amp;amp;&amp;amp;         !link.closest('.md-nav__link') &amp;amp;&amp;amp;         !link.closest('.md-tabs__link') &amp;amp;&amp;amp;         !link.closest('.md-source') &amp;amp;&amp;amp;         !link.closest('.footnote-backref') &amp;amp;&amp;amp;         !link.closest('.footnote-ref') &amp;amp;&amp;amp;         !link.closest('.md-header__button') &amp;amp;&amp;amp;         !inFootnote(link)         ) {       if (link.style.display === 'none') {         link.style.display = 'inline';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u9690\u85cf\u6b63\u6587\u6240\u6709\u94fe\u63a5';         }       } else {         link.style.display = 'none';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u663e\u793a\u6b63\u6587\u6240\u6709\u94fe\u63a5';         }       }     }   }); }   function toggleVisibilityFoot() {   const links = document.querySelectorAll('a');   const buttons = document.querySelectorAll('.xyx-toggle2');   links.forEach(link =&amp;gt; {     if (link.closest('.footnote-backref') ||         link.closest('.footnote-ref')) {       if (link.style.display === 'none') {         link.style.display = 'inline';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u9690\u85cf\u672c\u6587\u6240\u6709\u811a\u6ce8';         }       } else {         link.style.display = 'none';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u663e\u793a\u672c\u6587\u6240\u6709\u811a\u6ce8';         }       }     }   });&lt;/p&gt; &lt;p&gt;const footnotes = document.querySelectorAll('.footnote');   for (const footnote of footnotes) {     if (footnote.style.display === 'none') {       footnote.style.removeProperty('display');     } else {       footnote.style.display = 'none';     }   } } </p> <p> \u70b9\u51fb\u6b64\u5904\u9690\u85cf\u6b63\u6587\u6240\u6709\u94fe\u63a5 \u70b9\u51fb\u6b64\u5904\u9690\u85cf\u672c\u6587\u6240\u6709\u811a\u6ce8 </p>"},{"location":"cpp/cpp_restart/4_class_1/#41-\u7c7b\u7684\u5b9a\u4e49","title":"4.1 \u7c7b\u7684\u5b9a\u4e49","text":"<p>\u6211\u4eec\u5728\u4e0a\u4e00\u8282\u5df2\u7ecf\u770b\u5230\u4e86\u7c7b\u7684\u5b9a\u4e49\u7684\u4e00\u4e9b\u5177\u4f53\u4f8b\u5b50\uff0c\u4f8b\u5982\uff1a</p> <pre><code>class Textbox : public Shape {\npublic:\nchar* text;\nint penwidth;\n\nvoid do_draw() {\nint old_penwidth = get_penwidth();\nset_penwidth(penwidth);\n// \u753b\u51fa\u6587\u672c\u6846\u548c\u6587\u672c\u5185\u5bb9\nset_penwidth(old_penwidth);\n}\n}\n</code></pre> <p>\u5728 C++ \u4e2d\uff0c\u6bcf\u4e2a\u7c7b\u7684\u5b9a\u4e49 (class definition) \u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u7c7b\u578bclass.name#1\u3002\u56e0\u6b64\uff0c\u6709\u4e86\u4e0a\u9762\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5b83\u6765\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u5982 <code>Textbox tb;</code> \u58f0\u660e\u5e76\u5b9a\u4e49basic.def#2\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a <code>Textbox</code>\uff0c\u540d\u4e3a <code>tb</code> \u7684\u53d8\u91cf\u3002</p> <p>Note</p> <p>\u5728 C++ \u4e2d\uff0c\u7528\u7c7b\u6765\u5b9a\u4e49\u53d8\u91cf\u65f6\uff0c\u4e0d\u5fc5\u50cf C \u8bed\u8a00\u90a3\u6837\u5e26\u6709 <code>struct</code> \u5173\u952e\u5b57\u3002\u5373\uff0c\u5982\u679c\u6709 <code>class Foo</code> \u6216\u8005 <code>struct Bar</code> \u7684\u5b9a\u4e49\uff0c\u90a3\u4e48 <code>Foo x;</code>, <code>class Foo x;</code>, <code>Bar b;</code>, <code>struct Bar b;</code> \u90fd\u662f\u5408\u6cd5\u7684\u58f0\u660e\u8bed\u53e5\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u4ece C with Classes \u8bbe\u8ba1\u4e4b\u521d\u5c31\u5e0c\u671b\u8ba9\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\u4e0d\u662f\u4e8c\u7b49\u516c\u6c11\uff0c\u800c\u662f\u80fd\u88ab\u4e0e\u5185\u7f6e\u7c7b\u578b\u4e00\u6837\u7684\u65b9\u5f0f\u4f7f\u7528\u3002</p> Elaborated type specifiers <p>\u5e26\u6709 <code>struct</code> \u6216\u8005 <code>class</code> \u5173\u952e\u5b57\u7684\u7c7b\u578b\u540d (\u5982 <code>class Foo</code>) \u53eb\u505a Elaborated type specifiersdcl.type.elab\u3002</p> <p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u7c7b\u4f3c <code>struct x {}; int x;</code> \u662f\u7b26\u5408\u8bed\u6cd5\u7684\uff1a\u867d\u7136\u8fd9\u4f1a\u4f7f\u5f97\u540d\u5b57 <code>x</code> \u65e2\u8868\u793a\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u53c8\u8868\u793a\u4e00\u4e2a\u53d8\u91cf\uff1b\u4f46\u5728 C \u8bed\u8a00\u4e2d\u8fd9\u4e0d\u4f1a\u5f15\u8d77\u6b67\u4e49\uff0c\u56e0\u4e3a\u5f53 <code>x</code> \u8868\u793a\u7ed3\u6784\u4f53\u65f6\u5fc5\u987b\u5e26\u4e0a <code>struct</code> \u5173\u952e\u5b57\u3002\u4e0d\u8fc7\u5728 C++ \u4e2d\uff0c\u76f4\u63a5\u4f7f\u7528 <code>x</code> \u5c31\u53ea\u80fd\u5f15\u7528\u5230\u53d8\u91cf <code>x</code> \u4e86\uff0c\u56e0\u4e3a\u6b64\u65f6 <code>int x;</code> \u7684 <code>x</code> hides <code>struct x {};</code> \u7684 <code>x</code>basic.scope.hiding\u3002</p> <p>\u4f46\u662f\u4e3a\u4e86\u517c\u5bb9 C\uff0cC++ \u5e76\u6ca1\u6709\u7981\u6b62\u4e0a\u8ff0\u5199\u6cd5\uff0c\u800c\u662f\u89c4\u5b9a\u53ef\u4ee5\u901a\u8fc7 Elaborated type specifiers \u663e\u5f0f\u5730\u6765\u4f7f\u7528\u7ed3\u6784\u4f53 <code>x</code>\uff0c\u5373\u4f7f\u7528 <code>struct x</code>basic.lookup.elab#1,class.name#2\uff1b\u5bf9 <code>class</code> \u4e5f\u4e00\u6837\u3002</p> <p>Elaborated type specifiers \u8fd8\u5728 forward declaration \u4ee5\u53ca enum \u4e2d\u6709\u7528\u9014\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u7c7b\u7684\u5b9a\u4e49\u5177\u6709\u5982\u4e0b\u5f62\u5f0f2class.pre#1,2\uff1a</p> <p></p> <ol> <li>\u8fd9\u91cc\u7684 opt \u6307\u660e\u67d0\u4e2a\u5143\u7d20\u662f\u53ef\u9009\u7684\u3002\u4f8b\u5982\uff0cclass-specifier: class-head { member-specificationopt } \u8bf4\u660e class-specifier \u4e2d\u53ef\u4ee5\u6ca1\u6709 member-specification\uff0c\u4f8b\u5982 <code>class Foo {}</code> \u6216\u8005 <code>class A : public B {}</code> \u4e4b\u7c7b\u7684\u3002</li> <li>\u8fd9\u91cc\u7684 class-name \u662f\u4e00\u4e2a identifier3\uff0c\u4f8b\u5982\u4e0a\u9762\u7684 <code>Foo</code> \u548c <code>A</code>\u3002</li> <li>\u8fd9\u91cc\u7684 class-key \u51b3\u5b9a\u4e86\u7c7b\u662f\u5426\u662f\u4e00\u4e2a union\uff0c\u4ee5\u53ca\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6210\u5458\u662f public \u7684\u8fd8\u662f private \u7684\u3002union \u4e00\u6b21\u6700\u591a\u4fdd\u5b58\u4e00\u4e2a\u6570\u636e\u6210\u5458\u7684\u503c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728 C++ \u4e2d\uff0cstruct, class, union \u90fd\u662f\u7c7b\u3002\u4f46\u662f\u5728\u672c\u8282\u7684\u540e\u7eed\u8ba8\u8bba\u4e2d\uff0c\u6211\u4eec\u6682\u65f6\u53ea\u8ba8\u8bba struct \u548c class\u3002</li> <li>\u8fd9\u91cc\u7684 attribute-specifier-seq \u548c class-virt-specifier \u73b0\u5728\u6682\u65f6\u4e0d\u7528\u7ba1\u3002</li> <li>\u8fd9\u91cc\u7684 base-clause \u5b9a\u4e49\u4e3a <code>base-clause : base-specifier-list</code>\uff0c\u662f\u7528\u6765\u5904\u7406\u6d3e\u751f\u7c7b\u7684\u3002\u4f8b\u5982 1 \u4e2d\u7684 <code>: public B</code>\u3002</li> <li>\u8fd9\u91cc\u7684 nested-name-specifier \u662f <code>::</code> \u6216\u8005 <code>Foo::</code> \u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u5176\u610f\u4e49\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u4f8b\u5b5045\uff1a https://godbolt.org/z/shjxaKhxc<pre><code>class Inner { };\n\nclass Outer {\npublic:\nclass Inner { int x; };\nOuter::Inner i;\nInner i2;\n::Inner i3;     // global Inner\nstruct A;       // declares struct Outer::A\n};\n\nstruct Outer::A {}; // defines struct Outer::A\n\nint main() {\nOuter o;\nInner i4;\nOuter::Inner i5;\nprintf(\"%d %d %d %d %d\", sizeof o.i, sizeof o.i2, sizeof o.i3, sizeof i4, sizeof i5);\n// Possible output: 4 4 1 1 4\nreturn 0;\n}\n</code></pre> \u5728 C++ \u4e2d\uff0c\u7c7b\u7684\u5b9a\u4e49\u4f1a\u5f15\u5165\u65b0\u7684\u4f5c\u7528\u57df\uff0c\u5176\u8303\u56f4\u662f member-specification \u7b49basic.scope.class#110\u3002\u56e0\u6b64\u8fd9\u91cc\u7684 <code>Outer::Inner</code> \u548c\u5916\u9762\u7684 <code>Inner</code> \u53ef\u4ee5\u540c\u65f6\u5b58\u57289\u3002 \u8fd9\u91cc\u7b2c 7 \u884c\u8bbf\u95ee\u5230 <code>Outer::Inner</code> \u662f\u56e0\u4e3a Name Hidingbasic.scope.hiding\uff0c\u5373\u6211\u4eec\u719f\u6089\u7684\u4f5c\u7528\u57df\u5c4f\u853d11\u3002</li> </ol> <p>C \u548c C++ \u90fd\u662f\u6309\u540d\u7b49\u4ef7 (name equivalence) \u800c\u975e\u6309\u7ed3\u6784\u7b49\u4ef7 (structural equivalence) \u76846\uff0c\u4f8b\u5982class.name#1\uff1a</p> <p></p> Forward Declaration <p>\u5982\u679c\u5f53\u524d\u4f5c\u7528\u57df\u6ca1\u6709\u540d\u4e3a <code>identifier</code> \u7684\u7c7b\uff0c\u90a3\u4e48\u5f62\u5982 <code>class-key attr identifier ;</code> \u7684\u58f0\u660e\u662f\u4e00\u4e2a forward declarationclass.name#2\u3002</p> <p>\u4f8b\u5982 <code>class Foo;</code>\uff0c\u5b83\u58f0\u660e\u4e86\u4e00\u4e2a\u53eb <code>Foo</code> \u7684\u7c7b\uff1b\u4f46\u76f4\u5230\u8fd9\u4e2a\u7c7b\u88ab\u5b9a\u4e49\u4e4b\u524d\uff0c\u5b83\u7684\u7c7b\u578b\u662f\u4e0d\u5b8c\u6574\u7684basic.types.general#5\u3002</p> <p>\u4e0d\u5b8c\u6574\u7684\u7c7b\u578b\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u4f46\u662f\u4e5f\u6709\u4e00\u4e9b\u53ef\u4ee5\u5b8c\u6210\u7684\u64cd\u4f5c\u3002\u4f8b\u5982\u4e0d\u5b8c\u6574\u7684\u7c7b\u578b\u4e0d\u80fd\u7528\u6765\u5b9a\u4e49\u53d8\u91cf\uff08\u5305\u62ec\u6210\u5458\u53d8\u91cf\uff09\u3001\u4f5c\u4e3a\u51fd\u6570\u58f0\u660e\u6216\u5b9a\u4e49\u7684\u53c2\u6570\u6216\u8005\u8fd4\u56de\u503c\u7c7b\u578b\u7b49\uff1b\u4f46\u662f\u53ef\u4ee5\u5b9a\u4e49\u6307\u5411\u5b83\u7684\u6307\u9488\u3002</p> <p>\u4f8b\u5982\uff0c\u5e38\u89c1\u7684\u7528\u9014\u662f\uff0c\u4e24\u4e2a\u7c7b\u53ef\u80fd\u4f1a\u4e92\u76f8\u4f7f\u7528\u3002\u8fd9\u65f6\u5c31\u53ef\u4ee5\u5199\u51fa\u7c7b\u4f3c\u4e0b\u9762\u8fd9\u6837\u7684\u4ee3\u7801\uff1a</p> <pre><code>struct X;\nstruct Y {\nX* ptr;\n// X mem; // Error: field has incomplete type 'X'\nX* foo();\n};\nstruct X {\nY* ptr;\nY* bar();\n};\n</code></pre> <p>\u8fd9\u65f6\u7b2c 1 \u884c\u662f\u5fc5\u987b\u7684\uff0c\u5426\u5219\u7b2c 3 \u884c\u7684 <code>X</code> \u5c31\u662f\u4e00\u4e2a\u672a\u77e5\u7684\u7c7b\u578b\u3002</p> Injected Class Name <p>C++ \u89c4\u5b9a\uff0cA class-name is inserted into the scope in which it is declared immediately after the class-name is seen. The class-name is also inserted into the scope of the class itself; this is known as the injected-class-nameclass.pre#2\u3002\u8fd9\u5c31\u662f <code>struct Node { Node* next; };</code> \u80fd\u591f\u4f7f\u7528 <code>Node</code> \u7684\u539f\u56e0\u3002</p>"},{"location":"cpp/cpp_restart/4_class_1/#42-\u7c7b\u7684\u6210\u5458","title":"4.2 \u7c7b\u7684\u6210\u5458","text":"<p>member-specification \u8bf4\u660e\u4e86\u7c7b\u7684\u6210\u5458\u3002\u5176\u7ed3\u6784\u5982\u4e0bclass.mem.general\uff1a</p> <p></p> <p>\u5176\u4e2d member-declaration \u662f\u6210\u5458\u7684\u58f0\u660e\uff0c\u800c access-specifier \u662f <code>private</code>, <code>public</code>, <code>protected</code> \u4e4b\u4e00\uff08\u524d\u9762\u4e24\u4e2a\u6211\u4eec\u8ba8\u8bba\u8fc7\u4e86\uff0c\u7b2c\u4e09\u4e2a\u6211\u4eec\u4f1a\u5728\u540e\u6587\u8ba8\u8bba\uff09\u3002\u6210\u5458\u53ef\u4ee5\u5305\u62ec\u6210\u5458\u53d8\u91cf\u3001\u6210\u5458\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\uff08\u5d4c\u5957\u7684\uff09\u7c7b\u3001\u679a\u4e3e\u7b49\uff0c\u5982\u672c\u6587\u524d\u9762\u4ee3\u7801\u4e2d\u7684 <code>Outer::Inner</code>\uff0c\u8fd8\u53ef\u4ee5\u5305\u62ec\u58f0\u660e\u7c7b\u578b\u7684\u522b\u540d\uff08\u5982 <code>typedef</code> \u548c <code>using</code>\uff09\u7b4912\u3002</p> <p>Type alias</p> <p>C++11 \u5f15\u5165\u4e86 <code>using</code> \u6765\u58f0\u660e\u7c7b\u578b\u522b\u540d\uff0c\u5b83\u7684\u7528\u9014\u548c <code>typedef</code> \u7c7b\u4f3c\uff0c\u5982 <code>typedef struct arraylist_* arraylist;</code> \u53ef\u4ee5\u5199\u6210 <code>using arraylist = struct arraylist_ *;</code>\u3002</p> <p>\u7c7b\u578b\u522b\u540d\u7684\u58f0\u660e\u4e5f\u53ef\u4ee5\u662f\u7c7b\u7684\u6210\u5458\uff0c\u5176\u4f5c\u7528\u57df\u662f\u7c7b\u7684\u4f5c\u7528\u57df\uff0c\u540c\u6837\u53d7 access-specifier \u7684\u5f71\u54cd\u3002\u4f8b\u5982\uff1a</p> <pre><code>struct Foo {\nusing elem = int;\nelem x;     // OK, x has type int\nelem add(elem v) { x += v; return x; }\nprivate:\nusing type = char;\ntype c;     // OK, c has type char\n};\n\n// elem y;      // Error: unknown type name 'elem'\nFoo::elem z;    // OK, z has type int\n// Foo::type c; // Error: 'type' is a private member of 'Foo'   \n</code></pre> <p><code>using</code> \u88ab\u5f15\u5165\u662f\u4e3a\u4e86\u652f\u6301\u6a21\u677f\u3002\u6211\u4eec\u5728\u8bb2\u5230\u6a21\u677f\u7684\u65f6\u5019\u518d\u6765\u8ba8\u8bba\u8fd9\u4e9b\u95ee\u9898\u3002</p> <p>\u7c7b\u7684\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u5728\u7c7b\u5185\u76f4\u63a5\u7ed9\u51fa\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u5185\u53ea\u58f0\u660e\uff0c\u5728\u7c7b\u5916\u7ed9\u51fa\u5b9a\u4e49\uff1b\u8fd9\u4e0d\u5f71\u54cd\u6210\u5458\u51fd\u6570\u7684 access-specifier\uff1a</p> <pre><code>class Foo {\nint x = 0;\nvoid foo(int v) { x += v; }\nvoid bar(int v);\n};\n\nvoid Foo::bar(int v) { x += v; }\n\nint main() {\nFoo f;\nf.bar(1);  // Error: 'bar' is a private member of 'Foo'\n}\n</code></pre>"},{"location":"cpp/cpp_restart/4_class_1/#43-inline-\u51fd\u6570","title":"4.3 inline \u51fd\u6570","text":""},{"location":"cpp/cpp_restart/4_class_1/#44-\u6784\u9020\u51fd\u6570","title":"4.4 \u6784\u9020\u51fd\u6570","text":"<p>\u6784\u9020\u51fd\u6570 (constructor) \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u8be5\u7c7b\u7684\u5bf9\u8c61\u3002</p> <p>\u7528 BS \u7684\u8bdd\u8bf4\uff0c\u6784\u9020\u51fd\u6570\u7684\u610f\u4e49\u4e4b\u4e00\u662f\u300c\u4f7f\u7a0b\u5e8f\u5458\u80fd\u591f\u5efa\u7acb\u8d77\u67d0\u79cd\u4fdd\u8bc1\uff0c\u5176\u4ed6\u6210\u5458\u51fd\u6570\u90fd\u80fd\u4f9d\u8d56\u8fd9\u4e2a\u4fdd\u8bc1\u300d\u3002\u4f8b\u5982\uff1a</p> <pre><code>class Container {\nelem* val;\n// ...\npublic:\nContainer() {\nval = nullptr;\n}\n// ...\n}\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e2d\uff0c\u7b2c 5 \u884c\u7684 <code>Container()</code> \u662f\u6784\u9020\u51fd\u6570\u3002\u5b83\u548c\u5176\u4ed6\u6210\u5458\u51fd\u6570\u7684\u533a\u522b\u662f\uff0c\u5b83\u4e0d\u5199\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u800c\u4e14\u5b83\u7684\u540d\u5b57\u662f\u7c7b\u7684\u540d\u5b57\u3002</p> <p>\u7b2c 6 \u884c\u7684 <code>val = nullptr;</code> \u5c31\u662f\u524d\u9762\u63d0\u5230\u7684\u300c\u4fdd\u8bc1\u300d\uff0c\u5373 <code>val</code> \u7684\u503c\u8981\u4e48\u662f <code>nullptr</code>\uff0c\u8981\u4e48\u662f\u5176\u4ed6\u6210\u5458\u51fd\u6570\u8d4b\u7684\u503c\uff0c\u800c\u4e0d\u4f1a\u662f\u4e2a\u968f\u673a\u7684\u503c\u3002</p> <p>nullptr</p> <p><code>nullptr</code> \u662f C++11 \u5f15\u5165\u7684\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u7528\u6765\u8868\u793a\u7a7a\u6307\u9488\u3002\u8fd9\u4e0e C \u4e2d\u7684 <code>NULL</code> \u4e0d\u540c\uff0c\u867d\u7136\u540e\u8005\u5728 C++ \u4e2d\u4e5f\u80fd\u4f7f\u7528\u3002\u6211\u4eec\u5728\u7a0d\u540e\u4ecb\u7ecd <code>nullptr</code> \u4e3a\u4ec0\u4e48\u4f1a\u88ab\u5f15\u5165\u3002</p>"},{"location":"cpp/cpp_restart/4_class_1/#45-\u51fd\u6570\u9ed8\u8ba4\u53c2\u6570\u4e0e\u51fd\u6570\u91cd\u8f7d","title":"4.5 \u51fd\u6570\u9ed8\u8ba4\u53c2\u6570\u4e0e\u51fd\u6570\u91cd\u8f7d","text":""},{"location":"cpp/cpp_restart/4_class_1/#46-\u8f6c\u6362\u6784\u9020\u51fd\u6570","title":"4.6 \u8f6c\u6362\u6784\u9020\u51fd\u6570","text":""},{"location":"cpp/cpp_restart/4_class_1/#47-\u6790\u6784\u51fd\u6570","title":"4.7 \u6790\u6784\u51fd\u6570","text":"function inFootnote(element) {     let parent = element.parentNode;     while (parent !== null) {       if (parent.classList &amp;&amp; parent.classList.contains(\"footnote\")) {         break;       }       parent = parent.parentNode;     }     return parent !== null; }   function toggleVisibility() {   const links = document.querySelectorAll('a');   const buttons = document.querySelectorAll('.xyx-toggle');   links.forEach(link =&gt; {     if (!link.classList.contains('md-nav__link') &amp;&amp;         !link.classList.contains('md-tabs__link') &amp;&amp;         !link.classList.contains('md-source') &amp;&amp;         !link.classList.contains('md-header__button') &amp;&amp;         !link.closest('.md-nav__link') &amp;&amp;         !link.closest('.md-tabs__link') &amp;&amp;         !link.closest('.md-source') &amp;&amp;         !link.closest('.footnote-backref') &amp;&amp;         !link.closest('.footnote-ref') &amp;&amp;         !link.closest('.md-header__button') &amp;&amp;         !inFootnote(link)         ) {       if (link.style.display === 'none') {         link.style.display = 'inline';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u9690\u85cf\u6b63\u6587\u6240\u6709\u94fe\u63a5';         }       } else {         link.style.display = 'none';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u663e\u793a\u6b63\u6587\u6240\u6709\u94fe\u63a5';         }       }     }   }); }   function toggleVisibilityFoot() {   const links = document.querySelectorAll('a');   const buttons = document.querySelectorAll('.xyx-toggle2');   links.forEach(link =&gt; {     if (link.closest('.footnote-backref') ||         link.closest('.footnote-ref')) {       if (link.style.display === 'none') {         link.style.display = 'inline';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u9690\u85cf\u672c\u6587\u6240\u6709\u811a\u6ce8';         }       } else {         link.style.display = 'none';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u663e\u793a\u672c\u6587\u6240\u6709\u811a\u6ce8';         }       }     }   });    const footnotes = document.querySelectorAll('.footnote');   for (const footnote of footnotes) {     if (footnote.style.display === 'none') {       footnote.style.removeProperty('display');     } else {       footnote.style.display = 'none';     }   } }  <p> \u70b9\u51fb\u6b64\u5904\u9690\u85cf\u6b63\u6587\u6240\u6709\u94fe\u63a5 \u70b9\u51fb\u6b64\u5904\u9690\u85cf\u672c\u6587\u6240\u6709\u811a\u6ce8 </p> <ol> <li> <p>\u672c\u6587\u6240\u53c2\u8003\u7684 standard \u7248\u672c\u662f N4868 (October 2020 pre-virtual-plenary working draft/C++20 plus editorial changes)\uff0c\u8fd9\u5e76\u4e0d\u662f\u6700\u65b0\u7684\u7248\u672c\u3002\u53c2\u8003\u8be5\u7248\u672c\u7684\u4e3b\u8981\u8003\u91cf\u662f\u9632\u6b62\u53ef\u80fd\u7684\u66f4\u65b0\u5bfc\u81f4\u94fe\u63a5\u5931\u6548\u3002\u00a0\u21a9</p> </li> <li> <p>class-specifier \u5728\u8fd9\u91cc\u7528\u5230\uff1adcl.type.general#1 \u21a9</p> </li> <li> <p>class-name \u8fd8\u53ef\u80fd\u662f\u4e00\u4e2a simple-template-id\uff0c\u5373\u6a21\u677f\u7279\u5316\u3002\u00a0\u21a9</p> </li> <li> <p>\u5982\u679c\u5c06\u4ee3\u7801\u4e2d L7 \u63d0\u5230 L5 \u4e4b\u524d\uff0cGCC \u4f1a\u51fa\u73b0\u62a5\u9519\u3002\u8fd9\u662f\u56e0\u4e3a\uff1abasic.scope.class#2: A name N used in a class S shall refer to the same declaration in its context and when re-evaluated in the completed scope of S. No diagnostic is required for a violation of this rule.\u00a0\u21a9</p> </li> <li> <p>\u5173\u4e8e\u8f93\u51fa\u4e2d\u7684 1\uff1aclass.pre#6: Complete objects of class type have nonzero size. Base class subobjects and members declared with the no_\u00adunique_\u00adaddress attribute are not so constrained.\u00a0\u21a9</p> </li> <li> <p>\u4f46 layout capability rules \u5141\u8bb8\u4e86 low-level \u7684\u5f3a\u8f6c\u3002\u00a0\u21a9</p> </li> <li> <p>\u8fd8\u6709 noexcept-specifier\u00a0\u21a9</p> </li> <li> <p>\u6ce8\u610f\uff0c\u4f5c\u7528\u57df\u5b9a\u4e49\u4e3a\u300cthe largest part of the program in which that name is valid, that is, in which that name may be used as an unqualified name to refer to the same entitybasic.scope.declarative#1.\u300d\u00a0\u21a9</p> </li> <li> <p>\u89c1\u95ee\u9898\uff1a Which subclause of C++ standard prohibits redeclaration / redefinition in a same block?\uff0c\u5df2\u7ecf\u89e3\u51b3\u3002\u00a0\u21a9</p> </li> <li> <p>\u5728 N4868 \u91cc\uff0c\u8fd9\u91cc\u89e3\u91ca\u4e3a\uff1a\u5f53\u4e00\u4e2a\u540d\u5b57\u5728\u7c7b\u5185\u88ab\u5b9a\u4e49\u540e\uff0c\u7c7b\u5185\u7684\u5269\u4f59\u90e8\u5206basic.scope.pdecl#6\u53ca\u8be5\u7c7b\u7684\u6210\u5458\u51fd\u6570\u7684\u51fd\u6570\u4f53\u3001default argument \u4ee5\u53ca default member initializer\uff08\u540e\u4e24\u8005\u4f1a\u5728\u540e\u9762\u8bb2\u89e3\uff097class.mem.general#6\u6210\u4e3a\u5176\u4f5c\u7528\u57df8basic.scope.class#1\u3002\u5728\u6700\u65b0\u7248\uff08\u5199\u672c\u6587\u65f6\uff0c\u4e3a 2023-01-02\uff09\u4e2d\uff0cscope \u7684\u5b9a\u4e49\u53d1\u751f\u4e86\u8f83\u5927\u66f4\u6539\u3002\u00a0\u21a9</p> </li> <li> <p>\u5728\u6700\u65b0\u7248\u672c\u91cc\uff0cname hiding \u4e00\u8282\u4e5f\u6ca1\u6709\u4e86\u3002\u53ef\u4ee5\u5728 basic.scope.pdecl#2 \u627e\u5230\u76f8\u5173\u63cf\u8ff0\u3002\u00a0\u21a9</p> </li> <li> <p>\u8fd8\u80fd\u6709 using-declarations, static_assert declarations, member template declarations, deduction guides (C++17), Using-enum-declarations (C++20)\u00a0\u21a9</p> </li> </ol>"},{"location":"cpp/cpp_restart/toggle_visibility/","title":"Toggle visibility","text":"<p> \u7ea6 206 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>  function toggleVisibility() {   const links = document.querySelectorAll('a');   const buttons = document.querySelectorAll('.xyx-toggle');   links.forEach(link =&gt; {     if (!link.classList.contains('md-nav__link') &amp;&amp;         !link.classList.contains('md-tabs__link') &amp;&amp;         !link.classList.contains('md-source') &amp;&amp;         !link.classList.contains('md-header__button') &amp;&amp;         !link.closest('.md-nav__link') &amp;&amp;         !link.closest('.md-tabs__link') &amp;&amp;         !link.closest('.md-source') &amp;&amp;         !link.closest('.footnote-backref') &amp;&amp;         !link.closest('.footnote-ref') &amp;&amp;         !link.closest('.md-header__button') &amp;&amp;         !inFootnote(link)         ) {       if (link.style.display === 'none') {         link.style.display = 'inline';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u9690\u85cf\u6b63\u6587\u6240\u6709\u94fe\u63a5';         }       } else {         link.style.display = 'none';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u663e\u793a\u6b63\u6587\u6240\u6709\u94fe\u63a5';         }       }     }   }); }   function toggleVisibilityFoot() {   const links = document.querySelectorAll('a');   const buttons = document.querySelectorAll('.xyx-toggle2');   links.forEach(link =&gt; {     if (link.closest('.footnote-backref') ||         link.closest('.footnote-ref')) {       if (link.style.display === 'none') {         link.style.display = 'inline';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u9690\u85cf\u672c\u6587\u6240\u6709\u811a\u6ce8';         }       } else {         link.style.display = 'none';         for (const button of buttons) {             button.innerHTML = '\u70b9\u51fb\u6b64\u5904\u663e\u793a\u672c\u6587\u6240\u6709\u811a\u6ce8';         }       }     }   });    const footnotes = document.querySelectorAll('.footnote');   for (const footnote of footnotes) {     if (footnote.style.display === 'none') {       footnote.style.removeProperty('display');     } else {       footnote.style.display = 'none';     }   } }  <p> \u70b9\u51fb\u6b64\u5904\u9690\u85cf\u6b63\u6587\u6240\u6709\u94fe\u63a5 \u70b9\u51fb\u6b64\u5904\u9690\u85cf\u672c\u6587\u6240\u6709\u811a\u6ce8 </p>"},{"location":"cpp/cpp_restart/notes/bs_faq_notes/","title":"Bjarne Stroustrup's FAQ \u9605\u8bfb\u8bb0\u5f55","text":"<p> \u7ea6 1228 \u4e2a\u5b57  28 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <ul> <li>Bjarne Stroustrup's FAQ</li> <li>Bjarne Stroustrup's FAQ2</li> </ul> <p>\u7c7b\u7684\u5b58\u5728\u4f7f\u5f97\u6570\u636e\u548c\u51fd\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\u66f4\u52a0\u6e05\u6670\uff0c\u540c\u65f6\u63d0\u4f9b\u66f4\u52a0\u6e05\u6670\u7684\u63a5\u53e3\u3002 \u7c7b\u7684\u5b58\u5728\u4f7f\u5f97\u63a5\u53e3\u7684\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u88ab\u9690\u85cf\u3002 \u5982\u679c\u63a5\u53e3\u7684\u5177\u4f53\u5b9e\u73b0\u4e0d\u5e94\u88ab\u9690\u85cf\uff0c\u90a3\u4e48\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a POD (plain old data) structure\uff0c\u7528\u6237\u53ef\u4ee5\u5bf9\u5176\u505a\u4efb\u4f55\u64cd\u4f5c\u3002</p> <p>OOP \u662f\u4e00\u79cd\u5f3a\u8c03 encapsulation, inheritance \u548c polymorphism \u7684\u7f16\u7a0b\u8303\u5f0f\uff1b\u5bf9\u4e8e C++ \u800c\u8a00\uff0c\u4e0a\u8ff0\u4e09\u70b9\u5bf9\u5e94\u7740 classes, derived classes &amp; virtual functions\uff0c\u5373 OOP \u610f\u5473\u7740\u5c06\u7c7b\u7ed3\u6784\u5316\uff0c\u5e76\u4f7f\u7528\u865a\u51fd\u6570\u6765\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u64cd\u63a7\u548c\u901a\u8fc7\u7ee7\u627f\u6269\u5c55\u4ee3\u7801\u3002C++ \u4ece Simula \u4e2d\u7ee7\u627f\u4e86\u8fd9\u4e9b\u89c2\u5ff5\u3002 \u865a\u51fd\u6570\u53ef\u4ee5\u4f7f\u5f97\u5230\u8fd0\u884c\u65f6\u518d\u9690\u5f0f\u5730\u9009\u62e9\u63a5\u53e3\u6b63\u786e\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u8fd9\u6709\u65f6\u4e5f\u88ab\u79f0\u4e3a run-time dispatch \u6216\u8005 dynamic dispatch\u3002\u9700\u8981\u4f7f\u7528\u865a\u51fd\u6570\u7684\u539f\u56e0\u662f C++ \u9ed8\u8ba4 early / static binding\u3002 OOP \u5e76\u4e0d\u662f\u4e07\u80fd\u7684\u3002\u5982\u679c\u95ee\u9898\u672c\u8eab\u4e0d\u5177\u5907\u7ee7\u627f\u7684\u7ed3\u6784\uff0c\u4f7f\u7528 OOP \u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u5355\u72ec\u7684\u7c7b\u3001\u5355\u72ec\u7684\u51fd\u6570\uff0c\u6216\u8005\u6cdb\u578b\u7f16\u7a0b\u53ef\u80fd\u66f4\u52a0\u9002\u5408\u3002</p> <p>\u6cdb\u578b\u7f16\u7a0b\u662f\u57fa\u4e8e\u300c\u53c2\u6570\u5316 (parameterization)\u300d\u7684\u4e00\u79cd\u7f16\u7a0b\u8303\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7c7b\u578b\u6216\u8005\u4e00\u4e2a\u7b97\u6cd5\u53c2\u6570\u5316\uff0c\u4ece\u800c\u5c06\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u6216\u8005\u7b97\u6cd5\u4e00\u822c\u5316\u3002 \u6cdb\u578b\u7f16\u7a0b\u76f8\u5bf9 OOP \u66f4\u52a0\u7075\u6d3b\uff0c\u5b83\u5e76\u4e0d\u4f9d\u8d56\u7ee7\u627f\u7684\u7ed3\u6784\u3002OOP \u6709\u65f6\u88ab\u63cf\u8ff0\u4e3a \"ad hoc polymorphism\"\uff0c\u800c\u6cdb\u578b\u88ab\u79f0\u4e3a \"parametric polymorphism\"\uff0c\u6cdb\u578b\u76f8\u8f83\u4e8e OOP \u66f4\u52a0\u7ed3\u6784\u5316\uff08\u66f4\u52a0\u62bd\u8c61\uff09\u3002 \u5bf9\u4e8e C++ \u800c\u8a00\uff0c\u6cdb\u578b\u7f16\u7a0b\u7684\u89e3\u6790\u5747\u53d1\u751f\u5728\u7f16\u8bd1\u65f6\uff08\u56e0\u6b64\u4e5f\u88ab\u79f0\u4e3a static / compile-time polymorphism\uff09\uff0c\u5e76\u4e0d\u9700\u8981\u8fd0\u884c\u65f6\u7684 dispatch\uff1b\u56e0\u6b64\u5bf9\u4e8e\u90a3\u4e9b\u5bf9\u8fd0\u884c\u65f6\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684\u7a0b\u5e8f\uff0c\u6cdb\u578b\u7f16\u7a0b\u5f80\u5f80\u66f4\u53d7\u6b22\u8fce\u3002 \u6cdb\u578b\u7f16\u7a0b\u4e5f\u4e0d\u662f\u4e07\u80fd\u7684\uff0c\u5728\u4e00\u4e9b\u7ee7\u627f\u7ed3\u6784\u660e\u663e\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528 OOP \u6bd4\u6cdb\u578b\u66f4\u52a0\u65b9\u4fbf\u548c\u81ea\u7136\u3002\u800c\u4e14\u9664\u4e86\u7c7b\u4f3c\u5199\u5e93\u4e4b\u7c7b\u6709\u53c2\u6570\u5316\u9700\u6c42\u7684\u60c5\u51b5\u4ee5\u5916\uff0c\u6cdb\u578b\u7f16\u7a0b\u53ef\u80fd\u4e5f\u5e76\u4e0d\u5b8c\u5168\u9700\u8981\u3002</p> <p>\u81ea 1987 \u5e74\u5de6\u53f3\uff0cC++ \u53ca\u5176\u7f16\u7a0b\u98ce\u683c\u5f00\u53d1\u7684\u91cd\u70b9\u8f6c\u5411\u4e86\u6a21\u677f\u3001static polymorphism\u3001\u6cdb\u578b\u7f16\u7a0b\u548c\u591a\u8303\u5f0f\u7f16\u7a0b\u3002</p> <p>\u591a\u8303\u5f0f\u7f16\u7a0b\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e0b\u4f7f\u7528\u4e0d\u540c\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u4f8b\u5982\u5728\u9700\u8981\u52a8\u6001\u89e3\u6790\u7c7b\u578b\u65f6\u4f7f\u7528 OOP\uff0c\u800c\u5728\u9759\u6001\u7c7b\u578b\u5b89\u5168\u548c\u8fd0\u884c\u65f6\u6027\u80fd\u6bd4\u8f83\u91cd\u8981\u65f6\u4f7f\u7528\u6cdb\u578b\u3002</p> <p>C++ \u6709\u6307\u9488\u3001\u6570\u7ec4\u3001casts \u4e4b\u7c7b\u7684 low-level features\uff0c\u5b83\u4eec\u5bf9 close-to-the-hardware work \u6765\u8bf4\u662f\u5fc5\u8981\u7684\uff1b\u540c\u65f6\uff0cC++ \u4e5f\u63d0\u4f9b\u4e86\u5404\u79cd\u5bb9\u5668\u4e4b\u7c7b\u7684\u4e1c\u897f\u53ef\u4ee5\u907f\u514d\u4f7f\u7528\u4e0a\u8ff0\u4e1c\u897f\uff0c\u8fd9\u53ef\u4ee5\u8ba9\u7a0b\u5e8f\u66f4\u52a0\u9ad8\u6548\u548c\u5b89\u5168\u3002</p> <p>Empty class \u7684\u5927\u5c0f\u4e0d\u662f 0\uff0c\u800c\u662f 1 \u5b57\u8282\uff1b\u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e24\u4e2a\u4e0d\u540c\u5bf9\u8c61\u7684\u5730\u5740\u4e0d\u540c\u3002\u4f46\u662f\uff0c\u5982\u679c\u4e00\u4e2a class \u7ee7\u627f\u4e00\u4e2a empty class\uff0c\u90a3\u4e48\u5e76\u4e0d\u9700\u8981\u989d\u5916\u7684 1 \u5b57\u8282\u3002</p> <p>\u5f53\u7c7b\u91cc\u5305\u542b\u4e00\u4e2a <code>virtual</code>-ness propagates to derived classes: </p> <p>12.4.7: \"If a class has a base class with a virtual destructor, its destructor (whether user- or implicitly- declared) is virtual.\"</p> <p>Deleting an object through pointer to base invokes undefined behavior unless the destructor in the base class is virtual.</p> <p>Why doesn't overloading work for derived classes? That question (in many variations) are usually prompted by an example like this: <pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\nclass B {\npublic:\nint f(int i) { cout &lt;&lt; \"f(int): \"; return i+1; }\n// ...\n};\n\nclass D : public B {\npublic:\ndouble f(double d) { cout &lt;&lt; \"f(double): \"; return d+1.3; }\n// ...\n};\n\nint main()\n{\nD* pd = new D;\n\ncout &lt;&lt; pd-&gt;f(2) &lt;&lt; '\\n';\ncout &lt;&lt; pd-&gt;f(2.3) &lt;&lt; '\\n';\n}\n</code></pre> which will produce:</p> <p>f(double): 3.3   f(double): 3.6</p> <p>rather than the</p> <p>f(int): 3    f(double): 3.6</p> <p>that some people (wrongly) guessed. In other words, there is no overload resolution between D and B. The compiler looks into the scope of D, finds the single function \"double f(double)\" and calls it. It never bothers with the (enclosing) scope of B. In C++, there is no overloading across scopes - derived class scopes are not an exception to this general rule. But what if I want to create an overload set of all my f() functions from my base and derived class? That's easily done using a using-declaration: <pre><code>class D : public B {\npublic:\nusing B::f; // make every f from B available\ndouble f(double d) { cout &lt;&lt; \"f(double): \"; return d+1.3; }\n// ...\n};\n</code></pre> Give that modification, the output will be</p> <p>f(int): 3    f(double): 3.6</p> <p>That is, overload resolution was applied to B's f() and D's f() to select the most appropriate f() to call.</p> <p>https://www.stroustrup.com/bs_faq2.html#generics\uff1a \u6a21\u677f \uff08templates\uff09\u672c\u5e94\u88ab\u8bbe\u8ba1\u4e3a\u201c\u6cdb\u578b\uff08generics\uff09\u201d\u90a3\u6837\u5417\uff1f \u975e\u4e5f\u3002generics \u5176\u5b9e\u662f\u4e3a\u62bd\u8c61\u7c7b\u800c\u8bbe\u7684\u8bed\u6cd5\uff1b\u4ea6\u5373\uff0c\u5229\u7528 generics\uff08\u65e0\u8bba\u662f Java generics \u6216 C# generics\uff09\uff0c\u4f60\u4ece\u6b64\u4e0d\u518d\u9700\u8981\u5b9a\u4e49\u7cbe\u786e\u7684\u63a5\u53e3\uff0c\u4f46\u76f8\u5bf9\u5730\uff0c\u4f60\u4e5f\u8981\u4e3a\u6b64\u4ed8\u51fa\u8bf8\u5982\u865a\u51fd\u6570\u8c03\u7528\u4ee5\u53ca/\u6216\u8005\u52a8\u6001\u7c7b\u578b\u8f6c\u6362\u7684\u82b1\u9500\u3002 Templates \u901a\u8fc7\u5176\u5404\u79cd\u7279\u6027\u7684\u7ec4\u5408\uff08\u6574\u578b\u6a21\u677f\u53c2\u6570\uff08integer template arguments\uff09\u3001\u7279\u5316\uff08specialization\uff09\u3001\u540c\u7b49\u5bf9\u5f85\u5185\u5efa/\u7528\u6237\u5b9a\u4e49\u7c7b\u578b\u7b49\uff09\uff0c\u53ef\u652f\u6301\u6cdb\u578b\u7f16\u7a0b\uff08generic programming\uff09\u3001\u6a21\u677f\u5143\u7f16\u7a0b\uff08template metaprogramming\uff09\u7b49\u3002Templates \u5e26\u6765\u7684\u7075\u6d3b\u6027\u3001\u901a\u7528\u6027\uff0c\u4ee5\u53ca\u6027\u80fd\u90fd\u662f\u201cgenerics\u201d\u4e0d\u80fd\u6bd4\u7f8e\u7684\u3002STL \u5c31\u662f\u6700\u597d\u7684\u4f8b\u5b50\u3002 \u4e0d\u8fc7\uff0cTemplates \u5e26\u6765\u7075\u4fbf\u7684\u540c\u65f6\uff0c\u4ea6\u5e26\u6765\u4e86\u4e00\u4e9b\u4e0d\u5c3d\u4eba\u610f\u7684\u540e\u679c\u2014\u2014\u9519\u8bef\u68c0\u67e5\u6ede\u540e\u3001\u51fa\u9519\u4fe1\u606f\u975e\u5e38\u7cdf\u7cd5\u3002\u76ee\u524d\uff0c\u53ef\u901a\u8fc7 constraints classes \u95f4\u63a5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002C++0x \u5c06\u5f15\u5165 concepts \u6765\u76f4\u63a5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff08\u53c2\u8003\u6211\u7684\u8bba\u6587\u3001\u63d0\u6848\uff0c\u4ee5\u53ca\u6807 \u51c6\u59d4\u5458\u4f1a\u7f51\u7ad9\u7684\u6240\u6709\u63d0\u6848\uff09\u3002</p> <ul> <li>dynamic vs static polymorphism | SO</li> </ul>"},{"location":"cpp/cpp_restart/notes/dne_notes/","title":"The Design and Evaluation of C++ \u9605\u8bfb\u8bb0\u5f55","text":"<p> \u7ea6 6719 \u4e2a\u5b57  164 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 24 \u5206\u949f</p> <p>Abstract</p> <p>\u9605\u8bfb Bjarne Stroustrup \u7684 The Design and Evaluation of C++ \u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u6458\u5f55\u3002</p> <p>\u5728\u9605\u8bfb\u65f6\uff0c\u6211\u4f1a\u66f4\u6ce8\u610f\u8bed\u8a00\u7279\u6027\u7684\u8bbe\u8ba1\u548c\u53d1\u5c55\u5386\u7a0b\u3001\u76f8\u5173\u7684\u8bbe\u8ba1\u54f2\u5b66\u4e4b\u7c7b\u7684\u5185\u5bb9\uff0c\u800c\u4f1a\u6bd4\u8f83\u5c11\u5730\u5173\u6ce8\u5df2\u7ecf\u719f\u6089\u6216\u8005\u672a\u6765\u4f1a\u7cfb\u7edf\u5b66\u4e60\u7684\u8bed\u8a00\u7279\u6027\u672c\u8eab\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#\u524d\u8a00","title":"\u524d\u8a00","text":"<p>C++ \u548c\u9020\u5c31\u5b83\u7684\u8bbe\u8ba1\u601d\u60f3\u3001\u7f16\u7a0b\u601d\u60f3\u81ea\u8eab\u4e0d\u4f1a\u6f14\u5316\uff0c\u771f\u6b63\u6f14\u5316\u7684\u662f C++ \u7528\u6237\u4eec\u5bf9\u4e8e\u5b9e\u9645\u95ee\u9898\u7684\u7406\u89e3\uff0c\u4ee5\u53ca\u5b83\u4eec\u5bf9\u4e8e\u80fd\u591f\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u5de5\u5177\u7684\u7406\u89e3\u3002\u56e0\u6b64\uff0c\u672c\u4e66\u4e5f\u5c06\u8ffd\u6eaf\u4eba\u4eec\u7528 C++ \u53bb\u5904\u7406\u5404\u79cd\u5173\u952e\u6027\u95ee\u9898\uff0c\u4ee5\u53ca\u5b9e\u9645\u5904\u7406\u90a3\u4e9b\u95ee\u9898\u7684\u4eba\u4eec\u7684\u8ba4\u8bc6\uff0c\u8fd9\u4e9b\u90fd\u5bf9 C++ \u7684\u53d1\u5c55\u4ea7\u751f\u4e86\u91cd\u8981\u5f71\u54cd\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#0-\u81f4\u8bfb\u8005","title":"0 \u81f4\u8bfb\u8005","text":"<p>\u2026\u2026\u4e00\u4e2a\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u5fc5\u987b\u540c\u65f6\u662f\u6240\u6709\u8fd9\u4e9b\u4e1c\u897f\uff0c\u8fd9\u6837\u624d\u80fd\u670d\u52a1\u4e8e\u5b83\u7f24\u7eb7\u7e41\u6742\u7684\u7528\u6237\u96c6\u5408\u3002</p> <p>\u4e00\u79cd\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u5fc5\u987b\u662f\u6298\u4e2d\u4e3b\u4e49\u7684\uff0c\u9700\u8981\u8003\u8651\u5230\u8bb8\u591a\u5b9e\u8df5\u6027\u7684\u548c\u793e\u4f1a\u6027\u7684\u56e0\u7d20\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#\u7b2c\u4e00\u90e8\u5206","title":"\u7b2c\u4e00\u90e8\u5206","text":"<p>Abstract</p> <p>\u8fd9\u90e8\u5206\u63cf\u8ff0\u4e86\u4ece C with Classes (1979) \u5230 Release 1.0 (1985) \u7684\u5386\u7a0b\u3002\u6211\u8bfb\u5b8c\u8fd9\u4e00\u90e8\u5206\u5f97\u5230\u7684\u6536\u83b7\u662f\uff1a\u4e86\u89e3\u4e86 C++ \u8bbe\u8ba1\u548c\u53d1\u5c55\u7684\u4e00\u4e9b\u89c4\u5219\u548c\u54f2\u5b66\uff0c\u4e86\u89e3\u5230\u4e86\u4e00\u4e9b\u7279\u6027\u8bde\u751f\u7684\u539f\u56e0\u548c\u8fc7\u7a0b\uff0c\u7406\u89e3\u4e86\u90a3\u4e9b\u89c4\u5219\u5bf9\u4e8e C++ \u53d1\u5c55\u7684\u5f71\u54cd\uff0c\u4ee5\u53ca\u5bf9\u4e8e\u300cC++ \u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\u300d\u8fd9\u4e2a\u8ba8\u8bba\u7684\u5f71\u54cd\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#1-the-prehistory-of-c","title":"1 The Prehistory of C++","text":"<p>1.1 \u6307\u51fa\uff0cSimula \u7684\u7c7b\u548c\u534f\u7a0b\u673a\u5236\u7ed9\u51fa\u4e86\u597d\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u5728\u6b64\u57fa\u7840\u4e4b\u4e0a\u7684\u7c7b\u578b\u68c0\u67e5\u7b49\u4f7f\u5f97\u9519\u8bef\u66f4\u6613\u6392\u9664\u3002\u4f46\u5176\u6784\u5efa\u548c\u8fd0\u884c\u8868\u73b0\u5f88\u5dee\u3002\u8fd9\u4f7f BS \u53d1\u8a93\u300c\u5728\u6ca1\u6709\u5408\u9002\u5de5\u5177\u7684\u60c5\u51b5\u4e0b\u7edd\u4e0d\u53bb\u51b2\u51fb\u4e00\u4e2a\u95ee\u9898\u300d\u3002 </p> <p>1.2 \u63d0\u5230 C \u8bed\u8a00\u662f BS \u6bd4\u8f83\u6b23\u8d4f\u7684\u7cfb\u7edf\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3002</p> Quote <p>\u5c0a\u91cd\u4eba\u7fa4\u800c\u4e0d\u5c0a\u91cd\u4eba\u7fa4\u4e2d\u7684\u4e2a\u4f53\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4ec0\u4e48\u4e5f\u4e0d\u5c0a\u91cd\u3002(P25)</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#2-c-with-classes","title":"2 C with Classes","text":""},{"location":"cpp/cpp_restart/notes/dne_notes/#2123-\u8bde\u751f","title":"2.1~2.3 \u8bde\u751f","text":"<p>2.1 \u6307\u51fa\uff0cBS \u9047\u5230\u4e86\u300c\u5728\u6ca1\u6709\u5408\u9002\u5de5\u5177\u7684\u60c5\u51b5\u4e0b\u7edd\u4e0d\u53bb\u51b2\u51fb\u300d\u7684\u95ee\u9898\u3002\u9274\u4e8e 1 \u4e2d\u63d0\u5230\u7684\u539f\u56e0\uff0c\u4ed6\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u9884\u5904\u7406\u7a0b\u5e8f Cpre\uff081981/12 \u9996\u6b21\u53d1\u5e03\uff09\uff0c\u6765\u5c06 C with Classes \u5904\u7406\u6210 C\u3002\u6b64\u540e\u4e5f\u4ece\u601d\u8003\u4e00\u79cd \u5de5\u5177 \u53d1\u5c55\u6210\u4e86\u601d\u8003\u4e00\u79cd \u8bed\u8a00\u3002</p> <ul> <li>C with Classes \u548c C++ \u7684\u300cclass\u300d\u6765\u81ea Simula\u3002</li> <li>\u8bbe\u8ba1\u7684 private \u548c public \u662f compile-time access control</li> <li>\u548c C \u4e00\u6837\uff0c\u5bf9\u8c61\u5206\u914d\u6709 3 \u79cd\u5f62\u5f0f\uff1a\u5728\u6808\u4e0a\u7684 automatic stroage\uff0c\u5728\u56fa\u5b9a\u5730\u5740\u7684 static storage \u548c\u5728\u5806\u4e0a\u7684 dynamic storage</li> </ul>"},{"location":"cpp/cpp_restart/notes/dne_notes/#24-\u6548\u7387","title":"2.4 \u6548\u7387","text":"<ul> <li>Simula \u7684 class type \u7684\u5bf9\u8c61\u90fd\u662f dynamic allocated \u7684\uff0c\u8fd9\u662f Simula \u6162\u7684\u91cd\u8981\u539f\u56e0\u3002</li> <li>C with Classes \u5e0c\u671b\u8ba9\u5bf9\u5185\u90e8\u7c7b\u578b\u7684\u652f\u6301\u4e5f\u80fd\u7528\u4e8e\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002\u4e8b\u5b9e\u4e0a\uff0cC++ \u73b0\u5728\u5bf9\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u652f\u6301\u6bd4\u5185\u90e8\u7c7b\u578b\u8fd8\u591a\u3002</li> <li>C with Classes \u521d\u59cb\u7248\u672c\u6ca1\u6709 inline\uff0c\u4f46\u662f\u5f88\u5feb\u5c31\u52a0\u4e0a\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709 inline\uff0cgetter \u548c setter \u4e4b\u7c7b\u7684\u51fd\u6570\u6709\u989d\u5916\u4ee3\u4ef7\uff0c\u4eba\u4eec\u5c31\u4e0d\u4f1a\u613f\u610f\u5c01\u88c5\u3002</li> <li>C with Classes \u4e2d\u53ea\u6709\u51fd\u6570\u4f53\u653e\u5728 class \u58f0\u660e\u4e2d\u7684\u6210\u5458\u51fd\u6570\u624d\u80fd\u88ab inline\u3002</li> <li>C with Classes \u76f4\u5230 C++ \u7684\u4e00\u6761\u8bbe\u8ba1\u89c4\u5219\u662f\uff0c\u5982\u679c\u8981\u5f15\u5165\u4e00\u4e2a feature\uff0c\u9700\u8981\u6709\u7acb\u5373\u7684\u3001\u666e\u9002\u7684 affordability\u3002</li> <li>\u5173\u952e\u5b57 <code>inline</code> \u548c\u5141\u8bb8\u975e\u6210\u5458 inline \u51fd\u6570\u90fd\u662f\u540e\u6765 C++ \u63d0\u4f9b\u7684\u3002<code>inline</code> \u53ea\u662f\u4e2a\u63d0\u793a\u3002</li> </ul>"},{"location":"cpp/cpp_restart/notes/dne_notes/#25-\u94fe\u63a5\u6a21\u578b","title":"2.5 \u94fe\u63a5\u6a21\u578b","text":"<p>2.5 \u6307\u51fa\uff0cC \u548c C++ \u90fd\u662f\u6309\u540d\u7b49\u4ef7\u7684\uff0c\u4f46 layout capability rules \u5141\u8bb8\u4e86 low-level \u7684\u5f3a\u8f6c\u3002\u8fd9\u4e5f\u53d1\u5c55\u51fa\u4e86 C++ \u7684 one definition rule\uff0c\u5373 func, var, type \u7b49\u7684\u5b9a\u4e49\u5747\u5e94\u552f\u4e00\u3002</p> <p>C with Classes \u7684\u5bf9\u8c61\u7ed3\u6784\u548c struct \u4e00\u6837\uff0c\u51fd\u6570\u4e0d\u5728\u5176\u4e2d\u3002</p> <p><code>this</code> \u6765\u81ea Simula\u3002\u5f53\u65f6 C++ \u8fd8\u6ca1\u6709\u5f15\u7528\uff0c\u56e0\u6b64\u662f\u4e2a\u6307\u9488\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#26-\u9759\u6001\u7c7b\u578b\u68c0\u67e5","title":"2.6 \u9759\u6001\u7c7b\u578b\u68c0\u67e5","text":"<p>2.6 \u8ba8\u8bba\u4e86\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u3002\u65e9\u671f C with Classes \u8bd5\u56fe\u7981\u6b62 narrowing implicit conversions\uff0c\u4f46\u662f\u5931\u8d25\u7684\u5f88\u60e8\uff0c\u56e0\u4e3a\u5927\u5bb6\u90fd\u8fd9\u4e48\u7528\u3002\u4e8e\u662f BS \u9009\u62e9\u4f7f\u7528 warning\uff0c\u4f46\u662f\u5bf9\u4e8e <code>int-&gt;char</code> \u8fd9\u79cd\u8fc7\u4e8e\u5e38\u7528\u7684\u8f6c\u6362\uff0c\u4e0d\u62a5 warning\u3002\u4ed6\u5e0c\u671b warning \u53ea\u7528\u5728\u300c\u6709\u8d85\u8fc7 90% \u7684\u53ef\u80fd\u662f\u6355\u6349\u5230\u5b9e\u9645\u9519\u8bef\u300d\u7684\u60c5\u51b5\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#27-\u4e3a\u4ec0\u4e48\u662f-c","title":"2.7 \u4e3a\u4ec0\u4e48\u662f C","text":"<p>2.7 \u6307\u51fa\u4e86\u6784\u9020\u5728 C \u4e4b\u4e0a\u7684\u4e00\u4e9b\u7406\u7531\u3002\u4f8b\u5982\u5176\u7075\u6d3b\uff08\u901a\u7528\uff09\u3001\u9ad8\u6548\u3001\u5404\u79cd\u5e73\u53f0\u90fd\u6709 C \u7f16\u8bd1\u5668\u3001\u53ef\u79fb\u690d\u3002\u4ed6\u6307\u51fa\u4e86\u4e00\u4e9b\u7075\u611f\u6765\u6e90\uff1a Simula \u63d0\u4f9b\u4e86 class\uff0cAlgol 68 \u63d0\u4f9b\u4e86\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3001\u5f15\u7528\u4ee5\u53ca\u53ef\u4ee5\u5728\u5757\u4e2d\u4efb\u4f55\u5730\u65b9\u58f0\u660e\u53d8\u91cf\u7684\u80fd\u529b\uff0cBCPL \u63d0\u4f9b\u4e86 <code>//</code> \u7684\u6ce8\u91ca\u5f62\u5f0f\u3002</p> <p>\u4ed6\u6307\u51fa\uff0c\u5e0c\u671b C++ \u4e00\u65b9\u9762\u80fd\u591f\u50cf C \u4e00\u6837\u63a5\u8fd1\u673a\u5668\uff0c\u53e6\u4e00\u65b9\u9762\u53c8\u80fd\u63a5\u8fd1\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002</p> <p>1985 \u5e74\u4e4b\u540e\uff0cC++ \u53d7\u5230\u4e86\u6765\u81ea Ada \u7684\u6a21\u677f\u3001\u5f02\u5e38\u3001namespace\uff0c\u4ee5\u53ca Clu \u548c ML \u7684\u5f02\u5e38\u7684\u5f71\u54cd\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#28-\u8bed\u6cd5\u95ee\u9898","title":"2.8 \u8bed\u6cd5\u95ee\u9898","text":"<p>2.8 \u63d0\u53ca\u4e86 C \u8bed\u8a00\u8bed\u6cd5\u7684\u7f3a\u9677\u662f\u5426\u6709\u88ab\u89e3\u51b3\u3002BS \u6307\u51fa\u4ed6\u8bd5\u56fe\u4fee\u6539\u7701\u7565\u7c7b\u578b\u63cf\u8ff0\u7b26\u5e76\u9ed8\u8ba4\u4e3a int \u7684\u8bed\u6cd5\uff08\u4f8b\u5982 <code>f();</code> \u8868\u793a\u58f0\u660e\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3a <code>int</code> \u7684\u51fd\u6570 <code>f</code>\uff09\uff0c\u4f46\u662f\u906d\u5230\u4e86\u53cd\u5bf9\uff0c\u5c31\u9000\u4e86\u56de\u6765\uff0c\u76f4\u5230\u5341\u5e74\u540e\u6807\u51c6\u53cd\u5bf9\u4e86\u8fd9\u79cd\u5199\u6cd5\u3002BS \u8fd8\u6307\u51fa\u4ed6\u8bd5\u56fe\u4fee\u6539 C \u8bed\u8a00\u300c\u8ba9\u540d\u5b57\u7684\u58f0\u660e\u6a21\u4eff\u5176\u4f7f\u7528\u300d\u7684\u8bed\u6cd5\uff08\u4f8b\u5982 <code>int *p[10];</code>, <code>int (*p) [10]</code>\uff09\uff0c\u4f46\u662f\u6700\u540e\u6ca1\u6539\u3002</p> <p>\u4ed6\u540c\u65f6\u63d0\u53ca\u4e86 C with Classes \u5e0c\u671b\u8ba9\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\u4e0d\u662f\u4e8c\u7b49\u516c\u6c11\uff0c\u6240\u4ee5\u5728\u5411 C++ \u6f14\u5316\u65f6 class, union, struct \u7684\u540d\u5b57\u524d\u9762\u4e0d\u518d\u9700\u8981\u52a0\u8fd9\u4e9b\u8bed\u6cd5\u6807\u8bc6\u7b26\u4e86\u3002\u5e26\u6765\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c<code>struct S {int a}; int S;</code> \u8fd9\u6837\u7684\u4e1c\u897f\u5728 C \u4e2d\u662f\u5408\u6cd5\u7684\u3002\u4e3a\u4e86\u4fdd\u6301\u517c\u5bb9\u6027\uff0cC++ \u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u4e00\u4e2a\u540d\u5b57\u53ef\u4ee5\u540c\u65f6\u6307\u79f0\u4e00\u4e2a class\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u6307\u79f0\u4e00\u4e2a var / func\uff1b\u4f46\u662f\u5982\u679c\u786e\u5b9e\u540c\u65f6\u6307\u79f0\u4e86\u8fd9\u4e24\u79cd\uff0c\u90a3\u4e48\u9664\u975e\u663e\u5f0f\u52a0\u4e86\u5173\u952e\u5b57 class, union, struct\uff0c\u5426\u5219\u6307\u79f0\u7684\u662f\u90a3\u4e2a var / func\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#29-\u6d3e\u751f\u7c7b","title":"2.9 \u6d3e\u751f\u7c7b","text":"<p>C++ \u7684 derived class \u548c Smalltalk \u4e2d\u7684 sub class \u7684\u6982\u5ff5\u90fd\u6765\u81ea\u4e8e Simula\uff0c\u4e0d\u8fc7 BS \u8ba4\u4e3a derived/base \u76f8\u6bd4\u4e8e sub/super \u66f4\u5bb9\u6613\u7406\u89e3\u3002</p> <p>C with Classes \u6700\u521d\u6ca1\u6709\u865a\u51fd\u6570\uff0c\u56e0\u6b64\u6ca1\u6709\u4efb\u4f55\u5f62\u5f0f\u7684\u8fd0\u884c\u65f6\u652f\u6301\u3002\u4e5f\u6ca1\u6709\u6a21\u677f\uff0c\u56e0\u6b64\u60f3\u5b9e\u73b0\u5bb9\u5668\u7b49\u7c7b\u578b\u6cdb\u578b\u65f6\uff0c\u91c7\u7528\u5b8f\u6765\u5b9e\u73b0\u3002\u8fd9\u91cc \u6709\u4e00\u7bc7\u76f8\u5173\u7684\u6587\u5b57\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#210-the-protection-model","title":"2.10 The Protection Model","text":"<p>\u4fdd\u62a4\u7684\u5355\u4f4d\u662f class\u3002\u57fa\u672c\u89c4\u5219\u662f\uff0c\u53ea\u6709\u7c7b\u7684\u62e5\u6709\u8005\u653e\u7f6e\u7684\u7c7b\u58f0\u660e\u5185\u90e8\u7684\u58f0\u660e\u624d\u80fd\u6388\u4e88\u8bbf\u95ee\u6743\u3002\u9ed8\u8ba4\u6240\u6709\u4fe1\u606f\u90fd\u662f private \u7684\u3002\u8bbf\u95ee\u6743\u7684\u6388\u4e88\u65b9\u5f0f\u662f public \u6216\u8005 friend\u3002</p> <p>\u4ece C with Classes \u5f00\u59cb\uff0c\u6d3e\u751f\u5173\u7cfb\u5c31\u5b58\u5728 private / public \u7684\u533a\u5206\uff0c\u5176\u542b\u4e49\u5373\u4e3a\u89c4\u5b9a\u57fa\u7c7b\u7684\u53ef\u89c1\u6027\u3002private \u7ee7\u627f\u7684\u5e94\u7528\u573a\u666f\u4e4b\u4e00\u662f\uff0c\u57fa\u7c7b\u662f\u4e00\u4e2a interface\uff0c\u6d3e\u751f\u7c7b\u662f\u5176\u4e00\u4e2a\u5b9e\u73b0\uff0c\u4f46\u662f\u6d3e\u751f\u7c7b\u5e76\u4e0d\u613f\u610f\u8ba9\u7528\u6237\u8bbf\u95ee\u6240\u6709\u57fa\u7c7b\u7684\u6240\u6709 public \u63a5\u53e3\u3002</p> <p>\u5982\u679c\u57fa\u7c7b\u6709\u4e00\u4e2a public \u7684 <code>T foo(...)</code> \u6210\u5458\u51fd\u6570\uff0c\u5373\u4f7f\u662f private \u7ee7\u627f\uff0c\u4e5f\u6709\u529e\u6cd5\u4f7f\u7528\u6bd4 <code>T foo(...) { return Base::foo(...); }</code> \u66f4\u4f18\u96c5\u7684\u65b9\u5f0f\u8fbe\u5230\u66b4\u9732\u51fa\u67d0\u4e2a\u63a5\u53e3\u7684\u6548\u679c\u3002C with Classes \u4e2d\u662f\u5728\u5b50\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u6761 public \u7684 <code>Base.foo;</code>\uff0c\u800c\u73b0\u5728\u7684 C++ \u5219\u4f7f\u7528 <code>using Base::foo;</code>\u3002</p> <p>\u8fd9\u79cd\u4fdd\u62a4\u6a21\u5f0f\u4e00\u76f4\u5ef6\u7eed\u5230\u4e86\u73b0\u5728\u7684 C++\u3002\u4fdd\u62a4\u662f\u7f16\u8bd1\u65f6\u7684\uff0c\u56e0\u6b64\u4e8b\u5b9e\u4e0a\u8fd0\u884c\u65f6\u662f\u6709\u53ef\u80fd\u7ed5\u8fc7\u4fdd\u62a4\u7684\uff08\u56e0\u4e3a\u5b83\u662f\u4e3a\u4e86\u9632\u6b62\u610f\u5916\u800c\u975e\u6b3a\u9a97\uff09\u3002\u53e6\u5916\uff0c\u53d7\u63a7\u7684\u662f\u8bbf\u95ee\u6743\u800c\u975e\u53ef\u89c1\u6027\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>int a;\n\nclass X {\nprivate:\nint a;\n};\n\nclass Y : public X {\nvoid f() { a = 1; }\n};\n</code></pre> <p>\u53d7\u63a7\u7684\u662f\u8bbf\u95ee\u6743\u800c\u975e\u53ef\u89c1\u6027\u7684\u542b\u4e49\u662f\uff0c\u867d\u7136 <code>X::a</code> \u662f private \u7684\uff0c\u4f46\u662f\u8fd9\u4e0d\u5f71\u54cd\u7b2c 9 \u884c\u7684 <code>a = 1;</code> \u80fd\u591f\u770b\u5230\u5b83\u3002\u56e0\u6b64\u8fd9\u91cc\u4f1a\u51fa\u73b0\u4e00\u4e2a\u7f16\u8bd1\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u8bbf\u95ee\u5230\u7b2c 1 \u884c\u7684\u5168\u5c40\u7684 <code>a</code>\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#211-runtime-guarantees","title":"2.11 Runtime Guarantees","text":"<p>2.10 \u7684\u8bbf\u95ee\u63a7\u5236\u63d0\u4f9b\u4e86\u9632\u6b62\u975e\u6cd5\u8bbf\u95ee\u7684\u4fdd\u8bc1\u3002\u800c 2.11 \u4ecb\u7ecd\u4e86 Special Member Functions \u63d0\u4f9b\u7684\u53e6\u4e00\u4e9b\u4fdd\u8bc1\uff0c\u4f8b\u5982\u5bf9\u8c61\u88ab\u6784\u9020\u8fc7\uff1b\u5176\u4ed6\u6210\u5458\u51fd\u6570\u5c31\u53ef\u4ee5\u4f9d\u8d56\u8fd9\u4e9b\u4fdd\u8bc1\u3002</p> <p>C with Classes \u6709\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u4f5c\u4e3a\u4e0a\u8ff0\u7684 SMFs \u4e4b\u4e00\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u6700\u5f00\u59cb\u5206\u522b\u53eb <code>new()</code> \u548c <code>delete()</code>\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0cC with Classes \u5f15\u5165\u4e86 <code>new</code> \u8fd0\u7b97\u7b26\uff1b<code>delete</code> \u8fd0\u7b97\u7b26\u4e0e\u4e4b\u5bf9\u5e94\u3002</p> <p>C with Class \u7684 SMFs \u4e2d\u8fd8\u6709 call function \u548c return function\uff0c\u524d\u8005\u662f\u8c03\u7528\u6bcf\u4e2a\u6210\u5458\u51fd\u6570\uff08\u9664\u4e86\u6784\u9020\u51fd\u6570\uff09\u524d\u90fd\u9690\u5f0f\u8c03\u7528\u7684\u51fd\u6570\uff0c\u540e\u8005\u662f\u4ece\u6bcf\u4e2a\u6210\u5458\u51fd\u6570\uff08\u9664\u4e86\u6790\u6784\u51fd\u6570\uff09\u8fd4\u56de\u524d\u90fd\u9690\u5f0f\u8c03\u7528\u7684\u51fd\u6570\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0cmonitor \u53ef\u4ee5\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u5b9e\u73b0\u540c\u6b65\uff1a</p> <pre><code>class monitor : object {\n/* ... */\ncall()      { /* grab lock */ }\nreturn()    { /* release lock */}\n/* ... */\n};\n</code></pre> <p>\u4f46\u662f BS \u53d1\u73b0\u9664\u4e86\u4ed6\u81ea\u5df1\u4ee5\u5916\u6ca1\u4eba\u7528\uff0c\u4e8e\u662f\u540e\u6765\u5c31\u53bb\u6389\u4e86\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#212-\u6b21\u8981\u7279\u6027","title":"2.12 \u6b21\u8981\u7279\u6027","text":"<p>C \u8bed\u8a00\u7684\u8d4b\u503c\u8bed\u4e49 (bitwise copy) \u5bf9\u4e8e vector \u4e4b\u7c7b\u6709 nontrivial representation \u7684\u7c7b\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u56e0\u6b64 C with Classes \u5141\u8bb8\u7a0b\u5e8f\u5458\u81ea\u5df1\u63cf\u8ff0\u62f7\u8d1d\u7684\u610f\u4e49\uff0c\u5373\u5141\u8bb8\u5176\u5b9a\u4e49\u4e00\u4e2a <code>void operator = (X *);</code> \u7684\u51fd\u6570\u3002</p> <p>C with Classes \u4e5f\u63d0\u4f9b\u4e86 default arguments\u3002</p> <p>\u8fd9\u4e24\u8005\u662f C++ \u4e2d\u91cd\u8f7d\u673a\u5236\u7684\u524d\u9a71\u3002\u5728\u91cd\u8f7d\u673a\u5236\u5f15\u5165\u540e\uff0cdefault arguments \u5b9e\u9645\u4e0a\u5df2\u7ecf\u662f\u591a\u4f59\u7684\u4e86\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#213-features-considered-but-not-provided","title":"2.13 Features Considered, but not Provided","text":"<p>\u865a\u51fd\u6570\u3001static member\u3001\u6a21\u677f\u3001\u591a\u7ee7\u627f\u8003\u8651\u4e86\uff0c\u5728\u540e\u9762\u7684 C++ \u4e2d\u5b9e\u73b0\u4e86\u3002</p> <p>BS \u8ba4\u4e3a C++ \u4e0d\u5e94\u5f53\u6709\u81ea\u52a8\u7684 GC\u3002\u8fd8\u8003\u8651\u4e86\u652f\u6301\u5e76\u53d1\uff0c\u4f46\u662f\u4ed6\u66f4\u503e\u5411\u4e8e\u57fa\u4e8e\u5e93\u6765\u5b9e\u73b0\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#3-the-birth-of-c","title":"3 The Birth of C++","text":"<p>3.1 \u804a\u4e86 C with Classes \u4e0d\u8db3\u591f\u597d\u7684\u539f\u56e0\uff0c\u4ee5\u53ca C++ \u540d\u5b57\u7684\u7531\u6765\u3002</p> <p>3.2 \u8ba8\u8bba\u4e86\u300c\u7528\u6237\u4f1a\u662f\u54ea\u4e9b\u4eba\u300d\u300c\u4ed6\u4eec\u4f7f\u7528\u4ec0\u4e48\u6837\u7684\u7cfb\u7edf\u300d\u300c\u4f5c\u8005\u5982\u4f55\u907f\u514d\u8d1f\u8d23\u63d0\u4f9b\u5de5\u5177\u300d\uff0c\u4ece\u800c\u8ba8\u8bba\u300c\u8fd9\u4e9b\u95ee\u9898\u5c06\u5982\u4f55\u5f71\u54cd\u8bed\u8a00\u7684\u5b9a\u4e49\u300d\u3002\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u7684\u7ed3\u8bba\u662f\uff0cC++ \u4e0d\u80fd\u5e26\u6709\u7279\u522b\u590d\u6742\u7684\u7f16\u8bd1\u7684\u6216\u8fd0\u884c\u65f6\u7684 feature\uff0c\u540c\u65f6\u5fc5\u987b\u80fd\u4f7f\u7528\u539f\u6765\u7684\u94fe\u63a5\u5668\uff0c\u5e76\u4e14\u4ea7\u751f\u7684\u4ee3\u7801\u4e00\u5f00\u59cb\u5c31\u8981\u548c C \u7684\u4e00\u6837\u9ad8\u6548\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#33-cfront","title":"3.3 Cfront","text":"<p>Cfront \u662f 1982~83 \u5e74 BS \u8bbe\u8ba1\u7684 C++ \u524d\u7aef\uff08\u90a3\u65f6\u5019 C++ \u8fd8\u53eb C84\uff09\uff0c\u5b83\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u7f16\u8bd1\u5668\u524d\u7aef\uff0c\u8d1f\u8d23\u8bed\u6cd5\u548c\u8bed\u4e49\u7684\u5206\u6790\u548c\u68c0\u67e5\uff0c\u5728 1984/8 \u9996\u6b21\u53d1\u5e03\u3002\u6e90\u4ee3\u7801\u4f1a\u5148\u901a\u8fc7\u9884\u5904\u7406\u5668 Cpp \u5b8c\u6210\u9884\u5904\u7406\uff0c\u7136\u540e\u4ea4\u7ed9 Cfront \u68c0\u67e5\u5e76\u751f\u6210 C \u4ee3\u7801\u3002\u751f\u6210 C \u4ee3\u7801\u662f\u4e3a\u4e86\u53ef\u79fb\u690d\u6027\u7684\u4fdd\u8bc1\u3002</p> <p>C++ \u7684\u4e00\u4e2a\u76ee\u6807\u662f\u66ff\u4ee3 C \u8bed\u8a00\u5bf9\u9884\u5904\u7406\u5668\u7684\u4f7f\u7528\uff0c\u56e0\u4e3a BS \u8ba4\u4e3a\u8fd9\u79cd\u64cd\u4f5c\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u3002</p> <p>BS \u63d0\u5230\u6700\u5f00\u59cb\u4ed6\u5e0c\u671b\u7528\u9012\u5f52\u4e0b\u964d\u5206\u6790\u6765\u505a Cfront\uff0c\u4f46\u662f\u54a8\u8be2\u4e86\u4e13\u5bb6\u540e\u9009\u62e9\u4e86 YACC\u3002\u4f46\u4ed6\u8ba4\u4e3a\u8fd9\u662f\u4e2a\u9519\u8bef\uff0c\u56e0\u4e3a\u5f53\u65f6\u751a\u81f3\u6ca1\u6709 C \u7684 LALR(1) \u6587\u6cd5\uff1b\u6700\u7ec8\u5b9e\u73b0\u7684\u7ed3\u679c\u4e5f\u662f\u5728 YACC \u7684\u57fa\u7840\u4e0a\u7528\u5f88\u591a\u57fa\u4e8e\u9012\u5f52\u4e0b\u964d\u7684\u6280\u5de7\u6765\u8865\u5145\u3002\u4ed6\u8ba4\u4e3a\u5728\u5f53\u65f6\u4e3a C++ \u5199\u4e00\u4e2a\u597d\u7684\u9012\u5f52\u4e0b\u964d\u5206\u6790\u5668\u662f\u5b8c\u5168\u53ef\u80fd\u7684\u3002</p> <p>BS \u8fd8\u63d0\u53ca\u4e86\u5f53\u65f6\u94fe\u63a5\u5668\u5bf9\u6807\u8bc6\u7b26\u5b57\u7b26\u6570\u7684\u9650\u5236\u5e26\u6765\u4e86\u4e00\u4e9b\u9ebb\u70e6\u3002</p> <p>\u672c\u8282\u8fd8\u63d0\u53ca\u4e86 Release 1.0 ~ 3.0 \u76f8\u5173\u7684\u7b80\u5355\u5386\u53f2\u3002</p> <p>3.4 \u63d0\u53ca\u4e86 C++ \u5728 C with Classes \u4e4b\u4e0a\u7684\u7279\u6027\uff0c\u5206\u522b\u5728 3.5 ~ 3.10 \u5c55\u5f00\u8ba8\u8bba\u3002\u6b64\u5916\uff0c2.11 \u63d0\u5230\u7684 call / return function \u88ab\u53bb\u6389\u4e86\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#35-\u865a\u51fd\u6570","title":"3.5 \u865a\u51fd\u6570","text":"<p>\u865a\u51fd\u6570\u662f\u4ece Simula \u91cc\u5b66\u6765\u7684\u3002BS \u8fd8\u63d0\u5230\uff0c\u4ed6\u6709\u610f\u4e0d\u628a Simula \u4e2d\u7684 <code>INSPECT</code> \u8bed\u53e5\u5f15\u5165 C++\uff0c\u56e0\u4e3a\u4ed6\u5e0c\u671b\u9f13\u52b1\u4eba\u4eec\u4f7f\u7528\u865a\u51fd\u6570\u6765\u5b9e\u73b0\u6a21\u5757\u5316\uff1b\u867d\u7136\u4e4b\u540e C++ \u8fd8\u662f\u6dfb\u52a0\u4e86 RAII \u673a\u5236\u3002</p> <p>TODO</p> <p>3.5.2 \u4ecb\u7ecd\u4e86\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5176\u8868\u8ff0\u662f\u300cCfront 2.0 \u548c\u66f4\u9ad8\u7248\u672c\u4f1a\u7ed9\u51fa\u8b66\u544a\u300d\uff0c\u4f46\u5b9e\u9645\u6d4b\u8bd5\u65f6\u5e76\u6ca1\u6709\uff1b\u540c\u65f6\u6839\u636e 3.5.3 \u7684\u63cf\u8ff0\uff0c\u6d3e\u751f\u7c7b\u4e2d\u7684\u540d\u5b57\u4f1a\u5c4f\u853d\u57fa\u7c7b\u4e2d\u540c\u540d\u7684\u4efb\u4f55\u5bf9\u8c61\u6216\u8005\u51fd\u6570\uff1b\u4f46\u662f\u6211\u4e0d\u77e5\u9053\u8fd9\u4e9b\u4e1c\u897f\u5728\u73b0\u5728\u7684\u7248\u672c\u6709\u6ca1\u6709\u53d8\u5316\u3002\u867d\u7136\u6839\u636e\u7ed3\u679c\uff0c\u6211\u80fd\u5927\u6982\u731c\u5230\u73b0\u5728\u7f16\u8bd1\u5668\u7684\u884c\u4e3a\uff0c\u4f46\u662f\u6211\u8fd8\u6ca1\u6709\u627e\u5230 standard \u91cc\u7684\u5177\u4f53\u8bf4\u660e\uff1a</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass Base {\npublic:\nvirtual void g(int) {\ncout &lt;&lt; \"int\" &lt;&lt; \" \";\n}\n};\n\nclass Derived : public Base {\npublic:\nvoid g(char) {\ncout &lt;&lt; \"char\" &lt;&lt; \" \";\n}\n};\n\nint main() {\nBase *b = new Derived;\nb-&gt;g('a');\nb-&gt;g(1);\nDerived *d = new Derived;\nd-&gt;g('a');\nd-&gt;g(1);\n}\n</code></pre> <p>\u8f93\u51fa\u662f <code>int int char char</code>\u3002</p> <p>3.5 \u7684\u90e8\u5206\u5185\u5bb9\u8fd8\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u3002\u6709\u7a7a\u5177\u4f53\u770b\u4e00\u4e0b overload resolution \u5427\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u5e94\u8be5\u4ece\u8fd9\u91cc\u770b\uff09</p> <p>11~14\u7ae0\u597d\u50cf\u6709\u5173\u4e8e\u6b64\u7684\u66f4\u591a\u8ba8\u8bba\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\uff1a <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nstruct B {\npublic:\nint b{0};\nvirtual void f() { cout &lt;&lt; \"B::f()\" &lt;&lt; endl; }\nvoid g() { b++; f(); }\nB() { b++; f(); }\n};\n\nstruct D : public B {\npublic:\nD() {}\nvoid f() { cout &lt;&lt; \"D::f()\" &lt;&lt; endl; }\n};\n\nint main() {\nD d;\nd.g();\n}\n</code></pre></p> <p>\u867d\u7136\u8fd9\u91cc\u662f\u7528 <code>d.g()</code> \u8bbf\u95ee\u7684\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u7531\u4e8e <code>g</code> \u91cc\u9762\u5176\u5b9e\u8bbf\u95ee\u7684\u662f <code>this-&gt;f()</code>\uff0c\u56e0\u6b64\u4ecd\u7136\u4f1a\u67e5\u865a\u8868\u3002\u56e0\u6b64\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d <code>f</code> \u662f\u6216\u4e0d\u662f virtual \u4f1a\u5e26\u6765\u4e0d\u540c\u7684\u8fd0\u884c\u7ed3\u679c\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#36-\u91cd\u8f7d","title":"3.6 \u91cd\u8f7d","text":"<p>BS \u9648\u8ff0\u4e86\u5f15\u5165\u91cd\u8f7d\u4e4b\u524d\u7684\u72b9\u8c6b\uff0c\u5373\u8ba8\u8bba\u4e86\u5b9e\u73b0\u96be\u5ea6\u3001\uff08\u5728\u624b\u518c\u4e2d\u7684\uff09\u5b9a\u4e49\u96be\u5ea6\u3001\u6548\u7387\u95ee\u9898\u548c\u9605\u8bfb\u96be\u5ea6\uff0c\u5e76\u786e\u5b9a\u4e86\u8fd9\u4e9b\u4e0d\u662f\u95ee\u9898\u3002\u300c\u4e00\u79cd feature \u80fd\u591f\u600e\u6837\u88ab\u7528\u597d\uff0c\u8981\u6bd4\u5b83\u53ef\u80fd\u600e\u6837\u88ab\u7528\u9519\u91cd\u8981\u5f97\u591a\u3002\u300d</p> <p>\u8fd9\u91cc\u63d0\u53ca\u4e86\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u7684\u610f\u4e49\u3002\u4f8b\u5982\uff1a</p> <pre><code>class complex {\n// ...\npublic:\ncomplex(double);\ncomplex(double, double);\n\nfriend complex operator+(complex, complex);\n// ...\n};\n\nvoid f(complex z1, complex z2) {\ncomplex z3 = z1 + z2;   // operator+(z1, z2);\n}\n\nvoid g(complex z, double d) {\ncomplex z1 = z + d;     // operator+(z, complex(d));\ncomplex z2 = d + z;     // operator+(complex(d), z);\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u7531\u4e8e\u7b2c 4 \u884c\u7684\u6784\u9020\u51fd\u6570\u7684\u5b58\u5728\uff0c\u6211\u4eec\u5141\u8bb8\u4e86 <code>double</code> \u5230 <code>complex</code> \u7684\u9690\u5f0f\u8f6c\u6362\uff0c\u56e0\u6b64\u7b2c 16 \u548c 17 \u884c\u7684\u64cd\u4f5c\u53ef\u4ee5\u5b8c\u6210\u3002\u5982\u679c\u4e0d\u652f\u6301\u9690\u5f0f\u8f6c\u6362\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u80fd\u8981\u5199 <code>operator+</code> \u7684 <code>complex, complex</code>, <code>double, complex</code>, <code>complex, double</code> \u4e09\u4e2a\u7248\u672c\u3002</p> <p>\u5f53\u7136\uff0c\u4e3a\u4e86\u9632\u6b62\u610f\u5916\u7684\u9690\u5f0f\u8f6c\u6362\uff0c\u4f8b\u5982\u4e3a\u4e86\u9632\u6b62 <code>vector&lt;int&gt; v = 7;</code> \u88ab\u7406\u89e3\u6210 <code>vector&lt;int&gt; v(7);</code>\uff0c1995 \u5e74\uff0cC++ \u5f15\u5165\u4e86\u5173\u952e\u5b57 <code>explicit</code>\u3002\u58f0\u660e\u4e3a <code>explicit</code> \u7684\u6784\u9020\u51fd\u6570\u53ea\u80fd\u7528\u4e8e\u663e\u5f0f\u7684\u5bf9\u8c61\u6784\u9020\uff0c\u4e0d\u80fd\u7528\u4e8e\u9690\u5f0f\u8f6c\u6362\u3002</p> <p>3.6.2 \u8ba8\u8bba\u4e86\u628a\u8fd0\u7b97\u7b26\u91cd\u8f7d\u8bbe\u7f6e\u6210\u6210\u5458\u8fd8\u662f\u53cb\u5143\u3002\u4e00\u4e2a\u533a\u522b\u662f\uff0c\u5982\u679c\u662f\u6210\u5458\u7684\u8bdd\uff0c\u4e0a\u9762\u4ee3\u7801\u7b2c 16 \u884c\u8c03\u7528\u7684\u662f <code>z.operator+(complex(d))</code>\uff1b\u800c 17 \u884c\u7684\u5219\u65e0\u6cd5\u5b8c\u6210\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u8c03\u7528 <code>d.operator+(z)</code>\uff0c\u800c <code>double</code> \u7c7b\u578b\u672c\u8eab\u6ca1\u6709\u8fd9\u4e2a\u51fd\u6570\u3002BS \u8868\u793a\u4e0d\u5e0c\u671b\u652f\u6301\u7ed9\u5185\u90e8\u7c7b\u578b\u589e\u52a0\u65b0\u7684\u8fd0\u7b97\uff0c\u56e0\u4e3a\u300cC \u5185\u90e8\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\u5df2\u7ecf\u591f\u80ae\u810f\u4e86\uff0c\u51b3\u4e0d\u80fd\u518d\u5f80\u91cc\u9762\u6dfb\u4e71\u300d\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b9a\u4e49\u4e3a\u5168\u5c40\u51fd\u6570\u53ef\u4ee5\u4f7f\u5f97\u8fd0\u7b97\u7b26\u7684\u53c2\u6570\u66f4\u5177\u6709\u903b\u8f91\u5bf9\u79f0\u6027\uff1b\u800c\u5b9a\u4e49\u4e3a\u6210\u5458\u6210\u5458\u51fd\u6570\u5219\u80fd\u4fdd\u8bc1\u7b2c\u4e00\u4e2a operand \u4e0d\u53d1\u751f\u8f6c\u6362\uff0c\u8fd9\u4e0e\u7b2c\u4e00\u4e2a operand \u9700\u8981\u4e3a\u5de6\u503c\u7684\u8fd0\u7b97\u7b26\u662f\u6bd4\u8f83\u5951\u5408\u7684\uff0c\u4f8b\u5982\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002\u56e0\u6b64 <code>+=</code> \u4e4b\u7c7b\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u6700\u597d\u88ab\u5b9a\u4e49\u4e3a\u6210\u5458\u51fd\u6570\u3002\u6587\u4e2d\u4e5f\u6307\u51fa\uff0c<code>+=</code> \u4e4b\u7c7b\u7684\u8d4b\u503c\u51fd\u6570\u76f8\u5bf9\u4e8e <code>+</code> \u6765\u8bf4\u66f4\u4e3a\u57fa\u672c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u6210\u5458\u4e2d\u5b9a\u4e49 <code>+=</code>\uff0c\u800c\u5728\u5168\u5c40\u4f7f\u7528 <code>+=</code> \u6765\u5b9a\u4e49 <code>+</code>\u3002\u8fd9\u6837 <code>operator+</code> \u751a\u81f3\u4e0d\u9700\u8981\u88ab\u5b9a\u4e49\u4e3a\u53cb\u5143\uff1a</p> <pre><code>class String {\n// ...\npublic:\n// ...\nString&amp; operator+=(const String &amp;);\n};\n\nString operator+(const String &amp;s1, const String &amp;s2) {\nString sum = s1;\nsum += s2;\nreturn sum;\n}\n</code></pre> <p>BS \u8fd8\u8ba8\u8bba\u4e86 Release 2.0 \u8981\u6c42 <code>operator=</code> \u5fc5\u987b\u662f\u6210\u5458\u7684\u539f\u56e0\uff1a</p> <pre><code>class X {\n    // no operator=\n};\n\nvoid f(X a, X b) { \n    a = b;  // predefined meaning of =\n}     \n\nvoid operator=(X&amp;, X);  // disallowed by 2.0\n\nvoid g(X a, X b) {\n    a = b;  // user-defined meaning of =\n}\n</code></pre> <p>\u5373\uff0c\u4e0a\u9762\u8fd9\u6837\u7684\u4ee3\u7801\u4f1a\u9020\u6210\u6df7\u4e71\u3002\u5176\u4ed6\u8d4b\u503c\u8fd0\u7b97\u7b26\u56e0\u4e3a\u6ca1\u6709\u9ed8\u8ba4\u7684\u5b9a\u4e49\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5f15\u8d77\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u6587\u4e2d\u8fd8\u8ba8\u8bba\u4e86 <code>[]</code>, <code>()</code>, <code>-&gt;</code> \u5fc5\u987b\u662f\u6210\u5458\u7684\u539f\u56e0\u3002BS \u89e3\u91ca\u8bf4\u300c\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u901a\u5e38\u8981\u4fee\u6539\u7b2c\u4e00\u4e2a operand \u7684\u5185\u90e8\u72b6\u6001\u300d\uff0c\u4e0d\u8fc7\u4ed6\u4e5f\u8bf4\u300c\u8fd9\u4e5f\u53ef\u80fd\u662f\u4e0d\u5fc5\u8981\u7684\u8c28\u5c0f\u614e\u5fae\u300d\u3002\u8fd9\u91cc \u63d0\u5230\uff0cBS \u672c\u4eba\u73b0\u5728\u53ef\u80fd\u4e5f\u89c9\u5f97\u4e0d\u592a\u5408\u7406\uff0c\u4f46\u662f\u6ca1\u7a7a\u6539\u3002</p> <p>3.6.3 \u8ba8\u8bba\u4e86 Operator Functions\uff0c\u4e5f\u5c31\u662f user-defined conversion functions\uff0c\u4f7f\u5f97\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u578b\u3002\u4f8b\u5982\uff1a</p> <pre><code>class String {\n// ...\noperator const char * ();\n// ...\n};\n</code></pre> <p>\u8fd9\u6837\uff0c<code>String</code> \u7c7b\u578b\u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3a <code>const char *</code> \u4e86\u3002</p> <p>3.6.4 \u8ba8\u8bba\u4e86\u8fd0\u7b97\u7b26\u91cd\u8f7d\u548c\u628a\u8fd0\u7b97\u7b26\u5f53\u505a\u51fd\u6570\u8c03\u7528\u7684\u6548\u7387\u95ee\u9898\u3002\u4ed6\u6307\u51fa\uff0c\u4e3b\u8981\u7684\u6548\u7387\u95ee\u9898\u662f inline \u548c\u907f\u514d\u591a\u4f59\u7684\u4e34\u65f6\u53d8\u91cf\uff1b\u524d\u8005\u662f\u5bb9\u6613\u89e3\u51b3\u7684\uff0c\u800c\u540e\u8005\u5728\u6b64\u540e\u4e5f\u5b9e\u73b0\u4e86\u3002</p> <p>3.6.5 \u7b80\u5355\u8ba8\u8bba\u4e86\u4e0d\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u8fd0\u7b97\u7b26\u4ee5\u53ca\u6539\u53d8\u5df2\u6709\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\u6570\u6570\u76ee\u3001\u7ed3\u5408\u6027\u6216\u4f18\u5148\u7ea7\u7684\u539f\u56e0\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#37-\u5f15\u7528","title":"3.7 \u5f15\u7528","text":"<p>\u5f15\u7528\u673a\u5236\u7684\u5f15\u5165\u4e3b\u8981\u662f\u7528\u6765\u652f\u6301\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cC \u8bed\u8a00\u672c\u8eab\u7684\u53c2\u6570\u4f20\u9012\u90fd\u662f\u6309\u503c\u4f20\u9012\uff1b\u5bf9\u4e8e\u5927\u5bf9\u8c61\uff0c\u6211\u4eec\u672c\u6765\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u6307\u9488\u7684\u65b9\u5f0f\u6765\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002\u4f46\u662f\uff0c\u5728\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u573a\u666f\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u8981\u6c42\u7a0b\u5e8f\u5458\u628a <code>b - c</code> \u5199\u6210 <code>&amp;b - &amp;c</code>\uff0c\u4e00\u65b9\u9762\u662f\u4e0d\u81ea\u7136\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u6307\u9488\u76f8\u51cf\u5728\u8bed\u8a00\u4e2d\u5df2\u6709\u610f\u4e49\u3002\u5728\u6b64\u573a\u666f\u4e0b\uff0cBS \u5c06 Algol 68 \u4e2d\u7684\u5f15\u7528\u5f15\u5165\u4e86 C++\u3002\u4f5c\u4e3a\u4e00\u4e2a\u6539\u8fdb\uff0cC++ \u4e0d\u5141\u8bb8\u6539\u53d8\u4e00\u4e2a\u5f15\u7528\u6240\u5f15\u7528\u7684\u4e1c\u897f\uff08\u4e5f\u5c31\u662f\u4e0d\u5141\u8bb8\u91cd\u65b0\u7ea6\u675f\uff09\uff0c\u7ed1\u5b9a\u53ea\u80fd\u53d1\u751f\u5728\u521d\u59cb\u5316\u65f6\u3002</p> <p>BS \u9648\u8ff0\u4ed6\u7ffb\u8fc7\u4e00\u4e2a\u4e25\u91cd\u9519\u8bef\uff0c\u5373\u5141\u8bb8\u7528\u975e\u5de6\u503c\u521d\u59cb\u5316\u975e const \u5f15\u7528\u3002\u4f8b\u5982\uff1a</p> <pre><code>void inc(int &amp;v) { v++; }\n\nvoid g() {\ndouble x = 1.0;\ninc(x);\n}\n</code></pre> <p>\u7531\u4e8e int&amp; \u4e0d\u80fd\u76f4\u63a5\u5f15\u7528 double\uff0c\u56e0\u6b64\u4f1a\u53d1\u751f\u4e00\u6b21\u9690\u5f0f\u8f6c\u6362\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u8fd9\u6837 int&amp; \u5f15\u7528\u7684\u5c31\u662f\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u4e86\u3002</p> <p>\u5141\u8bb8\u7528\u975e\u5de6\u503c\u521d\u59cb\u5316\u5f15\u7528\u7684\u672c\u610f\u662f\u8ba9\u88ab\u8c03\u51fd\u6570\u8d1f\u8d23\u8bbe\u8ba1\u6309\u503c\u4f20\u9012\u8fd8\u662f\u6309\u5f15\u7528\u4f20\u9012\uff0c\u8c03\u7528\u65b9\u65e0\u9700\u5173\u5fc3\u3002Release 2.0 \u4e4b\u540e\uff0c\u4e3a\u4e86\u4fee\u6b63\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u975e\u5de6\u503c\u53ea\u80fd\u7528\u6765\u521d\u59cb\u5316 const \u5f15\u7528\u4e86\u3002</p> <p>\u672c\u8282\u8fd8\u8ba8\u8bba\u4e86\u80fd\u5426\u7ed9 <code>operator[]()</code> \u7684\u8bfb\u64cd\u4f5c\u548c\u5199\u64cd\u4f5c\u8d4b\u4e88\u4e0d\u540c\u8bed\u4e49\uff1b\u4f8b\u5982\u80fd\u5426\u8ba9 <code>s1[i] = s2[j];</code> \u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\u4e2d\u7684 <code>operator[]()</code> \u5bf9\u88ab\u5199\u7684\u5b57\u7b26\u4e32 <code>s1</code> \u548c\u88ab\u8bfb\u7684\u5b57\u7b26\u4e32 <code>s2</code> \u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u4e0d\u8fc7\u6700\u540e\u7684\u51b3\u5b9a\u662f\u8bed\u8a00\u672c\u8eab\u6ca1\u6709\u652f\u6301\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u4e00\u4e2a\u8f85\u52a9\u7c7b\u6765\u5b9e\u73b0\u3002</p> <p>3.8 \u5e38\u91cf \u8ba8\u8bba\u4e86\u5e38\u91cf\u7684\u8bde\u751f\u30023.9 \u5b58\u50a8\u7ba1\u7406 \u8ba8\u8bba\u4e86 <code>new</code> \u7684\u4f18\u70b9\uff0c\u63d0\u53ca\u4e86 <code>new</code> \u8c03\u7528\u7684 <code>malloc()</code> \u7684\u6548\u7387\u95ee\u9898\uff0c\u5177\u4f53\u89e3\u6cd5\u5728\u7b2c 10 \u7ae0\u8ba8\u8bba\u30023.10 \u7c7b\u578b\u68c0\u67e5 \u4e2d\u63d0\u5230\uff0c\u7c7b\u4f3c <code>int printf(const char *, ...)</code> \u4e2d\u7684 <code>...</code> \u662f\u300c\u51fd\u6570\u58f0\u660e\u4e2d\u7684\u7279\u6b8a\u63cf\u8ff0\u5f62\u5f0f\uff0c\u7528\u6765\u6291\u5236\u5bf9\u6700\u540e\u4e00\u4e9b\u53c2\u6570\u7684\u68c0\u67e5\u300d\uff1b\u540e\u6587\u4e2d\u4e5f\u63d0\u5230\uff0c\u8fd9\u5176\u5b9e\u662f\u7c7b\u578b\u4e0d\u5b89\u5168\u7684\u3002</p> <p>3.11 \u6b21\u8981\u7279\u6027 \u63cf\u8ff0\u4e86\u4e00\u4e9b\u5176\u4ed6\u7279\u6027\uff1a\u4f8b\u5982 BCPL \u98ce\u683c\u7684\u6ce8\u91ca <code>//</code>\uff1b\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u8bb0\u6cd5\u7531 C with Classes \u7684 <code>new</code> \u548c <code>delete</code> \u6539\u4e3a\u4e86\u73b0\u5728\u7684 <code>X()</code>, <code>~X()</code>\uff0c\u5176\u4e2d <code>~</code> \u662f C \u8bed\u8a00\u4e2d\u6c42\u8865\u7684\u8fd0\u7b97\u7b26\uff0c\u540c\u65f6\u6784\u9020\u548c\u6790\u6784\u51fd\u6570\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e3a private \u7684\u4e86\uff08\u4ee5\u524d\u662f\u9ed8\u8ba4 public\uff09\uff1b\u5f15\u8fdb\u4e86 <code>::</code> \u7528\u6765\u8868\u793a\u7c7b\u7684\u6210\u5458\u5173\u7cfb\uff0c\u800c <code>.</code> \u7528\u6765\u8868\u793a\u5bf9\u8c61\u7684\u6210\u5458\u5173\u7cfb\uff1b</p> <p>3.11.4 \u8ba8\u8bba\u4e86\u9759\u6001\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u95ee\u9898\uff0c\u4f8b\u5982 <code>cin</code> \u548c <code>cout</code> \u7684\u521d\u59cb\u5316\u3002C \u8bed\u8a00\u5728 <code>main</code> \u4e4b\u524d\u4f1a\u521d\u59cb\u5316\u597d <code>stdin</code> \u548c <code>stdout</code>\uff0c\u800c\u5176 <code>exit()</code> \u4e2d\u4e5f\u4f1a\u628a\u8fd9\u4e9b\u5173\u95ed\u3002C++ \u4e2d\u9759\u6001\u5bf9\u8c61\u521d\u59cb\u5316\u7684\u95ee\u9898\u6838\u5fc3\u5728\u4e8e\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u53ef\u80fd\u8981\u8c03\u7528\u5176\u6784\u9020\u51fd\u6570\uff1b\u800c\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u6709\u53ef\u80fd\u662f\u5176\u4ed6\u51fd\u6570\u7684\u8fd0\u884c\u7ed3\u679c\uff1b\u90a3\u4e9b\u51fd\u6570\u751a\u81f3\u53ef\u80fd\u5904\u4e8e\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u4e2d\u3002\u56e0\u6b64\u5176\u521d\u59cb\u5316\uff08\u4ee5\u53ca\u6790\u6784\uff09\u987a\u5e8f\u53ef\u80fd\u662f\u91cd\u8981\u7684\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#3115-\u58f0\u660e\u8bed\u53e5","title":"3.11.5 \u58f0\u660e\u8bed\u53e5","text":"<p>C++ \u4ece Algol 68 \u4e2d\u5438\u6536\u4e86\u4e00\u4e2a\u6982\u5ff5\uff0c\u5373\u5141\u8bb8\u628a\u58f0\u660e\u5199\u5728\u9700\u8981\u5b83\u7684\u4efb\u4f55\u5730\u65b9\u3002\u8fd9\u5bf9\u4e8e\u5f15\u7528\u548c\u5e38\u91cf\u6765\u8bf4\u662f\u5fc5\u7136\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u4e0d\u80fd\u8d4b\u503c\uff1b\u800c\u8fd9\u5bf9\u4e8e\u90a3\u4e9b\u9ed8\u8ba4\u521d\u59cb\u5316\u65b9\u5f0f\u4ee3\u4ef7\u9ad8\u7684\u7c7b\u578b\uff0c\u4f1a\u6709\u66f4\u9ad8\u7684\u6548\u7387\u3002\u8fd9\u79cd\u65b9\u6848\u4e5f\u80fd\u51cf\u5c11\u672a\u521d\u59cb\u5316\u53d8\u91cf\u5e26\u6765\u7684\u95ee\u9898\u3002</p> <p>\u672a\u521d\u59cb\u5316\u53d8\u91cf\u5b58\u5728\u7684\u5178\u578b\u60c5\u51b5\u8fd8\u6709\uff1a</p> <ol> <li><code>int i = 0; for (i = 0; i &lt; MAX; i++) // ...</code></li> <li><code>int i; cin &gt;&gt; i;</code></li> <li><code>int i; if (i = getint()) // ...</code></li> </ol> <p>2 \u7684\u60c5\u51b5\u5e76\u6ca1\u6709\u5f97\u5230\u89e3\u51b3\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3 1 \u7684\u60c5\u51b5\uff0c<code>for</code> \u8bed\u53e5\u7684 <code>init-statement</code> \u9664\u4e86 <code>expression-statement</code> \u4e4b\u5916\uff0c\u8fd8\u652f\u6301 <code>simple-declaration</code>\uff0c\u5373 <code>for (int i = 0; i &lt; MAX; i++)</code>\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3 3 \u7684\u60c5\u51b5\uff0c<code>if</code> \u8bed\u53e5\u7684 <code>condition</code> \u9664\u4e86 <code>expression</code> \u4e4b\u5916\uff0c\u8fd8\u652f\u6301 initialized declaration (\u503c\u662f\u5176\u521d\u59cb\u503c contextually converted to bool \u7684\u7ed3\u679cstmt.pre#6)\uff0c\u5373 <code>if (int i = getint())</code>\u3002\uff08C++17 \u5f00\u59cb <code>if</code> \u8bed\u53e5\u4e5f\u6709 <code>init-statement</code> \u4e86\u3002\uff09</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#4-c-language-design-rules","title":"4 C++ Language Design Rules","text":"<p>\uff08\u53ea\u662f\u4e00\u4e9b\u6211\u89c9\u5f97\u91cd\u8981\u3001\u6709\u5171\u9e23\u4e14\u4e0d\u5b8c\u5168\u719f\u6089\u7684\u5185\u5bb9\u7684\u6458\u5f55\uff09</p> <p>C++ \u548c C \u4e0d\u5e94\u5f53\u5b58\u5728\u65e0\u6545\u7684\u4e0d\u517c\u5bb9\u6027\u3002</p> <p>C++ \u8981\u6c42\u7279\u6027\u662f\u5f53\u524d\u53ef\u7528\u7684\u3002\u800c\u968f\u7740\u53ef\u7528\u7684\u8ba1\u7b97\u673a\u8d44\u6e90\u589e\u591a\uff0c\u5f02\u5e38\u5904\u7406\u548c RAII \u5728\u4eca\u5929\u5df2\u7ecf\u88ab\u8003\u8651\u4e86\u3002</p> <p>C++ \u4e0d\u8bd5\u56fe\u5f3a\u8feb\u4eba\u505a\u4ec0\u4e48\u3002\u56e0\u4e3a\u7a0b\u5e8f\u5458\u603b\u80fd\u627e\u5230\u67d0\u79cd\u65b9\u6cd5\u7ed5\u8fc7\u4ed6\u4eec\u89c9\u5f97\u65e0\u6cd5\u63a5\u53d7\u7684\u89c4\u5219\u548c\u9650\u5236\u3002</p> <p>C++ \u80fd\u591f\u4f5c\u4e3a\u4e00\u79cd\u300c\u9ad8\u7ea7\u6c47\u7f16\u8bed\u8a00\u300d\uff0c\u540c\u65f6\u4e5f\u80fd\u652f\u6301\u6570\u636e\u62bd\u8c61\u548c\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u3002</p> <p>C++ \u5e0c\u671b\u300c\u5141\u8bb8\u7528\u8bed\u8a00\u672c\u8eab\u8868\u8fbe\u6240\u6709\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u662f\u5728\u6ce8\u91ca\u91cc\u6216\u8005\u901a\u8fc7\u5b8f\u8fd9\u7c7b\u9ed1\u5ba2\u624b\u6bb5\u300d\u3002</p> <p>C++ \u8981\u6c42\u7981\u6b62\u9690\u5f0f\u5730\u8fdd\u53cd\u9759\u6001\u7c7b\u578b\u7cfb\u7edf\u3002</p> <p>C++ \u5e0c\u671b\u52a0\u5f3a\u5c40\u90e8\u6027\uff0c\u800c\u8fd9\u662f\u5728 C \u4e2d\u5f88\u6b20\u7f3a\u7684\uff0c\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\u5bf9\u5916\u53ef\u89c1\u3001\u5b8f\u5904\u7406\u3001\u7f3a\u4e4f\u8bbf\u95ee\u63a7\u5236\u7b49\u3002</p> <p>C++ \u5e0c\u671b\u907f\u514d\u987a\u5e8f\u4f9d\u8d56\u6027\uff0c\u5373\u4ea4\u6362\u4e24\u4e2a\u58f0\u660e\u5c3d\u53ef\u80fd\u4e0d\u8981\u5bfc\u81f4\u4e0d\u540c\u7684\u542b\u4e49\u3002</p> <p>C++ \u5e0c\u671b\u5bf9\u4e0d\u7528\u7684\u4e1c\u897f\u4e0d\u9700\u8981\u4ed8\u51fa\u4ee3\u4ef7\uff1b\u5426\u5219\u5bf9\u4e8e\u90a3\u4e9b low-level \u548c\u9ad8\u6027\u80fd\u7684\u5e94\u7528\u800c\u8a00\uff0cC \u4f1a\u6210\u4e3a\u6bd4 C++ \u66f4\u597d\u7684\u9009\u62e9\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#5-chronology-1985-1993","title":"5 Chronology 1985-1993","text":""},{"location":"cpp/cpp_restart/notes/dne_notes/#6-standardization","title":"6 Standardization","text":"<p>\u6807\u51c6\u662f\u300c\u5728\u7a0b\u5e8f\u5458\u548c\u8bed\u8a00\u5b9e\u73b0\u8005\u4e4b\u95f4\u7684\u4e00\u4e2a\u534f\u8bae\u300d\uff0c\u5b83\u4e0d\u4ec5\u63cf\u8ff0\u4ec0\u4e48\u662f\u5408\u6cd5\u7684\u6e90\u4ee3\u7801\uff0c\u8fd8\u8981\u8bf4\u660e\u54ea\u4e9b\u4e1c\u897f\u4f1a\u662f\u548c\u5177\u4f53\u5b9e\u73b0\u6709\u5173\u7684\u3002</p> <p>\u4e0e\u7406\u89e3\u4e00\u4e2a\u6807\u51c6\u5141\u8bfa\u4e86\u4ec0\u4e48\u76f8\u6bd4\uff0c\u7406\u89e3\u5b83\u4e0d\u80fd\u4fdd\u8bc1\u54ea\u4e9b\u4e1c\u897f\u540c\u6837\u751a\u81f3\u66f4\u52a0\u91cd\u8981\u3002</p> <p>6.3.1 \u8ba8\u8bba\u4e86 lookup \u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\uff0c6.3.2 \u8ba8\u8bba\u4e86\u4e34\u65f6\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u7684\u95ee\u9898\uff1b\u633a\u6709\u610f\u601d\u7684\uff0c\u4f46\u662f\u61d2\uff0c\u5c31\u4e0d\u8bb0\u8fc7\u6765\u4e86\u3002</p> <p>6.4 \u8ba8\u8bba\u4e86 C++ \u7684\u6269\u5145\u53ca\u5176\u8bc4\u4ef7\u51c6\u5219\u3002\u8fd9\u91cc\u63d0\u5230\u4f7f\u7528 using \u800c\u4e0d\u662f use\u3001namespace \u800c\u4e0d\u662f scope \u7684\u539f\u56e0\u5c31\u662f\u8ba9\u65b0\u5173\u952e\u5b57\u5c3d\u53ef\u80fd\u4e0d\u4e0e\u73b0\u5b58\u7684\u6807\u8bc6\u7b26\u51b2\u7a81\u3002</p> <p>6.5.2 \u8ba8\u8bba\u4e86 restricted pointers \u6ca1\u6709\u88ab\u91c7\u7528\u7684\u539f\u56e0\u3002\u8fd9\u4e2a\u7279\u6027\u6765\u81ea Fortran\uff1aFortran \u5141\u8bb8\u7f16\u8bd1\u5668\u5047\u5b9a\u51fd\u6570\u7684\u4f20\u5165\u4f5c\u4e3a\u53c2\u6570\u7684\u4e24\u4e2a\u6570\u7ec4\u4e4b\u95f4\u6ca1\u6709\u91cd\u53e0\u3002\u800c\u5bf9\u4e8e C++ \u6765\u8bf4\uff0c\u8fd9\u4e2a\u5047\u5b9a\u5e76\u4e0d\u5b58\u5728\uff1b\u4f46\u4e5f\u56e0\u6b64\u635f\u5931\u4e86\u4e00\u4e9b\u4f18\u5316\u3002\u4e0d\u8fc7\uff0c\u6700\u7ec8\u59d4\u5458\u4f1a\u8ba4\u4e3a\u8fd9\u79cd\u673a\u5236\u662f\u4e0d\u591f\u5b89\u5168\u7684\uff0c\u800c\u4e14\u5176\u4f7f\u7528\u4e3b\u8981\u96c6\u4e2d\u5728\u7279\u5b9a\u9886\u57df\uff1b\u8fd9\u7c7b\u4f18\u5316\u5e94\u8be5\u7528\u975e\u6807\u51c6\u7684\u7279\u6b8a\u6269\u5145\u6765\u5b9e\u73b0\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cC++ \u5e0c\u671b\u901a\u8fc7\u5177\u6709\u666e\u904d\u610f\u4e49\u7684\u673a\u5236\u652f\u6301\u62bd\u8c61\u7684\u601d\u60f3\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u4e13\u7528\u673a\u5236\u53bb\u652f\u6301\u7279\u5b9a\u7684\u5e94\u7528\u9886\u57df\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#651-keyword-arguments","title":"6.5.1 Keyword Arguments","text":"<p>6.5.1 \u8ba8\u8bba\u4e86 Keyword Arguments \u8fd9\u4e2a\u7279\u6027\u6ca1\u6709\u88ab\u91c7\u7528\u7684\u539f\u56e0\u3002\u8fd9\u4e2a\u7279\u6027\u5c31\u662f python \u90a3\u79cd\u53ef\u4ee5\u6309\u53c2\u6570\u540d\u5b57\u4f20\u53c2\u7684\u8bed\u6cd5\u3002\u6ca1\u6709\u91c7\u7528\u8fd9\u79cd\u65b9\u6848\u7684\u4e3b\u8981\u539f\u56e0\u4e4b\u4e00\u662f\uff0c\u8fd9\u79cd\u7279\u6027\u8981\u6c42\u5728\u51fd\u6570\u58f0\u660e\u548c\u5b9a\u4e49\u4e2d\u6bcf\u4e2a\u53c2\u6570\u7684\u540d\u5b57\u90fd\u5fc5\u987b\u5bf9\u5e94\u76f8\u540c\uff1b\u8fd9\u4f1a\u5f15\u53d1\u517c\u5bb9\u6027\u95ee\u9898\u3002\u5c24\u5176\u662f\u6709\u4e9b\u98ce\u683c\u5728\u5934\u6587\u4ef6\u4e2d\u4f7f\u7528\u300c\u957f\u800c\u5bcc\u542b\u4fe1\u606f\u300d\u7684\u540d\u5b57\uff0c\u800c\u5728\u5b9a\u4e49\u4e2d\u4f7f\u7528\u300c\u77ed\u800c\u65b9\u4fbf\u300d\u7684\u540d\u5b57\u3002</p> <p>\u5b9e\u73b0\u7c7b\u4f3c\u6548\u679c\u7684\u65b9\u6848\u4e4b\u4e00\u662f\u7ed3\u5408 default arguments \u548c\u7ee7\u627f\uff1b\u53e6\u4e00\u79cd\u65b9\u6848\u662f\u4f7f\u7528\u7c7b\u4f3c\u8fd9\u6837\u7684\u4ee3\u7801\uff1a</p> <pre><code>class w_args { wintype wt; int ulcx, ulcy, xz, yz; color wc, bc; border b; WSTATE ws; public: w_args() // set defaults \n: wt(standard), ulcx(0), ulcy(0), xz(100), yz(100), wc(black), b(single), bc(blue), ws(open) { } // override defaults: \nw_args&amp; ysize(int s) { yz=s; return *this; } w_args&amp; Color(color c) { wc=c; return *this; } w_args&amp; Border(border bb) { b = bb; return *this; } w_args&amp; Border_color(color c) { bc=c; return *this; } // ... \n}; class window { // ... \nwindow(w_args wa); // set options from wa \n// ... \n};\n\nwindow w; // default window \nwindow w( w_args().color(green).ysize(150) );\n</code></pre>"},{"location":"cpp/cpp_restart/notes/dne_notes/#7-interest-and-use","title":"7 Interest and Use","text":"<p>\u8fd9\u91cc BS \u5efa\u8bae\uff0c\u5982\u679c\u5bf9 C \u548c C++ \u90fd\u4e0d\u4e86\u89e3\uff0c\u90a3\u5c31\u5148\u5b66 C++\uff0c\u56e0\u4e3a C++ \u7684 C \u5b50\u96c6 (better C) \u5bf9\u4e8e\u65b0\u624b\u662f\u6bd4\u8f83\u597d\u5b66\u7684\uff0c\u800c\u4e14\u6bd4 C \u672c\u8eab\u5bb9\u6613\u4f7f\u7528\u3002</p> <p>BS \u8ba4\u4e3a\u6700\u5b89\u5168\u7684\u65b9\u5f0f\u662f\u81ea\u4e0b\u800c\u4e0a\u5730\u5b66\u4e60 C++\uff0c\u5373\u5148\u5b66\u4e60 C++ \u6240\u63d0\u4f9b\u7684\u4f20\u7edf\u7684\u8fc7\u7a0b\u6027\u7a0b\u5e8f\u8bbe\u8ba1\u7279\u5f81\uff0c\u7136\u540e\u5728\u5b66\u7740\u4f7f\u7528\u548c\u9075\u5faa\u90a3\u4e9b\u6570\u636e\u62bd\u8c61\u7279\u5f81\uff0c\u518d\u7136\u540e\u5b66\u4e60\u4f7f\u7528\u7c7b\u6765\u7ec4\u7ec7\u3002</p> <p>BS \u6307\u51fa\uff0c\u5b66\u8fc7 C \u7684\u7a0b\u5e8f\u5458\u53ef\u80fd\u4f1a\u8ba4\u4e3a better C \u662f\u719f\u6089\u7684\u4ece\u800c\u8df3\u8fc7\u8fd9\u4e9b\u90e8\u5206\uff0c\u4f46\u8fd9\u6837\u4f1a\u9519\u8fc7\u4e00\u4e9b\u5185\u5bb9\u3002C++ \u5e76\u4e0d\u53ea\u662f\u7528\u65b0\u8bed\u6cd5\u8868\u8ff0\u4e00\u4e9b\u8001\u6982\u5ff5\u3002</p> <p>BS \u8fd8\u6307\u51fa\uff0c\u5b66\u4e60 C++\uff0c\u6700\u6839\u672c\u7684\u662f\u5b66\u4e60\u7f16\u7a0b\u548c\u8bbe\u8ba1\u6280\u672f\uff0c\u800c\u4e0d\u662f\u8bed\u8a00\u7ec6\u8282\u3002</p> <p>C++ \u7684\u8bbe\u8ba1\u662f\u4e3a\u4e86\u4f5c\u4e3a\u4e00\u79cd\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e3a\u4e86\u5f00\u53d1\u7531\u7cfb\u7edf\u90e8\u4ef6\u7ec4\u6210\u7684\u5927\u578b\u5e94\u7528\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#8-libraries","title":"8 Libraries","text":"<p>8.3.1 \u8ba8\u8bba\u4e86 I/O stream \u5e93\u3002\u8fd9\u4e2a\u5e93\u4ea7\u751f\u7684\u610f\u4e49\uff0c\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u89e3\u51b3 <code>printf()</code> \u4e4b\u7c7b\u7684\u51fd\u6570\u4f9d\u8d56\u4e8e\u672a\u7ecf\u68c0\u67e5\u7684\u53c2\u6570\u7684\u7c7b\u578b\u4e0d\u5b89\u5168\u95ee\u9898\uff1b\u53e6\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u89e3\u51b3\u7528\u6237\u5b9a\u4e49\u7c7b\u578b\u6ca1\u6709 <code>printf()</code> \u7406\u89e3\u7684\u8f93\u51fa\u683c\u5f0f\u63cf\u8ff0\u7b26\u7684\u95ee\u9898\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#9-looking-ahead","title":"9 Looking Ahead","text":"<p>9.3.2 \u8282\u63d0\u5230\u4e86 C++ \u89e3\u51b3\u7684\u95ee\u9898\u3002</p> <p>\u5176\u4e2d\u6307\u51fa\uff0c\u300cC++ \u662f\u76ee\u524d\u80fd\u7528\u7684\u6700\u597d\u7684\u4f4e\u5c42\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u300d\uff0c\u56e0\u4e3a\u5b83\u7ed3\u5408\u4e86 C \u5728\u8fd9\u4e2a\u9886\u57df\u7684\u4f18\u52bf\uff0c\u540c\u65f6\u53c8\u80fd\u5728\u4e0d\u4ed8\u51fa\u989d\u5916\u7684\u8fd0\u884c\u65f6\u95f4\u548c\u7a7a\u95f4\u4ee3\u4ef7\u7684\u524d\u63d0\u4e0b\u5b8c\u6210\u7b80\u5355\u7684\u6570\u636e\u62bd\u8c61\u3002\u5728\u8fd9\u4e2a\u9886\u57df\u91cc\uff0cC++ \u5145\u5f53\u7684\u662f better C \u7684\u89d2\u8272\u3002\u56e0\u6b64\u4e5f\u5fc5\u987b\u5c0f\u5fc3\uff0c\u4e0d\u80fd\u628a C++ \u8bed\u8a00\u6216\u8005\u5b83\u7684\u5b9e\u73b0\u53d8\u6210 \u4ec5\u4ec5 \u662f\u4e00\u79cd\u9ad8\u7ea7\u8bed\u8a00\u3002\u540c\u65f6\uff0cC++ \u63d0\u4f9b\u7684\u6570\u636e\u62bd\u8c61\u548c\u9762\u5411\u5bf9\u8c61\u7684\u529f\u80fd\u4e5f\u76f4\u9762\u4e86\u9ad8\u5c42\u7cfb\u7edf\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8981\u6c42\uff0c\u4ece\u800c\u9002\u5e94\u7a0b\u5e8f\u8fc5\u901f\u589e\u957f\u7684\u89c4\u6a21\u548c\u590d\u6742\u6027\u3002\u53e6\u5916\uff0cC++ \u662f\u4e00\u4e2a\u8bed\u8a00\u800c\u4e0d\u662f\u4e00\u4e2a\u7cfb\u7edf\uff0c\u56e0\u6b64\u5b83\u6709\u80fd\u529b\u53bb\u9002\u5e94\u5404\u79cd\u7279\u6b8a\u7684\u7cfb\u7edf\uff08\u4f8b\u5982\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff09\uff0c\u4e3a\u7279\u6b8a\u7684\u6267\u884c\u73af\u5883\u751f\u6210\u4ee3\u7801\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#\u7b2c\u4e8c\u90e8\u5206","title":"\u7b2c\u4e8c\u90e8\u5206","text":"<p>\u7b2c\u4e8c\u90e8\u5206\u4ecb\u7ecd\u4e86 C++ Release 2.0 (1989)\u3001ARM (1990: namespaces, exception handling, nested classes, templates)\u3001C++98 (1998: )</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#10-memory-management","title":"10 Memory Management","text":"<p><code>new</code> \u548c <code>delete</code> \u5c06\u5b58\u50a8\u5206\u914d\u548c\u521d\u59cb\u5316\u5206\u79bb\u4e86\u3002\u7528 <code>new</code> \u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c<code>X::operator new</code> \u6216\u8005 <code>::operator new</code> \uff08\u53d6\u51b3\u4e8e\u524d\u8005\u662f\u5426\u5b58\u5728\uff09\u8d1f\u8d23\u5206\u914d\u5bf9\u5e94\u5927\u5c0f\u7684\u7a7a\u95f4\u5e76\u8fd4\u56de\u4e00\u4e2a <code>void*</code>\uff0c\u7136\u540e <code>X(...)</code> \u8d1f\u8d23\u5728\u8fd9\u4e2a\u7a7a\u95f4\u4e0a\u521d\u59cb\u5316\u8fd9\u4e2a\u5bf9\u8c61\u3002</p> <p>\u5728 <code>new</code> \u548c <code>delete</code> \u4e4b\u5916\uff0c\u7528\u6237\u8fd8\u53ef\u80fd\u9700\u8981\u5bf9\u5185\u5b58\u7684\u5206\u914d\u548c\u91ca\u653e\u8fdb\u884c\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u3002\u4f8b\u5982\uff0c\u5728\u5f88\u591a\u7a0b\u5e8f\u91cc\u53ef\u80fd\u9700\u8981\u9891\u7e41\u5730\u521b\u5efa\u548c\u5220\u9664\u5927\u91cf\u7684\u67d0\u51e0\u4e2a\u91cd\u8981\u7684\u7c7b\u7684\u5bf9\u8c61\uff0c\u4e14\u901a\u5e38\u6bd4\u8f83\u5c0f\uff1b\u8fd9\u79cd\u60c5\u51b5\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u72ec\u7acb\u7684 allocator \u6765\u89e3\u51b3\u3002\u53e6\u5916\u4e5f\u6709\u4e00\u4e9b\u9700\u8981\u5728\u8d44\u6e90\u7d27\u5f20\u7684\u73af\u5883\u4e0b\u957f\u65f6\u95f4\u8fd0\u884c\u4e14\u4e0d\u80fd\u4e2d\u65ad\u7684\u7a0b\u5e8f\uff0c\u4e5f\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u7ba1\u7406\u7b56\u7565\u3002\u56e0\u6b64 <code>operator new[]</code> \u548c <code>operator delete[]</code> \u88ab\u5f15\u5165\u3002</p> <p>\u9700\u8981\u6ce8\u660e\u7684\u662f\uff0c<code>new</code> \u51fa\u7684\u5bf9\u8c61\u7528 <code>delete []</code> \u6790\u6784\u6216\u8005 <code>new []</code> \u51fa\u7684\u5bf9\u8c61\u6570\u7ec4\u7528 <code>delete</code> \u6790\u6784\u90fd\u662f UB expr.delete#2\u3002</p> <p>\u5bf9\u4e8e <code>delete []</code>\uff0c\u7ef4\u62a4\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u7684\u8d1f\u62c5\u7531\u8bed\u8a00\u5b9e\u73b0\uff1b\u4e8b\u5b9e\u4e0a\u4f7f\u7528 array <code>new</code> expressions \u65f6\uff0c\u8bed\u8a00\u5b9e\u73b0\u53ef\u80fd\u4f1a\u5728 <code>operator new[]</code> \u7684\u53c2\u6570\u4e2d\u589e\u52a0\u7533\u8bf7\u7a7a\u95f4\u7684\u5927\u5c0f\u7528\u6765\u5b58\u653e\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\uff08\u6ce8\u610f\uff0c\u8fd9\u4e2a\u4e8b\u60c5\u7531 array <code>new</code> expressions \u800c\u975e <code>operator new[]</code> \u8d1f\u8d23 new.delete#footnote-219\uff09\u3002</p> <p>\u672c\u7ae0\u8fd8\u8ba8\u8bba\u4e86 placement new \u548c\u5982\u4f55\u5904\u7406\u5b58\u50a8\u5668\u8017\u5c3d\u7684\u76f8\u5173\u95ee\u9898\u3002\u8fd9\u4e9b\u95ee\u9898\u4f1a\u5728\u540e\u7eed\u91cd\u65b0\u5b66\u4e60\uff0c\u6b64\u6682\u7565\u3002\u672c\u7ae0\u8fd8\u8ba8\u8bba\u4e86\u81ea\u52a8\u7684 GC \u5e94\u5f53\u5982\u4f55\u8bbe\u8ba1\uff0c\u4e3b\u5f20\u4e86\u53ef\u4ee5\u9009\u7528\u53ef\u9009\u7684 GC\uff1b\u76f8\u5173\u8ba8\u8bba\u4e5f\u7b26\u5408\u540e\u9762\u667a\u80fd\u6307\u9488\u7684\u8bbe\u8ba1\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#11-overloading","title":"11 Overloading","text":"<p>C++ \u5e0c\u671b\u8868\u8fbe\u65b9\u5f0f\u662f\u7075\u6d3b\u4e14\u81ea\u7531\u7684\u3002\u4f8b\u5982\uff0c\u5b83\u5e0c\u671b\u4eba\u4eec\u80fd\u5199\u51fa <code>F = M * A</code>\uff0c\u800c\u975e <code>assign(F, mul(M, A))</code>\uff1b\u5b83\u4e5f\u5e0c\u671b\u5f53 <code>M</code> \u662f <code>int</code> \u800c <code>A</code> \u662f <code>double</code> \u65f6\uff0c\u80fd\u591f\u63a5\u53d7 <code>M * A</code> \u5e76\u4f5c\u51fa <code>M</code> \u5fc5\u987b\u5728\u505a\u4e58\u6cd5\u524d\u63d0\u5347\u5230 <code>double</code> \u7684\u5224\u65ad\uff0c\u800c\u4e0d\u662f\u8981\u6c42\u7a0b\u5e8f\u5458\u5199\u51fa <code>double(M) * A</code>\u3002</p> <p>\u4f46\u540c\u65f6\uff0c\u8fd9\u6837\u7684\u7075\u6d3b\u4e14\u81ea\u7531\u4f7f\u5f97\u5b89\u5168\u6027\u3001\u53ef\u9884\u89c1\u6027\u548c\u7b80\u5355\u6027\u53d7\u5230\u5f71\u54cd\u3002</p> <p>11.2 \u8ba8\u8bba\u4e86\u91cd\u8f7d\u89e3\u6790\u7684\u76f8\u5173\u8bdd\u9898\uff1a11.2.1 \u63d0\u5230 C \u8bed\u8a00\u4e2d int/char, float/double, const/non-const \u5e76\u6ca1\u6709\u5728\u51fd\u6570\u8c03\u7528\u65f6\u5f97\u5230\u6709\u6548\u533a\u5206\uff0c\u4f46\u662f\u5728\u91cd\u8f7d\u89e3\u6790\u8bed\u5883\u4e0b\u8fd9\u4e9b\uff08\u4ee5\u53ca base/derived class\uff09\u88ab\u533a\u5206\u5f00\u4e86\u300211.2.2 \u8ba8\u8bba\u4e86\u91cd\u8f7d\u89e3\u6790\u9762\u5bf9\u53ef\u80fd\u7684\u8f6c\u6362\u65f6\u7684\u89e3\u6790\u65b9\u6848\uff1b\u4e3a\u9632\u6b62\u4e0e\u73b0\u884c\u7248\u672c\u4e0d\u540c\uff0c\u8fd9\u90e8\u5206\u5b66\u4e60\u4e5f\u5c06\u5ef6\u540e\u300211.2.3 \u8ba8\u8bba\u4e86\u7a7a\u6307\u9488\u7684\u5904\u7406\uff0c\u4f8b\u5982\u5b58\u5728 <code>void f(char *); void f(int);</code> \u8fd9\u6837\u7684\u91cd\u8f7d\u65f6\uff0c\u5b9a\u4e49 <code>NULL</code> \u4e3a <code>0</code> \u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u9009\u62e9\uff1b\u800c C++ \u7684\u7406\u5ff5\u53c8\u4e0d\u5e0c\u671b\u4f7f\u7528\u5b8f\uff0c\u4f8b\u5982 <code>#define NULL (void *)0</code>\u3002</p> <p>11.3 \u8ba8\u8bba\u4e86\u91cd\u8f7d\u5982\u4f55\u5904\u7406\u94fe\u63a5\u95ee\u9898\u3002\u4e00\u79cd\u5b9e\u73b0\u662f\uff0c\u5c06 <code>void foo(int i);</code> \u4ea7\u751f\u7684\u51fd\u6570\u540d\u5b57\u79f0\u4e3a <code>foo_Fi</code>\uff0c<code>void foo(int i, char *j);</code> \u4ea7\u751f\u7684\u51fd\u6570\u540d\u5b57\u79f0\u4e3a <code>foo_FiPc</code> \u4e4b\u7c7b\u7684\u3002\u8fd9\u540c\u65f6\u80fd\u591f\u5b8c\u6210\u5728\u94fe\u63a5\u65f6\u7684\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4e3a\u4e86\u548c C \u94fe\u63a5\uff0cC++ \u5f15\u5165\u4e86\u6269\u5145 <code>extern \"C\" { ... }</code>\uff0c\u4ece\u800c\u544a\u8bc9\u7f16\u8bd1\u5668\u5728\u8fd9\u4e9b\u90e8\u5206\u91c7\u7528 C \u7684\u547d\u540d\u4e60\u60ef\u3002</p> <p>11.4 \u8ba8\u8bba\u4e86\u5bf9\u8c61\u7684\u5efa\u7acb\u548c\u590d\u5236\u3002\u5c06\u6790\u6784\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709\uff0c\u53ef\u4ee5\u4f7f\u5f97\u7c7b\u7684\u5bf9\u8c61\u4e0d\u4f1a\u5728\u5168\u5c40\u6216\u8005\u6808\u4e0a\u5206\u914d\uff0c\u53ea\u80fd\u4f7f\u7528 <code>new</code> \u6765\u5206\u914d\uff0c\u800c\u4e14\u9664\u4e86\u6210\u5458\u51fd\u6570\u5916\u4e0d\u80fd <code>delete</code> \u5b83\u3002\u5c06\u7c7b\u7684 <code>operator new</code> \u51fd\u6570\u8bbe\u4e3a\u79c1\u6709\uff0c\u53ef\u4ee5\u8d77\u5230\u76f8\u53cd\u7684\u6548\u679c\u3002\u8fd8\u8ba8\u8bba\u4e86\u5982\u4f55\u5236\u6b62\u6d3e\u751f\uff0c\u4e0d\u8fc7 C++11 \u5df2\u7ecf\u5f15\u5165\u4e86 <code>final</code> \u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002</p> <p>11.5.1 \u8ba8\u8bba\u4e86\u5bf9 <code>operator -&gt;()</code> \u7684\u91cd\u8f7d\u652f\u6301\uff1b\u8fd9\u79cd\u652f\u6301\u662f\u4e3a\u4e86\u5b9e\u73b0 smart pointer \u800c\u63d0\u51fa\u7684\u3002\u5982\u679c\u6709\u8fd9\u6837\u7684\u91cd\u8f7d\uff0c\u90a3\u4e48 <code>x-&gt;m</code> \u5c31\u4f1a\u88ab\u89e3\u91ca\u4e3a <code>x.operator-&gt;()-&gt;m</code>over.ref#1\u3002</p> <p>Note</p> <p>\u6ce8\u610f\uff0c<code>operator-&gt;</code> \u53ef\u4ee5\u770b\u505a\u662f\u4e00\u4e2a\u4e00\u5143\u8fd0\u7b97\u7b26\uff0c\u5176\u4e0d\u63a5\u6536 <code>m</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u800c\u662f\u5c06\u8fd4\u56de\u503c <code>ret</code> \u518d\u7528\u6765\u8fdb\u884c member access <code>ref-&gt;m</code>\u3002\u7531\u4e8e\u5bf9\u4e8e\u666e\u901a\u6307\u9488\uff0c<code>p-&gt;m</code>, <code>(*p).m</code>, <code>p[0].m</code> \u4e92\u76f8\u7b49\u4ef7\uff0c\u56e0\u6b64\u76f8\u5e94\u7684\u7c7b\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u7c7b\u4f3c\u7684\u7b49\u4ef7\u5173\u7cfb\uff1a <pre><code>class Ptr {\nY* p;\npublic:\nY* operator-&gt;() { return p; }\nY&amp; operator*()  { return *p; }\nY&amp; operator[](int i) { return p[i]; }\n};\n</code></pre></p> <p>11.5.2 \u8ba8\u8bba\u4e86\u4e3a\u4ec0\u4e48 <code>operator .()</code> \u6682\u65f6\u8fd8\u4e0d\u80fd\u91cd\u8f7d\uff0c\u8ba8\u8bba\u4e86\u5176\u4e2d\u4f1a\u9047\u5230\u7684\u95ee\u9898\u548c\u8fdb\u884c\u7684\u8003\u8651\u300211.5.3 \u8ba8\u8bba\u4e86\u5bf9\u4e8e\u524d\u7f00\u548c\u540e\u7f00 <code>++</code>, <code>--</code> \u7684\u91cd\u8f7d\uff1b\u867d\u7136\u6700\u7ec8\u5f15\u5165\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\u7528\u4e8e\u5904\u7406\u540e\u7f00\u7248\u672c\uff08\u56e0\u4e3a\u5176\u4ed6\u4e00\u5143\u64cd\u4f5c\u7b26\u90fd\u662f\u524d\u7f00\u7684\uff09\uff0c\u4f46\u662f BS \u8bf4\u4ed6\u66f4\u613f\u610f\u7528 <code>operator prefix++()</code> \u548c <code>operator postfix++()</code> \u7684\u65b9\u5f0f\u5904\u7406\uff0c\u867d\u7136\u6709\u4e9b\u4eba\u4e0d\u559c\u6b22\u589e\u52a0\u5173\u952e\u5b57\u3002</p> <p>11.5.4 \u63d0\u5230\u4e86\u5bf9 <code>operator -&gt;*(S b);</code> \u7684\u91cd\u8f7d\uff0c\u8fd9\u662f\u4e00\u4e2a\u6b63\u5e38\u7684\u4e8c\u5143\u64cd\u4f5c\u7b26\uff0c\u800c\u4e0d\u50cf <code>-&gt;</code> \u90a3\u6837\u7c7b\u4f3c\u4e00\u4e2a\u4e00\u5143\u64cd\u4f5c\u7b26\uff1b\u540c\u65f6\u63d0\u5230\u4e86 <code>.*</code> \u7531\u4e8e\u4e0e <code>.</code> \u4e2d\u4e00\u6837\u7684\u539f\u56e0\u6ca1\u6709\u88ab\u652f\u6301\u91cd\u8f7d\u300211.5.5 \u63d0\u5230\u4e86\u5141\u8bb8\u9017\u53f7\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\u3002\u5bf9\u8fd9\u4e24\u4e2a\u5141\u8bb8\u7684\u539f\u56e0\u90fd\u662f\u300c\u6ca1\u6709\u53d1\u73b0\u4e0d\u80fd\u8fd9\u6837\u505a\u7684\u7406\u7531\u300d\u3002</p> <p>11.6 \u63d0\u5230\u4e86\u5bf9\u589e\u52a0\u8fd0\u7b97\u7b26\uff0c\u6216\u8005\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8fd0\u7b97\u7b26\u7684\u4e00\u4e9b\u8003\u8651\u3002\u4e0d\u8fc7\u8fd9\u4e9b\u4e1c\u897f\u6682\u65f6\u8fd8\u6ca1\u6709\u88ab\u91c7\u7eb3\u3002</p> <p>11.7 \u8ba8\u8bba\u4e86\u679a\u4e3e\u3002BS \u8bf4\uff0c\u4ed6\u5e0c\u671b C++ \u652f\u6301\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u98ce\u683c\u4e2d\u5e76\u4e0d\u9700\u8981\u679a\u4e3e\uff0c\u4e5f\u6ca1\u6709\u7279\u522b\u7684\u610f\u613f\u53bb\u5904\u7406\u76f8\u5173\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5 C++ \u76f4\u63a5\u91c7\u7eb3\u4e86 C \u7684\u679a\u4e3e\u89c4\u5219\uff0c\u6ca1\u6709\u505a\u4efb\u4f55\u6539\u53d8\u3002\u4e0d\u8fc7\u4e3a\u4e86\u51fd\u6570\u91cd\u8f7d\uff0cC++ \u4e4b\u540e\u652f\u6301\u4e86\u57fa\u4e8e\u679a\u4e3e\u7684\u91cd\u8f7d\u3002\u4f46\u662f\u6211\u61d2\u5f97\u5b66\u8fd9\u4e2a\u4e86\uff0c\u6682\u65f6\u653e\u4e00\u653e\u3002</p> <p>11.7 \u8fd8\u8fdb\u884c\u4e86\u5f15\u5165\u5e03\u5c14\u7c7b\u578b\u7684\u76f8\u5173\u4ecb\u7ecd\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#12-multiple-inheritance","title":"12 Multiple Inheritance","text":"<p>\u672c\u7ae0\u8ba8\u8bba\u4e86\u591a\u91cd\u7ee7\u627f\u7684\u5f15\u5165\u8fc7\u7a0b\u3002BS \u4e5f\u63d0\u5230\uff0c\u591a\u91cd\u7ee7\u627f\u5728 2.0 \u5c31\u52a0\u5165\u5230 C++ \u662f\u4e00\u4e2a\u5931\u8bef\uff0c\u56e0\u4e3a\u8fd8\u6709\u66f4\u597d\u5b9e\u73b0\u4e5f\u66f4\u91cd\u8981\u7684\u4e1c\u897f\u6ca1\u52a0\u8fdb\u6765\u3002</p> <p>BS \u4e3e\u4e86\u51e0\u4e2a\u591a\u91cd\u7ee7\u627f\u7684\u5e94\u7528\u6848\u4f8b\uff1a</p> <ol> <li>\u6709\u4e24\u4e2a\u5e93\u7c7b <code>display</code> \u548c <code>task</code>\uff0c\u5206\u522b\u8868\u793a\u4e00\u4e2a\u663e\u793a\u5bf9\u8c61\u548c\u4e00\u4e2a\u8c03\u5ea6\u5355\u5143\uff1b\u7a0b\u5e8f\u5458\u5e0c\u671b\u521b\u5efa\u4e00\u4e2a <code>my_displayed_task</code>\uff0c\u8fd9\u4e2a\u7c7b\u7684\u6bcf\u4e2a\u5bf9\u8c61\u65e2\u662f\u4e00\u4e2a <code>display</code>\uff0c\u4e5f\u662f\u4e00\u4e2a <code>task</code>\u3002</li> <li>\u4e00\u7cfb\u5217\u63a5\u53e3\u7684\u7ec4\u5408\u3002\u4f8b\u59821 </li> <li>Mixin (i.e. mix-in)\u3002\u8fd9\u79cd\u98ce\u683c\u7528\u4e00\u4e2a\u62bd\u8c61\u7c7b\u6765\u5b9a\u4e49\u63a5\u53e3\uff0c\u7528\u4e00\u4e9b\u6d3e\u751f\u7c7b\u63d0\u4f9b\u5b9e\u73b0\uff08\u4f46\u662f\u8fd9\u4e9b\u7c7b\u672c\u8eab\u4e5f\u53ea\u662f\u300c\u79ef\u6728\u300d\uff09\u3002What are Mixins (as a concept) \u7684\u56de\u7b54\u4e2d\u6bd4\u8f83\u597d\u5730\u89e3\u91ca\u4e86 mixin \u7684\u7406\u5ff5\uff0c\u4f46\u662f\u5b83\u662f\u7528\u6a21\u677f\u5b9e\u73b0\u7684\uff1bA use for multiple inheritance? \u7684\u56de\u7b54\u4e2d\u5c55\u793a\u4e86\u7528\u591a\u91cd\u7ee7\u627f\u5b9e\u73b0 mixin \u7684\u65b9\u5f0f\u3002</li> </ol> <p>\u4e00\u4e2a\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a <pre><code>class set {\npublic:\nvirtual void insert(T*) = 0;\nvirtual void remove(T*) = 0;\n// ...\n};\n\nclass list_set : public set, private list {\n// ...\npublic:\nvoid insert(T*) { //... }\nvoid remove(T*) { //... }\n// ...\n};\n</code></pre></p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bbe\u8ba1\u63a5\u53e3 <code>set</code> \u548c\u7528\u6237\u4f7f\u7528 <code>list_set</code> \u65f6\u90fd\u4e0d\u9700\u8981\u5173\u5fc3\u5176\u5177\u4f53\u7684\u5b9e\u73b0\uff1b\u800c\u5b9e\u73b0\u5b8c\u5168\u7531 <code>list_set</code> \u7684\u8bbe\u8ba1\u8005\u4ece <code>list</code> \u7c7b\u4e2d\u7ee7\u627f\u5e76\u5b9e\u73b0\u3002</p> <p>Why should I avoid multiple inheritance in C++? \u7684\u56de\u7b54\u4e2d\u8ba8\u8bba\u4e86\u591a\u91cd\u7ee7\u627f\u76f8\u5173\u7684\u4e00\u4e9b\u95ee\u9898\u3002\u4ece\u4e00\u4e9b\u8ba8\u8bba\u4e2d\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u591a\u91cd\u7ee7\u627f\u6709\u7528\u4f46\u4e0d\u591a\u3002BS \u7ed9\u51fa\u7684\u89e3\u91ca\u662f\uff0c\u591a\u91cd\u7ee7\u627f\u662f\u5f88\u4fbf\u5b9c\u7684\u4e1c\u897f\uff0c\u56e0\u6b64\u53ef\u4ee5\u52a0\u8fdb\u6765\uff1b\u800c\u540c\u65f6\u5b83\u4e5f\u4e0d\u662f\u4ec0\u4e48\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u4e0d\u5e38\u7528\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u4f46\u662f\u8981\u7528\u7684\u65f6\u5019\u8fd8\u662f\u80fd\u7528\u5230\u7684\u3002</p> <p>12.3 \u548c 12.4 \u8282\u8fd8\u8ba8\u8bba\u4e86\u5b58\u5728\u591a\u7ee7\u627f\u5bf9\u8c61\u662f\u5982\u4f55\u5e03\u5c40\u7684\uff0c\u8ba8\u8bba\u4e86\u865a\u7ee7\u627f\u3002\u5b58\u5728\u865a\u7ee7\u627f\u65f6\u4e5f\u4f1a\u7528\u5230\u865a\u8868\uff0c\u4e00\u79cd\u5b9e\u73b0\u4e2d\uff0c\u865a\u8868\u7528\u6765\u8bb0\u5f55\u865a\u57fa\u7c7b\u7684\u504f\u79fb\u3002\u4f5c\u4e3a\u4e00\u4e2a\uff08\u6bd4\u8f83\u5bb9\u6613\u770b\u61c2\u7684\uff09\u4f8b\u5b50\uff0cVC++ \u4e2d\u7684\u5b9e\u73b0\u53ef\u4ee5\u5728 \u8fd9\u91cc \u770b\u5230\u89e3\u91ca\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u662f implementation-specific \u7684\u3002</p> <p>How Does Virtual Base Class Works Internally \u4e2d\u7ed9\u51fa\u7684\u4f8b\u5b50\u4e5f\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\uff1a</p> <pre><code>class Top { public: int t; };\nclass Left : virtual public Top { public: int l; };\nclass Right : virtual public Top { public: int r; };\nclass Bottom : public Left, public Right { public: int b; };\n</code></pre> <pre><code>|----------------------| &lt;---- Bottom bot;   // Bottom object           \n|  Left::l             |          \n|----------------------|           |------------------| \n|  Left::_vptr_Left    |-----|     |  offset of Top   | // offset starts from \n|----------------------|     |-----|------------------| // Left subobject = 20\n|  Right::r            |           |    ...           |\n|----------------------|           |------------------| \n|  Right::_vptr_Right  |-----|       \n|----------------------|     |     |------------------| \n|  Bottom::b           |     |     |  offset of Top   | // offset starts from \n|----------------------|     |-----|------------------| // Right subobject = 12\n|  Top::t              |           |    ...           | \n|----------------------|           |------------------| \n</code></pre> <p>12.7 \u4ecb\u7ecd\u4e86\u66fe\u7ecf\u5b58\u5728\u7684 delegation \u7279\u6027\u4ee5\u53ca\u5b83\u73b0\u5728\u4e0d\u5b58\u5728\u4e86\u7684\u539f\u56e0\u300212.8 \u4ecb\u7ecd\u4e86\u5dee\u70b9\u5f15\u8fdb\u7684\u91cd\u547d\u540d\u673a\u5236\u3002</p> <p>12.9 \u4ecb\u7ecd\u4e86\u7ee7\u627f\u7684\u521d\u59cb\u5316\u3002\u5728 2.0 \u4e4b\u524d\uff0c\u5b50\u7c7b\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\u7684\u65b9\u5f0f\u5927\u6982\u957f\u8fd9\u6837\uff1a</p> <pre><code>class vector {\n//...\nvector(int);\n};\n\nclass vec : public vector {\n//...\nvec(int low, int high) : (high - low - 1) { //... }\n};\n</code></pre> <p>\u5728 2.0 \u91cc\u8981\u6c42\u660e\u786e\u7ed9\u51fa\u57fa\u7c7b\u7684\u540d\u5b57\uff0c\u4ece\u800c\u9002\u914d\u591a\u7ee7\u627f\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c2.0 \u4e4b\u524d\u6210\u5458\u521d\u59cb\u5316\u7684\u987a\u5e8f\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u800c 2.0 \u4e2d\u89c4\u5b9a\u521d\u59cb\u5316\u7684\u987a\u5e8f\u7531\u58f0\u660e\u987a\u5e8f\u786e\u5b9a\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#13-class-concept-refinements","title":"13 Class Concept Refinements","text":"<p>13.2 \u4e2d\u89e3\u91ca\u4e86 2.0 \u4e2d\u6dfb\u52a0\u7684\u62bd\u8c61\u7c7b\u548c\u7eaf\u865a\u51fd\u6570\u7684\u6982\u5ff5\u3002\u8fd9\u91cc\u4e3e\u7684\u4f8b\u5b50\u5c31\u662f 12 \u8282\u4e2d\u6f14\u793a\u7684 <code>list_set</code> \u7684\u4f8b\u5b50\u3002\u62bd\u8c61\u7c7b\u80fd\u591f\u66f4\u6e05\u6670\u5730\u5212\u5206\u7528\u6237\u548c\u5b9e\u73b0\u8005\u3002\u7eaf\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u662f\uff0c\u5728\u865a\u8868\u7684\u5bf9\u5e94\u9879\u4e2d\u586b\u5165\u4e00\u4e2a\u6307\u5411 <code>_pure_virtual_called</code> \u7684\u6307\u9488\uff0c\u800c\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e9b\u8fd0\u884c\u65f6\u9519\u8bef\u4fe1\u606f\u3002</p> <p>13.3 \u4e2d\u8ba8\u8bba\u4e86 const \u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u4f8b\u5982 const \u6210\u5458\u51fd\u6570\u3002\u540c\u65f6\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cconst \u5bf9\u8c61\u6709\u53ef\u80fd\u4f1a\u88ab\u653e\u5230 ROM \u91cc\uff0c\u56e0\u6b64\u8bd5\u56fe\u5bf9 const \u53d8\u91cf\u7684\u4fee\u6539\uff08\u4f8b\u5982 <code>const int i = 1; const int* p = &amp;i; *((int *)p) = 2;</code> \u6216\u8005 <code>*const_cast&lt;int*&gt;(p) = 2</code>\uff09\u90fd\u662f UB dcl.type.cv#4, expr.const.cast#note-2\u3002\u56e0\u6b64 <code>const_cast</code> \u53ea\u80fd\u7528\u6765\u53bb\u9664\u90a3\u4e9b\u6700\u7ec8\u6307\u5411\u975e const \u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\u7684\u5e38\u91cf\u6027\u8d28\u3002\u56e0\u6b64 <code>mutable</code> \u88ab\u5f15\u5165\uff0c\u6765\u5904\u7406\u4e00\u4e9b\u9700\u8981\u7684\u53ef\u53d8\u6027\u3002</p> <p>13.4 \u4e2d\u8ba8\u8bba\u4e86 static \u6210\u5458\u3002\u4e00\u4e2a static \u6210\u5458\u58f0\u660e\u4ec5\u4ec5\u662f\u4e00\u4e2a\u58f0\u660e\uff0c\u8868\u793a\u5b83\u6240\u58f0\u660e\u7684\u5bf9\u8c61\u6216\u8005\u51fd\u6570\u5728\u7a0b\u5e8f\u7684\u67d0\u4e2a\u5730\u65b9\u6709\u552f\u4e00\u5b9a\u4e49\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7c7b\u88ab\u7b80\u5355\u5730\u5f53\u505a\u4e00\u79cd\u4f5c\u7528\u57df\u6765\u4f7f\u7528\uff1b\u8fd9\u4e5f\u662f\u540d\u5b57\u7a7a\u95f4\u6982\u5ff5\u7684\u4e00\u4e2a\u8d77\u6e90\u3002</p> <p>13.5 \u4ecb\u7ecd\u4e86\u7c7b\u7684\u5d4c\u5957\uff1b13.6 \u4ecb\u7ecd\u4e86\u6ca1\u6709\u91c7\u7528\u7684 <code>inherited::</code>\u3002</p> <p>13.7 \u4ecb\u7ecd\u4e86 relaxation of the overriding rules\u3002\u6211\u4eec\u77e5\u9053\u7236\u7c7b\u6709\u4e00\u4e2a <code>virtual int f() {...}</code>\uff0c\u5b50\u7c7b\u6709\u4e00\u4e2a <code>void f() {...}</code>\uff0c\u8fd9\u662f\u8fc7\u4e0d\u4e86\u7f16\u8bd1\u7684\uff0c\u8054\u7cfb\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u5c31\u80fd\u77e5\u9053\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u7236\u7c7b\u6709\u4e00\u4e2a <code>virtual Base* f() {...}</code>\uff0c\u5b50\u7c7b\u6709\u4e00\u4e2a <code>Derived* f() {...}</code>\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728\u540e\u6765\u662f\u88ab\u5141\u8bb8\u4e86\u7684class.virtual#8\u3002</p> <p>Note</p> <p>\u6211\u4eec\u8fd8\u8ba8\u8bba\u4e86\u5982\u679c\u7236\u7c7b\u6709\u4e00\u4e2a <code>int f() {...}</code>\uff0c\u5b50\u7c7b\u6709\u4e00\u4e2a <code>void f() {...}</code> \u7684\u60c5\u51b5\u7b97\u4e0d\u7b97 override\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e5f\u80fd\u8fc7\u7f16\u8bd1\u3002\u5728\u6807\u51c6\u4e2d\uff0coverride \u7684\u6982\u5ff5\u5728\u865a\u51fd\u6570\u4e00\u8282\u4e2d\u88ab\u5f15\u7528\uff1b\u4f46\u6ce8\u610f\u5230 class.virtual#8 \u5904\u5e76\u6ca1\u6709\u5f3a\u8c03 <code>virtual</code>\uff0c\u56e0\u6b64\u6211\u4eec\u8ba4\u4e3a\u8fd9\u79cd\u60c5\u51b5\u4e0d\u7b97 override\u3002</p> <p>\u300coverride\u300d\u4ece\u5b57\u9762\u4e0a\u7406\u89e3\u662f\u8986\u76d6\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5b50\u7c7b\u5bf9\u8c61\u53ca\u5176\u6307\u9488\u6765\u8bf4\u4e0d\u5e94\u80fd\u591f\u8bbf\u95ee\u5230\u7236\u7c7b\u5bf9\u5e94\u7684\u51fd\u6570\uff1b\u4f46\u662f\u5728\u8be5\u4f8b\u5b50\u4e2d\uff0c<code>((Base &amp;)derived).f()</code> \u80fd\u8bbf\u95ee\u5230\u57fa\u7c7b\u7684 <code>f</code>\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a <code>Base::f</code> \u5e76\u6ca1\u6709\u88ab override\uff1b<code>Derived</code> \u4e2d\u540c\u65f6\u5305\u542b <code>Derived::f</code> \u548c <code>Base::f</code>\uff0c\u800c\u7f16\u8bd1\u5668\u4f1a\u9009\u62e9\u540e\u8005\u4f5c\u4e3a\u8c03\u7528\u7684\u5bf9\u8c61\u3002</p> <p>\u8fd9\u5c31\u7c7b\u4f3c\u4e8e <code>struct A { int a, b; };  struct B : A { int a; };</code>\uff0c\u6b64\u65f6 <code>B</code> \u4e2d\u6709 <code>A::a</code>, <code>A::b</code>, <code>B::a</code>\uff0c\u4f46\u662f\u4f7f\u7528\u65f6\u7f16\u8bd1\u5668\u4f1a\u9009\u62e9 <code>B::a</code> \u6765\u4f7f\u7528\u3002</p> <p>13.8 \u8ba8\u8bba\u4e86 multi-methods\uff0c\u5373\u5982\u679c\u5b58\u5728 <code>class A {...}; class B : A {...}; class C : A {...};</code>\uff0c\u5982\u4f55\u80fd\u591f\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570 <code>f</code> \u6765\u63a5\u53d7 <code>f(B&amp;, B&amp;)</code>, <code>f(B&amp;, C&amp;)</code>, <code>f(C&amp;, B&amp;)</code>, <code>f(C&amp;, C&amp;)</code> \u8fd9\u4e48\u591a\u79cd\u60c5\u51b5\uff0c\u800c\u4e0d\u9700\u8981\u5199 \\(2^n\\) \u4e2a\u58f0\u660e\u5462\uff1f\u8bf4\u5b9e\u8bdd\u6211\u6ca1\u5b8c\u5168\u7406\u89e3\u8fd9\u4e2a\u95ee\u9898\u7684\u610f\u4e49\uff0c\u4e5f\u8fd8\u597d C++ \u76ee\u524d\u5e76\u6ca1\u6709\u5f15\u8fdb\u76f8\u5173\u7684\u76f4\u63a5\u7279\u6027\uff0c\u56e0\u6b64\u6211\u5c31\u5148\u4e0d\u7ba1\u4e86XD</p> <p>13.9 \u8ba8\u8bba\u4e86 protected members\u3002\u5176\u8003\u8651\u662f\uff0c\u6d3e\u751f\u7c7b\u548c the general public \u53ef\u80fd\u5e76\u4e0d\u4e00\u6837\uff0c\u6d3e\u751f\u7c7b\u7406\u5e94\u770b\u5230\u66f4\u591a\u7684\u4e1c\u897f\u3002BS \u81ea\u5df1\u4e5f\u8bf4 protected \u6210\u5458\u53d8\u91cf\u770b\u8d77\u6765\u7528\u5904\u4e0d\u5927\uff0c\u4f46\u662f protected \u6210\u5458\u51fd\u6570\u8fd8\u662f\u6709\u5176\u610f\u4e49\u7684\u3002</p> <p>13.10 \u8ba8\u8bba\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u6709\u4e00\u4e2a\u7c7b\u9700\u8981\u4ea7\u751f\u865a\u8868\uff0c\u800c\u591a\u4e2a\u7f16\u8bd1\u5355\u5143\u90fd\u4f7f\u7528\u8fd9\u4e2a\u7c7b\uff0c\u5c31\u4f1a\u4ea7\u751f\u597d\u51e0\u4efd\u865a\u8868\u3002\u8fd9\u91cc\u8ba8\u8bba\u4e86\u51e0\u79cd\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u662f\u770b\u8d77\u6765\u90fd\u4e0d\u600e\u4e48\u6709\u6548\u548c\u4f18\u96c5\u3002\u7b49\u6709\u7a7a\u67e5\u4e00\u67e5\u8fd9\u4e2a\u95ee\u9898\u73b0\u5728\u662f\u600e\u4e48\u89e3\u51b3\u7684\u3002</p> <p>13.11 \u4ecb\u7ecd\u4e86 pointer to member\u3002\u6211\u4eec\u6709\u65f6\u5e0c\u671b\u4f20\u9012\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6216\u8005\u641e\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u6570\u7ec4\u4e4b\u7c7b\u7684\u4e1c\u897f\uff1b\u4f46\u662f\u975e static \u7684\u7c7b\u6210\u5458\u9700\u8981\u4e00\u4e2a\u5bf9\u8c61\u624d\u80fd\u8bbf\u95ee\u3002\u56e0\u6b64 C++ \u5f15\u5165\u4e86 pointer to member\u3002\u6211\u67e5\u4e86\u5f88\u4e45\u6ca1\u67e5\u5230\u4ec0\u4e48\u7ecf\u5178\u7684\u4f7f\u7528\u6848\u4f8b\uff0c\u4ee5\u540e\u7528\u5230\u4e86\u518d\u8bf4\u5427\u3002</p>"},{"location":"cpp/cpp_restart/notes/dne_notes/#14-casting","title":"14 Casting","text":""},{"location":"cpp/cpp_restart/notes/dne_notes/#15-templates","title":"15 Templates","text":""},{"location":"cpp/cpp_restart/notes/dne_notes/#16-exception-handling","title":"16 Exception Handling","text":""},{"location":"cpp/cpp_restart/notes/dne_notes/#17-namespace","title":"17 Namespace","text":""},{"location":"cpp/cpp_restart/notes/dne_notes/#18-the-c-preprocessor","title":"18 The C Preprocessor","text":""},{"location":"cpp/cpp_restart/notes/dne_notes/#c-in-2005","title":"C++ in 2005","text":"<p>Note</p> <p>Added to Japanese translation</p> <ol> <li> <p>https://commons.wikimedia.org/wiki/File:Stream_Class_Hierarchy.png \u21a9</p> </li> </ol>"},{"location":"cpp/cpp_restart/notes/guideline_notes/","title":"C++ Core Guidelines \u9605\u8bfb\u8bb0\u5f55","text":"<p> \u7ea6 48 \u4e2a\u5b57 </p> <p>TODO: <code>span</code>, <code>variant</code></p> <p>https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#p5-prefer-compile-time-checking-to-run-time-checking</p> <p></p> <p>https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#i3-avoid-singletons</p> <p>\u8fd9\u662f\u89e3\u51b3\u521d\u59cb\u5316\u987a\u5e8f\u76f8\u5173\u95ee\u9898\u7684\u6700\u6709\u6548\u65b9\u6cd5\u4e4b\u4e00</p> <p></p> <p>https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#i7-state-postconditions</p> <p></p> <p>https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#i11-never-transfer-ownership-by-a-raw-pointer-t-or-reference-t</p> <p></p> <p>\u770b\u5230 https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#i23-keep-the-number-of-function-arguments-low \u4e86\uff0c\u6709\u7a7a\u63a5\u7740\u770b</p>"},{"location":"cpp/cpp_restart/notes/notes/","title":"C++ \u96f6\u6563\u5185\u5bb9\u8bb0\u5f55","text":"<p> \u7ea6 197 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <p>\u770b\u5230\u7684\u4e00\u4e9b\u8ba8\u8bba\u3001\u77e5\u8bc6\uff0c\u6216\u8005\u9700\u8981\u5b66\u7684\u4e00\u4e9b\u5185\u5bb9\u3002</p>"},{"location":"cpp/cpp_restart/notes/notes/#todo","title":"TODO","text":"<ul> <li> \u521d\u59cb\u5316</li> <li> value category</li> <li> \u53f3\u503c\u5f15\u7528\u3001\u79fb\u52a8\u8bed\u4e49</li> <li> placement new</li> <li> \u6a21\u677f</li> <li> POD</li> <li> \u5e38\u91cf\u6784\u9020</li> <li> inline</li> <li> stream</li> </ul>"},{"location":"cpp/cpp_restart/notes/notes/#\u5173\u4e8e-ub-\u548c\u6307\u9488\u7b49\u7684\u5927\u8ba8\u8bba","title":"\u5173\u4e8e UB \u548c\u6307\u9488\u7b49\u7684\u5927\u8ba8\u8bba","text":"<ul> <li>\u539f\u5e16</li> <li>\u6211\u7684\u5c1d\u8bd5</li> <li>\u4e0b\u9762\u7684\u4f5c\u8005\u7ed9\u7684\u4f8b\u5b50</li> <li>Pointers Are Complicated, or: What's in a Byte? \u672c\u6587\u8fd8\u6709\u540e\u7eed</li> <li>\"What The Hardware Does\" is not What Your Program Does: Uninitialized Memory</li> <li>With Undefined Behavior, Anything is Possible</li> <li>A Guide to Undefined Behavior in C and C++</li> <li>\u5f15\u6587 Taming Undefined Behavior in LLVM</li> <li>\u5f15\u6587 Reconciling High-Level Optimizations and Low-Level Code in LLVM</li> </ul>"},{"location":"cpp/cpp_restart/notes/notes/#\u4e3a\u4ec0\u4e48\u8981\u6709-ub","title":"\u4e3a\u4ec0\u4e48\u8981\u6709 UB","text":"<p>Src: https://www.ralfj.de/blog/2018/07/24/pointers-and-bytes.html</p> <p>\u4e00\u4e2a\u4f8b\u5b50</p> <p>https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#p5-prefer-compile-time-checking-to-run-time-checking</p> <p></p>"},{"location":"cpp/cpp_restart/notes/notes/#\u96f6\u6563\u5185\u5bb9","title":"\u96f6\u6563\u5185\u5bb9","text":"<ul> <li>RTTI <ul> <li>overhead: https://stackoverflow.com/a/5408269/14430730\uff0c\u5c31\u662f\u5728 vtable \u91cc\u591a\u4e86\u4e00\u9879</li> <li>\u4e0d\u8fc7\u5982\u679c\u4e0d\u7528typeid\u6216\u8005dynamic_cast\u4e5f\u9700\u8981\u521b\u9020\u8fd9\u4e2a\u9879\uff0c\u6240\u4ee5\u597d\u50cf\u6ca1\u4ec0\u4e48 overhead</li> </ul> </li> </ul>"},{"location":"cpp/cpp_restart/notes/std_notes/","title":"C++ \u8bed\u8a00\u6807\u51c6\u9605\u8bfb\u8bb0\u5f55","text":"<p> \u7ea6 996 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u672c\u6587\u8bb0\u5f55\u9605\u8bfb Standard for Programming Language C++ \u8fc7\u7a0b\u4e2d\u7684\u90e8\u5206\u5185\u5bb9\u3002</p> <p>Note</p> <p>\u8fd9\u91cc\u9605\u8bfb\u7684 standard \u7248\u672c\u5e76\u4e0d\u662f\u6700\u65b0\u7684\u7248\u672c\uff1b\u5176\u5bf9\u5e94\u7684\u4ed3\u5e93\u5728 https://github.com/timsong-cpp/cppwp\u3002\u6700\u65b0\u7248\u672c\u5728 http://eel.is/c++draft\u3002</p> <p>Warning</p> <p>\u8fd9\u91cc\u7684\u8bb0\u5f55\u5e76\u4e0d\u5b8c\u6574\uff0c\u5f53\u7701\u7565\u67d0\u4e00\u8282\u6216\u8005\u67d0\u8282\u7684\u90e8\u5206\u5185\u5bb9\u65f6\u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u4e13\u95e8\u8bf4\u660e\u3002</p>"},{"location":"cpp/cpp_restart/notes/std_notes/#1-scope","title":"1 Scope","text":""},{"location":"cpp/cpp_restart/notes/std_notes/#2-normative-references","title":"2 Normative references","text":""},{"location":"cpp/cpp_restart/notes/std_notes/#3-terms-and-definitions","title":"3 Terms and definitions","text":"<p>\u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e00\u4e9b\u672f\u8bed\u3002\u4f8b\u5982 access, signature, undefined behavior, unspecified behavior \u7b49\u3002</p> <p>Undefined behavior \u5b9a\u4e49\u4e3a\u300cbehavior for which this document imposes no requirements\u300d\uff0c\u5176\u5177\u4f53\u884c\u4e3a\u5305\u62ec\u4ea7\u751f\u4e0d\u53ef\u9884\u6d4b\u7684\u60c5\u51b5\uff08\u4e14\u4e0d\u9700\u8981\u7ed9\u51fa\u8bca\u65ad\u4fe1\u606f\uff09\u3001\u7ec8\u6b62\u7f16\u8bd1\u6216\u8fd0\u884c\uff08\u4f46\u9700\u8981\u7ed9\u51fa\u8bca\u65ad\u4fe1\u606f\uff09\u3002defns.undefined</p> <p>Unspecified behavior \u5b9a\u4e49\u4e3a\u300c\u5728 well-formed \u7684\u7a0b\u5e8f\u7ed3\u6784\u548c\u6b63\u786e\u7684\u6570\u636e\u4e2d\u7684\u3001depends on implementation \u7684\u884c\u4e3a\u300d\u3002\u4f8b\u5982\uff0c<code>int x = f() + g();</code> \u4e2d <code>f()</code> \u548c <code>g()</code> \u7684\u8fd0\u7b97\u987a\u5e8f\u3002defns.unspecified</p> <p>Implementation-defined behavior \u5b9a\u4e49\u4e3a\u300c\u5728 well-formed \u7684\u7a0b\u5e8f\u7ed3\u6784\u548c\u6b63\u786e\u7684\u6570\u636e\u4e2d\u7684\u3001depends on implementation \u4e14\u5728\u5bf9\u5e94 implementation \u7684\u6587\u6863\u4e2d\u8bf4\u660e\u7684\u884c\u4e3a\u300d\u3002defns.impl.defined</p> <p>\u8fd9\u91cc\u8fd8\u5b9a\u4e49\u4e86 valid but unspecified state\uff0c\u8fd9\u4e2a\u4f1a\u5728\u79fb\u52a8\u8bed\u4e49\u90a3\u91cc\u7528\u5230\u3002</p>"},{"location":"cpp/cpp_restart/notes/std_notes/#4-general-principles","title":"4 General principles","text":"<p>4.1 \u4ecb\u7ecd\u4e86\u5408\u89c4\u7684\u5b9e\u73b0\u5e94\u5f53\u6ee1\u8db3\u7684\u6761\u4ef6\u3002</p> <p>4.2 \u4ecb\u7ecd\u4e86\u5168\u6587\u7684\u7ed3\u6784\u3002</p> <p>4.3 \u4ecb\u7ecd\u4e86\u5168\u6587\u4e2d syntax notation \u7684\u4f7f\u7528\u3002</p>"},{"location":"cpp/cpp_restart/notes/std_notes/#5-lexical-conventions","title":"5 Lexical conventions","text":"<p>\u672c\u8282\u7ed9\u51fa\u4e86 C++ \u7684\u8bcd\u6cd5\u3002\u5176\u4e2d 5.1 \u548c 5.2 \u4ecb\u7ecd\u4e86 C++ \u7684\u7f16\u8bd1\u8fc7\u7a0b\u3002</p>"},{"location":"cpp/cpp_restart/notes/std_notes/#6-basics","title":"6 Basics","text":""},{"location":"cpp/cpp_restart/notes/std_notes/#61-preamble","title":"6.1 Preamble","text":"<p>\u672c\u8282\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\u3002</p> <p>Entity\u3002An entity is a value, object, reference, structured binding, function, enumerator, type, class member, bit-field, template, template specialization, namespace, or pack.</p> <p>Note</p> <p>\u8fd9\u91cc\u8fd8\u6ca1\u7ed9\u51fa object \u7684\u5b9a\u4e49\u3002</p> <p>Name\u3002\u4e00\u4e2a name \u8981\u4e48\u4ee3\u8868\u4e00\u4e2a entity\uff0c\u8981\u4e48\u4ee3\u8868\u4e00\u4e2a label\u3002\u5982\u679c\u4e00\u4e2a name \u4ee3\u8868 entity\uff0c\u90a3\u4e48\u5b83\u7531\u4e00\u4e2a declaration \u5f15\u5165\u3002\u5982\u679c\u4e00\u4e2a name \u4ee3\u8868 label\uff0c\u90a3\u4e48\u5b83\u7531\u4e00\u4e2a goto statement \u6216\u8005 labeled-statement \u5f15\u5165\uff08\u540e\u8005\u7684\u540d\u5b57\u4e5f\u662f\u7528\u6765 goto \u7684\uff09\u3002</p>"},{"location":"cpp/cpp_restart/notes/std_notes/#62-declarations-and-definitions","title":"6.2 Declarations and definitions","text":"<p>\u8fd9\u4e00\u8282\u8bf4\u660e\u4e86\u54ea\u4e9b declaration \u540c\u65f6\u4e5f\u662f definition\u3002\u6ce8\u610f\uff0c\u4e0d\u5b58\u5728\u4e0d\u662f declaration \u7684 definition\u3002</p> <p>\u8fd9\u4e00\u8282\u4e5f\u8bf4\u660e\uff0c\u5728 definition \u4e2d\uff0cobject \u7684\u7c7b\u578b\u4e0d\u5e94\u5f53\u662f incomplete type \u6216\u8005 abstract class\uff0c\u6216\u8005\u5b83\u4eec\u7684\u6570\u7ec4\u3002</p> <p>\u8fd9\u4e00\u8282\u8fd8\u63d0\u5230\u4e86\u51fa\u73b0\u5728 <code>extern \"C\" {}</code> (i.e. linkage-specification) \u5927\u62ec\u53f7\u4e2d\u4e0d\u5f71\u54cd declaration \u662f\u5426\u662f definition \u7684\u5224\u65ad\u3002</p>"},{"location":"cpp/cpp_restart/notes/std_notes/#63-one-definition-rule","title":"6.3 One-definition rule","text":"<p>No translation unit shall contain more than one definition of any variable, function, class type, enumeration type, template, default argument for a parameter (for a function in a given scope), or default template argument.</p> <p>\u7ed9\u51fa\u4e86 potential evaluated \u7684\u5b9a\u4e49\uff1a\u4e00\u4e2a expression \u6216\u8005 conversion \u662f potential evaluated \u7684\uff0c\u9664\u975e\u5b83\uff1a\u662f\u4e00\u4e2a unevaluated operand \u6216\u5176 subexpression\uff1b\u6216\u8005\u662f\u4e00\u4e2a initialization \u4e2d\u7684 conversion \u6216 conversion sequence\u3002\u5b9a\u4e49\u4e86 potential results \u7684\u96c6\u5408\u3002</p> <p>\u6240\u8c13 unevaluated operand \u6216\u8005 unevaluated context expr.context#1\uff0c\u662f\u6307\u7c7b\u4f3c\u4e8e <code>sizeof(foo())</code> \u4e4b\u7c7b\u7684\u4f7f\u7528\u4e2d\u7684 <code>foo()</code>\u3002\u66f4\u5177\u4f53\u7684\u53ef\u4ee5\u770b\u8fd9\u91cc\uff1ahttps://stackoverflow.com/a/35088909/14430730</p> <p>potential evaluated \u7684 potential\uff0c\u662f\u8003\u8651\u5230\u7c7b\u4f3c <code>true ? expr1 : expr2</code> \u4e2d\uff0c<code>expr2</code> \u867d\u7136\u5e76\u4e0d\u4f1a\u5b9e\u9645\u88ab\u8ba1\u7b97\uff0c\u4f46\u8fd9\u91cc\u4ecd\u7136\u8ba4\u4e3a\u5b83\u662f potential evaluated \u7684\u3002</p> <p>\u7ed9\u51fa\u4e86\u4e00\u4e2a\u51fd\u6570 named by \u4e00\u4e2a expression \u6216 conversion \u7684\u5b9a\u4e49\u3002</p> <p>potential evaluated \u548c named by \u7684\u5b9a\u4e49\u662f\u4e3a\u4e86\u65b9\u4fbf\u5b9a\u4e49 odr-used\uff0c\u5373 One-Definition Rule Used\u3002\u8fd9\u4e2a\u5b9a\u4e49\u7684\u4e3b\u8981\u76ee\u7684\u662f\uff1aEvery program shall contain exactly one definition of every non-inline function or variable that is odr-used in that program outside of a discarded statement; no diagnostic required. \u5927\u610f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b\u4e1c\u897f\u5fc5\u987b\u5f97\u6709\u4e2a\u5b9a\u4e49\uff1b\u9664\u975e\u5b83\u5728 discarded statement \u91cc\u3002\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u5c31\u662f UB\uff0c\u4e14\u7f16\u8bd1\u5668\u4e0d\u9700\u7ed9\u51fa\u8bca\u65ad\u4fe1\u606f\u3002See Also: https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something</p> <p>\u6240\u8c13 discarded statement\uff0c\u5728 [stmt.if#2] \u5b9a\u4e49\uff0c\u5927\u610f\u662f <code>if constexpr</code> \u91cc\u6ca1\u6709\u8d70\u7684\u90a3\u4e2a\u5206\u652f\u3002</p> <p>\u57fa\u672c\u4e0a\u6765\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a variable \u6216\u8005 structured binding \u5728 potential evaluated expression \u91cc\u51fa\u73b0\u4e86\uff0c\u90a3\u5b83\u5c31\u662f odr-used \u7684\uff1b\u5982\u679c\u4e00\u4e2a\u51fd\u6570 named by \u67d0\u4e2a potential evaluated expression or conversion\uff0c\u90a3\u4e48\u5b83\u4e5f\u662f odr-used \u7684\uff1b\u4efb\u4f55\u975e pure \u7684 virtual member function \u662f odr-used \u7684\uff1b\u53e6\u5916\u7c7b\u7684 non-placement (de)allocation \u51fd\u6570\u88ab ctor / dtor \u7684\u5b9a\u4e49 odr-used\uff1b\u7c7b\u7684 assignment operator function\u3001ctor\u3001dtor \u5728\u4e00\u5b9a\u60c5\u51b5\u4e0b\u4e5f\u4f1a odr-used\u3002</p> <p>\u5b9a\u4e49\u4e86 local entity \u5728 declarative region odr-usable \u7684\u6761\u4ef6\uff1b\u5982\u679c\u4e0d\u6ee1\u8db3\u4f46\u662f\u5728 declarative region \u88ab odr-used \u4e86\uff0c\u90a3\u4e48\u7a0b\u5e8f\u662f ill-formed \u7684\u3002</p> <p>\u770b\u5230 https://timsong-cpp.github.io/cppwp/n4868/basic#def.odr-11 \u4e86\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u6211\u5e94\u8be5\u5148\u770b\u540e\u9762\u7684\u3002\u8fd9\u91cc\u5148\u653e\u653e\u3002</p>"},{"location":"interviews/bytedance/","title":"\u5b57\u8282 \u7f16\u8bd1\u6784\u5efa\u7ec4","text":"<p> \u7ea6 3262 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p>"},{"location":"interviews/bytedance/#\u5b9e\u4e60","title":"\u5b9e\u4e60","text":"<p>3.2 \u6295\u7684\uff0c\u5c97\u4f4d\u662f\u300c\u7f16\u8bd1\u4e0e\u6027\u80fd\u4f18\u5316\u5b9e\u4e60\u751f\u300d\u3002</p>"},{"location":"interviews/bytedance/#46-\u4e00\u9762","title":"4.6 \u4e00\u9762","text":"<p>\u81ea\u6211\u4ecb\u7ecd\u3002</p> <p>\u8ba9\u4ed4\u7ec6\u8bb2\u4e00\u4e0b\u7f16\u8bd1\u5668\u76f8\u5173\u7684\u9879\u76ee\u3002\u95ee\u4e86\u4e2d\u95f4\u4ee3\u7801\u662f\u5982\u4f55\u5b9a\u4e49\u7684\u3002</p> <p>\u95ee\u4e86\u6808\u548c\u5806\u4e0a\u53d8\u91cf\u7684\u533a\u522b\u3002</p> <p>\u95ee\u5bf9\u5783\u573e\u56de\u6536\u662f\u5426\u4e86\u89e3\u3002\u56de\u7b54\u4e86\u7f16\u8bd1\u539f\u7406\u524d\u77bb\u91cc\u8bb2\u7684\u90a3\u4e00\u5957\uff08\u53ef\u8fbe\u6027\u3001\u7c7b\u578b\u5b89\u5168\uff09\u3002\u95ee\u4e86\u8fd9\u4e9b\u7406\u89e3\u662f\u4ece\u54ea\u91cc\u5b66\u6765\u7684\u3002\u56de\u7b54\u4e86\u670b\u8f88\u8f85\u5b66\u5907\u8bfe\u7684\u65f6\u5019\u770b\u5230\u7684\u3002\u95ee\u4e86\u7f16\u8bd1\u5668\u9700\u8981\u5bf9\u5783\u573e\u56de\u6536\u505a\u4ec0\u4e48\u652f\u6301\u3002\u6211\u5206\u6790\u4e86\u662f\u5426\u4f7f\u7528\u5783\u573e\u56de\u6536\u7684\u4f18\u52a3\uff0c\u63d0\u51fa\u53ef\u4ee5\u90fd\u5b9e\u73b0\uff0c\u4f46\u662f\u7528\u7f16\u8bd1\u9009\u9879\u6765\u8ba9\u7528\u6237\u9009\u62e9\u3002</p> <p>\u95ee\u5bf9 LLVM \u4e86\u89e3\u5417\uff0c\u56de\u7b54\u4e0d\u4e86\u89e3\u3002</p> <p>\u95ee\u4ee3\u7801\u5230\u8fd0\u884c\u9700\u8981\u54ea\u4e9b\u8fc7\u7a0b\u3002\u95ee\u4e86\u52a8\u6001\u94fe\u63a5\u7684\u673a\u5236\u662f\u600e\u4e48\u6837\u7684\u3002\u56de\u7b54\u5e76\u6ca1\u6709\u76f8\u5173\u4e86\u89e3\u3002\u95ee\u4e86\u52a8\u6001\u94fe\u63a5\u548c\u9759\u6001\u94fe\u63a5\u7684\u533a\u522b\u662f\u4ec0\u4e48\u3002\u6211\u4e5f\u4e0d\u592a\u6e05\u695a\u3002</p> <p>\u95ee\u5bf9 ELF \u683c\u5f0f\u4e86\u89e3\u5417\uff0c\u56de\u7b54\u4e0d\u592a\u4e86\u89e3\u3002</p> <p>\u95ee\u6709\u6ca1\u6709\u7528\u8fc7 gdb\uff0c\u56de\u7b54\u6ca1\u592a\u7528\u8fc7\u3002\u95ee\u5199\u4ee3\u7801\u600e\u4e48\u8c03\u8bd5\u7684\uff0c\u56de\u7b54\u90fd\u7528 IDE \u8c03\u8bd5\u7684\u3002\u95ee\u4e86\u65ad\u70b9\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u6211\u4e0d\u592a\u6e05\u695a\u3002\u95ee\u65ad\u70b9\u7684\u65f6\u5019\u80fd\u591f\u770b\u5230\u8c03\u7528\u6808\uff0c\u8fd9\u4e2a\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u6211\u4e5f\u4e0d\u592a\u6e05\u695a\u3002\u95ee\u8c03\u8bd5\u7684\u65f6\u5019\u80fd\u770b\u5230\u5404\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u6211\u8fd8\u662f\u4e0d\u6e05\u695a\u3002\u5565\u90fd\u4e0d\u4f1a\ud83e\udd2a\u53ea\u80fd\u731c\u4e00\u731c\uff0c\u731c\u7684\u4e5f\u90fd\u4e0d\u592a\u5bf9</p> <p>\u95ee\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\u7f16\u8bd1\u5668\u8981\u751f\u6210\u4ec0\u4e48\u4ee3\u7801\u3002\u5c31\u662f\u6c47\u7f16\u51fd\u6570\u8c03\u7528\u7684\u90a3\u4e00\u5957\u3002</p> <p>\u8ba9\u4ecb\u7ecd\u4e00\u4e0b\u89e3\u91ca\u5668\u7684\u7ec6\u8282\u3002\u95ee\u4e86\u5982\u679c\u60f3\u6355\u83b7\u5f15\u7528\u600e\u4e48\u505a\u3002</p> <p>\u7b97\u6cd5\u95ee\u9898\u3002\u6709 0 ~ N-1 \u8fd9 N \u4e2a\u70b9\uff0c\u6709 N-1 \u6761\u6709\u6743\u65e0\u5411\u8fb9\uff0c\u8fd9 N \u4e2a\u70b9\u662f\u4e92\u76f8\u8fde\u901a\u7684\u3002\u95ee\u9898\u662f\u56fe\u4e0a\u6700\u957f\u7684\u8def\u5f84\u662f\u591a\u957f\u3002\u5176\u5b9e\u5c31\u662f \u6811\u7684\u76f4\u5f84\uff0c\u53ef\u60dc\u6211\u4e0d\u4f1a\u3002\u80fd\u60f3\u5230\u7684\u4e00\u4e2a\u505a\u6cd5\u662f\u4efb\u9009\u4e00\u4e2a\u70b9 A\uff0c\u7136\u540e\u627e\u5230\u7531\u5b83\u51fa\u53d1\u6700\u957f\u548c\u6b21\u957f\u7684\u4e24\u6761\u8def\u5f84\uff0c\u7ec8\u70b9\u5206\u522b\u4e3a B \u548c C\uff1b\u5bf9\u4e8e\u8fd9\u4e09\u4e2a\u70b9\u4e2d\u7684\u6bcf\u4e24\u4e2a X Y\uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148 L\uff0c\u4e09\u7ec4 X, Y \u4e2d\u5bf9\u5e94\u7684 X-L-Y \u7684\u957f\u5ea6\u4e2d\u7684\u6700\u5927\u503c\u662f\u7b54\u6848\u3002</p> <p>\u8fdb\u4e00\u6b65\uff0c\u56de\u7b54\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\u7684\u6700\u957f\u8def\u5f84\u662f\u591a\u5c11\u3002\u60f3\u4e86\u4e00\u4f1a\u513f\u4e0d\u4f1a\uff0c\u4e8e\u662f\u7ed3\u675f\u4e86\u3002</p> <p>\u53cd\u95ee\u9636\u6bb5\u3002\u95ee\u4e86\u6709\u4ec0\u4e48\u6539\u8fdb\u7684\u5efa\u8bae\uff0c\u56de\u7b54\u6574\u4f53\u8fd8\u53ef\u4ee5\uff0c\u4fdd\u6301\u5b66\u4e60\u5c31\u884c\u3002\u95ee\u4e86\u53bb\u4e86\u4ee5\u540e\u4f1a\u505a\u4ec0\u4e48\uff0c\u56de\u7b54\u6709 JVM\uff0cC++ \u76f8\u5173\u7684\u4f18\u5316\u3001\u5206\u6790\u4e1a\u52a1\u4ee3\u7801\u627e\u4f18\u5316\u70b9\u3001\u65b0\u8bed\u8a00\u548c\u5de5\u5177\u7684\u63a2\u7d22\u4e4b\u7c7b\u7684\u5185\u5bb9\u3002\u5177\u4f53\u8fd8\u8981\u770b\u5206\u5230\u54ea\u4e2a\u7ec4\u3002</p>"},{"location":"interviews/bytedance/#47-\u4e8c\u9762","title":"4.7 \u4e8c\u9762","text":"<p>\u81ea\u6211\u4ecb\u7ecd\u3002</p> <p>\u95ee\u4e86\u89e3\u91ca\u5668\u548c\u7f16\u8bd1\u5668\u7684\u533a\u522b\u3002\u6211\u4ece\u6982\u5ff5\u548c\u5b9e\u73b0\u4e0a\u505a\u4e86\u533a\u5206\uff0c\u5e76\u63d0\u5230\u89e3\u91ca\u578b\u8bed\u8a00\u80fd\u5b8c\u6210\u300c\u8fd0\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32\u300d\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u7f16\u8bd1\u578b\u8bed\u8a00\u5f88\u96be\u3002</p> <p>\u8ffd\u95ee\u4e86\u89e3\u91ca\u578b\u8bed\u8a00\u76f8\u5bf9\u7f16\u8bd1\u578b\u8bed\u8a00\u7684\u4f18\u70b9\uff0c\u6211\u56de\u7b54\u4e86\u53ef\u79fb\u690d\u6027\uff0c\u7f51\u9875\u91cc\u8981\u653e\u4ee3\u7801\u66f4\u9002\u5408\u89e3\u91ca\u578b\u8bed\u8a00\u3002</p> <p>\u8ffd\u95ee\u4e86\u7f3a\u70b9\u3002\u6211\u56de\u7b54\u4e86\u6548\u7387\u95ee\u9898\u3002\u4ed6\u95ee\u6211\u77e5\u4e0d\u77e5\u9053 Java \u662f\u600e\u4e48\u8fd0\u884c\u7684\uff0c\u6211\u8bf4\u5927\u6982\u77e5\u9053\uff0c\u5c31\u662f\u7f16\u8bd1\u6210\u5b57\u8282\u7801\u7136\u540e\u5728 JVM \u91cc\u89e3\u91ca\u6267\u884c\uff0c\u89e3\u91ca\u4e86 JIT \u673a\u5236\u3002\u4ed6\u95ee\u89e3\u91ca\u578b\u8bed\u8a00\u8fd8\u6709\u4ec0\u4e48\u7f3a\u70b9\uff0c\u63d0\u793a\u4e86\u300c\u5982\u679c\u4e00\u6b21\u8fd0\u884c\u6b63\u786e\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5c31\u6ca1\u95ee\u9898\u4e86\u5417\u300d\uff0c\u4e8e\u662f\u6211\u89e3\u91ca\u4e86\u4e0d\u662f\u8fd9\u6837\u7684\uff0c\u56e0\u6b64\u9519\u8bef\u68c0\u67e5\u548c\u6d4b\u8bd5\u662f\u4e2a\u95ee\u9898\u3002</p> <p>\u4ed6\u6307\u51fa Java \u5728 JVM \u91cc\u89e3\u91ca\u6267\u884c\u7684\u65f6\u5019\u662f\u80fd\u62ff\u5230\u4e0a\u4e0b\u6587\u7684\u3002\u8ffd\u95ee\u4e86\u89e3\u91ca\u578b\u8bed\u8a00\u6027\u80fd\u65b9\u9762\u8fd8\u6709\u4ec0\u4e48\u4f18\u70b9\uff0c\u6211\u731c\u6d4b\u5982\u679c\u80fd\u62ff\u5230\u4e0a\u4e0b\u6587\uff0c\u90a3\u5c31\u53ef\u4ee5\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u66f4\u597d\u5730\u9884\u6d4b\u5206\u652f\uff0c\u4ece\u800c\u505a\u5bf9\u5e94\u7684\u4f18\u5316\u3002</p> <p>\u4ed6\u8ffd\u95ee\uff0c\u65e2\u7136\u89e3\u91ca\u578b\u8bed\u8a00\u6709\u8fd9\u4e2a\u4f18\u70b9\uff0c\u90a3\u7f16\u8bd1\u578b\u8bed\u8a00\u5982\u4f55\u80fd\u6539\u5584\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u6211\u6ca1\u731c\u51fa\u6765\uff0c\u4ed6\u63d0\u793a\uff0c\u5982\u4f55\u8ba9 C \u548c C++ \u7684\u7f16\u8bd1\u5668\u80fd\u77e5\u9053\u8fd0\u884c\u65f6\u7684\u4fe1\u606f\u5462\uff1f\u6211\u6ca1\u60f3\u5230\u3002\u4ed6\u63d0\u793a\uff0c\u53ef\u4ee5\u5148\u8d70\u4e00\u904d\u628a\u4fe1\u606f\u91c7\u96c6\u5230\uff0c\u4e0b\u4e00\u6b21\u8fd0\u884c\u518d\u5229\u7528\u8fd9\u4e2a\u4fe1\u606f\u3002\u4ed6\u95ee\u5982\u4f55\u5b9e\u73b0\u8fd9\u79cd\u7edf\u8ba1\u5462\uff1f\u6211\u731c\u53ef\u4ee5\u6253 log\u3002\u4ed6\u8bf4\u8fd9\u4e2a\u5f88\u7e41\u7410\uff0c\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u6211\u53c8\u6ca1\u731c\u51fa\u6765\uff0c\u4ed6\u8bf4\u53ef\u4ee5\u7528\u4e00\u4e9b\u63d2\u6869\uff0c\u628a\u7edf\u8ba1\u6570\u636e\u5199\u4e00\u4e2a profile \u6587\u4ef6\u3002\u8fd9\u4e2a\u53eb Profile-guided optimization (PGO)\u3002</p> <p>\u95ee\u4e86\u8fd9\u4e2a\u4e1c\u897f\u6709\u4ec0\u4e48\u7f3a\u70b9\u3002\u56de\u7b54\u4e86\u81ea\u5df1\u7684\u6d4b\u8bd5\u548c\u5b9e\u9645\u60c5\u51b5\u4e0d\u4e00\u5b9a\u76f8\u7b26\u3002</p> <p>\u4ed6\u95ee\u5bf9\u7f16\u8bd1\u5668\u672c\u8eab\u7684\u4f18\u5316\u6709\u591a\u5c11\u4e86\u89e3\u3002\u6211\u8bf4\u57fa\u672c\u6ca1\u4ec0\u4e48\u3002\u95ee\u4e86\u7f16\u8bd1\u5668\u9879\u76ee\u4e3b\u8981\u505a\u4e86\u54ea\u4e9b\u4e8b\u60c5\u3002</p> <p>\u95ee\u5982\u679c\u6709\u4e00\u4e2a C++ class\uff0c\u5728\u5168\u5c40\u5206\u914d\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd0\u884c\u7684\u65f6\u5019\u5b83\u8981\u5728 main \u4e4b\u524d\u88ab\u6784\u9020\u3002\u8fd9\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u6211\u731c\u5c31\u662f\u7f16\u8bd1\u671f\u751f\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u5b58\u653e\u6240\u6709\u9700\u8981\u521d\u59cb\u5316\u7684\u9759\u6001\u5bf9\u8c61\uff0c\u7136\u540e\u5728\u7a0b\u5e8f\u5165\u53e3\u548c main \u4e4b\u95f4\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u4ed6\u8bf4\u8fd9\u79cd\u65b9\u5f0f\u5bf9\u4e8e\u591a\u6587\u4ef6\u6765\u8bf4\u662f\u4e0d\u884c\u7684\u3002\u6211\u731c\u5728\u94fe\u63a5\u7684\u65f6\u5019\u53ef\u4ee5\u628a\u5404\u4e2a .o \u7684\u5217\u8868\u5408\u5e76\u8d77\u6765\u3002\u4ed6\u95ee\u6211\u5217\u8868\u91cc\u8981\u5b58\u4ec0\u4e48\uff0c\u6211\u8bf4\u8981\u5b58\u6bcf\u4e2a\u9700\u8981\u521d\u59cb\u5316\u7684\u5bf9\u8c61\u6307\u9488\u548c\u5bf9\u5e94\u6784\u9020\u51fd\u6570\u7684\u6307\u9488\u3002\u4ed6\u8bf4\u6211\u7684\u65b9\u6cd5\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u53ea\u9700\u8981\u5b58\u4e00\u4e2a\u6307\u9488\u5c31\u591f\u4e86\uff0c\u95ee\u6211\u4e3a\u4ec0\u4e48\u3002\u6211\u6ca1\u8bf4\u51fa\u6765\uff0c\u4ed6\u89e3\u91ca\u8bf4\u94fe\u63a5\u65f6\u662f\u6709\u7b26\u53f7\u8868\u7684\uff0c\u7b26\u53f7\u8868\u662f\u77e5\u9053\u6bcf\u4e2a\u5bf9\u8c61\u662f\u54ea\u4e2a\u7c7b\u7684\u3002</p> <p>\u4ed6\u95ee\u5982\u679c\u6709\u82e5\u5e72\u5168\u5c40\u5bf9\u8c61\uff0c\u8c01\u4f1a\u88ab\u5148\u521d\u59cb\u5316\u3002\u6211\u56de\u7b54\u5e94\u8be5\u662f\u94fe\u63a5\u7684\u65f6\u5019\u51b3\u5b9a\u7684\uff0c\u4f46\u662f\u6211\u4e0d\u7406\u89e3\u8fd9\u4e2a\u987a\u5e8f\u4f1a\u6709\u4ec0\u4e48\u5f71\u54cd\u3002\u4ed6\u8ffd\u95ee\u94fe\u63a5\u65f6\u8fd9\u4e2a\u987a\u5e8f\u53d6\u51b3\u4e8e\u4ec0\u4e48\u3002\u6211\u6ca1\u7b54\u51fa\u6765\uff0c\u4ed6\u8bf4\u53d6\u51b3\u4e8e\u524d\u9762\u90a3\u4e2a\u8868\u91cc\u7684\u4f4d\u7f6e\u3002\u6211\u95ee\u4ed6\u8868\u91cc\u7684\u4f4d\u7f6e\u600e\u4e48\u51b3\u5b9a\u7684\uff0c\u4ed6\u8bf4\u662f\u94fe\u63a5\u5668\u81ea\u5df1\u5b9e\u73b0\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u4e2a UB\uff0c\u56e0\u6b64\u8fd9\u91cc\u662f\u53ef\u80fd\u51fa\u95ee\u9898\u7684\u3002</p> <p>\u4ed6\u95ee\u5047\u8bbe\u5e0c\u671b\u8fd9\u4e2a\u987a\u5e8f\u786e\u5b9a\u4e0b\u6765\u6709\u4ec0\u4e48\u529e\u6cd5\u3002\u6211\u8bf4\u5982\u679c\u6211\u6765\u5b9e\u73b0\uff0c\u6211\u4f1a\u5728 main \u51fd\u6570\u91cc\u9762\u624b\u52a8\u6784\u9020\u8fd9\u4e9b\u5bf9\u8c61\u3002\u4ed6\u8bf4\u8fd9\u6837\u4e0d\u592a\u5408\u9002\uff0c\u53ea\u80fd\u653e\u5728\u5168\u5c40\u3002\u4ed6\u63d0\u793a\u53ef\u4ee5\u7ed9\u94fe\u63a5\u5668\u63d0\u4f9b\u4fe1\u606f\u89c4\u5b9a\u8c01\u5728\u524d\u8c01\u5728\u540e\uff0c\u95ee\u6211\u600e\u4e48\u63d0\u4f9b\u4fe1\u606f\u3002\u6211\u6ca1\u7b54\u51fa\u6765\u3002\u4ed6\u63d0\u793a\u94fe\u63a5\u5668\u80fd\u770b\u5230\u7684\u662f\u54ea\u4e9b\u4fe1\u606f\uff0c\u6211\u8bf4\u662f\u51fd\u6570\u7b26\u53f7\u3002\u4ed6\u8bf4\u90a3\u53ea\u80fd\u5728\u7b26\u53f7\u4e0a\u505a\u6587\u7ae0\u3002\u6211\u6ca1\u60f3\u51fa\u6765\uff0c\u4ed6\u8bf4\u89c4\u5b9a\u597d\u7b26\u53f7\u7684\u683c\u5f0f\uff0c\u7136\u540e\u53bb\u6539\u94fe\u63a5\u5668\ud83d\ude15\u4ed6\u4e5f\u4e0d\u65e9\u8bf4\u80fd\u6539\u94fe\u63a5\u5668</p> <p>\u4ed6\u4ecb\u7ecd\u5b9e\u9645\u7684\u65b9\u6848\u662f\u7528 attribute\uff0c\u7ed9\u4e00\u4e2a\u6743\u91cd\u3002\u7f16\u8bd1\u5668\u6309\u7167\u8fd9\u4e2a\u6743\u91cd\u751f\u6210\u7b26\u53f7\u7684\u65f6\u5019\u52a0\u4fe1\u606f\uff0c\u94fe\u63a5\u5668\u6839\u636e\u4fe1\u606f\u5904\u7406\u94fe\u63a5\u3002</p> <p>\u95ee C++ \u91cc <code>A *p = nullptr;</code>\uff0c<code>A</code> \u91cc\u6709\u4e00\u4e2a <code>foo()</code>\uff0c\u95ee <code>p-&gt;foo()</code> \u7684\u7ed3\u679c\u662f\u4ec0\u4e48\u3002\u56de\u7b54\u4e86\u5982\u679c\u662f static \u7684\u8bdd\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff1b\u5982\u679c\u4e0d\u662f static \u7684\u8bdd <code>p</code> \u4f1a\u4f5c\u4e3a <code>this</code> \u88ab\u4f20\u8fdb\u53bb\uff0c\u5982\u679c\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4e86 <code>this</code> \u5c31\u4f1a\u6bb5\u9519\u8bef\uff0c\u6ca1\u4f7f\u7528\u7684\u8bdd\u5c31\u6ca1\u95ee\u9898\u3002</p> <p>\u95ee\u4e00\u4e2a\u7b97\u6cd5\u9898\u3002\u6709\u4e00\u5757 buffer\uff0c\u5927\u5c0f\u662f N byte\uff0c\u95ee\u91cc\u9762\u6709\u591a\u5c11\u4e2a bit \u662f 1\u3002\u6211\u56de\u7b54\u5faa\u73af\u53f3\u79fb\uff0c\u7136\u540e\u6bcf\u6b21 &amp;1\u3002\u4ed6\u95ee\u6709\u6ca1\u6709\u597d\u4e00\u70b9\u7684\u505a\u6cd5\u3002\u6211\u8bf4\u6bcf\u6b21\u7528\u82e5\u5e72\u5b57\u8282\u67e5\u8868\u3002</p> <p>\u53cd\u95ee\u9636\u6bb5\u3002\u95ee\u4e86\u54ea\u4e9b\u65b9\u9762\u9700\u8981\u52a0\u5f3a\uff0c\u4ed6\u8bf4\u7f16\u8bd1\u5668\u7684\u5de5\u7a0b\u96be\u70b9\u90fd\u4e0d\u5728\u524d\u7aef\uff0c\u66f4\u591a\u8981\u5f80\u4e2d\u540e\u6bb5\u7684\u4f18\u5316\u8d70\uff1b\u6211\u5bf9\u4f18\u5316\u7684\u7406\u89e3\u8fd8\u6bd4\u8f83\u5c11\u3002\u524d\u9762\u8bf4\u7684\u90a3\u4e9b\u95ee\u9898\u770b\u4e00\u770b IR \u5c31\u77e5\u9053\u600e\u4e48\u56de\u4e8b\u4e86\u3002</p>"},{"location":"interviews/bytedance/#415-\u4e09\u9762","title":"4.15 \u4e09\u9762","text":"<p>\u8fd9\u573a\u53ea\u6709\u4e0d\u5230 30 min\u3002\u662f\u548c\u5934\u5934\u804a\u7684\u3002</p> <p>\u4ed6\u4ecb\u7ecd\u56e2\u961f\u6838\u5fc3\u76ee\u524d\u4e0d\u5728\u7f16\u8bd1\u5668\u672c\u8eab\uff0c\u800c\u662f\u5728\u7f16\u8bd1\u5668\u7684\u5e94\u7528\uff0c\u5373\u6709\u54ea\u4e9b\u5e94\u7528\u3001\u54ea\u4e9b\u9677\u9631\uff0c\u6709\u54ea\u4e9b\u4e0d\u8db3\u7684\u5730\u65b9\u3002\u53ea\u6709\u5c11\u90e8\u5206\u4e00\u4e9b\u7cbe\u529b\u6295\u5165\u5728\u65b0\u65b9\u5411\uff0c\u4f8b\u5982\u7528 LLVM \u505a golang \u7684\u540e\u7aef\u3002\u505a\u4e00\u4e2a\u7f16\u8bd1\u5668\u4ea7\u54c1\u672c\u8eab\u5e76\u4e0d\u662f\u56e2\u961f\u76ee\u524d\u6838\u5fc3\u7684\u5de5\u4f5c\u3002\u4ed6\u4ecb\u7ecd\u7b2c\u4e00\u4f4d\u9762\u8bd5\u5b98\u5bf9\u7f16\u8bd1\u5668\u662f\u5f88\u719f\u6089\u7684\uff0c\u73b0\u5728\u5728\u7528 LLVM \u505a golang \u7684\u540e\u7aef\uff1b\u7b2c\u4e8c\u4e2a\u9762\u8bd5\u5b98\u4e3b\u8981\u662f\u505a\u6027\u80fd\u4f18\u5316\u7684\u3002\u4e5f\u6709\u770b\u65b0\u7684\u786c\u4ef6\u67b6\u6784\u548c\u7f16\u8bd1\u5668\u7684\u9002\u914d\u3002</p> <p>\u4ed6\u95ee\u6211\u6709\u4ec0\u4e48\u95ee\u9898\u3002\u6211\u95ee\u300c\u7f16\u8bd1\u5668\u7684\u5e94\u7528\u300d\u4e3b\u8981\u662f\u6709\u4ec0\u4e48\u4f8b\u5b50\u3002\u4ed6\u8bf4\u516c\u53f8\u53d1\u5c55\u6bd4\u8f83\u5feb\uff0c\u5f88\u591a\u540c\u4e8b\u662f\u4ece\u5176\u4ed6\u8bed\u8a00\u8f6c\u8fc7\u6765\u7684\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e9b\u8bed\u6cd5\u7279\u6027\u7684\u4f7f\u7528\u4e0d\u662f\u5f88\u719f\u7ec3\uff0c\u56e0\u6b64\u4e1a\u52a1\u91cc\u9762\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u6027\u80fd\u95ee\u9898\uff1a\u4f8b\u5982\u6709\u7684\u65f6\u5019\u8be5 catch \u7684\u5f02\u5e38\u6ca1\u6709 catch\uff0c\u5c31\u4f1a\u518d\u629b\u4e00\u5c42\uff0c\u8fd9\u4e2a\u5c31\u4f1a\u5e26\u6765\u6027\u80fd\u7684\u635f\u5931\u3002\u6240\u4ee5\u53ef\u80fd\u505a\u7684\u4e00\u4e9b\u4efb\u52a1\u662f\u89e3\u51b3\u4ee3\u7801\u8d28\u91cf\u7684\u95ee\u9898\u3002</p> <p>\u4ed6\u8ba9\u6211\u8bb2\u4e00\u4e0b\u4ec0\u4e48\u65f6\u5019\u4f1a\u51fa\u73b0 page fault\u3002\u5f53\u65f6\u8fd8\u662f\u4e0d\u592a\u4f1a\u54c7\u2014\u2014\u53ea\u8bf4\u4e86\u4ea4\u6362\u7684\u53ef\u80fd\u3002\u5176\u5b9e\u6709 4 \u79cd\u53ef\u80fd\u7684\u3002</p> <p>\u95ee\u6709\u6ca1\u6709\u770b\u8fc7 CSAPP \u4ee5\u53ca\u5173\u4e8e CPU \u5fae\u67b6\u6784\u7684\u5185\u5bb9\u3002\u95ee\u6211\u77e5\u4e0d\u77e5\u9053 TLB\uff0c\u6211\u5f53\u65f6\u4e0d\u8bb0\u5f97\u4e86\uff0c\u6240\u4ee5\u8bf4\u6ca1\u5370\u8c61\u3002</p> <p>\u95ee\u6709\u6ca1\u6709\u8bfb\u7814\u7684\u6253\u7b97\u3002\u6211\u8bf4\u80fd\u4fdd\u5c31\u8bfb\uff0c\u4e0d\u80fd\u5c31\u5c31\u4e1a\u3002</p> <p>\u4ed6\u4ecb\u7ecd\u4e86\u7ec4\u91cc\u7684\u5404\u79cd\u5de5\u4f5c\u3002\u8bb2\u4e86\u5404\u79cd\u65b9\u5411\uff0c\u540c\u65f6\u4e5f\u63d0\u5230\u4e86\u53ef\u80fd\u5f88\u591a\u65f6\u95f4\u653e\u5728\u4e1a\u52a1\u7684\u4f18\u5316\u91cc\u3002</p> <p>\u6211\u95ee\u53bb\u4e86\u4e4b\u540e\u6709\u6ca1\u6709\u673a\u4f1a\u771f\u6b63\u505a\u4e00\u4e2a\u9879\u76ee\u51fa\u6765\u3002\u4ed6\u8bf4\u53ef\u80fd\u4e0d\u662f\u5f88\u786e\u5b9a\uff0c\u5f88\u96be\u8bf4\u5728\u77ed\u77ed\u51e0\u4e2a\u6708\u505a\u51fa\u4e00\u4e2a project\u3002</p>"},{"location":"interviews/bytedance/#418-hr-\u9762","title":"4.18 HR \u9762","text":"<p>\u5927\u6982 20 min\u3002</p> <p>\u95ee\u4e86\u540e\u7eed\u6253\u7b97\u76f4\u63a5\u5de5\u4f5c\u8fd8\u662f\u8bfb\u7814\u3002\u6211\u8bf4\u80fd\u4fdd\u5c31\u8bfb\uff0c\u4e0d\u80fd\u5c31\u5c31\u4e1a\u3002</p> <p>\u95ee\u5bf9\u4e0d\u540c\u8bfe\u7a0b\u662f\u5982\u4f55\u5212\u5206\u7ecf\u5386\u5206\u5e03\u7684\u3002\u6211\u8bf4\u901a\u8bc6\u8bfe\u6709\u6b63\u6001\u800c\u4e14\u4e0d\u592a\u613f\u610f\u53bb\u5377\uff0c\u6240\u4ee5\u6210\u7ee9\u4f4e\u4e00\u70b9\uff1b\u4e13\u4e1a\u8bfe\u5c31\u4f1a\u82b1\u66f4\u591a\u7ecf\u5386\u3002</p> <p>\u95ee\u5bf9 base \u4e0a\u6d77\u8fd8\u662f\u676d\u5dde\u6709\u4ec0\u4e48\u503e\u5411\u3002\u6211\u8bf4\u7ec4\u4e00\u6837\u7684\u8bdd\u503e\u5411\u676d\u5dde\u3002</p> <p>\u95ee\u5bf9 mentor \u7684\u9884\u671f\u3002\u6211\u8bf4\u5e0c\u671b\u6709\u66f4\u5177\u4f53\u7684\u9636\u6bb5\u6027\u7684\u6307\u5f15\u3002</p> <p>\u4ed6\u95ee\u5982\u679c mentor \u7ed9\u4e86\u96be\u5ea6\u5f88\u5927\u7684\u4efb\u52a1\uff0c\u6211\u600e\u4e48\u5904\u7406\u3002\u95ee\u4e86\u7ed9\u7684\u4efb\u52a1\u96be\u5ea6\u6bd4\u8f83\u4f4e\u6216\u8005\u4e1c\u897f\u5f88\u5c11\uff0c\u6211\u600e\u4e48\u5904\u7406\u3002</p> <p>\u95ee\u6211\u8fc7\u5f80\u6709\u4ec0\u4e48\u6bd4\u8f83\u6709\u6210\u5c31\u611f\u7684\u9879\u76ee\u3002\u6709\u54ea\u4e9b\u6536\u83b7\u548c\u6210\u957f\u3002</p> <p>\u95ee\u89c9\u5f97\u81ea\u5df1\u6709\u4ec0\u4e48\u4f18\u70b9\u548c\u7f3a\u70b9\u3002</p> <p>\u95ee\u4e86\u8fd8\u6709\u54ea\u4e9b\u6b63\u5728\u9762\u8bd5\u4e2d\u7684\u516c\u53f8\u3002\u4ecb\u7ecd\u4e86\u6295\u4e86\u534e\u4e3a\uff0c\u4f46\u662f\u534e\u4e3a\u5728\u517b\u9c7c\uff0c\u6bd4\u8f83\u5931\u671b\uff0c\u6240\u4ee5\u6765\u6295\u4e86\u5b57\u8282\u3002</p> <p>\u95ee\u4e86\u5bf9\u5b9e\u4e60\u6709\u4ec0\u4e48\u671f\u671b\u3002\u6211\u8bf4\u5e0c\u671b\u641e\u771f\u6b63\u548c\u4e1a\u754c\u76f8\u5173\u7684\u4e1c\u897f\u3002</p> <p>\u95ee\u4e86\u5b9e\u4e60\u7684\u65f6\u95f4\u3002</p> <p>4.20 \u63a5\u5230\u4e86 offer\u3002</p>"},{"location":"interviews/bytedance/#\u79cb\u62db","title":"\u79cb\u62db","text":""},{"location":"interviews/bytedance/#922-\u4e00\u9762","title":"9.22 \u4e00\u9762","text":"<p>\u5927\u6982 40 \u5206\u949f\u5de6\u53f3\u3002</p> <p>\u4e4b\u524d\u804a\u8fc7\uff0c\u79bb\u73b0\u5728\u4e5f\u6ca1\u591a\u4e45\uff0c\u6240\u4ee5\u8fd9\u6b21\u4e0d\u95ee\u6280\u672f\u65b9\u9762\u7684\u95ee\u9898\u4e86\u3002</p> <p>\u95ee\u4e0a\u6b21\u6709 offer \u4e4b\u540e\u4e3a\u4ec0\u4e48\u6ca1\u6765\u3002\u9664\u4e86\u8ddf\u8682\u8681\u8bf4\u7684\u4e24\u4e2a\u539f\u56e0\u4e4b\u5916\uff0c\u8fd8\u8bf4\u4e86\u5b9e\u4e60\u4e09\u9762\u7684\u65f6\u5019\u9762\u8bd5\u5b98\u4ecb\u7ecd\u5de5\u4f5c\u6bd4\u8f83\u96f6\u788e\uff0c\u5f88\u96be\u6709\u5b8c\u6574\u7684\u9879\u76ee\u7ecf\u5386\u3002</p> <p>\u95ee\u4e86\u5728\u54ea\u91cc\u5b9e\u4e60\u7684\uff0c\u5177\u4f53\u5de5\u4f5c\u6709\u54ea\u4e9b\u3002\u4ecb\u7ecd\u4e86\u4e00\u9879\u5de5\u4f5c\u7684\u7ec6\u8282\u3002</p> <p>\u95ee\u6211\u5bf9\u7f16\u8bd1\u5668\u76f8\u5173\u7684\u5de5\u4f5c\u7684\u7406\u89e3\u662f\u4ec0\u4e48\u6837\u7684\u3001\u6211\u8ba4\u4e3a\u7f16\u8bd1\u5668\u76f8\u5173\u7684\u5de5\u4f5c\u5728\u5de5\u4e1a\u754c\u6709\u4ec0\u4e48\u5e94\u7528\u3002</p> <p>\u95ee\u6211\u9488\u5bf9\u5177\u4f53\u4e1a\u52a1\u7684\u4f18\u5316\u53ef\u80fd\u548c\u7f16\u8bd1\u5668\u672c\u8eab\u5df2\u7ecf\u5173\u7cfb\u4e0d\u5927\u4e86\uff0c\u6211\u5982\u4f55\u770b\u5f85\u8fd9\u79cd\u5de5\u4f5c\u3002\uff08\u6240\u4ee5\u8fd9\u4e2a\u516c\u53f8\u771f\u7684\u6ca1\u6709 code review \u5417 \ud83d\ude22</p> <p>\u95ee\u6211\u5bf9\u81ea\u5df1\u7684\u804c\u4e1a\u53d1\u5c55\u6709\u4ec0\u4e48\u89c4\u5212\u3002\u56de\u7b54\u6ca1\u4ec0\u4e48\u89c4\u5212\uff0c\u56e0\u4e3a\u6ca1\u4ec0\u4e48\u4e86\u89e3\u3002</p> <p>\u95ee\u6211\u64c5\u957f\u505a\u4ec0\u4e48\u5de5\u4f5c\u3001\u559c\u6b22\u505a\u4ec0\u4e48\u5de5\u4f5c\u3002\u4e3a\u4ec0\u4e48\u5728\u8fd9\u70b9\u6bd4\u522b\u4eba\u64c5\u957f\u3002</p> <p>\u53cd\u95ee\u9636\u6bb5\u3002\u95ee\u4e86\u5177\u4f53\u7684\u5de5\u4f5c\u5185\u5bb9\u3002\u95ee\u4e86\u5bf9\u5458\u5de5\u7684\u671f\u5f85\u662f\u4ec0\u4e48\u3002\u56de\u7b54\u8bf4\u6bd4\u8f83\u5728\u610f\u79ef\u6781\u6027\u3002</p>"},{"location":"interviews/bytedance/#927-\u4e8c\u9762","title":"9.27 \u4e8c\u9762","text":"<p>\u81ea\u6211\u4ecb\u7ecd\u3002\u4ecb\u7ecd\u4e86\u524d\u9762\u90a3\u9879\u5de5\u4f5c\u7684\u7ec6\u8282\u3002</p> <p>\u95ee\u6211\u5982\u679c\u6709\u4e00\u4e2a\u7cfb\u7edf\u9700\u8981\u901a\u8fc7\u6c47\u7f16\u7b49\u65b9\u5f0f\u5b9e\u73b0\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c\uff0c\u6709\u4ec0\u4e48\u601d\u8def\u3002\u6211\u8bf4\u6211\u53ea\u77e5\u9053\u4e00\u4e9b\u67b6\u6784\u652f\u6301\u539f\u5b50\u6027\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982 RISC-V\u3002</p> <p>\u95ee\u6211\u5982\u4f55\u6765\u4ecb\u7ecd RISC-V\u3002\u6211\u804a\u5230\u4e86\u7cbe\u7b80\u6307\u4ee4\u96c6\u548c\u6307\u4ee4\u7b49\u957f\u3002\u4ed6\u95ee\u6211\u4e86\u4e0d\u4e86\u89e3 S-mode, M-mode \u4e4b\u7c7b\u7684\uff0c\u6211\u8bf4\u4e0d\u4e86\u89e3\u3002</p> <p>\u5199\u4ee3\u7801\u73af\u8282\u3002\u7ed9\u51fa\u4e00\u4e2a\u94fe\u8868\uff0c\u505a\u4e00\u4e2a\u4fee\u6539\u3002\u4f8b\u5b50\u662f\uff1a</p> <pre><code>Input : 0 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7 -&gt; 8 -&gt; 9\nOutput: 0 -&gt; 9 -&gt; 1 -&gt; 8 -&gt; 2 -&gt; 7 -&gt; 3 -&gt; 6 -&gt; 4 -&gt; 5\n\nInput : 0 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7 -&gt; 8\nOutput: 0 -&gt; 8 -&gt; 1 -&gt; 7 -&gt; 2 -&gt; 6 -&gt; 3 -&gt; 5 -&gt; 4\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u5199\u7684\u4e00\u4e2a\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u8fd0\u884c\u5728\u4e0d\u540c\u67b6\u6784\u6216\u8005\u5e73\u53f0\u4e0b\uff0c\u5e0c\u671b\u7a0b\u5e8f\u81ea\u5df1\u5224\u65ad\u8fd0\u884c\u5728\u4ec0\u4e48\u67b6\u6784\u4e0a\uff0c\u6216\u8005\u662f\u5426\u5728\u865a\u62df\u5316\u7684\u73af\u5883\u91cc\uff0c\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u6837\u7684\u4e8b\u60c5\u3002</p> <p>\u95ee\u7684\u95ee\u9898\u90fd\u662f\u6211\u4e0d\u4f1a\u7684\uff0c\u5f88\u70e6\uff0c\u6ca1\u610f\u601d\u3002\u6ca1\u6709\u53cd\u95ee\u73af\u8282\u3002</p> <p>9.28 \u6536\u5230\u90ae\u4ef6\u8bf4\u6302\u4e86\u3002</p>"},{"location":"interviews/huawei/","title":"\u534e\u4e3a \u7f16\u8bd1\u76f8\u5173","text":"<p> \u7ea6 2997 \u4e2a\u5b57  197 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>\u5c97\u4f4d\u662f\u300c\u7f16\u8bd1\u5668\u4e0e\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u5de5\u7a0b\u5e08\u300d\u3002</p>"},{"location":"interviews/huawei/#\u5b9e\u4e60","title":"\u5b9e\u4e60","text":"<p>3.2 \u6295\u7684\uff0c3.23 \u624d\u7b14\u8bd5\u3002</p> <p>3.24 \u505a\u4e86\u4e2a\u6027\u6d4b\u8bd5\u3002</p>"},{"location":"interviews/huawei/#323-\u7b14\u8bd5","title":"3.23 \u7b14\u8bd5","text":"<p>\u7cfb\u7edf\u7ecf\u5e38\u5d29\uff0c\u9898\u610f\u4e0d\u6e05\uff0c\u4f53\u9a8c\u4e0d\u662f\u5f88\u597d\u3002 T1 \u6539\u4e86\u597d\u4e45\u7ec8\u4e8e AC \u4e86\uff0c\u539f\u6765\u662f\u8981\u8de8\u4e0a\u6700\u540e\u4e00\u7ea7\u53f0\u9636\u800c\u4e0d\u662f\u8de8\u5230\u6700\u540e\u4e00\u7ea7\u53f0\u9636\u7684\u4e0a\u9762\uff1b T2 \u6539\u4e86\u597d\u4e45\u4e5f\u7ec8\u4e8e AC \u4e86\uff0c\u539f\u6765\u4e24\u8fb9\u90fd\u6709\u53ef\u80fd\u6709\u5bf9\u9762\u6ca1\u6709\u7684 tag\uff1b T3 \u61d2\u5f97\u505a\u4e86\uff0c\u4f46\u662f\u8f93\u51fa false \u80fd\u6709 25% \u7684\u5206\uff0c\u975e\u5e38\u79bb\u8c31\u3002</p>"},{"location":"interviews/huawei/#t1","title":"T1","text":"<p>\u6709 n (~100000) \u7ea7\u53f0\u9636\uff0c\u6bcf\u7ea7\u53f0\u9636\u6709\u4e00\u4e2a\u9b54\u6cd5\u503c\uff0c\u8868\u793a\u4ece\u8fd9\u4e2a\u53f0\u9636\u4e00\u6b65\u6700\u591a\u53ef\u4ee5\u5411\u4e0a\u8de8\u591a\u5c11\u7ea7\uff1b\u7ed9\u5b9a k \u8868\u793a\u6700\u591a\u80fd\u8de8\u51e0\u6b65\uff1b\u8981\u6c42\u8ba1\u7b97\u80fd\u5426\u5728 k \u6b65\u5185\u5230\u8fbe\u6700\u4e0a\u9762\uff0c\u5982\u679c\u53ef\u4ee5\u8f93\u51fa\u6700\u5c0f\u7684\u6b65\u6570\uff0c\u4e0d\u53ef\u4ee5\u5219\u8f93\u51fa -1</p> \u6211\u7684\u7b54\u6848 <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint arr[200005];\nint maxM = 0;\n\nint findCurrent(int cur) {\n//cout &lt;&lt; endl &lt;&lt; cur &lt;&lt; \": \";\nfor (int i = max(cur - maxM, 0); i &lt; cur; i++) {\n//cout &lt;&lt; arr[i] &lt;&lt; \" \";\nif (arr[i] &gt;= cur)\nreturn i;\n}\nreturn -1;\n}\n\nint main() {\nint n;\ncin &gt;&gt; n;\nfor (int i = 0; i &lt; n; i++) {\ncin &gt;&gt; arr[i];\nif (arr[i] &gt; maxM)\nmaxM = arr[i] + 1;\narr[i] += i;\n}\n/*for (int i = 0; i &lt; n; i++)\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    cout &lt;&lt;endl;*/\nint x, current = n - 1;\ncin &gt;&gt; x;\nfor (int i = 1; i &lt;= x; i++) {\ncurrent = findCurrent(current);\nif (current == 0) {\ncout &lt;&lt; i &lt;&lt; endl;\nreturn 0;\n}\nif (current == -1) {\ncout &lt;&lt; -1 &lt;&lt; endl;\nreturn 0;\n}\n}\ncout &lt;&lt; -1 &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"interviews/huawei/#t2","title":"T2","text":"<p>\u5b9a\u4e49\u4e86\u4e00\u79cd\u6570\u636e\u683c\u5f0f TLV\uff0c\u5176\u4e2d\u6bcf\u4e2a\u90e8\u5206\u7531 1 \u4e2a\u5b57\u8282\u7684 tag\uff0c1 \u4e2a\u5b57\u8282\u7684 length\uff0c\u4ee5\u53ca length \u4e2a\u5b57\u8282\u7684 value \u7ec4\u6210\u3002\u63a5\u6536\u7684\u62a5\u6587\u6709\u82e5\u5e72\u4e2a\u8fd9\u6837\u7684\u6570\u636e\u9996\u5c3e\u76f8\u63a5\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5b57\u8282\u7528 2 \u4f4d 16 \u8fdb\u5236\u6570\u8868\u793a\uff0c\u5b57\u6bcd\u5747\u4e3a\u5927\u5199\u3002\u4f8b\u5982 <code>0F04ABABABAB1001FF</code> \u7684\u7b2c\u4e00\u4e2a tag \u662f <code>0F</code>\uff0clength \u662f <code>04</code>\uff0c\u540e\u9762\u7684 4 \u4e2a\u5b57\u8282 <code>ABABABAB</code> \u662f\u6570\u636e\uff1b\u7136\u540e <code>10</code> \u662f\u4e0b\u4e00\u4e2a\u6570\u636e\u7684 tag\uff0clength \u662f <code>01</code>\uff0c\u540e\u9762\u7684 1 \u4e2a\u5b57\u8282 <code>FF</code> \u662f\u6570\u636e\u3002</p> <p>\u8f93\u5165\u4e00\u4e2a\u8fd9\u6837\u7684\u62a5\u6587 (~10000 chars)\uff0c\u8f93\u5165\u4e00\u4e2a n(~1000)\uff0c\u8f93\u5165 n \u4e2a\u5341\u8fdb\u5236\u6570\u8868\u793a\u9700\u8981\u7684 tags\u3002\u4fdd\u8bc1\u8f93\u5165\u7684\u62a5\u6587\u548c\u9700\u8981\u7684 tags \u4e2d\u7684 tag \u90fd\u662f\u4e25\u683c\u9012\u589e\u7684\u3002\u5bf9\u4e8e tags \u4e2d\u7684\u6bcf\u4e2a tag\uff0c\u8981\u6c42\u8f93\u51fa\u5176 length \u548c offset\uff0c\u5176\u4e2d offset \u8868\u793a\u8fd9\u4e2a tag \u7684 value \u5728\u8fd9\u4e2a\u62a5\u6587\u4e2d\u7684\u504f\u79fb\u91cf\uff0c\u4ece 0 \u5f00\u59cb\uff0c\u4ee5 byte \u4e3a\u5355\u4f4d\u3002</p> <p>tags \u4e2d\u7684 tag \u6709\u7684\u53ef\u80fd\u4e0d\u5b58\u5728\u4e8e\u62a5\u6587\u4e2d\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b length \u548c offset \u5747\u89c6\u4e3a 0\u3002\u62a5\u6587\u7684\u672b\u5c3e\u53ef\u80fd\u6709\u4e0d\u5b8c\u6574\u7684\u6570\u636e\uff0c\u8fd9\u79cd\u6570\u636e\u5e94\u5f53\u88ab\u629b\u5f03\u3002</p> \u6211\u7684\u7b54\u6848 <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nstring str; // ~10000\nint head = 0;\n\nint getHex(int offset) {\nchar c = str[head + offset];\nif (c &gt;= '0' &amp;&amp; c &lt;= '9')\nreturn c - '0';\nreturn c - 'A' + 10;\n}\n\nint getByte() {\nif (head + 2 &gt; str.size())\nreturn -1;\nint high = getHex(0);\nint low = getHex(1);\n//cout &lt;&lt; str[head] &lt;&lt; \" \" &lt;&lt; str[head + 1] &lt;&lt; \" \" &lt;&lt; high &lt;&lt; \" \" &lt;&lt; low &lt;&lt; endl;\nreturn high * 16 + low;\n}\n\nvector&lt;int&gt; getPacket() {\nif (head &gt;= str.size()) {\nreturn {-1, 0, 0};\n}\n\nint tag = getByte();\nhead += 2;\nif (tag == -1) {\nreturn {-1, 0, 0};\n}\n\nint length = getByte();\nhead += 2;\nif (length == -1) {\nreturn {-1, 0, 0};\n}\n\nint offset = head / 2;\n\nhead += length * 2;\nif (head &gt; str.size()) {\nreturn {-1, 0, 0};\n}\nreturn {tag, length, offset};\n}\n\nint main() {\ncin &gt;&gt; str;\nint n;  // ~1000\ncin &gt;&gt; n;\nint queries[1005];\nfor (int i = 0; i &lt; n; i++) {\ncin &gt;&gt; queries[i];\n}\nvector&lt;vector&lt;int&gt;&gt; results;\nwhile (true) {\nvector&lt;int&gt; temp = getPacket();\nif (temp[0] == -1)\nbreak;\nresults.push_back(temp);\n}\n\nint j = 0;\nfor (int i = 0; i &lt; n; i++) {\nif (j &gt;= results.size()) {\ncout &lt;&lt; \"0 0\\n\";\n}\nelse if (queries[i] == results[j][0]) {\ncout &lt;&lt; results[j][1] &lt;&lt; \" \" &lt;&lt; results[j][2] &lt;&lt; endl;\nj++;\n}\nelse if (queries[i] &gt; results[j][0]) {\ni--; j++;\n}\nelse {\ncout &lt;&lt; \"0 0\\n\";\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"interviews/huawei/#t3","title":"T3","text":"<p>\u5b89\u6392\u9762\u8bd5\u3002\u6709\u82e5\u5e72\u7f16\u7a0b\u8bed\u8a00\uff0cm \u4e2a\u9762\u8bd5\u5b98\u548c n \u4e2a\u9762\u8bd5\u8005\u3002\u6bcf\u4e2a\u9762\u8bd5\u5b98\u638c\u63e1\u82e5\u5e72\u7f16\u7a0b\u8bed\u8a00\uff0c\u6bcf\u4e2a\u9762\u8bd5\u8005\u9762\u8bd5\u4e00\u95e8\u8bed\u8a00\u3002\u95ee\u5728\u6bcf\u4e2a\u9762\u8bd5\u5b98\u6700\u591a\u80fd\u9762 k \u4e2a\u9762\u8bd5\u8005\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u5426\u80fd\u591f\u627e\u5230\u4e00\u79cd\u5b89\u6392\u3002</p> <p>\u6570\u636e\u8303\u56f4\u5fd8\u4e86\u3002</p> \u8ba8\u8bba <p>\u8ddf 27rabbit \u5148\u751f\u8ba8\u8bba\u5f97\u51fa\u4e86\u6211\u80af\u5b9a\u4e0d\u4f1a\u505a\u7684\u7ed3\u8bba\u3002\u597d\u50cf\u662f\u6700\u5927\u6d41\u8fd8\u662f\u5565\u3002</p>"},{"location":"interviews/huawei/#47-\u6280\u672f\u9762","title":"4.7 \u6280\u672f\u9762","text":"<p>\u65f6\u957f\u5927\u6982 30 \u5206\u949f\u3002</p> <p>\u81ea\u6211\u4ecb\u7ecd\u3002\u6ca1\u6709\u5bf9\u81ea\u6211\u4ecb\u7ecd\u5c55\u5f00\u4efb\u4f55\u63d0\u95ee\u3002</p> <p>\u590d\u76d8\u673a\u8bd5\u9898\u76ee\u3002\u6211\u8bf4\u4e86\u7b2c\u4e00\u4e2a\u9898\u7684\u601d\u8def\uff0c\u540e\u9762\u7684\u4ed6\u5c31\u6ca1\u95ee\u4e86\u3002</p> <p>\u73b0\u573a\u505a\u9898\uff0c\u7ed9 20 \u5206\u949f\u7684\u65f6\u95f4\u3002\u95ee\u4e86\u6570\u636e\u8303\u56f4\uff0c\u7ed9 <code>N~100, a[i]~10000</code>\u3002</p> \u9898\u76ee <p>\u7ed9\u5b9a\u4e00\u4e2a\u7528\u5b57\u7b26\u6570\u7ec4\u8868\u793a\u7684 CPU \u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\u5217\u8868\u3002\u5176\u4e2d\u5305\u542b\u4f7f\u7528\u5927\u5199\u7684 A - Z \u5b57\u6bcd\u8868\u793a\u7684 26 \u79cd\u4e0d\u540c\u79cd\u7c7b\u7684\u4efb\u52a1\u3002</p> <p>\u4efb\u52a1\u53ef\u4ee5\u4ee5\u4efb\u610f\u987a\u5e8f\u6267\u884c\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4efb\u52a1\u90fd\u53ef\u4ee5\u5728 1 \u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u6267\u884c\u5b8c\u3002CPU \u5728\u4efb\u4f55\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u90fd\u53ef\u4ee5\u6267\u884c\u4e00\u4e2a\u4efb\u52a1\uff0c\u6216\u8005\u5728\u5f85\u547d\u72b6\u6001\u3002</p> <p>\u7136\u800c\uff0c\u4e24\u4e2a\u76f8\u540c\u79cd\u7c7b\u7684\u4efb\u52a1\u4e4b\u95f4\u5fc5\u987b\u6709\u957f\u5ea6\u4e3a n \u7684\u51b7\u5374\u65f6\u95f4\uff0c\u56e0\u6b64\u81f3\u5c11\u6709\u8fde\u7eed n \u4e2a\u5355\u4f4d\u65f6\u95f4\u5185 CPU \u5728\u6267\u884c\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u6216\u8005\u5728\u5f85\u547d\u72b6\u6001\u3002</p> <p>\u4f60\u9700\u8981\u8ba1\u7b97\u5b8c\u6210\u6240\u6709\u4efb\u52a1\u6240\u9700\u8981\u7684\u6700\u77ed\u65f6\u95f4\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p>\u8f93\u5165: <code>tasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 2</code></p> <p>\u8f93\u51fa: <code>8</code></p> <p>\u6267\u884c\u987a\u5e8f: <code>A -&gt; B -&gt; (\u5f85\u547d) -&gt; A -&gt; B -&gt; (\u5f85\u547d) -&gt; A -&gt; B.</code></p> \u6211\u7684\u7b54\u6848 <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint shortestTime(vector&lt;char&gt; &amp;tasks, int n) {\nint currentTime = 0;\nvector&lt;int&gt; count(26, 0);\nauto totTasks = tasks.size();\nfor (auto c : tasks)\ncount[c - 'A']++;\nsort(count.begin(), count.end());\n\nvector&lt;int&gt; lastTask(26, -1);\nwhile (totTasks) {\nfor (int i = 25; i &gt;= 0; i--)\nif (count[i] &amp;&amp; (lastTask[i] == -1 || currentTime - lastTask[i] &gt; n)) {\ncount[i]--;\ntotTasks--;\nlastTask[i] = currentTime;\ncout &lt;&lt; currentTime &lt;&lt; \" \" &lt;&lt; i &lt;&lt; endl;\nbreak;\n}\ncurrentTime++;\n}\n\nreturn currentTime;\n}\n\nint main() {\nint n;\nstring input;\ncin &gt;&gt; input;\nvector&lt;char&gt; tasks;\nfor (auto &amp;c : input)\nif (c &gt;= 'A' &amp;&amp; c &lt;= 'Z')\ntasks.push_back(c);\n\ncin &gt;&gt; n;\ncout &lt;&lt; shortestTime(tasks, n) &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u95ee\u4e86\u505a\u7684\u7f16\u8bd1\u5668\u7684\u76f8\u5173\u95ee\u9898\u3002\u95ee\u4e86\u8bcd\u6cd5\u5206\u6790\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u6211\u8bf4\u662f\u7528 flex \u7684\uff0c\u4f46\u662f\u539f\u7406\u6211\u77e5\u9053\u3002\u4ed6\u8ba9\u6211\u4ecb\u7ecd\u4e00\u4e0b\u539f\u7406\u3002</p> <p>\u7136\u540e\u5c31\u7ed3\u675f\u4e86\uff0c\u4e5f\u6ca1\u6709\u53cd\u95ee\u73af\u8282\u3002</p>"},{"location":"interviews/huawei/#47-\u4e3b\u7ba1\u9762","title":"4.7 \u4e3b\u7ba1\u9762","text":"<p>\u672c\u6765\u662f\u7d27\u63a5\u7740\u4e0a\u4e00\u4e2a\u9762\u8bd5\u7684\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u6709\u8bfe\uff0c\u5b89\u6392\u5728\u4e86\u665a\u4e0a\u3002\u65f6\u957f\u53ea\u6709 15 \u5206\u949f\u3002</p> <p>\u81ea\u6211\u4ecb\u7ecd\u3002\u95ee\u4e86 MUA \u89e3\u91ca\u5668\u7684\u4e8b\u60c5\uff0c\u5305\u542b\u54ea\u4e9b\u91cd\u8981\u7684\u6a21\u5757\u3002</p> <p>\u7ed9\u4e00\u4e2a\u9898\u76ee\uff0c\u8ba9\u6211\u8bf4\u601d\u8def\uff1a\u7ed9\u4e00\u4e2a\u94fe\u8868\u548c\u4e00\u4e2a\u6570\u5b57 N\uff0c\u8fd4\u56de\u5220\u9664\u6389\u5012\u6570\u7b2c N \u4e2a\u7ed3\u70b9\u7684\u94fe\u8868\u3002\u7ecf\u5178\u53cc\u6307\u9488\u3002</p> <p>\u95ee\u4e86\u5b9e\u4e60\u7684\u4e3b\u8981\u76ee\u7684\u3002\u56de\u7b54\u4e86\u5e0c\u671b\u6709\u5b9e\u4e60\u7ecf\u5386\uff1b\u4f53\u9a8c\u4e00\u4e0b\u7f16\u7a0b\u8bed\u8a00\u548c\u7f16\u8bd1\u5728\u5de5\u4e1a\u754c\u7684\u843d\u5730\uff0c\u83b7\u53d6\u5b9e\u9645\u7ecf\u5386\uff1b\u4e86\u89e3\u540e\u9762\u7684\u53d1\u5c55\u65b9\u5411\u3002</p> <p>\u95ee\u4e86\u672a\u6765\u51e0\u5e74\u7684\u53d1\u5c55\u89c4\u5212\u3002\u56de\u7b54\u4e86\u5982\u679c\u80fd\u4fdd\u7814\u5c31\u548c\u8001\u5e08\u7ee7\u7eed\u5b66\u7f16\u7a0b\u8bed\u8a00\uff0c\u4fdd\u4e0d\u4e86\u5c31\u5c31\u4e1a\u3002</p> <p>\u95ee\u4e3a\u4ec0\u4e48\u559c\u6b22\u7f16\u7a0b\u8bed\u8a00\u548c\u7f16\u8bd1\u5668\u3002\u56de\u7b54\u4e86\u5bf9\u5176\u4ed6\u65b9\u5411\u6ca1\u627e\u5230\u5174\u8da3\uff0c\u4f46\u662f\u624b\u5199\u8fc7\u7f16\u8bd1\u5668\u548c\u89e3\u91ca\u5668\uff0c\u6b63\u5728\u7ed9\u5927\u5bb6\u670b\u8f88\u8f85\u5b66\u5c06\u7f16\u8bd1\u539f\u7406\uff1b\u56e0\u6b64\u4ece\u5174\u8da3\u548c\u7ecf\u9a8c\u6765\u8bf4\u90fd\u6bd4\u8f83\u503e\u5411\u8fd9\u4e2a\u65b9\u5411\u3002\u53e6\u5916\u548c\u8001\u5e08\u804a\u8fc7\uff0c\u8ba4\u4e3a\u6709\u5f88\u591a\u76f8\u5173\u7684\u53d1\u5c55\u65b9\u5411\uff0c\u524d\u666f\u4e0d\u9519\u3002</p> <p>\u95ee\u4e86\u7f16\u8bd1\u5668\u7684\u60c5\u51b5\u3002\u95ee\u4e86\u7b26\u53f7\u8868\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002</p> <p>\u95ee\u4e86\u5982\u679c\u5b9e\u4e60\u7684\u8bdd\u5927\u6982\u80fd\u5b9e\u4e60\u591a\u4e45\u3002\u8003\u4e0d\u8003\u8651 IDE \u76f8\u5173\u7684\u5c97\u4f4d\uff0c\u56de\u7b54\u5bf9\u7f16\u7a0b\u8bed\u8a00\u66f4\u611f\u5174\u8da3\u4e00\u4e9b\u3002</p> <p>\u53cd\u95ee\u9636\u6bb5\uff0c\u95ee\u4e86\u5927\u6982\u4f1a\u505a\u4ec0\u4e48\u5177\u4f53\u5de5\u4f5c\u3002\u56de\u7b54\u4e86\u6709\u4e24\u7c7b\u5b9e\u4e60\u751f\uff0c\u4e00\u7c7b\u662f\u4ece\u96f6\u5f00\u59cb\u56e2\u961f\u534f\u4f5c\u505a\u4e00\u4e2a\u8bfe\u7a0b\u8bbe\u8ba1\u4e00\u6837\u7684\u4e1c\u897f\uff1b\u8fd8\u6709\u4e00\u7c7b\u7684\u662f\u4e2a\u4eba\u5728\u73b0\u6709\u9879\u76ee\u4e4b\u4e0a\u627e\u7a81\u7834\u3002\u662f\u53ef\u4ee5\u9009\u62e9\u7684\u3002</p> <p>\u53e6\u5916\u95ee\u4e86\u6709\u6ca1\u6709\u8f6c\u6b63\u7684\u673a\u4f1a\u3002\u56de\u7b54\u4e86\u300c\u7406\u8bba\u4e0a\u662f\u6709\u53ef\u80fd\u7684\u300d\uff0c\u4f46\u662f\u300c\u73b0\u5728\u5b9e\u4e60\u751f\u9762\u8bd5\u548c\u6821\u62db\u9762\u8bd5\u662f\u89e3\u8026\u7684\u300d\u3002\u5b9e\u4e60\u5b8c\u4e4b\u540e\u5982\u679c\u5b9e\u4e60\u6bd4\u8f83\u597d\u4f1a\u6709\u4e00\u4e2a\u6210\u7ee9\uff0c\u7c7b\u4f3c\u63d0\u524d\u6279\u4e00\u6837\u8d70\u6d41\u7a0b\u3002</p> <p>\u4e3b\u7ba1\u9762\u7ed3\u675f\u540e\uff0cHR \u901a\u77e5\u6211\u9762\u8bd5\u90fd\u901a\u8fc7\u4e86\uff0c\u53ea\u5269\u4e0b offer \u5ba1\u6279\u6d41\u7a0b\u4e86\uff1b\u5e76\u5728 4.14 \u901a\u77e5\u6211\u6709\u4e00\u4e2a\u4fe1\u606f\u586b\u9519\u4e86\u8ba9\u6211\u4fee\u6539\uff0c\u6b21\u65e5\u8981 offer \u6750\u6599\u4e0a\u62a5\u5ba1\u6279\u3002\u6211\u6539\u4e86\u4e4b\u540e\u5c31\u518d\u4e5f\u6ca1\u6709\u6d88\u606f\u4e86\u3002\u5b98\u7f51\u4e0a\u7684\u8fdb\u5c55\u505c\u7559\u5728\u4e0b\u9762\u7684\u60c5\u51b5\uff1a</p> <p></p> <p></p>"},{"location":"interviews/huawei/#\u79cb\u62db","title":"\u79cb\u62db","text":"<p>9.19 \u53bb\u95ee\u4e86 HR \u8fd8\u6709\u6ca1\u6709\u673a\u4f1a\uff0cHR \u8bf4\u6709\u7684\uff0c\u5e76\u5173\u6ce8\u662f\u5426\u8003\u8651\u8bfb\u7814\u3002</p> <p>\u56e0\u4e3a\u5b9e\u4e60\u7b14\u8bd5\u8fc7\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u5b89\u6392\u7b14\u8bd5\u3002</p>"},{"location":"interviews/huawei/#926-\u6280\u672f\u4e00\u9762","title":"9.26 \u6280\u672f\u4e00\u9762","text":"<p>\u9762\u8bd5\u5b98\u5f88\u548c\u853c\uff0c\u4e00\u76f4\u5728\u6b63\u9762\u8bc4\u4ef7\u300c\u53ef\u4ee5\u770b\u51fa\u6765\u4f60\u2026\u2026\u300d\u3002</p> <p>\u8bf4\u7b80\u5386\u548c\u7b14\u8bd5\u60c5\u51b5\u90fd\u4e0d\u9519\u3002\u8fd8\u662f\u8981\u5bf9\u7b14\u8bd5\u590d\u76d8\u3002\u8fd9\u6b21\u5bf9\u4e09\u4e2a\u9898\u90fd\u804a\u4e86\u4e00\u4e0b\uff0c\u4f46\u662f\u6211\u57fa\u672c\u90fd\u8bb0\u4e0d\u6e05\u4e86\uff1b\u7ed9\u6211\u4ecb\u7ecd\u4e86\u7b2c\u4e09\u9898\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u4e0d\u4f1a\u505a\u3002</p> <p>\u95ee\u4e86\u6e90\u4ee3\u7801\u662f\u600e\u4e48\u53d8\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u3002</p> <p>\u95ee\u4e86\u63a5\u89e6\u8fc7\u4ec0\u4e48\u6837\u7684\u4e2d\u95f4\u4ee3\u7801\uff0c\u8fd9\u79cd\u4e2d\u95f4\u7801\u5728\u73b0\u5728\u6765\u770b\u662f\u5426\u8fc7\u65f6\u3002\u6211\u56de\u7b54\u57fa\u672c\u6ca1\u6709\u4e86\u89e3\uff0c\u6559\u6750\u4e0a\u7684\u4e24\u79cd\u90fd\u975e\u5e38\u8fc7\u65f6\u3002\u6211\u542c\u8bf4\u8fc7 LLVM \u7684 IR\uff0c\u4f46\u662f\u6ca1\u770b\u8fc7\u3002\u6211\u4eec\u5f53\u65f6\u7528\u7684\u4e2d\u95f4\u4ee3\u7801\u662f\u81ea\u5df1\u8bbe\u8ba1\u7684\uff0c\u56e0\u4e3a\u4e0d\u60f3\u7528 LLVM\u3002</p> <p>\u95ee\u4e86\u559c\u6b22\u4ec0\u4e48\u8bed\u8a00\uff0c\u662f\u7c7b\u578b\u5b89\u5168\u7684\u5417\uff0c\u5bf9\u8fd9\u95e8\u8bed\u8a00\u7684\u8bc4\u4ef7\u662f\u4ec0\u4e48\u3002\u6211\u56de\u7b54\u662f C++\uff0c\u7c7b\u578b\u662f\u4e0d\u5b89\u5168\u7684\u3002</p> <p>\u95ee\u4e86\u54b8\u9c7c\u96c0\u7684\u52a8\u673a\u548c\u89e3\u51b3\u65b9\u6848\u3002\u56de\u7b54\u4e86\u505a\u7684\u975e\u5e38\u6f66\u8349\uff0c\u53ea\u7528\u4e86\u51e0\u5929\uff0c\u6ca1\u4ec0\u4e48\u542b\u91d1\u91cf\uff1b\u5927\u591a\u6570\u65f6\u95f4\u82b1\u5728\u5b66 SpringBoot \u4e0a\u3002\u505a\u4e86\u4e00\u4e9b\u52a0\u5bc6\u3001\u84dd\u7eff\u53d1\u5e03\u4e4b\u7c7b\u7684\u8bbe\u8ba1\u3002</p> <p>\u4ecb\u7ecd\u4e86 IDE \u7684\u667a\u80fd\u5316\uff0c\u4f8b\u5982 CLion\u3002IDE \u4e5f\u9700\u8981\u591a\u7528\u6237\u5e76\u884c\u7f16\u8f91\u3002\u770b\u8d77\u6765\u50cf\u529d\u6211\u53bb IDE\uff0c\u4f46\u662f\u4ed6\u6ca1\u8bf4\u3002</p> <p>\u5199\u4ee3\u7801\u3002\u7ed9\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6b63\u6574\u6570 k\uff0c\u8fd4\u56de\u6709\u591a\u5c11\u4e2a\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5176\u548c\u521a\u597d\u4e3a k\u3002</p> \u6211\u7684\u7b54\u6848 <p>\u5e94\u8be5\u662f\u4e2a\u53cc\u6307\u9488\uff0c\u4f46\u662f\u5f53\u65f6\u4e0d\u4f1a\u53cc\u6307\u9488\u3002\u5199\u4e86\u6734\u7d20\u5faa\u73af\uff1a</p> <p></p> <p>\u95ee\u6709\u4ec0\u4e48\u4f18\u5316\u601d\u8def\uff0c\u6211\u8fb9\u60f3\u8fb9\u8bf4\uff0c\u8bf4\u5230\u4e86\u524d\u7f00\u548c\uff0c\u4ed6\u4e5f\u6ca1\u7ee7\u7eed\u95ee\uff0c\u76f4\u63a5\u5f80\u4e0b\u8d70\u4e86\u3002</p> <p>\u53cd\u95ee\u9636\u6bb5\u3002\u95ee\u5177\u4f53\u505a\u4ec0\u4e48\u5de5\u4f5c\u3002\u95ee\u4e86\u4ed3\u9889\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff0c\u662f\u89e3\u51b3\u751f\u6001\u95ee\u9898\u8fd8\u662f\u4ec0\u4e48\u3002\u56de\u7b54\u6700\u5f00\u59cb\u505a\u662f\u56e0\u4e3a\u5404\u79cd\u8bed\u8a00\u90fd\u6709\u597d\u7279\u6027\uff0c\u4f46\u662f\u6ca1\u6709\u4e00\u95e8\u8bed\u8a00\u539f\u751f\u652f\u6301\u8fd9\u4e9b\u7279\u6027\uff0c\u6240\u4ee5\u534e\u4e3a\u60f3\u505a\u3002</p> <p>\u4ecb\u7ecd\u4e86\u5982\u679c\u60f3\u505a\u7f16\u7a0b\u8bed\u8a00\u6216\u8005\u7f16\u8bd1\uff0c\u534e\u4e3a\u786e\u5b9e\u662f\u56fd\u5185\u6700\u597d\u7684\u9009\u62e9\u3002</p>"},{"location":"interviews/huawei/#926-\u6280\u672f\u4e8c\u9762","title":"9.26 \u6280\u672f\u4e8c\u9762","text":"<p>\u81ea\u6211\u4ecb\u7ecd\u3002\u9762\u8bd5\u5b98\u8bf4\u770b\u4e86\u6211\u7684\u535a\u5ba2\uff0c\u5185\u5bb9\u633a\u4e30\u5bcc\u7684\u3002</p> <p>\u8ba9\u4ecb\u7ecd\u4e86\u89e3\u91ca\u5668\u7684\u8bbe\u8ba1\u3002</p> <p>\u8ba9\u4ecb\u7ecd\u4e86\u5bf9\u9762\u5411\u5bf9\u8c61\u7684\u7406\u89e3\u3002\u8ffd\u95ee\u4e86\u300c\u5982\u679c\u4f60\u610f\u8bc6\u5230\u591a\u6001\u5728\u8fd9\u91cc\u662f\u6700\u91cd\u8981\u7684\u8bdd\uff0c\u90a3\u8bf4\u660e\u4f60\u5df2\u7ecf\u6709\u4e00\u5b9a\u4ee3\u7801\u91cf\u4e86\u3002\u90a3\u4e3a\u4ec0\u4e48\u4eba\u4eec\u8bf4\u8d77\u9762\u5411\u5bf9\u8c61\uff0c\u5c01\u88c5\u6027\u90fd\u6392\u5728\u7b2c\u4e00\u4f4d\u5462\uff1f\u300d</p> <p>\u8ba9\u4e3e\u4e00\u4e2a\u591a\u6001\u7684\u4f8b\u5b50\u3002</p> <p>\u95ee\u4e86\u4e0d\u4e86\u89e3\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u6211\u8bf4\u4e0d\u4e86\u89e3\u3002</p> <p>\u95ee C++ \u7f16\u8bd1\u65f6\u5185\u5b58\u5206\u914d\u6709\u51e0\u79cd\u60c5\u51b5\uff0c\u6211\u8bf4\u6ca1\u6709\u4e86\u89e3\u8fc7\u3002</p> <p>\u95ee C \u548c C++ \u4e4b\u95f4 static \u5173\u952e\u5b57\u7684\u533a\u522b\u3002\u6211\u8bf4\u6ca1\u600e\u4e48\u7528\u8fc7 C\uff0c\u4e8e\u662f\u8ba9\u6211\u4ecb\u7ecd C++ \u4e2d static \u7684\u542b\u4e49\u3002</p> <p>\u95ee\u5982\u4f55\u5b9e\u73b0 HashMap\uff0c\u5982\u4f55\u89e3\u51b3\u51b2\u7a81\u3002</p> <p>\u8ba9\u5728\u7ebf\u505a\u9053\u9898\uff0c\u76f4\u63a5\u7ed9\u4e86 LeetCode \u94fe\u63a5\uff1ahttps://leetcode.cn/problems/defuse-the-bomb/\u3002</p> \u6211\u7684\u7b54\u6848 <pre><code>class Solution {\npublic:\nint sum_k(vector&lt;int&gt; &amp;v, int begin, int k) {\nint n = v.size();\nint sum = 0;\nfor (int i = 0; i &lt; k; i++)\nsum += v[(begin + i) % n];\nreturn sum;\n}\n\nvector&lt;int&gt; decrypt(vector&lt;int&gt;&amp; code, int k) {\nif (k == 0) return vector&lt;int&gt;(code.size(), 0);\n\nint n = code.size();\nvector&lt;int&gt; result(code.size());\n\nif (k &gt; 0) {\nfor (int i = 0; i &lt; n; i++)\nresult[i] = sum_k(code, (i + 1) % n, k);\nreturn result;\n}\n\nfor (int i = 0; i &lt; n; i++)\nresult[i] = sum_k(code, (i + n + k) % n, -k);\nreturn result;\n}\n};\n</code></pre> <p>\u95ee\u5230\u73b0\u5728\u5199\u8fc7\u7684\u4ee3\u7801\u91cf\u662f\u591a\u5c11\u3002</p> <p>\u8ba9\u4e3e\u4e2a\u4f8b\u5b50\u8bf4\u660e\u9047\u5230\u7684\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u7684\u3002</p> <p>\u95ee\u6700\u8fd1\u6709\u6ca1\u6709\u8bfb\u6280\u672f\u7c7b\u7684\u4e66\u7c4d\u3002</p> <p>\u95ee\u6709\u6ca1\u6709\u5728\u6280\u672f\u9886\u57df\u4e4b\u5916\u5b66\u522b\u7684\u5185\u5bb9\uff0c\u5bf9\u751f\u6d3b\u4e0a\u6709\u4ec0\u4e48\u5e2e\u52a9\u3002</p> <p>\u53cd\u95ee\u9636\u6bb5\uff0c\u95ee\u4e86\u516c\u53f8\u5bf9\u6821\u62db\u751f\u6709\u4ec0\u4e48\u65b9\u9762\u7684\u671f\u5f85\u3002\u9762\u8bd5\u5b98\u8bf4\u300c\u4ece\u6280\u672f\u6765\u8bf4\uff0c\u4f60\u8ddf\u6211\u4eec\u7684\u90e8\u95e8\u975e\u5e38\u975e\u5e38 match\u300d\u3002\u540c\u65f6\u66f4\u5173\u6ce8\u6c9f\u901a\u80fd\u529b\u548c\u5b66\u4e60\u80fd\u529b\uff0c\u8fd8\u6709\u6297\u538b\u4e4b\u7c7b\u7684\u80fd\u529b\u3002</p>"},{"location":"interviews/huawei/#930-\u4e3b\u7ba1\u9762","title":"9.30 \u4e3b\u7ba1\u9762","text":"<p>\u8fd9\u4e00\u573a\u5927\u6982 30 min\u3002\u9762\u8bd5\u5b98\u662f\u4e2d\u592e\u8f6f\u4ef6\u9662 IDE Lab \u7684\u4e3b\u4efb\u3002</p> <p>\u81ea\u6211\u4ecb\u7ecd\u3002\u300c\u9996\u5148\u80fd\u5bf9\u7f16\u8bd1\u539f\u7406\u4ea7\u751f\u5174\u8da3\u5c31\u5f88\u4e0d\u9519\u4e86\u3002\u300d</p> <p>\u8ba9\u5927\u6982\u8bb2\u90a3\u4e2a Pascal \u7684\u7f16\u8bd1\u5668\u3002\u95ee\u5bf9 LLVM \u6216\u8005 gcc \u6709\u4ec0\u4e48\u4e86\u89e3\uff0c\u6211\u56de\u7b54\u6ca1\u6709\u4e86\u89e3\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u5165\u624b\u3002\u300c\u5168\u56fd\u6700\u80fd\u5165\u95e8\u7684\u5730\u65b9\u5c31\u662f\u534e\u4e3a\u4e86\u3002\u300d</p> <p>\u95ee\u4e86\u89e3\u91ca\u5668\u505a\u4e86\u4ec0\u4e48\u3002</p> <p>\u95ee\u4e86\u5b9e\u4e60\u8fc7\u7a0b\u4e2d\u505a\u7684\u90a3\u4e2a\u4f18\u5316\u3002\u95ee\u4e3a\u4ec0\u4e48\u51fa\u53d1\u5f88\u6162\uff0c\u6211\u5927\u6982\u626f\u4e86\u626f\uff0c\u4ed6\u8bf4\u56e0\u4e3a\u9664\u6cd5\u7684\u90e8\u4ef6\u662f\u6ca1\u529e\u6cd5\u505a\u6d41\u6c34\u7684\u3002</p> <p>\u95ee\u4e86\u5c06\u6765\u7684\u6253\u7b97\u3002\u6211\u8bf4\u6253\u7b97\u76f4\u63a5\u5de5\u4f5c\uff0c\u5bf9\u7f16\u8bd1\u5668\u548c\u7f16\u7a0b\u8bed\u8a00\u90fd\u6bd4\u8f83\u611f\u5174\u8da3\u3002</p> <p>\u95ee\u9664\u4e86 gcc \u548c LLVM \u4e4b\u5916\u8fd8\u77e5\u4e0d\u77e5\u9053\u522b\u7684\u7f16\u8bd1\u5668\u3002\u4ecb\u7ecd\u4e86\u534e\u4e3a\u5185\u90e8\u662f\u6709\u4e00\u4e2a\u7f16\u8bd1\u5668\u7684\uff0c\u53eb\u65b9\u821f\uff1b\u5bf9\u4e8e\u60f3\u4ece\u4e8b\u8fd9\u4e2a\u65b9\u5411\u5de5\u4f5c\u7684\u4eba\u6765\u8bf4\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u673a\u4f1a\uff0c\u56e0\u4e3a\u6709\u5f88\u591a\u65b0\u4e1c\u897f\u53ef\u4ee5\u505a\u3002\u300c\u73b0\u5728\u6700\u597d\u7684\u5b66\u4e60\u673a\u4f1a\u5c31\u5728\u8fd9\u91cc\u3002\u300d</p> <p>\u53cd\u95ee\u9636\u6bb5\u3002\u6211\u95ee\u4e86\u65b9\u821f\u7684\u52a8\u673a\u662f\u4ec0\u4e48\uff0c\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\u3002\u4ecb\u7ecd\u4e86 LLVM \u5c06\u7f16\u8bd1\u5668\u7684\u95e8\u69db\u964d\u4f4e\u4e86\u4e0b\u6765\uff0c\u4f46\u4ee3\u4ef7\u662f\u5728\u4e00\u4e9b\u9ad8\u6027\u80fd\u7684\u7f16\u8bd1\u4e0a\u662f\u6709\u7f3a\u9677\u7684\u3002LLVM \u8ffd\u8d76\u4e0a gcc \u7684\u6027\u80fd\u82b1\u4e86\u4e03\u516b\u5e74\uff0c\u4f46\u662f\u65b9\u821f\u53ea\u82b1\u4e86\u4e00\u5e74\u3002\u56e0\u4e3a\u65b9\u821f\u6709\u66f4\u73b0\u4ee3\u7684\u4f53\u7cfb\u548c\u67b6\u6784\uff0c\u548c LLVM \u7684\u8bbe\u8ba1\u7406\u5ff5\u4e0d\u4e00\u6837\u3002</p> <p>\u9762\u8bd5\u901a\u8fc7\u5f53\u5929\uff0cHR \u6253\u7535\u8bdd\u8bf4\u516c\u53f8 offer \u8981\u5230 10 \u6708\u5e95\u7edf\u4e00\u53d1\uff0c\u9700\u8981\u7b49\u4e00\u7b49\u3002</p> <p>10.12\uff0cHR \u6253\u7535\u8bdd\u6765\u95ee\u6709\u6ca1\u6709\u5176\u4ed6 offer\uff0c\u6211\u56de\u7b54\u6682\u65f6\u6ca1\u6709\u3002</p> <p>10.31\uff0cHR \u6765\u95ee\u6709\u6ca1\u6709\u5176\u4ed6 offer\uff0c\u6211\u56de\u7b54\u6709\u51e0\u4e2a\uff0c\u8fd8\u5728\u8003\u8651\uff1bHR \u8868\u793a\u6211\u7684 offer \u5df2\u7ecf\u901a\u8fc7\u4e86\u90e8\u95e8\u5ba1\u6279\uff0c\u6b63\u5728\u8fdb\u884c\u5e73\u53f0\u5ba1\u6279\uff1b\u6211\u95ee\u8fd8\u8981\u591a\u4e45\uff0cHR \u8bf4\u53ef\u80fd\u8fd8\u8981\u4e00\u4e24\u5468\uff0c\u4eca\u5e74\u6574\u4f53\u90fd\u6bd4\u8f83\u665a\u3002HR \u95ee\u73b0\u5728\u6709\u7684 offer \u7684\u60c5\u51b5\uff0c\u6211\u5927\u6982\u900f\u9732\u4e86\u85aa\u8d44\uff0c\u5e76\u8868\u793a\u5728\u76f8\u5e94\u516c\u53f8\u56de\u590d\u7684 ddl \u4e4b\u524d\u5982\u679c\u534e\u4e3a\u8fd9\u8fb9\u8fd8\u6ca1\u51fa offer \u5c31\u53bb\u90a3\u8fb9\u4e86\uff0cddl \u662f 11.7\u3002</p> <p>11.7\uff0c\u518d\u53bb\u95ee HR\uff0cHR \u8bf4\u6682\u65f6\u8fd8\u6ca1\u51fa\uff0c\u95ee\u6211\u662f\u4e0d\u662f\u51c6\u5907\u7b7e\u4e86\uff0c\u6211\u8bf4\u662f\u7684\u3002\u7136\u540e\u5c31\u6ca1\u6d88\u606f\u4e86\u3002</p> <p>\u8fd8\u662f\u5f88\u53ef\u60dc\u7684QWQ \u89c9\u5f97\u662f\u5f88\u597d\u7684\u4e00\u4e2a\u673a\u4f1a</p>"},{"location":"interviews/mayi/","title":"\u8682\u8681 Java / C++","text":"<p> \u7ea6 3133 \u4e2a\u5b57  94 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>\u8682\u8681\u90fd\u662f\u7535\u8bdd\u9762\u8bd5\uff0c\u4f46\u662f\u6709\u7684\u65f6\u5019\u4f1a\u7ed9\u4e2a\u534f\u4f5c\u9875\u9762\u8ba9\u5199\u4ee3\u7801\uff0c\u6bd4\u8f83\u8ff7\u60d1</p> <p>\u8682\u8681\u8fd9\u91cc\u6709\u70b9\u590d\u6742\u2026\u2026\u6545\u4e8b\u662f\uff0c\u6211\u5728\u5b98\u7f51\u6295\u4e86\u67d0\u4e2a\u7ec4\uff0c\u540c\u65f6\u53c8\u5728 98 \u4e0a\u627e\u4e86\u4e00\u4f4d\u524d\u8f88\u7684\u5fae\u4fe1\u76f4\u63a5\u6295\u4e86\u4ed6\u6240\u5728\u7684\u7ec4\u3002\u4f46\u662f\u5176\u5b9e\u6211\u5728\u9762\u8bd5\u8fc7\u7a0b\u4e2d\u5e76\u6ca1\u6709\u6210\u529f\u5206\u6e05\u695a\u54ea\u4e2a\u662f\u54ea\u4e2aQAQ</p> <p>2.27 \u6295\u4e86 Java \u540e\u7aef\uff0c3.2 \u6295\u4e86 C++\u3002\u6700\u540e\u7684\u5b9e\u4e60\u610f\u5411\u4e0a\u7684\u5c97\u4f4d\u540d\u79f0\u662f\u300c\u8682\u8681\u96c6\u56e2-CTO\u7ebf-\u6570\u636e\u4e0e\u5e73\u53f0\u6280\u672f\u4e8b\u4e1a\u7fa4-\u8682\u8681\u667a\u80fd\u5f15\u64ce\u4e0e\u6570\u636e\u4e2d\u53f0\u6280\u672f\u4e8b\u4e1a\u90e8-\u8ba1\u7b97\u667a\u80fd\u6280\u672f\u90e8  \u7814\u53d1\u5de5\u7a0b\u5e08C/C++\u300d\u3002</p> <p>3.2 \u505a\u4e86\u903b\u8f91\u6d4b\u8bd5\uff0c\u9650\u65f6\u7684\u9605\u8bfb\u7406\u89e3\u3001\u8bfb\u56fe\u8868\u3001\u627e\u89c4\u5f8b\u5565\u7684\uff0c\u597d\u591a\u6765\u4e0d\u53ca\u6216\u8005\u627e\u4e0d\u51fa\u6765\uff1b\u4e2a\u6027\u6d4b\u8bd5\u548c\u62fc\u591a\u591a\u7684\u662f\u540c\u4e00\u5957\u9898</p> <p>\u56e0\u4e3a\u5206\u4e0d\u6e05\uff0c\u6240\u4ee5\u4e0b\u9762\u5c31\u7528 A \u548c B \u4ee3\u66ff\u5177\u4f53\u7684\u7ec4\u4e86\uff0c\u4e0d\u786e\u5b9a\u6709\u6ca1\u6709\u5199\u9519\u7684\u5730\u65b9\u3002\u6211\u731c A \u7ec4\u662f C++ \u90a3\u4e2a\u3002</p>"},{"location":"interviews/mayi/#310-\u4e00\u9762-a","title":"3.10 \u4e00\u9762 (A)","text":"<p>\u5168\u7a0b\u7535\u8bdd\u804a\u5929\uff0c\u6ca1\u7528\u7eb8\u7b14\u3002\u9762\u8bd5\u5b98\u6bd4\u8f83\u53cb\u5584\u4e14\u4e5f\u6709\u70b9\u793e\u6050\u3002 \u5f00\u5c40\u81ea\u6211\u4ecb\u7ecd\u3002\u8bf4\u4e86\u4e13\u4e1a\u3001\u6210\u7ee9\u6392\u540d\u3001\u5e38\u7528\u8bed\u8a00\uff08\u5206\u522b\u8bf4\u4e86\u76f8\u5173\u7684\u9879\u76ee\u7ecf\u5386\uff09\u3002</p> <p>\u95ee\u4e86\u5927\u9879\u76ee\u76f8\u5173\u95ee\u9898\uff1a\u4eba\u6570\u3001\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e2a\u9879\u76ee\u3001\u6709\u4ec0\u4e48\u6311\u6218\u7684\u5730\u65b9\u3002\u8bf4\u4e86\u8c03\u7528\u94fe\u7684\u68b3\u7406\u3001C++ \u4e0d\u652f\u6301\u7684\u5199\u6cd5\u3001\u5185\u5b58\u7ba1\u7406\u4e4b\u7c7b\u7684\u3002</p> <p>\u8ffd\u95ee\u89e3\u51b3\u65b9\u6cd5\u3002\u4e3b\u8981\u8bf4\u4e86\u667a\u80fd\u6307\u9488\u9632\u6b62\u5185\u5b58\u6cc4\u9732\u3002</p> <p>\u8ffd\u95ee\u667a\u80fd\u6307\u9488\u7684\u52a3\u52bf\u3002\u4e0d\u4f1a\uff0c\u6240\u4ee5\u5927\u6982\u8bf4\u4e86\u4e00\u4e0b\u667a\u80fd\u6307\u9488\u7684\u5b9e\u73b0\u601d\u8def\u3002\u5c1d\u8bd5\u8bf4\u4e86\u52a3\u52bf\uff0c\u53ea\u60f3\u5230\u4e86\u7edf\u8ba1\u5f15\u7528\u6570\u7684\u65f6\u7a7a\u5f00\u9500\uff0c\u8fd8\u8bf4\u4e86\u4f7f\u7528\u4e0d\u5f53\u4f1a\u5bfc\u81f4\u5806\u4e0a\u7684\u7a7a\u95f4\u7834\u574f\uff08\u4e0d\u8fc7\u597d\u50cf\u5e76\u6ca1\u6709\u3002\u3002\uff09\uff1b\u67e5\u4e86\u4e00\u4e0b\u597d\u50cf\u4e5f\u5c31\u67e5\u5230\u5faa\u73af\u5f15\u7528\u5565\u7684\u3002</p> <p>\u8ffd\u95ee\u76f4\u63a5\u7528 shared_ptr \u548c make_ptr \u7684\u533a\u522b\u3002\u8bf4\u9519\u4e86\u3002\u53c2\u8003\u8fd9\u4e2a https://blog.csdn.net/misterdo/article/details/105844139 https://www.jianshu.com/p/03eea8262c11\u3002</p> <p>\u95ee\u4e86 C++ \u7684 virtual \u4ee5\u53ca\u5b9e\u73b0\u3002</p> <p>\u8ffd\u95ee\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u80fd\u4e0d\u80fd\u662f virtual\u3002\u521a\u5f00\u59cb\u8bf4\u90fd\u4e0d\u80fd\uff0c\u9762\u8bd5\u5b98\u8ba9\u518d\u60f3\u60f3\u3002\u4ed4\u7ec6\u5206\u6790\u4e86\u4e00\u4e0b\u8bf4\u5bf9\u4e86\u3002</p> <p>\u95ee\u4e86 static \u80fd\u4e0d\u80fd\u548c const \u4e00\u8d77\u3002\u5176\u5b9e\u95ee\u7684\u662f\u8fd9\u4e2a https://www.yuque.com/xianyuxuan/coding/diyz36\u3002\u521a\u5f00\u59cb\u4ee5\u4e3a\u662f\u95ee\u6210\u5458\u53d8\u91cf\uff0c\u540e\u6765\u624d\u77e5\u9053\u662f\u6210\u5458\u51fd\u6570\u3002\u5dee\u70b9\u6ca1\u8bf4\u51fa\u6765\u3002</p> <p>\u95ee\u4e86\u6709\u4ec0\u4e48\u5e38\u89c1\u7684\u6392\u5e8f\u65b9\u6cd5\u3002\u8bf4\u7684\u4e0d\u591a\u2026\u2026\u8bb0\u4e0d\u6e05\uff09\uff09\u751a\u81f3\u5fd8\u4e86\u5f52\u5e76\u6392\u5e8f\u7684\u540d\u5b57\uff0c\u5c31\u5927\u6982\u63cf\u8ff0\u4e86\u4e00\u4e0b\u7b97\u6cd5\u601d\u8def\uff09</p> <p>\u95ee\u6570\u7ec4\u3001\u94fe\u8868\u548c\u96c6\u5408\u6709\u4ec0\u4e48\u4f18\u7f3a\u70b9\u548c\u5e94\u7528\u573a\u666f\u3002\u5f88\u5947\u602a\uff0c\u53cd\u6b63\u5c31\u8bf4\u4e86\u6570\u7ec4\u3001\u94fe\u8868\u662f\u7ebf\u6027\u8868\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u96c6\u5408\u662f\u4e00\u79cd\u66f4\u9ad8\u7ea7\u7684\u5bb9\u5668\u3002\u8bf4\u4e86\u6570\u7ec4\u9002\u5408\u6709\u5e8f\u3001\u968f\u673a\u8bbf\u95ee\uff0c\u94fe\u8868\u9002\u5408\u6709\u5e8f\u3001\u7ecf\u5e38\u63d2\u5165\u5220\u9664\uff0c\u96c6\u5408\u9002\u5408\u6709\u91cd\u548c\u987a\u5e8f\u65e0\u5173\u7684\u6570\u636e\u3002</p> <p>\u95ee\u5982\u679c\u6709\u4e00\u4e2a\u88c5\u4e86\u4e00\u5757 4G \u5185\u5b58\u5361\u7684\u64cd\u4f5c\u7cfb\u7edf 32 \u4f4d\u7684\u673a\u5668\uff0c\u5199\u4e00\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u8bbf\u95ee\u7684\u7269\u7406\u5185\u5b58\u548c\u865a\u62df\u5185\u5b58\u5206\u522b\u662f\u591a\u5c11\uff1b\u7136\u540e\u95ee\u4e86\u5982\u679c\u5185\u5b58\u662f 128M \u7684\u8bdd\u662f\u591a\u5c11\u3002</p> <p>\u7136\u540e\u95ee\u4e86\uff0c\u865a\u62df\u5185\u5b58\u6bd4\u7269\u7406\u5185\u5b58\u5927\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u5927\u6982\u8bf4\u4e86\u4e00\u4e0b\uff1b\u9762\u8bd5\u5b98\u5b9e\u9645\u4e0a\u60f3\u542c\u201c\u7f3a\u9875\u4e2d\u65ad\u201d\u8fd9\u4e2a\u8bcd\uff0c\u4f46\u662f\u6211\u5e76\u6ca1\u6709\u60f3\u8d77\u6765\uff09\uff09\u64cd\u4f5c\u7cfb\u7edf\u592a\u5dee\u4e86qwq</p> <p>\u95ee\u4e86\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u624b\u6bb5\u3002\u8bf4\u4e86\u6587\u4ef6\u3001\u516c\u5171\u5185\u5b58\u548c\u6d88\u606f\u961f\u5217\u3002\u67e5\u4e86\u4e00\u4e0b\u5176\u5b9e\u8fd8\u6709\u4fe1\u53f7\u91cf\u3001\u7ba1\u9053\u3001socket \u4e4b\u7c7b\u7684\u3002</p> <p>\u95ee 3 \u4e2a\u7ebf\u7a0b\uff0c\u5206\u522b\u8f93\u51fa ABC\uff0c\u5982\u4f55\u8bbe\u8ba1\u4f7f\u5f97 ABCABCABC \u8fd9\u6837\u8f93\u51fa\u4e0d\u4e71\u3002\u6211\u7684\u60f3\u6cd5\u5927\u6982\u662f\u8fd9\u6837\uff1a <pre><code>int val = 0;\nvoid job(char output) {\nwhile (true) {\nwhile (val + 'a' != output);\nprint(val + 'a');\nval++;\n}\n}\n</code></pre> \u73b0\u5728\u770b\u4e00\u773c\u53d1\u73b0\u5fd8\u52a0\u9501\u4e86 \u4e50</p> <p>\u95ee\u6dd8\u5b9d\u6709\u5f88\u591a\u5e97\u94fa\uff0c\u6bcf\u4e2a\u5e97\u94fa\u6709\u5f88\u591a\u5546\u54c1\uff0c\u73b0\u5728\u7ed9\u5b9a\u67d0\u4e2a\u5e97\u94fa\u7684\u67d0\u4e2a\u5546\u54c1\uff0c\u600e\u4e48\u8bbf\u95ee\u5230\u5b83\u3002\u6211\u8bf4\u7528\u4e00\u4e2a B+ \u6811\u5b58\u5e97\u94fa\uff0c\u6bcf\u4e2a\u5e97\u94fa\u7528\u4e00\u4e2a B+ \u6811\u5b58\u5546\u54c1\u3002\u804a\u4e86\u4e00\u4f1a\u513f\u53d1\u73b0\u9762\u8bd5\u5b98\u597d\u50cf\u5e76\u4e0d\u662f\u60f3\u95ee\u6211\u6570\u636e\u5e93\u7684\u7ec6\u8282\uff0c\u800c\u662f\u60f3\u95ee\u5982\u679c\u4e00\u53f0\u673a\u5668\u5b58\u4e0d\u4e0b\u6240\u6709\u7684\u6570\u636e\uff0c\u5982\u4f55\u627e\u5230\u6570\u636e\u5b58\u5728\u54ea\u4e2a\u673a\u5668\u4e0a\u3002\u6211\u8bf4\u5c06\u6bcf\u4e2a\u5e97\u94fa\u7684\u5546\u54c1\u5728\u54ea\u53f0\u673a\u5668\u4e0a\u5b58\u5728\u5b58\u5e97\u94fa\u7684 B+ \u6811\u91cc\u9762\u3002\u540e\u6765\u9762\u8bd5\u5b98\u8bf4\u5176\u5b9e\u53ef\u4ee5\u627e\u4e00\u4e2a\u6620\u5c04\u89c4\u5219\uff0c\u6bd4\u5982\u524d 10000 \u4e2a\u6570\u636e\u5b58\u5728\u7b2c 1 \u53f0\u673a\u5668\uff0c10001~20000 \u5728\u7b2c 2 \u53f0\u4e4b\u7c7b\u7684\u3002</p> <p>\u95ee\u4e86\u540e\u9762\u5173\u4e8e\u8003\u7814\u51fa\u56fd\u4e4b\u7c7b\u7684\u89c4\u5212\u3002 \u53cd\u95ee\u9636\u6bb5\u3002\u95ee\u4e86\u6211\u8fdb\u53bb\u4f1a\u505a\u4e9b\u5565\uff0c\u4ee5\u53ca\u8981\u6c42\u9762\u8bd5\u5b98\u7ed9\u70b9\u9762\u8bd5\u53cd\u9988\u3002\u6ca1\u6709\u5f97\u5230\u4ec0\u4e48\u6709\u7528\u7684\u4fe1\u606f\u3002</p> <p>\u603b\u5171\u5927\u6982 50 \u5206\u949f\uff0c\u9762\u8bd5\u5b98\u4e5f\u633a\u8010\u5fc3\u7684\uff0c\u4e0d\u9519qwq</p>"},{"location":"interviews/mayi/#314-\u7b14\u8bd5","title":"3.14 \u7b14\u8bd5","text":"<p>\u597d\u591a Linux \u9898\uff0c\u6211\u53c8\u6ca1\u6b63\u7ecf\u7528\u8fc7\uff01\u4e0a\u8fc7 Linux \u5c0f\u5b66\u671f\u7684\u53ef\u80fd\u597d\u4e00\u70b9\uff1f\u6211\u4e0d\u77e5\u9053</p> <p>\u9009\u62e9\u9898\uff1a</p> <ul> <li>\u6709\u4e00\u4e2a\u540d\u4e3a test \u7684\u6587\u4ef6\uff0c\u7ed9\u4e86\u5185\u5bb9\uff1b\u8ba9\u9009\u51fa\u6267\u884c\u547d\u4ee4 <code>awk -F \"_\" '{print $1 \" \" $2}' test | sort -nk2 | tr -s \" \" \"_\"</code> \u7684\u7ed3\u679c</li> <li>\u6709 SQL \u7684\u9898\uff0c\u8ba9\u9009\u8fd0\u884c\u7ed3\u679c\uff0c\u5927\u6982\u5c31\u662f\u4ece\u89c6\u56fe\u91cc\u63d2\u5165\u548c\u5220\u9664\u7684\u7ed3\u679c</li> <li>\u6709\u4e03\u6839\u6728\u68d2\uff0c\u5176\u957f\u5ea6\u5206\u522b\u4e3a 8,8,3,5,7,2,10\u3002\u82e5\u5c06\u4e24\u4e2a\u6728\u68d2\u62fc\u63a5\u5728\u4e00\u8d77\u6240\u9700\u7684\u4f53\u529b\u4e3a\u4e24\u6839\u6728\u68d2\u7684\u957f\u5ea6\u4e4b\u548c\uff0c\u5219\u5c06\u4e03\u6839\u6728\u68d2\u62fc\u63a5\u6210\u4e00\u6839\u6240\u9700\u7684\u6700\u5c11\u4f53\u529b\u4e3a\u591a\u5c11</li> <li>\u7ed9\u4e86\u4e2a\u8981\u6c42\uff0c\u8ba9\u9009\u6b63\u786e\u7684 chmod \u6307\u4ee4</li> <li>\u7ed9\u4e86\u6570\u636e\u5e93\u63cf\u8ff0\uff0c\u548c\u4e00\u4e2a\u9700\u6c42\uff0c\u8ba9\u9009\u6b63\u786e\u7684 SQL \u8bed\u53e5\u6765\u5efa\u7acb\u6ee1\u8db3\u9700\u6c42\u7684\u89c6\u56fe</li> <li>\u8ba9\u9009\u54ea\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u8fdb\u7a0b\u5207\u6362\uff08\u4e0d\u5b9a\u9879\uff0c\u65f6\u949f\u4e2d\u65ad\u3001trap\u3001file open\u3001page fault\uff09</li> <li>\u8003 best fit</li> <li>\u95ee UDP \u6d41\u7684\u7f3a\u70b9</li> <li>\u7ed9\u4e86 IP \u805a\u5408\u540e\u7684\u5730\u5740\uff0c\u8ba9\u9009\u805a\u5408\u524d\u7684\u5730\u5740\u53ef\u4ee5\u662f\u54ea\u4e9b</li> </ul> <p>\u5176\u4ed6\u9898\u6ca1\u8bb0\uff0c\u4e5f\u4e0d\u8bb0\u5f97\u6709\u6ca1\u6709\u7f16\u7a0b\u9898\u4e86\u3002</p>"},{"location":"interviews/mayi/#317-\u4e00\u9762-b","title":"3.17 \u4e00\u9762 (B)","text":"<p>\u524d\u9762\u7684\u4e0d\u8bb0\u5f97\u4e86\u3002</p> <p>\u95ee\u4e86\u5806\u662f\u600e\u4e48\u5efa\u51fa\u6765\u7684\uff0c\u4ee5\u53ca\u589e\u52a0\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\u5982\u4f55\u8c03\u6574\u3002</p> <p>\u641c\u7d22\u5f15\u64ce\uff0c\u6709\u4e00\u5806\u6587\u7ae0\uff0c\u8fdb\u884c\u4e00\u6b21\u641c\u7d22\uff0c\u5df2\u77e5\u5404\u4e2a\u6587\u7ae0\u7684\u76f8\u5173\u5ea6\u7684\u60c5\u51b5\u4e0b\u6392\u51fa\u524d 100 \u4e2a\u7ed3\u679c\u3002\u6211\u7684\u56de\u7b54\u662f\u7ef4\u62a4\u4e00\u4e2a 100 \u4e2a\u5143\u7d20\u7684\u5c0f\u6839\u5806\uff0c\u4fdd\u5b58\u524d 100 \u4e2a\uff0c\u590d\u6742\u5ea6\u662f \\(O(N\\log 100)\\) \u7684\u3002</p> <p>\u8ba9\u4ecb\u7ecd\u7f51\u7edc\u7684\u5206\u5c42\u7ed3\u6784\u3002\u95ee\u4e86 TCP \u548c UDP \u7684\u533a\u522b\uff1b\u56de\u7b54\u4e86\u4e00\u5806\uff0c\u8ba9\u7528\u4e00\u4e24\u53e5\u8bdd\u603b\u7ed3\u4e00\u4e0b\u3002\u95ee\u4e86\u5982\u4f55\u4fdd\u8bc1\u67d0\u4e2a\u6570\u636e\u5305\u6ca1\u6536\u5230\u7684\u65f6\u5019\u53d1\u9001\u65b9\u80fd\u591f\u77e5\u9053\u8fd9\u4e2a\u4e8b\u60c5\u5e76\u4e14\u9700\u8981\u91cd\u4f20\u3002\u95ee\u6709\u6ca1\u6709\u5e94\u7528\u5c42\u534f\u8bae\u7528 UDP \u7684\u3002</p> <p>\u5199\u4ee3\u7801\u3002\u7528\u57fa\u7840\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff0c\u961f\u5217\u4e00\u822c\u5bf9\u5916\u63d0\u4f9b pop push \u7684\u65b9\u6cd5</p> \u6211\u7684\u7b54\u6848 <p>\u5faa\u73af\u6570\u7ec4\u5b9e\u73b0\u961f\u5217\uff0c\u5e76\u7528 vector \u7684\u601d\u8def\u5b9e\u73b0\u52a8\u6001\u8c03\u6574\u3002</p> <pre><code>class Queue {\nprivate:\nint *data;\nint front;\nint tail;\nint capacity;\nint size{0};\npublic:\nQueue(int capa = 16) {\ncapacity = capa;\ndata = new int[capacity];\nfront = 0;\ntail = capacity - 1;  // empty\n}\nint pop() {\nif (size == 0) {\nthrow \"The queue is empty\";\n}\nsize--;\nint value = data[front];\nfront = (front + 1) % capacity;\nreturn value;\n}\nvoid push(int value) {\nif (size == capacity) {\nint *newData = new int[capacity * 2];\nfor (int i = 0; i &lt; capacity; i++) {\nnewData[i] = data[(front + i) % capacity];\n}\n\nnewData[capacity] = value;\nfront = 0;\ntail = capacity;\n\nsize++;\ncapacity *= 2;\ndelete []data;\ndata = newData;\n}\nelse {\ntail = (tail + 1) % capacity;\ndata[tail] = value;\nsize++;\n}\n}\n};\n</code></pre> <p>\u597d\u50cf\u5fd8\u8bb0\u5199\u6790\u6784\u51fd\u6570\u4e86\uff09\uff09\uff09</p> <p>\u7ed9\u4e00\u4e2a\u591a\u53c9\u6811\uff0c\u7236\u8282\u70b9\u548c\u5b50\u8282\u70b9\u4e4b\u95f4\u6709\u6761\u8fb9\uff0c\u8fb9\u6709\u957f\u5ea6\uff0c\u6c42\u6700\u957f\u7684\u4e00\u6761\u6839\u5230\u53f6\u5b50\u7684\u8def\u5f84 </p> \u6211\u7684\u7b54\u6848 <pre><code>class TreeNode {\npublic:\nint ID;\nTreeNode *firstChild;\nTreeNode *nextSibling;\nint distanceToFather;\n\nTreeNode *farthestChild{nullptr};\nint distanceToFarthestChild{0};\n};\n\nvoid doFindLongestPath(TreeNode *root) {\nif (!root || !root-&gt;firstChild)  return;\n\nint distanceToFarthestChild = 0;\nTreeNode *farthestChild = nullptr;\n\nTreeNode *tmp = root-&gt;firstChild;\nwhile (tmp) {\ndoFindLongestPath(tmp);\nif (tmp-&gt;distanceToFather + tmp-&gt;distanceToFarthestChild &gt; distanceToFarthestChild) {\ndistanceToFarthestChild = tmp-&gt;distanceToFather + tmp-&gt;distanceToFarthestChild;\nfarthestChild = tmp;\n}\ntmp = tmp-&gt;nextSibling;\n}\n\nroot-&gt;distanceToFarthestChild = distanceToFarthestChild ;\nroot-&gt;farthestChild = farthestChild;\n}\n\nvoid findLongestPath(TreeNode *root) {\ndoFindLongestPath(root);\nstd::cout &lt;&lt; \"The length of the longest path is \" &lt;&lt; root-&gt;distanceToFarthestChild &lt;&lt; std::endl\n&lt;&lt; \"The path is: \";\nwhile (root) {\nstd::cout &lt;&lt; root-&gt;ID &lt;&lt; \"-&gt;\";\nroot = root-&gt;farthestChild;\n}\n}\n</code></pre> <p>\u8fd9\u6b21\u7684\u9762\u8bd5\u5b98\u611f\u89c9\u6ca1\u6709\u975e\u5e38\u5389\u5bb3\uff0c\u4e5f\u6709\u4e00\u4e9b\u6bd4\u8f83\u8ff7\u60d1\u7684\u53d1\u8a00\u3002</p>"},{"location":"interviews/mayi/#310-\u4e8c\u9762-a","title":"3.10 \u4e8c\u9762 (A)","text":"<p>\u8fd9\u573a\u53ea\u6709 30 min\u3002</p> <p>\u81ea\u6211\u4ecb\u7ecd\u3002\u95ee\u4e86\u672a\u6765\u89c4\u5212\uff0c\u662f\u4e0d\u662f\u6253\u7b97\u4fdd\u7814\u3002</p> <p>\u95ee\u4e86\u8ba1\u7b97\u673a\u76f8\u5173\u7684\u8bfe\u7a0b\u54ea\u95e8\u5b66\u7684\u6700\u597d\u3002</p> <p>\u95ee\u4e86\u7528 C / C++ \u65f6\u6bd4\u8f83\u5e38\u89c1\u54ea\u4e9b\u95ee\u9898\uff0c\u5982\u4f55\u89e3\u51b3\u3002\u56de\u7b54\u4e86\u9012\u5f52\u548c\u5faa\u73af\u7684\u8fb9\u754c\u95ee\u9898\uff0c\u6bd4\u8f83\u4e60\u60ef\u901a\u8fc7\u6d4b\u8bd5\u800c\u975e\u9759\u6001\u67e5\u4ee3\u7801\u3002</p> <p>\u95ee\u4e86\u77e5\u4e0d\u77e5\u9053\u667a\u80fd\u6307\u9488\u3002\u4ecb\u7ecd\u4e86 shared_ptr\u3002</p> <p>\u95ee\u4e86 C++ \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u662f\u7269\u7406\u5730\u5740\u8fd8\u662f\u865a\u62df\u5730\u5740\u3002</p> <p>\u5982\u679c\u4e00\u6bb5\u4ee3\u7801\u5f62\u5982 <code>malloc(100); while(1);</code>\uff0c\u8fd9\u4e2a\u65f6\u5019\u64cd\u4f5c\u7cfb\u7edf\u5df2\u7ecf\u628a\u5185\u5b58\u5206\u914d\u7ed9\u8fdb\u7a0b\u4e86\u5417\uff1f\u8003 lazy allocation\uff0c\u4f46\u662f\u5f53\u65f6\u6211\u4e0d\u4f1a\u3002</p> <p>\u8ba9\u89e3\u91ca page fault\u3002</p> <p>\u8ba9\u89e3\u91ca C++ \u4e2d\u591a\u6001\u7684\u6982\u5ff5\u3002</p> <p>\u8ba9\u4ecb\u7ecd\u4e00\u4e2a\u5370\u8c61\u6700\u6df1\u523b\u7684\u3001\u5bf9\u7f16\u7a0b\u80fd\u529b\u63d0\u9ad8\u6700\u9ad8\u7684\u9879\u76ee\u3002\u505a\u4e86\u4ec0\u4e48\u4e8b\u60c5\u3001\u9047\u5230\u4ec0\u4e48\u56f0\u96be\uff0c\u5982\u4f55\u89e3\u51b3\u7684\u3002</p>"},{"location":"interviews/mayi/#323-hr-\u9762-a","title":"3.23 HR \u9762 (A)","text":"<p>\u8fd9\u90e8\u5206\u6709\u5927\u6982 40 min\u3002</p> <p>\u4ecb\u7ecd\u4e86\u4e00\u4e0b\u5c97\u4f4d\u7684\u57fa\u672c\u4fe1\u606f\u3002</p> <p>\u8ba9\u81ea\u6211\u4ecb\u7ecd\u3001\u81ea\u6211\u8bc4\u4ef7\u3002\u95ee\u4e86\u6709\u6ca1\u6709\u793e\u56e2\u7ecf\u5386\u3001\u7ade\u8d5b\u7ecf\u5386\uff0c\u4e3a\u4ec0\u4e48\u6ca1\u6709\u7ade\u8d5b\u7ecf\u5386\u3002\u95ee\u4e86\u6709\u6ca1\u6709\u8bba\u6587\u548c\u4e13\u5229\u3002\u95ee\u4e86\u6bd5\u8bbe\u7684\u60c5\u51b5\u3002</p> <p>\u95ee\u4e86\u4e2a\u4eba\u89c4\u5212\u3002\u56de\u7b54\u4e86\u4fdd\u7814\u548c\u5c31\u4e1a\u4e24\u624b\u51c6\u5907\u3002\u8ffd\u95ee\u4e86\u5c31\u4e1a\u65b9\u9762\u8003\u8651\u4ec0\u4e48\u6837\u7684\u516c\u53f8\u548c\u5c97\u4f4d\uff0c\u56de\u7b54\u4e86\u5b9e\u4e60\u672c\u8eab\u662f\u4e3a\u4e86\u627e\u65b9\u5411\u3002\u95ee\u4e86\u6295\u4e86\u54ea\u4e9b\u5176\u4ed6\u516c\u53f8\u548c\u5c97\u4f4d\u3002</p> <p>\u95ee\u4e86\u8682\u8681\u5bf9\u4e8e\u6211\u7684\u5438\u5f15\u529b\u5728\u54ea\u91cc\u3002\u56de\u7b54\u4e86\u53bb\u8bed\u96c0\u5927\u4f1a\u7684\u65f6\u5019\u770b\u5230\u5927\u5bb6\u7684\u6c1b\u56f4\u8fd8\u4e0d\u9519\uff1b\u8682\u8681\u672c\u8eab\u6280\u672f\u6bd4\u8f83\u6210\u719f\uff0c\u80fd\u591f\u66f4\u597d\u5730\u63d0\u5347\u81ea\u5df1\u3002\u95ee\u4e86\u5bf9\u5de5\u4f5c\u5185\u5bb9\u7684\u4e86\u89e3\u548c\u671f\u671b\u3002</p> <p>\u95ee\u4e86\u5982\u679c\u5176\u4ed6\u516c\u53f8\u4e5f\u7ed9\u4e86 offer \u600e\u4e48\u9009\u3002\u56de\u7b54\u4e86\u5f88\u91cd\u8981\u7684\u57fa\u7840\u6761\u4ef6\u662f\u5b9e\u4e60\u7684\u65f6\u95f4\u548c\u5730\u70b9\uff0c\u5177\u4f53\u7684\u5185\u5bb9\u4e0d\u662f\u7279\u522b\u91cd\u8981\u3002</p> <p>\u95ee\u4e3a\u4ec0\u4e48\u559c\u6b22\u5f00\u53d1\u548c\u5199\u4ee3\u7801\u3002\u56de\u7b54\u4e86\u6bd4\u8f83\u559c\u6b22\u6709\u903b\u8f91\u7684\u5de5\u4f5c\uff0c\u5bf9\u4e8e\u5199\u4ee3\u7801\u6bd4\u8f83\u719f\u6089\uff0c\u6bd4\u5927\u591a\u6570\u540c\u9f84\u4eba\u7ecf\u9a8c\u4e30\u5bcc\uff0c\u540c\u65f6\u6bd4\u8f83\u6709\u6210\u5c31\u611f\u3002\u8ffd\u95ee\u4e86\u4e30\u5bcc\u7ecf\u9a8c\u7684\u8fc7\u7a0b\u53ef\u80fd\u662f\u6bd4\u8f83\u8270\u96be\u548c\u67af\u71e5\u7684\uff0c\u662f\u4ec0\u4e48\u652f\u6491\u6211\u575a\u6301\u4e0b\u6765\u7684\u3002</p> <p>\u95ee\u4e86\u8fd9\u51e0\u5e74\u6700\u9ad8\u70b9\u662f\u4ec0\u4e48\u65f6\u5019\uff0c\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u3002\u95ee\u4e86\u5927\u5b66\u5b66\u4e60\u4e86\u5404\u4e2a\u4e13\u4e1a\u8bfe\uff0c\u6d89\u53ca\u5404\u4e2a\u9886\u57df\uff0c\u5176\u4e2d\u6700\u624e\u5b9e\u7684\u9886\u57df\u662f\u4ec0\u4e48\u3002\u95ee\u4e86\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u54ea\u4e9b\u65b9\u5f0f\u5b9e\u73b0\u77e5\u8bc6\u548c\u6280\u672f\u7684\u79ef\u7d2f\u3002</p> <p>\u95ee\u559c\u6b22\u538b\u529b\u5927\u4e00\u70b9\u8fd8\u662f\u6bd4\u8f83\u5e73\u7f13\u53ef\u63a7\u7684\u73af\u5883\u3002\u56de\u7b54\u4e86\u559c\u6b22\u65f6\u95f4\u5b89\u6392\u7d27\u4e00\u70b9\u4f46\u662f\u5de5\u4f5c\u96be\u5ea6\u4e0d\u592a\u5927\u7684\u5b89\u6392\u3002</p> <p>\u95ee\u6709\u6ca1\u6709\u9762\u5bf9\u8fc7\u540c\u65f6\u591a\u6761\u4efb\u52a1\u5e76\u884c\u800c\u4e14\u90fd\u6bd4\u8f83\u6709\u6311\u6218\u7684\uff0c\u662f\u600e\u4e48\u89e3\u51b3\u7684\u3002</p> <p>\u95ee\u4e86\u8fd9\u51e0\u5e74\u6700\u4f4e\u70b9\u662f\u4ec0\u4e48\u65f6\u5019\uff0c\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\uff0c\u600e\u4e48\u8d70\u51fa\u6765\u7684\u3002\u95ee\u4e86\u5982\u4f55\u8bc4\u4ef7\u73b0\u5728\u7684\u72b6\u6001\u3002</p> <p>\u95ee\u4e86\u6709\u4ec0\u4e48\u6837\u7684\u5408\u4f5c\u9879\u76ee\u548c\u5728\u5176\u4e2d\u7684\u89d2\u8272\u3001\u4ea7\u51fa\u3002</p> <p>\u8bbe\u60f3\u4e00\u4e0b\u5de5\u4f5c\u4e2d\u7684\u54ea\u4e9b\u573a\u666f\u53ef\u4ee5\u5438\u5f15\u6211\u3002</p> <p>4.14 \u6536\u5230\u4e86\u5f55\u7528\u7684\u5b9e\u4e60\u610f\u5411\u4e66\uff0c19 \u53f7\u62d2\u6389\u4e86\u3002</p>"},{"location":"interviews/mayi/#921-\u79cb\u62db\u9762\u8bd5","title":"9.21 \u79cb\u62db\u9762\u8bd5","text":"<p>\u4e4b\u524d\u627e\u7684\u524d\u8f88\u95ee\u6211\u8981\u4e0d\u8981\u9762\u79cb\u62db\uff0c\u5c31\u9762\u4e86\u4e00\u4e0b\u3002</p> <p>\u95ee\u4e86\u6691\u671f\u5b9e\u4e60\u662f\u600e\u4e48\u9009\u62e9\u7684\u3002\u56de\u7b54\u4e86\u4f20\u7edf\u4e92\u8054\u7f51\u53ef\u4ee5\u901a\u8fc7\u5468\u56f4\u7684\u4eba\u4e86\u89e3\uff0c\u4f46\u662f\u5468\u56f4\u4ece\u4e8b\u91cf\u5316\u884c\u4e1a\u7684\u4eba\u4e0d\u591a\uff0c\u6240\u4ee5\u53ea\u80fd\u81ea\u5df1\u53bb\u4f53\u9a8c\u4e00\u4e0b\u3002\u66f4\u91cd\u8981\u7684\u539f\u56e0\u662f\u548c\u63a8\u8350\u6211\u7684\u540c\u5b66\u662f\u6bd4\u8f83\u597d\u7684\u5b66\u4e60\u5408\u4f5c\u4f19\u4f34\uff0c\u5e0c\u671b\u8d81\u8fd9\u4e2a\u673a\u4f1a\u591a\u4ea4\u6d41\u4e00\u4e0b\u3002</p> <p>\u95ee\u4e86\u5b9e\u4e60\u7684\u65f6\u95f4\u6bb5\u548c\u611f\u53d7\u3002\u56de\u7b54\u4e86\u786e\u5b9e\u80fd\u5b66\u5230\u5f88\u591a\u4e1c\u897f\uff0c\u9700\u8981\u72ec\u5f53\u4e00\u9762\uff0c\u6210\u957f\u5f88\u5feb\uff1b\u4e0d\u8fc7\u91cf\u5316\u505a\u7684\u5f88\u591a\u5185\u5bb9\u662f\u6bd4\u8f83\u6781\u81f4\u7684\u7ec6\u5206\u4f18\u5316\uff0c\u8fd9\u79cd\u6280\u672f\u5728\u4f20\u7edf\u4e92\u8054\u7f51\u5e94\u7528\u7a0b\u5ea6\u4e0d\u9ad8\uff0c\u6ca1\u529e\u6cd5\u7ed9\u81ea\u5df1\u7559\u9000\u8def\u3002\u53e6\u4e00\u65b9\u9762\u662f\u91cf\u5316\u884c\u4e1a\u66f4\u6709\u53ef\u80fd\u6536\u5230\u56fd\u5bb6\u76d1\u7ba1\u56e0\u6b64\u7a33\u5b9a\u6027\u6b20\u4f73\u3002</p> <p>\u8ba9\u4ecb\u7ecd\u4e86\u5b9e\u4e60\u671f\u95f4\u505a\u7684\u4e00\u4e2a\u5177\u4f53\u7684\u5de5\u4f5c\u3002</p> <p>\u95ee\u5173\u4e8e\u5de5\u4f5c\u66f4\u770b\u91cd\u4ec0\u4e48\uff0c\u5982\u679c\u5f88\u591a\u516c\u53f8\u90fd\u7ed9\u53d1 offer\uff0c\u5927\u81f4\u7684\u503e\u5411\u662f\u4ec0\u4e48\u3002\u56de\u7b54\u4e86\u5e0c\u671b\u57f9\u517b\u7684\u80fd\u529b\u80fd\u591f\u66f4\u6709\u7ade\u4e89\u529b\u548c\u5e02\u573a\u3002\u8ffd\u95ee\u6211\u5982\u4f55\u53bb\u5224\u65ad\u54ea\u4e2a\u516c\u53f8\u80fd\u8ba9\u6211\u66f4\u6709\u7ade\u4e89\u529b\u3002\u6211\u56de\u7b54\u66f4\u770b\u91cd\u5bf9\u76f8\u5e94\u9886\u57df\u672a\u6765\u53d1\u5c55\u7684\u671f\u671b\uff0c\u4f8b\u5982\u6211\u56e0\u4e3a\u7f16\u7a0b\u8bed\u8a00\u5e94\u7528\u6bd4\u8f83\u7a84\u6240\u4ee5\u6ca1\u6709\u9009\u62e9\u4fdd\u7814\u3002</p> <p>\u95ee\u4e86\u5982\u679c\u8682\u8681\u7684\u65b9\u5411\u6bd4\u8f83\u597d\uff0c\u4f46\u662f\u7ed9\u7684 offer \u6bd4\u522b\u7684\u516c\u53f8\u5c11 5k\uff0c\u6211\u600e\u4e48\u9009\u3002\u6211\u56de\u7b54\u867d\u7136\u6700\u540e\u7684\u76ee\u7684\u90fd\u662f\u8d5a\u94b1\uff0c\u4f46\u662f\u6700\u5f00\u59cb\u66f4\u5e0c\u671b\u6709\u4e00\u4e2a\u597d\u7684\u5e73\u53f0\u548c\u65b9\u5411\u3002</p> <p>\u95ee\u4e86\u6211\u610f\u613f\u4e2d\u6709\u54ea\u4e9b\u65b9\u5411\u662f\u6211\u89c9\u5f97\u597d\u7684\u65b9\u5411\u3002\u6211\u56de\u7b54\u4e0d\u51fa\u6765\uff0c\u6240\u4ee5\u8bf4\u6211\u89c9\u5f97\u4e92\u8054\u7f51\u9700\u8981\u7684\u6280\u672f\u90fd\u5dee\u4e0d\u592a\u591a\u3002\u4ed6\u8ffd\u95ee\u90a3\u65e2\u7136\u5dee\u4e0d\u592a\u591a\u600e\u4e48\u9009\u62e9\u5462\uff1f\u6211\u7b54\u4e0d\u51fa\u6765\uff0c\u54d1\u53e3\u65e0\u8a00\uff0c\u5f00\u59cb\u626f\u6bd4\u8f83\u5173\u5fc3\u80fd\u591f\u62ff\u5230\u4ec0\u4e48\u6837\u7684\u9879\u76ee\u3001\u6210\u957f\u901f\u5ea6\u600e\u4e48\u6837\u3002</p> <p>\u4f5c\u4e3a\u603b\u7ed3\u6211\u7ed9\u4e86\u4e2a\u6392\u5e8f\uff0c\u5927\u65b9\u5411 &gt; \u9879\u76ee\u548c\u6210\u957f &gt; \u85aa\u8d44\u3002\u7136\u540e\u8ffd\u95ee\u4e86\u5927\u6982\u505a\u4ec0\u4e48\u4e8b\u60c5\u3002</p> <p>\uff08\u73b0\u5728\u60f3\u6765\u4e0d\u5e94\u8be5\u7ed5\u90a3\u4e48\u591a\u7684\u3002\u5c31\u76f4\u63a5\u8bf4\u8c01\u7ed9\u7684\u591a\u53bb\u90a3\u5c31\u597d\u4e86\u3002\uff09</p> <p>\u7136\u540e\u5c31\u6ca1\u6d88\u606f\u4e86\uff0c\u786e\u5b9e\u81ea\u5df1\u518d\u56de\u53bb\u770b\u7684\u65f6\u5019\u4e5f\u89c9\u5f97\u81ea\u5df1\u8bda\u610f\u592a\u4e0d\u8db3\u4e86\u3002\u4e50\uff09</p>"},{"location":"interviews/meituan/","title":"\u7f8e\u56e2 \u8ba1\u7b97\u5f15\u64ce","text":"<p> \u7ea6 1417 \u4e2a\u5b57  391 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>98 \u770b\u5230\u7684\u30022.27 \u6295\u7684\u3002</p>"},{"location":"interviews/meituan/#35-\u7b14\u8bd5","title":"3.5 \u7b14\u8bd5","text":"<p>120 \u5206\u949f\uff0c\u6709\u4e00\u4efd 4 \u9898\u7684\u548c\u4e00\u4efd 1 \u9898\u7684\uff0c\u5148\u505a\u4e86 4 \u9898\u7684\u4ea4\u5377\u624d\u80fd\u505a 1 \u9898\u7684\uff1b\u53ef\u4ee5\u7528\u81ea\u5df1\u7684 IDE\uff0c\u63d0\u4ea4\u5c31\u51fa\u7ed3\u679c</p> <p>115 \u5206\u949f AK \u4e86\uff0c\u5f00\u5fc3\uff01\u6211\u7684\u987a\u5e8f\u662f 3 4 2 1 5</p> <p>\u603b\u4f53\u7684\u611f\u89c9\u662f\u6570\u636e\u5f88\u5f31\uff0c\u6570\u636e\u8303\u56f4\u5f88\u5c0f</p>"},{"location":"interviews/meituan/#t1","title":"T1","text":"<p>\u8f93\u5165\u4e00\u4e2a n(~100000)\uff0c\u7ed9\u4e00\u4e2a\u5927\u5c0f\u4e3a n \u7684\u53ef\u91cd\u96c6\uff0c\u6570\u636e\u8303\u56f4\u662f 1~200000\uff0c\u6c42\u4e00\u4e2a\u6700\u5927\u7684\u5b50\u96c6\uff0c\u4f7f\u5f97\u5176\u4e2d\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u7684\u5dee\u4e0d\u5c0f\u4e8e 2\u3002</p> \u6211\u7684\u7b54\u6848 <p><pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint n;\nbool exist[200005];\nint dp[2][200005];\n\nint main() {\ncin &gt;&gt; n;\nint tmp;\nfor (int i = 0; i &lt; n; i++) {\nscanf(\"%d\", &amp;tmp);\nexist[tmp] = true;\n}\n\nfor (int i = 1; i &lt;= 200000; i++) {\ndp[0][i] = max(dp[0][i - 1], dp[1][i - 1]);\nif (exist[i])\ndp[1][i] = max(dp[0][i - 1], dp[1][i - 2]) + 1;\n}\n\ncout &lt;&lt; max(dp[0][200000], dp[1][200000]);\n\nreturn 0;\n}\n</code></pre> \u8fd8\u662f\u4e0d\u6562\u505a DP \u7684\u9898\uff0c\u770b\u89c1\u5c31\u4f1a\u7ed5\u7740\u8d70</p>"},{"location":"interviews/meituan/#t2","title":"T2","text":"<p>\u8f93\u5165\u4e00\u4e2a n(~100000)\uff0c\u7ed9\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u636e\u8303\u56f4\u662f -1000~1000\uff0c\u6c42\u5c06\u4e00\u4e2a\u5b50\u6570\u7ec4\u8fdb\u884c\u7ffb\u8f6c\uff08\u4f8b\u5982 1 -2 3 -5 4 2 \u53ef\u4ee5\u5c06\u540e\u4e09\u4e2a\u5143\u7d20\u7ffb\u8f6c\u5f97\u5230 1 -2 3 2 4 -5\uff09\u540e\u7684\u6700\u5927\u533a\u95f4\u548c\u3002</p> \u6211\u7684\u7b54\u6848 <p>\u5206\u6790\u4e86\u4e00\u4e0b\uff0c\u89c9\u5f97\u5176\u5b9e\u662f\u627e\u4e0d\u91cd\u53e0\u7684\u4e24\u4e2a\u533a\u95f4\uff0c\u4f7f\u5b83\u4eec\u7684\u548c\u6700\u5927\uff0c\u8fd9\u6837\u505a\u4e00\u6b21\u7ffb\u8f6c\u80af\u5b9a\u80fd\u7ffb\u8fc7\u53bb\u3002\u521a\u5f00\u59cb\u662f\u60f3\u8d2a\u5fc3\uff0c\u627e\u6700\u5927\u7684\u7136\u540e\u5220\u6389\u7136\u540e\u627e\u6b21\u5927\u7684\uff0c\u80fd\u5f97 72% \u7684\u5206\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint n;\nint a[100005];\nint preSum[100005];\nint minn[100005];\nint minx[100005];\nint maxn = -1000, maxx;\n\nint main() {\ncin &gt;&gt; n;\nfor (int i = 0; i &lt; n; i++) scanf(\"%d\", &amp;a[i]);\npreSum[0] = minn[0] = 0; minx[0] = -1; maxn = a[0];\nfor (int i = 0; i &lt; n; i++) {\npreSum[i + 1] = preSum[i] + a[i];\nminn[i + 1] = min(minn[i], preSum[i]);\nminx[i + 1] = preSum[i + 1] &lt;= minn[i] ? i : minx[i];\nif (preSum[i + 1] - minn[i + 1] &gt;= maxn)     maxn = preSum[i + 1] - minn[i + 1], maxx = i;\n}\nint result = maxn;\n\nfor (int i = minx[maxx] + 1; i &lt;= maxx; i++)\na[i] = -1001;\n\nfor (int i = 0; i &lt; n; i++)\ncout &lt;&lt; a[i] &lt;&lt; \" \";\ncout &lt;&lt; endl;\n\npreSum[0] = minn[0] = 0; maxn = a[0];\nfor (int i = 0; i &lt; n; i++) {\npreSum[i + 1] = preSum[i] + a[i];\nminn[i + 1] = min(minn[i], preSum[i]);\nif (preSum[i + 1] - minn[i + 1] &gt;= maxn)     maxn = preSum[i + 1] - minn[i + 1];\n}\n\nfor (int i = 0; i &lt;= n; i++)\ncout &lt;&lt; preSum[i] &lt;&lt; \" \";\ncout &lt;&lt; endl;\n\nfor (int i = 0; i &lt;= n; i++)\ncout &lt;&lt; minn[i] &lt;&lt; \" \";\ncout &lt;&lt; endl;\n\ncout &lt;&lt; result &lt;&lt; \" \" &lt;&lt; maxn &lt;&lt; endl;\n\ncout &lt;&lt; result + maxn &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u4f46\u662f\u663e\u7136\u8d2a\u5fc3\u4e0d\u5bf9\uff0c\u8003\u8651\u5230\u4e24\u4e2a\u533a\u95f4\u4e0d\u91cd\u53e0\u5c31\u53ef\u4ee5\u628a\u6570\u7ec4\u5206\u6210 2 \u4efd\uff0c\u800c\u6700\u5927\u533a\u95f4\u548c\u662f\u6709 dp \u6027\u8d28\u7684\uff0c\u6240\u4ee5\u6b63\u7740\u548c\u5012\u7740\u5404\u505a\u4e00\u6b21\u6700\u5927\u533a\u95f4\u548c\uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u70b9\uff0c\u4ee5\u5b83\u4e3a\u754c\u5206\u6210\u4e24\u8fb9\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint n;\nint a[100005];\nint preSumForw[100005], preSumBackw[100005];\nint minForw[100005], minBackw[100005];\nint maxForw[100005], maxBackw[100005];\n\nint main() {\ncin &gt;&gt; n;\nfor (int i = 0; i &lt; n; i++) scanf(\"%d\", &amp;a[i]);\n\npreSumForw[0] = a[0];\nminForw[0] = min(a[0], 0);\nmaxForw[0] = a[0] - minForw[0];\nfor (int i = 1; i &lt; n; i++) {\npreSumForw[i] = preSumForw[i - 1] + a[i];\nminForw[i] = min(minForw[i - 1], preSumForw[i]);\nmaxForw[i] = max(maxForw[i - 1], preSumForw[i] - minForw[i]);\n}\n\npreSumBackw[n - 1] = a[n - 1];\nminBackw[n - 1] = min(a[n - 1], 0);\nmaxBackw[n - 1] = a[n - 1] - minBackw[n - 1];\nfor (int i = n - 2; i &gt;= 0; i--) {\npreSumBackw[i] = preSumBackw[i + 1] + a[i];\nminBackw[i] = min(minBackw[i + 1], preSumBackw[i]);\nmaxBackw[i] = max(maxBackw[i + 1], preSumBackw[i] - minBackw[i]);\n}\n\nint maxn = maxForw[0] + maxBackw[1];\nfor (int i = 1; i &lt; n; i++) {\nmaxn = max(maxn, maxForw[i] + maxBackw[i + 1]);\n}\n\ncout &lt;&lt; maxn &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"},{"location":"interviews/meituan/#t3","title":"T3","text":"<p>\u6709\u4e00\u5757\u957f\u5bbd\u9ad8\u4e3a n \u7684\u8c46\u8150\uff0c\u56fa\u5b9a\u597d\u4e86\uff0c\u73b0\u5728\u5207 m(~1000) \u5200\uff0c\u6bcf\u5200\u662f\u4ece x / y / z \u8f74\u4e0a\u5750\u6807\u4e3a a \u7684\u4f4d\u7f6e\u5782\u76f4\u5207\u4e00\u5200\uff1b\u8f93\u51fa m \u884c\uff0c\u6bcf\u884c\u8868\u793a\u5207\u5bf9\u5e94\u4e00\u5200\u4e4b\u540e\u6700\u5927\u5757\u7684\u8c46\u8150\u662f\u591a\u5927</p> <p>\u4f8b\u5982\uff0c\u521a\u5f00\u59cb\u662f <code>3*3*3</code> \u7684\u8c46\u8150\uff0c\u5728 <code>x 1</code> \u5904\u5207\u4e00\u5200\u53d8\u6210\u4e86 <code>1*3*3</code> \u548c <code>2*3*3</code> \u4e24\u5757\uff0c\u518d\u5728 <code>y 2</code> \u5904\u5207\u4e00\u5200\u53d8\u6210\u4e86 <code>1*2*3</code> <code>1*1*3</code> <code>2*2*3</code> <code>2*1*3</code> \u56db\u5757\uff0c\u4ee5\u6b64\u7c7b\u63a8</p> \u6211\u7684\u7b54\u6848 <p>\u672c\u6765\u60f3\u7528\u4f18\u5148\u961f\u5217\u7684\uff0c\u540e\u6765\u53d1\u73b0\u90a3\u6837\u5c31\u4e0d\u77e5\u9053\u780d\u5728\u54ea\u5757\u4e86\uff0c\u6240\u4ee5\u7528\u4e86\u94fe\u8868\u3002\u6bcf\u6b21\u7ed3\u679c\u662f x y z \u4e09\u6761\u8fb9\u4e0a\u5404\u53d6\u6700\u5927\u957f\u5ea6\u7684\u4e58\u79ef\uff0c\u56e0\u6b64\u7ef4\u62a4\u94fe\u8868\u7684\u6700\u5927\u503c\u3002\u7528\u4e86\u6bd4\u8f83\u611a\u8822\u7684\u65b9\u5f0f\u7ef4\u62a4\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\nstruct node {\nint val;\nnode *next;\n};\n\nint main() {\nint n, m;\ncin &gt;&gt; n &gt;&gt; m;\nint dir[1005], val[1005];\nchar temp;\nfor (int i = 0; i &lt; m; i++) {\ncin &gt;&gt; temp;\nif (temp == 'x')        dir[i] = 0;\nelse if (temp == 'y')   dir[i] = 1;\nelse                    dir[i] = 2;\ngetchar();\n}\nfor (int i = 0; i &lt; m; i++) {\ncin &gt;&gt; val[i];\n}\n\nnode *sz[3];\nfor (auto &amp; i : sz) {\ni = new node{0, new node{n, nullptr}};\n}\n\nint maxn[3] = {n, n, n};\n\nfor (int i = 0; i &lt; m; i++) {\nint count = 0;\nnode *tmp = sz[dir[i]];\nwhile (tmp-&gt;next) {\nif (count + tmp-&gt;next-&gt;val == val[i])    break;\n\nelse if (count + tmp-&gt;next-&gt;val &gt; val[i]) {\nint a = val[i] - count;\nint b = tmp-&gt;next-&gt;val - a;\ntmp-&gt;next-&gt;val = a;\ntmp-&gt;next-&gt;next = new node{b, tmp-&gt;next-&gt;next};\nif (a + b == maxn[dir[i]]) {\ntmp = sz[dir[i]];\nmaxn[dir[i]] = tmp-&gt;val;\nwhile (tmp) {\nmaxn[dir[i]] = max(maxn[dir[i]], tmp-&gt;val);\ntmp = tmp-&gt;next;\n}\n}\nbreak;\n}\n\ncount += tmp-&gt;next-&gt;val;\ntmp = tmp-&gt;next;\n}\n\ncout &lt;&lt; maxn[0] * maxn[1] * maxn[2] &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"},{"location":"interviews/meituan/#t4","title":"T4","text":"<p>\u8f93\u5165 n(~5000), m(~500)\uff0c\u8f93\u5165\u4e00\u4e2a\u6709 n \u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u7136\u540e\u8f93\u5165 m \u6b21\u67e5\u8be2\uff0c\u67e5\u8be2\u6709 2 \u79cd\u683c\u5f0f\uff1a<code>1 l r</code> \u8868\u793a\u67e5\u8be2 [l, r] \u8303\u56f4\u7684\u533a\u95f4\u548c\uff0c<code>2 l r k</code> \u8868\u793a\u5c06 [l, r] \u8303\u56f4\u5185\u7684\u5143\u7d20 +k\u3002\u5728\u67e5\u8be2\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u6392\u5217\u8fd9\u4e2a\u6570\u7ec4\u7684\u987a\u5e8f\uff0c\u8f93\u51fa\u6240\u6709\u67e5\u8be2\u533a\u95f4\u548c\u7ed3\u679c\u7684 \u603b\u548c \u7684\u6700\u5927\u503c\uff08\u4e0d\u8981\u6c42\u8f93\u51fa\u6bcf\u6b21\u67e5\u8be2\u7684\u7ed3\u679c\uff09\u3002</p> \u6211\u7684\u7b54\u6848 <p>\u9996\u5148\uff0c\u663e\u7136\u4e0d\u8003\u8651\u589e\u52a0\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u8d8a\u5927\u7684\u5143\u7d20\u653e\u5728\u6c42\u548c\u6b21\u6570\u8d8a\u591a\u7684\u4f4d\u7f6e\u4e0a\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u5927\u503c\u3002\u540c\u65f6\u5bb9\u6613\u8bc1\u660e\uff0c\u6392\u5217\u7684\u987a\u5e8f\u4e0d\u5f71\u54cd\u533a\u95f4 +k \u5bf9\u7ed3\u679c\u9020\u6210\u7684\u5f71\u54cd\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nstruct query {\nint type;\nint l;\nint r;\nint k;\n} q[505];\n\nint n, m;\nint a[5005];\nint cnt[5005];\nint addK[5005];\nlong long addSum = 0;\n\nint main() {\ncin &gt;&gt; n &gt;&gt; m;\nfor (int i = 0; i &lt; n; i++)\nscanf(\"%d\", &amp;a[i]);\n\nfor (int i = 0; i &lt; m; i++) {\nscanf(\"%d%d%d\", &amp;q[i].type, &amp;q[i].l, &amp;q[i].r);\nq[i].l--, q[i].r--;\nif (q[i].type == 2) {\nscanf(\"%d\", &amp;q[i].k);\nfor (int j = q[i].l; j &lt;= q[i].r; j++)\naddK[j] += q[i].k;\n}\nelse {\nfor (int j = q[i].l; j &lt;= q[i].r; j++) {\ncnt[j]++;\naddSum += addK[j];\n}\n}\n}\n\nsort(a, a + n);\nsort(cnt, cnt + n);\n\nfor (int i = 0; i &lt; n; i++) {\naddSum += a[i] * cnt[i];\n}\n\ncout &lt;&lt; addSum &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"interviews/meituan/#t5","title":"T5","text":"<p>\u731c\u6570\u5b57\u6e38\u620f\uff1a\u7cfb\u7edf\u968f\u673a\u751f\u6210\u4e00\u4e2a n(&lt;=8) \u4f4d\u3001\u4e0d\u542b\u91cd\u590d\u6570\u5b57\u7684\u6570\u5b57\u4e32\uff0c\u5f53\u73a9\u5bb6\u731c\u4e00\u4e2a\u6570\u5b57\u65f6\uff0c\u7cfb\u7edf\u8fd4\u56de\u4e24\u4e2a\u6570\u5b57\u4f5c\u4e3a\u63d0\u793a\uff1aa \u8868\u793a\u4f4d\u7f6e\u548c\u6570\u5b57\u90fd\u6b63\u786e\u7684\u6570\u76ee\uff0cb \u8868\u793a\u4f4d\u7f6e\u4e0d\u5bf9\u4f46\u662f\u6570\u5b57\u5b58\u5728\u7684\u6570\u76ee\u3002\u73b0\u5728\u7ed9\u51fa n \u4ee5\u53ca m(~100) \u6b21\u731c\u6d4b\u7684\u5185\u5bb9\u548c\u7ed3\u679c\uff08\u4e00\u4e2a\u6570\u5b57\u4e32\u4ee5\u53ca\u5bf9\u5e94\u7684 a, b\uff09\uff0c\u6c42\u4e00\u4e2a\u5b57\u5178\u5e8f\u6700\u5c0f\u4e14\u7b26\u5408\u731c\u6d4b\u7ed3\u679c\u7684\u6570\u5b57\u4e32\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8f93\u51fa <code>?</code>\u3002</p> \u6211\u7684\u7b54\u6848 <p>\u5c31\u3002\u3002\u7206\u641c\uff09\u4e5f\u80fd\u8fc7 \u6bd4\u8f83\u53cb\u5584\uff09</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint n, m;\nstring str[105];\nint a[105], b[105];\n\nstring s;\n\nbool check(int i) {\nint thisA = 0, thisB = 0;\nbool aEx[10] = {false}, bEx[10] = {false};\nfor (int j = 0; j &lt; n; j++) {\nif (str[i][j] == s[j])  thisA++;\nelse aEx[str[i][j] - '0'] = true, bEx[s[j] - '0'] = true;\n}\nif (thisA != a[i])  return false;\nfor (int j = 0; j &lt; 10; j++)\nif (aEx[j] &amp;&amp; bEx[j])\nthisB++;\nif (thisB != b[i])  return false;\nreturn true;\n}\n\nbool check() {\n//cout &lt;&lt; s &lt;&lt; endl;\n/*if (s[2] == '3') {\n        cout &lt;&lt; \"1\" &lt;&lt; endl;\n    }*/\nfor (int i = 0; i &lt; m; i++)\nif (!check(i))   return false;\nreturn true;\n}\n\nvoid gen(int level) {\nif (level == n) {\nif (check()) {\ncout &lt;&lt; s &lt;&lt; endl;\nexit(0);\n}\nreturn;\n}\n\nstatic bool used[10] = {false};\nfor (int i = 0; i &lt; 10; i++) {\nif (used[i])\ncontinue;\n\nif (s.size() &lt;= level)\ns += (char)(i + '0');\nelse s[level] = (char)(i + '0');\nused[i] = true;\ngen(level + 1);\nused[i] = false;\n}\n}\n\nint main() {\ncin &gt;&gt; n &gt;&gt; m;\nfor (int i = 0; i &lt; m; i++) {\ncin &gt;&gt; str[i] &gt;&gt; a[i] &gt;&gt; b[i];\n}\ngen(0);\n\ncout &lt;&lt; \"?\" &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"interviews/meituan/#315-\u4e00\u9762","title":"3.15 \u4e00\u9762","text":"<p>\u8fd9\u4e2a\u9762\u8bd5\u5b98\u5f88\u5ba2\u6c14\u8bf6\uff0c\u4e00\u76f4\u90fd\u79f0\u547c\u300c\u60a8\u300d\uff0c\u4f1a\u5404\u79cd\u80af\u5b9a\uff0c\u5e76\u4e14\u5728\u53cd\u95ee\u9762\u8bd5\u8868\u73b0\u7684\u65f6\u5019\u8868\u793a\u300c\u4e0d\u7528\u5bfb\u6c42\u6211\u4eec\u7684\u80af\u5b9a\u300d\u3002</p> <p>\u5f00\u59cb\u4ecb\u7ecd\u4e86\u9762\u8bd5\u7684\u6d41\u7a0b\uff0c\u4ecb\u7ecd\u4e86\u90e8\u95e8\u4fe1\u606f\u3002\u8ba9\u6211\u8fdb\u884c\u81ea\u6211\u4ecb\u7ecd\uff0c\u5e76\u4ecb\u7ecd\u81ea\u5df1\u7684\u4f18\u52bf\u3002</p> <p>\u95ee\u4e86\u9ad8\u4e2d\u7ade\u8d5b\u7684\u60c5\u51b5\u3002\u95ee\u4e86\u54ea\u4e9b\u573a\u666f\u4f1a\u9700\u8981 C++ \u7684\u65b0\u7279\u6027\uff0c\u5982\u4f55\u5b66\u4e60\u7684\u3002\u4ecb\u7ecd\u4e86\u7528\u5230 lambda \u548c\u667a\u80fd\u6307\u9488\u7684\u573a\u666f\u3002</p> <p>\u95ee\u4e86\u9879\u76ee\u7ecf\u5386\u91cc\u54b8\u9c7c\u96c0\u7684\u8bbe\u8ba1\uff0c\u4e3b\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff0c\u7528\u4e86\u54ea\u4e9b\u65b9\u5f0f\u3002\u4ecb\u7ecd\u4e86\u5bc6\u7801\u7684\u52a0\u5bc6\u5b58\u50a8\u3001\u5217\u8868\u7684\u6743\u9650\u95ee\u9898\u3001\u591a\u4eba\u540c\u65f6\u4fee\u6539\u7684\u652f\u6301\u3001\u84dd\u7eff\u53d1\u5e03\u548c\u81ea\u52a8\u4fdd\u5b58\u7b49\u3002</p> <p>\u95ee\u4e86 SQL \u8bed\u53e5\u7684\u6267\u884c\u6b65\u9aa4\u3002</p> <p>\u8ba9\u5199\u4e86\u4e24\u6bb5\u4ee3\u7801\uff0c\u4e00\u6bb5\u662f\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386\uff0c\u4e00\u6bb5\u662f\u591a\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386\u3002</p> <p>\u53cd\u95ee\u9636\u6bb5\u95ee\u4e86\u9762\u8bd5\u603b\u4f53\u8bc4\u4ef7\u548c\u6280\u672f\u6808\u3002\u6ca1\u542c\u61c2\u3002</p>"},{"location":"interviews/meituan/#321-\u4e8c\u9762","title":"3.21 \u4e8c\u9762","text":"<p>\u81ea\u6211\u4ecb\u7ecd\u3002\u63d0\u5230\u4e13\u4e1a\uff0c\u95ee\u4e86\u5b89\u5168\u7684\u4e09\u8981\u7d20\uff0c\u6211\u8bf4\u4e0d\u77e5\u9053\u3002\u95ee\u4e3a\u4ec0\u4e48\u9009\u4fe1\u5b89\uff0c\u6211\u8bf4\u6015\u8ba1\u79d1\u8fdb\u4e0d\u53bb\u3002</p> <p>\u8ba9\u4ecb\u7ecd\u54ea\u4e2a\u9879\u76ee\u6700\u80fd\u4f53\u73b0\u6c34\u5e73\uff0c\u6211\u4ecb\u7ecd\u4e86\u89e3\u91ca\u5668\uff0c\u4ecb\u7ecd\u4e86\u95ed\u5305\u3002\u95ee\u4e86\u4e3a\u4ec0\u4e48\u8981\u6709\u95ed\u5305\u3002\u5bf9\u95ed\u5305\u5c55\u5f00\u4e86\u8ba8\u8bba\u3002</p> <p>\u95ee\u89e3\u91ca\u5668\u5206\u51e0\u4e2a\u90e8\u5206\u3002\u6211\u6000\u7591\u4ed6\u60f3\u95ee\u7f16\u8bd1\u90a3\u4e00\u5957\uff0c\u6240\u4ee5\u5148\u4ecb\u7ecd\u4e86\u7f16\u8bd1\u5668\u6709\u51e0\u4e2a\u90e8\u5206 \uff0c\u7136\u540e\u4ecb\u7ecd\u4e86 MUA \u53ef\u4ee5\u76f4\u63a5\u8fb9\u89e3\u91ca\u8fb9\u8fd0\u884c\u3002</p> <p>\u95ee\u4e86\u8fdb\u7a0b\u95f4\u901a\u4fe1\u6709\u54ea\u4e9b\u65b9\u5f0f\u3002\u95ee\u4e86\u5185\u5b58\u7ba1\u7406\u7684\u673a\u5236\uff0c\u95ee\u4e86\u4e00\u4e2a\u9875\u7684\u5927\u5c0f\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5927\u3002\u95ee\u662f\u4e0d\u662f\u4e86\u89e3\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684 I/O \u6a21\u578b\uff0c\u4f8b\u5982\u591a\u8def\u590d\u7528\u3002</p> <p>\u95ee\u4e86 TCP \u56db\u6b21\u6325\u624b\u7684\u8fc7\u7a0b\u3002</p> <p>\u56e0\u4e3a\u5bf9\u6211\u7684\u89e3\u91ca\u5668\u6bd4\u8f83\u611f\u5174\u8da3\uff0c\u6240\u4ee5\u8ba9\u5199\u4e86\u4e00\u4e2a\u81ea\u7136\u6570\u56db\u5219\u8fd0\u7b97\u7684\u5904\u7406\u7a0b\u5e8f\u3002\u6ca1\u6709\u8003\u8651\u62ec\u53f7\u3002\uff08\u4f46\u662f\u6211\u611f\u89c9\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff09\uff09\uff09</p> \u6211\u7684\u7b54\u6848 <pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\nusing namespace std;\n\nint getInt(string &amp;expr, int &amp;index) {\nint currentInt = 0;\nbool isReadingInt = false;\nwhile (expr[index] &gt;= '0' &amp;&amp; expr[index] &lt;= '9') {\ncurrentInt = currentInt * 10 + expr[index] - '0';\nisReadingInt = true;\nindex++;\n}\nif (!isReadingInt)\nthrow \"Expected an integer, got \" + expr[index];\n\nreturn currentInt;\n}\n\n/* 0 - add, 1 - sub, 2 - mul, 3- div*/\nint getOp(string &amp;expr, int &amp;index) {\nindex++;\nswitch (expr[index - 1]) {\ncase '+':    return 0;\ncase '-':    return 1;\ncase '*':    return 2;\ncase '/':    return 3;\ndefault:\nthrow \"Expected an operation, got \" + expr[index];\n}\n}\n\ndouble calc(string &amp;expr) {\ndouble result = 0, currentValue = 0;\n\nint index = 0;\nint lastOp = 0;\n\nwhile (index &lt; expr.size()) {\ncurrentValue = getInt(expr, index);\nif (index == expr.size()) {\nresult += (lastOp == 0 ? 1 : -1) * currentValue;\nbreak;\n}\nchar currentOp = getOp(expr, index);\nif (currentOp &lt;= 1) {\nresult += (lastOp == 0 ? 1 : -1) * currentValue;\nlastOp = currentOp;\n}\nelse {\nwhile (index &lt; expr.size()) {\nint temp = getInt(expr, index);\nif (currentOp == 2)\ncurrentValue *= temp;\nelse {\nif (temp == 0) {\nthrow \"Divided by 0!\";\n}\ncurrentValue /= temp;\n}\n\nif (index == expr.size()) {\nresult += (lastOp == 0 ? 1 : -1) * currentValue;\nbreak;\n}\n\ncurrentOp = getOp(expr, index);\nif (currentOp &lt;= 1)    {\nresult += (lastOp == 0 ? 1 : -1) * currentValue;\nlastOp = currentOp;\nbreak;\n}\n}\n}\n}\n\nreturn result;\n}\n\nint main() {\nstring expr;\ncin &gt;&gt; expr;\ntry {\ncout &lt;&lt; calc(expr) &lt;&lt; endl;\n}\ncatch (const char *ex) {\ncout &lt;&lt; ex &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre> <p>\u540c\u65f6\u4e5f\u4ecb\u7ecd\u4e86\u7528\u6808\u89e3\u51b3\u7684\u601d\u8def\u3002</p> <p>\u95ee\u4e86\u5b9e\u4e60\u65f6\u95f4\u3002</p> <p>3.21 \u7684\u4e8c\u9762\u7ed3\u675f\u6773\u65e0\u97f3\u4fe1\uff0c\u76f4\u5230 4.25 \u7a81\u7136\u7ed9\u4e86 offer\u3002</p>"},{"location":"interviews/others/","title":"\u5176\u4ed6\u516c\u53f8","text":"<p> \u7ea6 212 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"interviews/others/#intel-\u7f16\u8bd1\u5668","title":"Intel \u7f16\u8bd1\u5668","text":"<p>\u975e\u5e38\u975e\u5e38\u8349\u7387\u2026\u2026\u6ca1\u6709\u9884\u7ea6\u5730\u6253\u7535\u8bdd\u3002</p>"},{"location":"interviews/others/#412-\u4e00\u9762","title":"4.12 \u4e00\u9762","text":"<p>\u5927\u6982\u5341\u5206\u949f\u3002</p> <p>\u95ee\u6df1\u641c\u548c\u5e7f\u641c\u7684\u533a\u522b\u3002\u95ee\u6709\u7528\u8fc7 DP \u5417\uff0c\u4ecb\u7ecd\u4e00\u4e0b\u3002\u8ba9\u8bb2\u541e\u5410\u91cf\u548c\u6d41\u6c34\u7ebf\u7684\u95ee\u9898\uff0c\u6211\u8bf4\u8fd8\u6ca1\u5b66\u3002\u95ee\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u7684\u8fc7\u7a0b\uff0c\u662f\u5982\u4f55\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u3002\u95ee\u4e86\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u662f\u5982\u4f55\u8f6c\u6362\u7684\u3002\u95ee\u4e86\u8fdb\u7a0b\u5207\u6362\u505a\u4e86\u4ec0\u4e48\u3002</p> <p>\u7136\u540e\u5c31\u300c\u8fd9\u8fb9\u7ed9\u4f60\u901a\u8fc7\u300d\u4e86\u3002\u8ff7\u60d1\u3002</p>"},{"location":"interviews/others/#413-\u4e8c\u9762","title":"4.13 \u4e8c\u9762","text":"<p>\u4e5f\u5927\u6982\u5341\u5206\u949f\u3002</p> <p>\u95ee\u662f\u4e0d\u662f\u5bf9\u7f16\u8bd1\u5668\u6709\u5174\u8da3\u3002\u95ee\u4e86\u8981\u4e0d\u8981\u8bfb\u7814\u3002</p> <p>\u4ecb\u7ecd\u4e86\u73b0\u5728\u6709\u4e24\u4e2a\u5b9e\u4e60\u751f\uff0c\u9879\u76ee\u548c LLVM \u7684\u5173\u7cfb\u6bd4\u8f83\u7d27\u5bc6\u3002</p> <p>\u5927\u6982\u4e86\u89e3\u4e86\u60c5\u51b5\uff0c\u300c\u8003\u8651\u4e00\u4e0b\u518d\u8054\u7cfb\u4f60\u300d\u3002</p> <p>\u7136\u540e\u5c31\u6ca1\u8054\u7cfb\u4e86 XD \u5927\u6982\u662f\u56e0\u4e3a\u65f6\u95f4\u4e0d\u5408\u9002\uff0c\u4ee5\u53ca\u6211\u4e0d\u4f1a LLVM\u3002</p>"},{"location":"interviews/overview/","title":"\u8ba8\u996d\u5386\u7a0b","text":"<p> \u7ea6 1436 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>\u56de\u987e\u4e00\u4e0b\u81ea\u5df1 2022 \u5e74\u627e\u6691\u671f\u5b9e\u4e60\u548c\u6295\u79cb\u62db\u7684\u5386\u7a0b\uff0c\u603b\u7ed3\u4e00\u4e0b\u5b58\u5728\u7684\u4e0d\u8db3\u4ee5\u53ca\u7528\u4eba\u5355\u4f4d\u5173\u6ce8\u54ea\u4e9b\u5185\u5bb9\u3002</p> <p>\u5173\u4e8e\u5b9e\u4e60\uff0c\u4e8c\u6708\u5e95\u4e09\u6708\u521d\u6295\u4e86\u82e5\u5e72\u4e92\u8054\u7f51\u548c\u6e38\u620f\u5382\uff0c\u56db\u6708\u521d\u5728 27rabbit \u5148\u751f\u7684\u6002\u607f\u4e0b\u6295\u4e86\u82e5\u5e72\u91cf\u5316\u516c\u53f8\u3002\u79cb\u62db\u671f\uff0c\u5728\u4e5d\u6708\u4e2d\u65ec\u8054\u7cfb\u4e86\u534e\u4e3a\u3001\u5b57\u8282\u3001\u8682\u8681\u7b49\uff0c\u5728\u4e5d\u6708\u5e95\u6295\u4e86\u82e5\u5e72\u91cf\u5316\u516c\u53f8\u3002</p> <p>\u5b9e\u4e60\u5f97\u5230\u4e86\u7f8e\u56e2 / \u8682\u8681 / \u5b57\u8282 / \u5353\u8bc6 / \u4e7e\u8c61 / \u601d\u52f0\u7684 offer\uff0c\u9009\u62e9\u4e86\u601d\u52f0\u3002</p> <p>\u79cb\u62db\u5f97\u5230\u4e86\u534e\u4e3a\uff08\u5e94\u8be5\u7b97\u5427\uff0c\u6bd5\u7adf\u804a\u5f97\u6bd4\u8f83\u597d\uff09 / \u5929\u738b\u661f / \u4e7e\u8c61\u7684 offer\uff0c\u9009\u62e9\u4e86\u4e7e\u8c61\u3002</p> <p>Note</p> <p>\u5982\u65e0\u7279\u6b8a\u8bf4\u660e\uff0c\u9762\u8bd5\u4e00\u573a\u90fd\u662f 1h\uff1b\u65f6\u957f\u4e0e\u6b64\u4e0d\u7b26\u7684\u4f1a\u5355\u72ec\u6ce8\u660e\u3002</p>"},{"location":"interviews/overview/#\u603b\u89c8","title":"\u603b\u89c8","text":""},{"location":"interviews/overview/#\u6691\u671f\u5b9e\u4e60","title":"\u6691\u671f\u5b9e\u4e60","text":""},{"location":"interviews/overview/#\u4e92\u8054\u7f51\u516c\u53f8","title":"\u4e92\u8054\u7f51\u516c\u53f8","text":"\u516c\u53f8 &amp; \u90e8\u95e8 / \u5c97\u4f4d \u7ed3\u679c \u4e00\u53e5\u8bdd\u603b\u7ed3 \u62fc\u591a\u591a \u670d\u52a1\u7aef \u6302\u4e86 \u9762\u8bd5\u5b98\u7ecf\u5e38\u8fdf\u5230\uff0c\u6709\u4e9b\u9762\u8bd5\u5b98\u611f\u89c9\u4e0d\u662f\u5f88\u6e05\u9192\u3002HR \u9762\u6302\u5f97\u83ab\u540d\u5176\u5999\u3002 \u7f8e\u56e2 \u8ba1\u7b97\u5f15\u64ce \u8fc7\u4e86 \u9762\u8bd5\u5b98\u5f88\u6709\u793c\u8c8c\uff0c\u6574\u4f53\u6c34\u5e73\u4e5f\u5728\u7ebf\u3002 \u8682\u8681 Java / C++ \u8fc7\u4e86 \u5bf9\u64cd\u4f5c\u7cfb\u7edf\u6bd4\u8f83\u5173\u6ce8\uff0c\u6c34\u5e73\u5728\u7ebf\u3002 \u534e\u4e3a \u7f16\u8bd1\u5668 \u4e0d\u89c1\u4e86 \u6574\u4f53\u9762\u8bd5\u5f88\u6c34\uff0c\u5de5\u8d44\u5f88\u5c11\uff0c\u8f6c\u6b63\u8bf4\u7684\u5f88\u6a21\u7cca\uff0c\u50cf\u517b\u9c7c\u3002 \u5b57\u8282 \u7f16\u8bd1\u6784\u5efa\u7ec4 \u8fc7\u4e86 \u9762\u8bd5\u5b98\u61c2\u5f88\u591a\uff0c\u5b66\u5230\u4e86\u5f88\u591a\u4e1c\u897f\uff01 Intel \u7f16\u8bd1\u76f8\u5173 \u4e0d\u89c1\u4e86 \u9762\u4e86\uff0c\u4f46\u662f\u597d\u50cf\u6ca1\u9762\u3002 <p>\u6e38\u620f\u516c\u53f8\u6295\u4e86\u7c73\u54c8\u6e38\u3001\u7f51\u6613\u96f7\u706b\u3001\u8389\u8389\u4e1d\u548c EA\u3002\u7c73\u54c8\u6e38\u88ab\u8868\u5237\u4e86\uff0c\u522b\u7684\u56e0\u4e3a\u592a\u665a\u5c31\u61d2\u5f97\u9762\u4e86\u3002</p>"},{"location":"interviews/overview/#\u91cf\u5316\u516c\u53f8","title":"\u91cf\u5316\u516c\u53f8","text":"\u516c\u53f8 \u7ed3\u679c \u4e00\u53e5\u8bdd\u603b\u7ed3 \u5353\u8bc6 \u8fc7\u4e86 \u95ee\u7684\u8fd8\u662f\u57fa\u7840\u77e5\u8bc6\u6bd4\u8f83\u591a\uff1b\u73b0\u5728\u770b\u6765\u7b54\u5f97\u4e0d\u597d\u3002\u4f46\u662f\u5b9e\u4e60\u8981\u6c42\u4e0d\u592a\u9ad8\u3002 \u4e7e\u8c61 \u8fc7\u4e86 \u597d\u591a\u7f16\u7a0b\u9898\u54c7\uff01\uff01 \u601d\u52f0 \u8fc7\u4e86 \u5bf9\u4e8e\u300c\u5b9e\u73b0\u300d\u662f\u6bd4\u8f83\u5173\u6ce8\u7684\u3002\u4e5f\u66b4\u9732\u51fa\u4e86\u6211\u8fd9\u65b9\u9762\u4e0d\u600e\u4e48\u4f1a\u7684\u95ee\u9898\u3002"},{"location":"interviews/overview/#\u79cb\u62db","title":"\u79cb\u62db","text":""},{"location":"interviews/overview/#\u91cf\u5316\u516c\u53f8_1","title":"\u91cf\u5316\u516c\u53f8","text":"<p>\u5f88\u591a\u662f\u627e\u730e\u5934\u63a8\u7684\u3002\u57fa\u672c\u60c5\u51b5\u662f\u5929\u738b\u661f\u5f88\u5feb\u51fa\u4e86\u7ed3\u679c\uff0c\u7136\u540e\u627e\u4e7e\u8c61\u90a3\u8fb9\u804a\u4e86\uff0c\u4e7e\u8c61\u5f88\u5feb\u7ed9\u5b89\u6392\u4e86\u540e\u7eed\u6d41\u7a0b\u5e76\u4e14\u53d1\u4e86 offer\u3002\u9009\u62e9\u4e86\u4e7e\u8c61\u4e4b\u540e\u5176\u4ed6\u7684\u9762\u8bd5\u5c31\u8349\u8349\u7ed3\u675f\u4e86\uff0c\u6240\u4ee5\u5f88\u591a\u6ca1\u6709\u540e\u7eed\u76f8\u5e94\u7684\u4e5f\u6ca1\u6709\u4e3b\u52a8\u53bb\u4e0b\u4e00\u6b65\u8054\u7cfb\uff1b\u6709\u4e00\u4e9b\u4e5f\u4e3b\u52a8\u8bf4\u660e\u4e86\u60c5\u51b5\u5e76\u4e14\u7ec8\u6b62\u4e86\u3002</p> \u516c\u53f8 \u7ed3\u679c \u4e00\u53e5\u8bdd\u603b\u7ed3 \u6cdb\u6001 \u6302\u4e86 \u5fd8\u4e86QWQ \u534e\u5747\u5e7f\u6c47 \u4e0d\u89c1\u4e86 \u5f88\u8bda\u6073\uff0c\u6709\u5f88\u591a\u5206\u4eab\uff0c\u804a\u9879\u76ee\u6bd4\u8f83\u591a\uff0c\u95ee\u7684\u95ee\u9898\u4e5f\u6bd4\u8f83\u7ec6\u3002 \u5bbd\u5fb7 \u4e0d\u89c1\u4e86 \u76f4\u63a5\u662f CTO \u9762\uff0c\u95ee\u7684\u95ee\u9898\u6bd4\u8f83\u7279\u522b\u3002 \u91cf\u6d3e \u4e0d\u89c1\u4e86 \u8003\u5bdf\u7684\u5185\u5bb9\u6bd4\u8f83\u57fa\u7840\u3002 \u4e7e\u8c61 \u8fc7\u4e86 \u6bd4\u8f83\u53cb\u5584\uff0c\u4ee3\u7801\u9898\u66f4\u591a\u4e00\u4e9b\u3002 \u5929\u738b\u661f \u8fc7\u4e86 \u7ed9\u5f97\u5c11\uff0cHR \u778e\u8bdd\u6bd4\u8f83\u591a\uff0c\u63d0\u51fa\u8d28\u7591\u4e4b\u540e\u76f4\u63a5\u4e0d\u7406\u6211\u4e86\u3002 \u5e0c\u683c\u65af \u6302\u4e86 \u7b14\u8bd5\u76f8\u5f53\u590d\u53e4\uff1b\u4f46\u662f\u7a0b\u5e8f\u586b\u7a7a\u9898\u786e\u5b9e\u6bd4\u76f4\u63a5\u7f16\u7a0b\u96be\u3002\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u95ee\u4e86\u8ba1\u7f51\u3002 Akuna \u6302\u4e86 \u9700\u8981\u6d0b\u6587\u4ea4\u6d41\uff0c\u5bf9\u6211\u6765\u8bf4\u592a\u96be\u4e50\u3002\u6bd4\u8f83\u770b\u91cd\u5b9e\u64cd\u3002 \u65e0\u6daf \u7ec8\u6b62 \u95ee\u7684\u5185\u5bb9\u4e5f\u6bd4\u8f83\u96f6\u6563\uff0c\u5370\u8c61\u4e0d\u592a\u6df1\u4e86\u3002 \u4f73\u671f \u6b7b\u5f97\u5f88\u60e8 \u7ec8\u9762\u957f\u8fbe 4h\uff0c\u5f88\u591a\u667a\u5546\u9898\uff0c\u57fa\u672c\u7b54\u4e0d\u51fa\u6765\u4ec0\u4e48\u3002"},{"location":"interviews/overview/#\u5176\u4ed6","title":"\u5176\u4ed6","text":"\u516c\u53f8 &amp; \u90e8\u95e8 / \u5c97\u4f4d \u7ed3\u679c \u4e00\u53e5\u8bdd\u603b\u7ed3 \u8682\u8681 \u5f15\u64ce \u6302\u4e86 \u66f4\u5173\u6ce8\u5bf9 offer \u7684\u9009\u62e9\u3002\u6ca1\u80fd\u8ba9\u5bf9\u65b9\u91cd\u5efa\u4fe1\u4efb\u3002 \u5b57\u8282 \u7f16\u8bd1\u6784\u5efa\u7ec4 \u6302\u4e86 \u4e00\u9762\u6ca1\u804a\u6280\u672f\uff0c\u4e8c\u9762\u804a\u7684\u90fd\u4e0d\u662f\u6211\u7684\u65b9\u5411\u3002 \u534e\u4e3a \u7f16\u7a0b\u8bed\u8a00 \u7b97\u662f\u8fc7\u4e86\uff1f \u9762\u8bd5\u5b98\u5f88\u5ba2\u6c14\uff0c\u4e5f\u6709\u5f88\u591a\u6536\u83b7\u3002\u5c31\u662f offer \u51fa\u7684\u592a\u6162\u4e86\u3002 \u5148\u4e34\u4e09\u7ef4 C++ \u8fc7\u4e86"},{"location":"interviews/overview/#\u65f6\u95f4\u7ebf","title":"\u65f6\u95f4\u7ebf","text":""},{"location":"interviews/overview/#\u6691\u671f\u5b9e\u4e60_1","title":"\u6691\u671f\u5b9e\u4e60","text":"<ul> <li>2.26 \u6295\u4e86\u62fc\u591a\u591a\u670d\u52a1\u7aef</li> <li>2.27 \u6295\u4e86\u7f8e\u56e2\u6570\u636e\u5f00\u53d1\u548c\u8682\u8681 Java</li> <li>3.2 \u6295\u4e86\u534e\u4e3a\u8f6f\u4ef6 IDE\uff08\u540e\u6765\u6539\u6210\u4e86\u7f16\u8bd1\uff09\u3001\u5b57\u8282\u7f16\u8bd1\u6784\u5efa\u7ec4\u3001\u7f51\u6613\u96f7\u706b\u3001\u7f51\u6613 C++\u3001\u7c73\u54c8\u6e38\u4e91\u6e38\u620f\u540e\u53f0\u3001\u8682\u8681 C++</li> <li>3.6 \u6295\u4e86 EA \u548c\u8389\u8389\u4e1d</li> <li>3.30 \u6295\u4e86\u5b57\u8282\u3001Intel\u3001JumpTrading</li> <li>4.8 \u6295\u4e86\u5353\u8bc6\u3001\u4e7e\u8c61\u3001\u6cdb\u6001\u3001\u601d\u52f0</li> </ul> \u65e5\u671f \u516c\u53f8 \u9879\u76ee 3.5 \u7f8e\u56e2 \u7b14\u8bd5 3.6 \u62fc\u591a\u591a \u7b14\u8bd5 3.10 \u8682\u8681 A \u4e00\u9762 3.14 \u62fc\u591a\u591a \u4e00\u9762 3.14 \u8682\u8681 \u7b14\u8bd5 3.15 \u7f8e\u56e2 \u4e00\u9762 3.17 \u8682\u8681 B \u4e00\u9762 3.18 \u8682\u8681 A \u4e8c\u9762 3.20 \u62fc\u591a\u591a \u4e8c\u9762 3.21 \u7f8e\u56e2 \u4e8c\u9762 3.22 \u62fc\u591a\u591a \u4e09\u9762\uff08\u4e3b\u7ba1\u9762\uff09 3.23 \u534e\u4e3a \u7b14\u8bd5 3.23 \u8682\u8681 A HR \u9762 3.31 \u62fc\u591a\u591a HR \u9762 4.6 \u5b57\u8282 \u4e00\u9762 4.7 \u534e\u4e3a \u4e00\u4e8c\u9762 4.7 \u5b57\u8282 \u4e8c\u9762 4.12 Intel \u4e00\u9762 4.13 Intel \u4e8c\u9762 4.13 \u5353\u8bc6 4.13 \u4e7e\u8c61 4.15 \u5b57\u8282 \u4e09\u9762 4.18 \u5b57\u8282 HR\u9762 4.18 \u601d\u52f0 \u7b14\u8bd5 4.19 \u601d\u52f0 \u4e00\u4e8c\u9762"},{"location":"interviews/overview/#\u79cb\u62db_1","title":"\u79cb\u62db","text":"<ul> <li>9.14 \u8682\u8681\u90a3\u8fb9\u95ee\u8981\u4e0d\u8981\u9762\uff0c9.17 \u8bf4\u53ef\u4ee5</li> <li>9.19 \u95ee\u4e86\u5b57\u8282\u548c\u534e\u4e3a\u7684 HR \u8fd8\u6709\u6ca1\u6709\u673a\u4f1a\uff0c\u8ba9 HR \u635e\u4e00\u4e0b</li> <li>9.29 \u5f00\u59cb\u9646\u7eed\u6295\u4e86\u4e00\u4e9b\u91cf\u5316\uff0c\u5e76\u627e\u4e86\u730e\u5934\u5e2e\u6211\u6295\u91cf\u5316</li> </ul> \u65e5\u671f \u516c\u53f8 \u9879\u76ee 9.21 \u8682\u8681 \u4e00\u9762\uff08\u6280\u672f\uff09 9.22 \u5b57\u8282 \u4e00\u9762 9.26 \u534e\u4e3a \u4e00\u4e8c\u9762\uff08\u6280\u672f\uff09 9.27 \u5b57\u8282 \u4e8c\u9762 9.30 \u534e\u4e3a \u4e09\u9762\uff08\u6280\u672f\u4e3b\u7ba1\uff09 10.7 \u5929\u738b\u661f \u4e00\u9762\uff08HR\uff09 10.7 \u91cf\u6d3e \u7b14\u8bd5 10.7 Akuna \u7b14\u8bd5 10.9 \u5929\u738b\u661f \u4e8c\u9762\uff08\u6280\u672f\uff09 10.9 \u6cdb\u6001 \u7b14\u8bd5 10.10 \u4e7e\u8c61 \u4e00\u9762\uff08\u6280\u672f+HR\uff09 10.10 \u5148\u4e34\u4e09\u7ef4 \u7b14\u8bd5 10.11 \u5e0c\u683c\u65af \u7b14\u8bd5 10.11 \u5929\u738b\u661f \u4e09\u9762\uff08\u4e3b\u7ba1\uff09 10.11 \u6cdb\u6001 \u4e00\u9762 10.12 \u4e7e\u8c61 \u4e8c\u9762\uff08HM\uff09 10.13 \u534e\u5747\u5e7f\u6c47 \u4e00\u9762\uff08HR\uff09 10.14 \u5148\u4e34\u4e09\u7ef4 \u4e00\u9762\uff08\u6280\u672f\uff09 10.14 \u5bbd\u5fb7 \u7b14\u8bd5 10.15 \u6469\u6839\u58eb\u4e39\u5229 \u7b14\u8bd5 10.17 \u65e0\u6daf \u4e00\u9762\uff08HR\uff09 10.19 \u91cf\u6d3e \u4e00\u9762 10.20 \u534e\u5747\u5e7f\u6c47 \u4e8c\u9762 10.20 \u65e0\u6daf \u4e8c\u9762 10.21 Akuna \u4e00\u9762 10.21 \u65e0\u6daf \u4e09\u9762\uff08\u4ee3\u7801\uff09 10.24 \u5148\u4e34\u4e09\u7ef4 \u4e8c\u9762\uff08\u804a\u5929\uff09 10.26 \u4f73\u671f \u4e00\u9762 10.27 \u5bbd\u5fb7 CTO\u9762 10.28 \u5e0c\u683c\u65af \u9762\u8bd5 10.30 \u534e\u4e3a \u786e\u8ba4\u540d\u989d 10.31 \u5bbd\u5fb7 HR\u6c9f\u901a 11.4 \u534e\u5747\u5e7f\u6c47 \u4e09\u9762 11.7 \u534e\u5747\u5e7f\u6c47 \u6c9f\u901a 11.9 \u4f73\u671f \u4e8c\u9762 11.15 \u4f73\u671f \u7ec8\u9762"},{"location":"interviews/pdd/","title":"\u62fc\u591a\u591a \u670d\u52a1\u7aef","text":"<p> \u7ea6 2722 \u4e2a\u5b57  191 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>98 \u770b\u5230\u7684\u3002\u7b2c\u4e00\u4e2a\u6295\u7684\uff0c\u4e5f\u6ca1\u60f3\u53bb\uff0c\u4e3b\u8981\u662f\u60f3\u79ef\u6512\u4e00\u70b9\u7b14\u8bd5\u548c\u9762\u8bd5\u7ecf\u9a8c\u3002</p> <p>2.26 \u6295\u7684\uff0c2.27 \u505a\u4e86\u4e2a\u6027\u6d4b\u8bd5\uff0c\u9898\u5f88\u591a\u5f88\u70e6\u4eba\u3002</p>"},{"location":"interviews/pdd/#36-\u7b14\u8bd5","title":"3.6 \u7b14\u8bd5","text":"<p>\u5b89\u6392\u4e86 3.6 \u7684\u7b14\u8bd5\uff0c120 \u5206\u949f\uff0c4 \u4e2a\u9898\uff0c\u53ef\u4ee5\u7528\u81ea\u5df1\u7684 IDE\uff0c\u662f\u5728\u725b\u5ba2\u7f51\u8fdb\u884c\u7684\u3002</p> <p>T1 5\u5206\u949f\uff0cT2 10\u5206\u949f\uff0cT4 \u5199\u4e86 45 \u5206\u949f\uff0cT3 \u6ca1\u505a\u51fa\u6765\uff0c\u5269\u5341\u5206\u949f\u7684\u65f6\u5019\u4e0d\u60f3\u505a\u4e86\u3002</p>"},{"location":"interviews/pdd/#t1","title":"T1","text":"<p>\u5b57\u7b26\u4e32\u7f16\u7801\uff0c\u8f93\u5165\u5f62\u5982 <code>aaaaaaaaaaBBBCddddDDDaa</code>\uff0c\u8f93\u51fa\u5f62\u5982 <code>10a3B1C4d3D2a</code>\u3002</p> \u6211\u7684\u7b54\u6848 <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nint main() {\nstring s;\ncin &gt;&gt; s;\nvector&lt;pair&lt;int, char&gt;&gt; v;\nchar last = s[0];\nint cnt = 0;\nfor (auto c : s) {\nif (c == last)  cnt++;\nelse {\nv.push_back(make_pair(cnt, last));\nlast = c;\ncnt = 1;\n}\n}\nif (cnt)    v.push_back(make_pair(cnt, last));\n\nfor (auto &amp;i : v)\ncout &lt;&lt; i.first &lt;&lt; i.second;\n\nreturn 0;\n}\n</code></pre>"},{"location":"interviews/pdd/#t2","title":"T2","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 S\uff0c\u53ef\u4ee5\u505a\u4e24\u79cd\u64cd\u4f5c\u4e4b\u4e00\uff1aS + R(S) \u6216 R(S) + S\uff0c\u5176\u4e2d + \u662f\u5b57\u7b26\u4e32\u62fc\u63a5\uff0cR(S) \u662f\u5b57\u7b26\u4e32\u9006\u8f6c\u3002\u6c42\u7ed9\u5b9a S \u548c\u64cd\u4f5c\u6b21\u6570 k\uff0cS \u6070\u597d\u7ecf\u8fc7 k \u6b21\u64cd\u4f5c\u540e\u53ef\u80fd\u7684\u7ed3\u679c\u6570\u76ee\u3002\u8f93\u5165 T(~100) \u8868\u793a\u8be2\u95ee\u7ec4\u6570\uff0c\u6bcf\u7ec4\u8be2\u95ee\u5305\u542b k, l, str\uff0c\u5176\u4e2d k(0~\u591a\u5c11\u5fd8\u4e86) \u8868\u793a\u64cd\u4f5c\u6b21\u6570\uff0cl \u8868\u793a\u5b57\u7b26\u4e32\u957f\u5ea6\uff0cstr \u662f\u5b57\u7b26\u4e32\u3002</p> <p>\u4f8b\u5982 aabb \u7ecf\u8fc7\u4e00\u6b21\u53d8\u6362\u53ef\u4ee5\u53d8\u6210 aabbbbaa \u6216\u8005 bbaaaabb\uff0c\u518d\u7ecf\u8fc7\u4e00\u6b21\u53d8\u6362\u53ef\u4ee5\u53d8\u6210 aabbbbaaaabbbbaa \u6216\u8005 bbaaaabbbbaaaabb\uff0c\u56e0\u6b64 k = 2, str = aabb \u65f6\u5e94\u5f53\u8f93\u51fa 2\u3002</p> <p>\u9898\u76ee\u4fdd\u8bc1\u7ed3\u679c\u4e0d\u8d85\u8fc7 1,000,000,000\u3002</p> \u6211\u7684\u7b54\u6848 <p>\u5bb9\u6613\u8bc1\u660e R(R(S) + S) = R(S) + S, R(S + R(S)) = S + R(S),  \u6240\u4ee5\u53ea\u8981\u4e0d\u662f\u56de\u6587\u4e32\u800c\u4e14\u53d8\u8fc7\u90a3\u5c31\u662f 2</p> <p>\u6216\u8005\u8bf4\uff0cS + R(S) \u548c R(S) + S \u90fd\u662f\u56de\u6587\u4e32\uff0c\u800c\u5bf9\u4e8e\u4efb\u610f\u56de\u6587\u4e32 T\uff0cR(T) = T</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nbool check(string &amp;str) {\nint left = 0, right = str.size() - 1;\nwhile (left &lt; right) {\nif (str[left] != str[right])\nreturn false;\nleft++;\nright--;\n}\nreturn true;\n}\n\nint main() {\nint t, k, l;\nstring str;\n\ncin &gt;&gt; t;\nwhile (t--) {\ncin &gt;&gt; k &gt;&gt; l &gt;&gt; str;\nif (!k || check(str))      cout &lt;&lt; 1 &lt;&lt; endl;\nelse                        cout &lt;&lt; 2 &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre>"},{"location":"interviews/pdd/#t3","title":"T3","text":"<p>\u591a\u591a\u548c\u76ae\u76ae\u867e\u6253\u67b6\uff0c\u5206\u522b\u6709 N(~100000) \u548c M(~100000) \u652f\u519b\u961f\uff0c\u6bcf\u652f\u519b\u961f\u6709\u653b\u51fb\u529b a(~10000) \u548c\u9632\u5fa1\u529b d(~10000)\u3002\u6bcf\u6b21\u53cc\u65b9\u5404\u6d3e\u51fa\u4e00\u652f\u519b\u961f\u4ea4\u6218\uff0c\u5982\u679c\u4e00\u65b9\u653b\u51fb\u5927\u4e8e\u7b49\u4e8e\u5bf9\u65b9\u9632\u5fa1\uff0c\u5219\u8be5\u65b9\u653b\u51fb\u6210\u529f\uff0c\u5bf9\u65b9\u9632\u5fa1\u5931\u8d25\u3002\u56e0\u6b64\u6bcf\u6b21\u4ea4\u6218\u7684\u7ed3\u679c\u53ef\u80fd\u6709 4 \u79cd\u3002\u519b\u961f\u4e0d\u80fd\u91cd\u590d\u4f7f\u7528\u3002</p> <p>\u73b0\u5728\u8981\u6c42\u5bfb\u627e\u4e00\u79cd\u4ea4\u6218\u7b56\u7565\uff0c\u4f7f\u5f97\u591a\u591a\u5728\u653b\u51fb\u6210\u529f\u76ae\u76ae\u867e\u7684\u6240\u6709\u519b\u961f\u7684\u524d\u63d0\u4e0b\uff0c\u6709\u6700\u5927\u53ef\u80fd\u7684\u9632\u5fa1\u6210\u529f\u6b21\u6570\uff0c\u8f93\u51fa\u8fd9\u4e2a\u503c\u3002\u5982\u679c\u4e0d\u5b58\u5728\u4ea4\u6218\u7b56\u7565\u4f7f\u5f97\u591a\u591a\u80fd\u653b\u51fb\u6210\u529f\u76ae\u76ae\u867e\u7684\u6240\u6709\u519b\u961f\uff0c\u8f93\u51fa -1\u3002</p> \u56de\u987e <p>\u7406\u89e3\u9519\u9898\u610f\u4e86\uff0c\u6240\u4ee5\u53ea\u5f97\u4e86 50% \u7684\u5206\uff09\u4e0d\u60f3\u770b\u4e86 \u53cd\u6b63\u662f\u8d2a\u5fc3</p> <p>\u6ca1\u6709\u5730\u65b9\u63d0\u4ea4\uff0c\u6240\u4ee5\u4e0d\u60f3\u81ea\u5df1\u505a\u4e86\uff0c\u505a\u4e86\u4e5f\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9 XD</p>"},{"location":"interviews/pdd/#t4","title":"T4","text":"<p>\u6709 T(~100) \u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u5305\u542b 2 \u884c\uff0c\u6bcf\u884c 6 \u4e2a\u6570\uff0c\u5206\u522b\u8868\u793a\u4e00\u4e2a\u9ab0\u5b50\u7684\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u3001\u524d\u3001\u540e\u56db\u4e2a\u9762\u4e0a\u7684\u70b9\u6570\u3002\u6211\u4eec\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5bf9\u9ab0\u5b50\u505a 4 \u79cd\u65cb\u8f6c\u4e4b\u4e00\uff1a</p> <ul> <li>\u5de6\u3001\u53f3\u4e0d\u52a8\uff0c\u5411\u4e0a\u65b9\u65cb\u8f6c\u4e00\u6b21\uff0c\u5373\u539f\u6765\u7684\u524d\u9762\u53d8\u6210\u4e0a\u9762\uff0c\u4e0b\u9762\u53d8\u6210\u524d\u9762\u7b49</li> <li>\u8fd9\u79cd\u65cb\u8f6c\u53cd\u8fc7\u6765\uff0c\u5373\u5de6\u3001\u53f3\u4e0d\u52a8\uff0c\u539f\u6765\u7684\u4e0a\u9762\u53d8\u6210\u524d\u9762\u7b49</li> <li>\u524d\u3001\u540e\u4e0d\u52a8\uff0c\u5411\u53f3\u8fb9\u65cb\u8f6c\u4e00\u6b21\uff0c\u5373\u539f\u6765\u7684\u4e0a\u9762\u53d8\u6210\u53f3\u9762\u7b49</li> <li>\u8fd9\u79cd\u65cb\u8f6c\u53cd\u8fc7\u6765\uff0c\u5373\u524d\u3001\u540e\u4e0d\u52a8\uff0c\u539f\u6765\u7684\u53f3\u9762\u53d8\u6210\u4e0a\u9762\u7b49</li> </ul> <p>\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0c\u627e\u5230\u64cd\u4f5c\u6570\u6700\u5c0f\u7684\u65b9\u6848\u4f7f\u5f97\u8f93\u5165\u7684\u4e24\u4e2a\u9ab0\u5b50\u53d8\u6210\u4e00\u6837\u7684\uff0c\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u7684\u64cd\u4f5c\u6570\u3002\u5982\u679c\u4e0d\u53ef\u80fd\u53d8\u6210\u4e00\u6837\u7684\uff0c\u5219\u8f93\u51fa -1\u3002</p> \u6211\u7684\u7b54\u6848 <p>\u4e00\u4e2a\u9ab0\u5b50\u53ea\u6709 24 \u79cd\u53ef\u80fd\u7684\u4f4d\u7f6e\uff0c\u5373 6 \u4e2a\u4e0d\u540c\u7684\u70b9\u6570\u5411\u4e0a\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u79cd\u60c5\u51b5\u524d\u540e\u5de6\u53f3\u53ef\u4ee5\u8f6c 4 \u6b21\uff0c\u603b\u5171 24 * 6 \u79cd\u3002\u56e0\u6b64\u53ef\u4ee5 BFS\u3002</p> <p>\u6ce8\u610f\u5230\u6839\u636e\u4e24\u4e2a\u76f8\u90bb\u9762\u7684\u70b9\u6570\u5c31\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u9ab0\u5b50\u7684\u4f4d\u7f6e\u72b6\u6001\uff0c\u56e0\u6b64\u6211\u4eec\u7528 visited[7][7] \uff08\u5176\u5b9e\u53ef\u4ee5\u7528 [6][6]\uff09\u8bb0\u5f55\u4e00\u79cd\u72b6\u6001\u662f\u5426\u88ab\u8003\u8651\u8fc7\u3002</p> <p>\u6ca1\u6709\u592a\u6ce8\u610f\u4e00\u4e9b\u4f18\u5316\uff0c\u56e0\u4e3a\u80fd\u8fc7\uff0c\u6ca1\u5fc5\u8981\uff09</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\nint a[6], b[6];\n\nbool isEqual(vector&lt;int&gt; &amp;v) {\nfor (int i = 0; i &lt; 6; i++)\nif (v[i] != b[i])   return false;\nreturn true;\n}\n\nconst int ro[4][6] = {{4, 5, 2, 3, 1, 0},\n{5, 4, 2, 3, 0, 1},\n{2, 3, 1, 0, 4, 5},\n{3, 2, 0, 1, 4, 5}};\n\nint solve() {\nvector&lt;int&gt; v;\nqueue&lt;pair&lt;int, vector&lt;int&gt;&gt;&gt; q;\nfor (auto i : a)    v.push_back(i);\nq.push(make_pair(0, v));\n\nbool visited[7][7] = {false};    // 1, 2\nvisited[v[1]][v[2]] = true;\n\nwhile (!q.empty()) {\nif (isEqual(q.front().second))      return q.front().first;\nfor (const auto &amp; i : ro) {\nvector&lt;int&gt; tmp;\nfor (auto j : i)\ntmp.push_back(q.front().second[j]);\nif (visited[tmp[1]][tmp[2]])    continue;\nvisited[tmp[1]][tmp[2]] = true;\nq.push(make_pair(q.front().first + 1, tmp));\n}\nq.pop();\n}\n\nreturn -1;\n}\n\nint main() {\nint t;\ncin &gt;&gt; t;\nwhile (t--) {\nfor (int &amp; i : a)     cin &gt;&gt; i;\nfor (int &amp; i : b)     cin &gt;&gt; i;\ncout &lt;&lt; solve() &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre>"},{"location":"interviews/pdd/#314-\u4e00\u9762","title":"3.14 \u4e00\u9762","text":"<p>\u9762\u8bd5\u5b98\u8fdf\u5230\u4e86\u5feb\u4e94\u5206\u949f\uff0c\u975e\u5e38\u7684\u795e\u5947\u3002</p> <p>\u521a\u5f00\u59cb\u662f\u4e00\u4e2a\u81ea\u6211\u4ecb\u7ecd\u3002</p> <p>\u8ba9\u4ecb\u7ecd\u4e00\u4e2a\u9879\u76ee\uff0c\u4ee5\u53ca\u5b66\u4e60\u5230\u7684\u4e1c\u897f\u3002\u8bb2\u4e86\u53bb\u5e74\u5e74\u5e95\u5230\u4eca\u5e74\u5e74\u521d\u505a\u7684\u5316\u5de5\u6a21\u62df\u9879\u76ee\u3002\uff08\u9762\u8bd5\u5b98\u6781\u5ea6\u7ea0\u7ed3\u8fd9\u4e2a\u9879\u76ee\u4e3a\u4ec0\u4e48\u8981\u505a\u3001\u4e3a\u4ec0\u4e48\u8981\u7528 Qt\u3001\u8fd9\u4e9b\u5316\u5b66\u53cd\u5e94\u7684\u6a21\u62df\u5230\u5e95\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u611f\u89c9\u4ed6\u4e0d\u592a\u6e05\u9192\u3002\uff09</p> <p>\u8ffd\u95ee\uff1a\u5047\u8bbe\u9700\u8981\u589e\u52a0\u4e00\u79cd\u53cd\u5e94\u7684\u6a21\u62df\uff0c\u5e94\u8be5\u600e\u4e48\u6539\u4ee3\u7801\u3002\u6211\u7406\u89e3\u4ed6\u5e94\u8be5\u662f\u60f3\u95ee\u7ee7\u627f\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u5c31\u8bf4\u65b0\u589e\u4e00\u79cd reactor \u5c31\u4ece\u57fa\u7c7b\u65b0\u6d3e\u751f\u4e00\u4e2a\u5bf9\u8c61\u5c31\u884c\u4e86\u3002</p> <p>\u95ee C++ \u548c\u522b\u7684\u8bed\u8a00\u6709\u4ec0\u4e48\u533a\u522b\u3002\u5f88\u65b0\u5947\u7684\u95ee\u9898\uff0c\u5927\u6982\u8bf4\u4e86 C++ \u6ca1\u6709\u5355\u6839\u7ed3\u6784\u3001C++ \u6bd4\u522b\u7684\u9ad8\u7ea7\u8bed\u8a00\u66f4\u81ea\u7531\u4e00\u4e9b\uff0c\u6240\u4ee5\u53ef\u4ee5\u505a\u66f4\u591a\u7684\u4e8b\uff0c\u5bf9\u5e94\u5730\u4e5f\u9700\u8981\u66f4\u591a\u5b89\u5168\u7684\u5173\u6ce8\u3002</p> <p>\u95ee\u4e86\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u3002\u8ffd\u95ee\u4e86\u5f88\u591a\uff1b\u611f\u89c9\u8bf4\u7684\u5e76\u4e0d\u662f\u975e\u5e38\u7684\u5230\u4f4d\uff0c\u56de\u5934\u518d\u5b66\u4e00\u4e0b\u3002</p> <p>\u95ee\u4e86 override \u548c overload \u7684\u533a\u522b\u3002</p> <p>\u95ee\u4e86\u52a8\u6001\u94fe\u63a5\u7684\u5b9e\u73b0\u3002\u4e0d\u4f1a\uff0c\u731c\u4e86\u4e00\u4e0b\u3002</p> <p>\u8ba9\u5199\u4e86\u4e00\u4e2a\u9898\uff0c\u7ed9\u4e00\u4e2a\u5b57\u7b26\u4e32\u8868\u793a\u7684\u6574\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a int\uff0c\u5185\u5bb9\u4e3a\u5b57\u7b26\u4e32\u8868\u793a\u7684\u6574\u6570\u3002</p> \u6211\u7684\u89e3\u6cd5 <p>\u53d1\u73b0\u4e0d\u592a\u4f1a\u7528 exception\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nint str2int(const std::string &amp;str) {\nint i = 0, result = 0;\n\nwhile (i &lt; str.size() &amp;&amp; (str[i] == ' ' || str[i] == '\\t' || str[i] == '\\n'))\ni++;\n\nif (i == str.size()) {\nthrow \"The input is empty\";\n}\n\nint negFlag = 1;\nif (str[i] == '-')  {\nnegFlag = -1;\ni++;\n}\n\nwhile (str[i] &gt;= '0' &amp;&amp; str[i] &lt;= '9') {\nresult = result * 10 + str[i] - '0';\nif (result &lt; 0) {\nthrow \"The integer is too large\";\n}\n\ni++;\nif (i == str.size()) {\nreturn negFlag * result;\n}\n}\n\nwhile (i &lt; str.size() &amp;&amp; (str[i] == ' ' || str[i] == '\\t' || str[i] == '\\n'))\ni++;\n\nif (i == str.size()) {\nreturn negFlag * result;\n}\n\nthrow \"The string is not an integer\";\n\nreturn 0;\n}\n\nint main() {\nstd::string cases[] = {\"0\", \"123\", \"-123\", \"1.1\", \"  12345  \", \"  -123456   \",\n\"11111111111111111111111111\", \"-11111111111111111111111111\"};\n\nfor (auto &amp;str : cases) {\ntry {\nint result = str2int(str);\nstd::cout &lt;&lt; result &lt;&lt; std::endl;\n} catch (const char *ex) {\nstd::cout &lt;&lt; ex &lt;&lt; std::endl;\n}\n}\n\nreturn 0;\n}\n</code></pre>"},{"location":"interviews/pdd/#320-\u4e8c\u9762","title":"3.20 \u4e8c\u9762","text":"<p>\u9762\u8bd5\u5b98\u628a\u6211\u5fd8\u4e86\uff0c\u6362\u4e86\u4e00\u4e2a\u65f6\u95f4\u3002\u54c1\u4f4d\u548c\u7d20\u517b\u90fd\u5f88\u5dee\u3002</p> <p>\u521a\u5f00\u59cb\u8fd8\u662f\u81ea\u6211\u4ecb\u7ecd\u3002</p> <p>\u95ee\u4e86\u77e5\u9053\u4ec0\u4e48\u6392\u5e8f\u7b97\u6cd5\u3002\u95ee\u4e86\u5f52\u5e76\u7b97\u6cd5\u7684\u539f\u7406\uff0c\u8ba9\u5199\u4e86\u4e00\u4e0b\u3002</p> \u6211\u7684\u89e3\u6cd5 <p>\u786e\u5b9e\u6ca1\u5199\u8fc7QAQ</p> <pre><code>void sort(int array[], int n) {\nif (n == 1) return;\n\nint mid = n / 2;\nsort(array, mid);\nsort(array + mid, n - mid);\n\nint i = 0, j = mid;\n\nstd::vector&lt;int&gt; temp;\nwhile (i &lt; mid &amp;&amp; j &lt; n) {\nif (array[i] &lt; array[j])\ntemp.push_back(i++);\nelse\ntemp.push_back(j++);\n}\nwhile (i &lt; mid)\ntemp.push_back(i++);\nwhile (j &lt; n)\ntemp.push_back(j++);\n\nfor (int k = 0; k &lt; n; k++)\narray[k] = temp[k];\n}\n</code></pre> <p>\u95ee\u5bf9 SQL \u719f\u4e0d\u719f\u6089\uff0c\u6211\u8bf4\u57fa\u672c\u77e5\u9053\uff0c\u4e0d\u4fdd\u8bc1\u719f\u6089\uff0c\u4ed6\u8bf4\u90a3\u5c31\u5148\u653e\u540e\u9762\u4e00\u70b9\u3002</p> <p>\u95ee\u5bf9 C++ \u6216\u8005 Java \u6709\u6ca1\u6709\u7a0d\u5fae\u900f\u5f7b\u4e86\u89e3\u4e00\u70b9\u7684\u3002\u6211\u8bf4\u5bf9 C \u6bd4\u8f83\u4e86\u89e3\uff0c\u95ee\u4ed6\u5bf9\u4e86\u89e3\u7684\u8981\u6c42\u662f\u4ec0\u4e48\u6837\u7684\u3002\u4ed6\u4e3e\u4f8b\u95ee\u6211 C++ \u7684\u865a\u51fd\u6570\u8868\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u8ffd\u95ee\u4e86\u865a\u51fd\u6570\u8868\u662f\u548c\u7c7b\u7ed1\u5b9a\u7684\u8fd8\u662f\u548c\u5bf9\u8c61\u7ed1\u5b9a\u7684\u3002</p> <p>\u95ee\u662f\u4e0d\u662f\u4e86\u89e3\u667a\u80fd\u6307\u9488\u3002\u6211\u4ecb\u7ecd\u4e86 shared_ptr\uff0c\u56e0\u4e3a\u522b\u7684\u6ca1\u7528\u8fc7\u3002</p> <p>\u95ee\u5b66\u6ca1\u5b66\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u3002\u95ee\u4e86\u7ebf\u7a0b\u7684\u540c\u6b65\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\u3002\u95ee\u4e86\u64cd\u4f5c\u7cfb\u7edf\u6709\u54ea\u4e9b\u5bf9\u8c61\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u540c\u6b65\uff0c\u6211\u8bf4\u6211\u6ca1\u5199\u8fc7\u591a\u7ebf\u7a0b\u3002</p> <p>\u95ee\u5bf9 Java \u4e86\u89e3\u7a0b\u5ea6\u600e\u4e48\u6837\uff0c\u95ee\u77e5\u4e0d\u77e5\u9053 Java \u7684 GC\uff0c\u6211\u8bf4\u4e0d\u77e5\u9053\u3002</p> <p>\u95ee C++ \u7684 <code>delete</code> \u548c <code>delete[]</code> \u7684\u533a\u522b\u3002\u4ed6\u58f0\u79f0\u662f\u6709\u6ca1\u6709\u8c03\u7528\u6790\u6784\u51fd\u6570\u7684\u533a\u522b\u3002\u4f46\u662f\u4ed6\u8bf4\u7684\u597d\u50cf\u662f\u9519\u7684\uff0c\u4e0d\u914d\u5bf9\u7684\u4f7f\u7528\u5c31\u662f UB\u3002</p>"},{"location":"interviews/pdd/#322-\u4e09\u9762\u6280\u672f\u4e3b\u7ba1\u9762","title":"3.22 \u4e09\u9762\uff08\u6280\u672f\u4e3b\u7ba1\u9762\uff09","text":"<p>\u95ee\u4e86\u524d\u4e24\u9762\u7684\u9762\u8bd5\u5b98\u8ba9\u5199\u4e86\u4ec0\u4e48\u4ee3\u7801\uff0c\u4f46\u662f\u6211\u5fd8\u4e86\u3002</p> <p>\u7ed9\u4e86\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\uff0c\u8ba9\u5199 LCA\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\u3002\u6211\u5199\u4e86 <code>find_path(node)</code> \u7528 dfs \u627e root \u5230 node \u7684 path\uff0c\u7136\u540e\u7528 path \u6bd4\u8f83\u3002</p> <p>\u8ba9\u8bb2\u4e86\u4e00\u4e0b\u81ea\u5df1\u5199\u8fc7\u7684\u4ee3\u7801\uff0c\u8ba9\u8bb2\u4e86\u4e00\u4e0b\u9047\u5230\u4e86\u54ea\u4e9b\u95ee\u9898\u548c\u96be\u70b9\uff0c\u5982\u4f55\u89e3\u51b3\u7684\u3002\u8bb2\u4e86 MUA \u89e3\u91ca\u5668\u91cc\u5b9e\u73b0\u95ed\u5305\u3002\u8ba8\u8bba\u4e86\u4e00\u4e9b\u4f46\u662f\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48\u8425\u517b\u3002\u7136\u540e\u4ecb\u7ecd\u4e86\u5316\u5de5\u7684\u90a3\u4e2a\u5de5\u7a0b\uff0c\u96be\u70b9\u5728\u4e8e\u5728\u5927\u91cf\u591a\u6001\u7684\u73af\u5883\u4e0b\u68b3\u7406\u8c03\u7528\u94fe\u3001\u5185\u5b58\u6cc4\u6f0f\u3001\u51fd\u6570\u5f0f\u5199\u6cd5\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 debug \u68b3\u7406\u8c03\u7528\u94fe\uff0c\u7528\u667a\u80fd\u6307\u9488\u89e3\u51b3\u5185\u5b58\u6cc4\u6f0f\uff0c\u7528 lambda \u5f53\u4e00\u7b49\u51fd\u6570\u3002</p> <p>\u95ee\u4e86\u4e3a\u4ec0\u4e48\u8981\u7528\u591a\u6001\u3002\u95ee\u6709\u6ca1\u6709\u505a\u8fc7\u5199\u63a5\u53e3\u7ed9\u522b\u4eba\u7528\u7684\u9700\u6c42\uff0c\u5982\u679c\u6709\u7684\u8bdd\u53ef\u80fd\u4f1a\u5bf9\u591a\u6001\u7406\u89e3\u6df1\u523b\u4e00\u70b9\u3002</p> <p>\u95ee\u6709\u6ca1\u6709\u7528\u8fc7\u9759\u6001\u94fe\u63a5\u5e93\u548c\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u6211\u8bf4\u6ca1\u7528\u8fc7\u3002</p> <p>\u95ee\u5bf9\u7f51\u7edc\u6216\u8005\u64cd\u4f5c\u7cfb\u7edf\u6709\u6ca1\u6709\u5b66\u7684\u597d\u4e00\u70b9\u7684\u3002\u6211\u8bf4\u4e86\u7f51\u7edc\u3002\u4ed6\u95ee\u7f51\u7edc\u7684\u5206\u5c42\u8bbe\u8ba1\u662f\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8bbe\u8ba1\u7684\u3002\u6211\u5927\u6982\u4ecb\u7ecd\u4e86\u4e00\u4e0b\u8fd9\u51e0\u5c42\u662f\u5e72\u4ec0\u4e48\u7684\u3002</p> <p>\u95ee\u4e86\u548c\u522b\u7684\u540c\u5b66\u76f8\u6bd4\u7684\u4f18\u70b9\u548c\u5f31\u9879\u3002\u6211\u4ecb\u7ecd\u4e86\u5f31\u9879\u662f\uff0c\u867d\u7136\u5728\u4fe1\u606f\u5b89\u5168\u4f46\u662f\u5bf9\u5b89\u5168\u6ca1\u6709\u592a\u5927\u5174\u8da3\uff0c\u53e6\u5916\u6ca1\u6709\u7279\u522b\u4e13\u7cbe\u7684\u9879\u76ee\u3002\u4f18\u52bf\u662f\uff0c\u57fa\u7840\u77e5\u8bc6\u6bd4\u8f83\u624e\u5b9e\uff0c\u56e0\u4e3a\u6210\u7ee9\u9ad8\u3001\u6709\u7b14\u8bb0\u3001\u5e26\u670b\u8f88\u8f85\u5b66\uff0c\u53e6\u5916\u7f16\u7a0b\u65b9\u9762\u6bd4\u5927\u5bb6\u7684\u7ecf\u9a8c\u4e30\u5bcc\u3002</p> <p>\u95ee\u4e86\u7ee9\u70b9\uff0c\u95ee\u4e86\u662f\u54ea\u91cc\u4eba\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u9009\u62e9\u6765\u6d59\u5927\u3002</p>"},{"location":"interviews/pdd/#331-hr-\u9762","title":"3.31 HR \u9762","text":"<p>\u7b80\u5355\u7684\u81ea\u6211\u4ecb\u7ecd\u3002\u4ecb\u7ecd\u4e86\u6392\u540d\u3001\u4e2a\u4eba\u535a\u5ba2\u3001\u670b\u8f88\u8f85\u5b66\u3001\u9879\u76ee\u7ecf\u5386\u3001\u5fd7\u613f\u8005\u3001\u793e\u4f1a\u5de5\u4f5c\u3002</p> <p>\u95ee\u4e86\u535a\u5ba2\u7684\u5185\u5bb9\u548c\u52a8\u673a\u3002\u95ee\u4e86\u9ad8\u4e2d OI \u662f\u5426\u6709\u52a0\u5206\u548c\u9ad8\u62a5\u9009\u62e9\u3002\u95ee\u4e86\u6210\u7ee9\uff0c\u8bb2\u4e86\u5927\u4e00\u72b6\u6001\u4e0d\u592a\u597d\u6240\u4ee5\u6210\u7ee9\u6ca1\u6709\u5f88\u597d\u3002\u95ee\u4e86\u5927\u4e00\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5f88\u597d\uff0c\u89e3\u91ca\u4e86\u6ca1\u6709\u538b\u529b\u3001\u4e0d\u611f\u5174\u8da3\u4e4b\u7c7b\u7684\u95ee\u9898\u3002</p> <p>\u95ee\u4e86\u5bf9\u4e8e\u5b9e\u4e60\u7684\u671f\u671b\u3002\u56de\u7b54\u4e86\u5e0c\u671b\u4f53\u9a8c\u5de5\u4f5c\u3001\u79ef\u7d2f\u5b9e\u9645\u7ecf\u9a8c\u3001\u627e\u5230\u53d1\u5c55\u65b9\u5411\u3002\u95ee\u4e86\u672a\u6765\u7684\u89c4\u5212\u3002\u56de\u7b54\u4e86\u5bf9\u7f16\u7a0b\u8bed\u8a00\u548c\u7f16\u8bd1\u5668\u7684\u5174\u8da3\uff0c\u4ee5\u53ca\u503e\u5411\u4e8e\u4fdd\u7814\uff1b\u5982\u679c\u6ca1\u6709\u627e\u5230\u65b9\u5411\u6216\u8005\u6ca1\u4fdd\u7814\u5c31\u4f1a\u9009\u62e9\u4e0d\u8bfb\u3002</p> <p>\u95ee\u4e86\u6691\u5047\u5408\u7406\u7684\u65f6\u95f4\uff0c\u56de\u7b54\u4e86\u53ea\u80fd\u5728\u6691\u5047\u5f00\u59cb\u5b9e\u4e60\u3002\u95ee\u4e86\u5bb6\u5ead\u5de5\u4f5c\u60c5\u51b5\u548c\u5bf9\u6211\u672a\u6765\u7684\u671f\u671b\u3002\u95ee\u4e86\u6709\u6ca1\u6709\u5bf9\u8c61\uff08\u6ca1\u6709 TAT\uff09\u3002\u95ee\u4e86\u5728\u5927\u5b66\u4e3b\u8981\u7684\u5174\u8da3\u7231\u597d\u3002</p> <p>\u95ee\u4e86\u4e0d\u4e86\u89e3\u62fc\u591a\u591a\u7684\u5de5\u4f5c\u65f6\u95f4\uff0c\u5e76\u4e14\u81ea\u79f0\u5de5\u4f5c\u5f3a\u5ea6\u662f\u6bd4\u8f83\u5927\u7684\u3002\u7ed9\u4e86\u4ecb\u7ecd\u3002\u7814\u53d1\u5c97\u662f 11~20 \u70b9\u6253\u5361\uff0c\u5176\u4e2d 12~13, 18~19 \u662f\u5348\u9910\u665a\u9910\u65f6\u95f4\uff0c\u665a\u4e0a 20 \u70b9\u4e4b\u540e\u901a\u5e38\u90fd\u6709\u52a0\u73ed\u3002\u6bcf\u5468\u4e00\u822c\u90fd\u662f 6 \u5929\uff0c\u5b9e\u4e60\u751f\u81f3\u5c11\u8981\u5446 5 \u5929\u3002\u95ee\u80fd\u4e0d\u80fd\u63a5\u53d7\u3002\u6211\u8bf4\u8fd8\u597d\uff0c\u81ea\u5df1\u5e73\u5e38\u5b66\u4e60\u4e5f\u53ef\u80fd\u6709\u8fd9\u4e2a\u65f6\u95f4\u3002</p> <p>\u95ee\u4e86\u8eab\u8fb9\u7684\u540c\u5b66\u5982\u4f55\u8bc4\u4ef7\u6211\u3002\u95ee\u4e86\u6210\u957f\u8fc7\u7a0b\u4e2d\u6700\u6cae\u4e27\u7684\u4e8b\u60c5\u662f\u4ec0\u4e48\uff0c\u6700\u8fd1\u6709\u4ec0\u4e48\u4e8b\u60c5\u5f88\u5f71\u54cd\u60c5\u7eea\uff1b\u56de\u7b54\u4e86\u6ca1\u4ec0\u4e48\u4e1c\u897f\u5f88\u5f71\u54cd\u60c5\u7eea\u3002\u95ee\u6709\u6ca1\u6709\u4ec0\u4e48\u4e8b\u60c5\u662f\u5f88\u60f3\u505a\u5230\u4f46\u662f\u6700\u7ec8\u6ca1\u6709\u6210\u529f\u7684\uff1b\u56de\u7b54\u4e86\u6ca1\u6709\u4ec0\u4e48\u4e8b\u60c5\u5f88\u60f3\u505a\u5230\u3002</p> <p>\u95ee\u4e86\u8fd8\u6295\u4e86\u54ea\u4e9b\u516c\u53f8\uff0c\u56de\u7b54\u6295\u4e86\u7f8e\u56e2\u548c\u534e\u4e3a\uff0c\u7f8e\u56e2\u4e8c\u9762\u5b8c\u4e0d\u7406\u4e86\uff0c\u534e\u4e3a\u7b14\u8bd5\u5b8c\u4e0d\u7406\u4e86\uff0c\u53ef\u80fd\u6302\u4e86\u3002</p> <p>\u95ee\u4e86\u6821\u5185\u8bba\u575b\u548c\u7f51\u4e0a\u5b58\u5728\u5bf9\u4e8e\u62fc\u591a\u591a\u5f88\u591a\u65b9\u9762\u7684\u8bc4\u4ef7\uff0c\u6211\u600e\u4e48\u770b\u3002\u6211\u56de\u7b54\u53ef\u80fd\u5927\u5bb6\u4e3b\u8981\u7684\u4e0d\u6ee1\u662f\u8425\u9500\u624b\u6bb5\uff0c\u4f46\u662f\u8425\u9500\u624b\u6bb5\u5982\u4f55\u548c\u6211\u5728\u8fd9\u91cc\u9762\u505a\u6280\u672f\u6ca1\u4ec0\u4e48\u5173\u7cfb\u3002\u53e6\u5916\u4e5f\u4e0d\u6ee1\u662f\u5de5\u4f5c\u5f3a\u5ea6\uff0c\u6211\u8ba4\u4e3a\u6bd4\u8f83\u5e74\u8f7b\u7684\u65f6\u5019\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5feb\u901f\u6210\u957f\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002</p> <p>\u53cd\u95ee\u9636\u6bb5\u3002\u95ee\u4e86\u5982\u679c\u4e03\u6708\u4e2d\u65ec\u624d\u80fd\u5165\u804c\u7684\u8bdd\u53ef\u4e0d\u53ef\u4ee5\uff0c\u56de\u7b54\u867d\u7136\u6709\u70b9\u665a\u4f46\u662f\u6708\u5e95\u4e4b\u524d\u53bb\u5c31\u4e0d\u4f1a\u9519\u8fc7\u57f9\u8bad\u3002\u95ee\u4e86\u57f9\u8bad\u662f\u4ec0\u4e48\uff0c\u56de\u7b54\u4e3b\u8981\u662f\u516c\u53f8\u6587\u5316\u3001\u516c\u53f8\u5236\u5ea6\u3002\u95ee\u4e86\u5bf9\u4e8e\u65f6\u957f\u7684\u8981\u6c42\uff0c\u56de\u7b54\u81f3\u5c11\u4e24\u4e2a\u6708\uff0c\u591a\u6570\u4eba\u4f1a\u5728\u4e09\u4e2a\u4eba\u6700\u53f3\u3002\u95ee\u4e86\u5982\u679c\u67d0\u4e2a\u7ec4\u4e0d\u592a\u9002\u5408\uff0c\u6709\u6ca1\u6709\u673a\u4f1a\u8c03\u6574\uff0c\u56de\u7b54\u5206\u914d\u597d\u4e86\u4e4b\u540e\u57fa\u672c\u6ca1\u6709\u3002\u95ee\u4e86\u662f\u5426\u6709\u8f6c\u6b63\u673a\u4f1a\uff0c\u56de\u7b54\u5982\u679c\u6ee1\u4e24\u4e2a\u6708\u4e4b\u540e\u5c31\u6709\u673a\u4f1a\uff0c\u7531\u4e3b\u7ba1\u8bc4\u4f30\u3002</p> <p>\u7136\u540e\u5c31\u6302\u4e86 XD</p>"},{"location":"interviews/quant/","title":"\u91cf\u5316\u76f8\u5173","text":"<p> \u7ea6 3100 \u4e2a\u5b57  199 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>Abstract</p> <p>\u91cf\u5316\u8fd9\u8fb9\u56e0\u4e3a\u9700\u8981\u907f\u5acc\uff0c\u5c31\u5927\u6982\u603b\u7ed3\u4e00\u4e0b\u8003\u5bdf\u4e86\u54ea\u4e9b\u95ee\u9898\uff0c\u4e0d\u5177\u4f53\u6307\u660e\u662f\u54ea\u5bb6\u516c\u53f8\u4e86\u3002</p> <p>\u8fd9\u91cc\u80fd\u4e0d\u6362\u884c\u8bf4\u5b8c\u7684\u4e1c\u897f\u5c31\u653e\u5230\u300c\u96f6\u6563\u7684\u95ee\u9898\u300d\u91cc\uff0c\u5176\u4ed6\u7684\u4ee5\u300cSession\u300d\u7684\u5f62\u5f0f\u7ec4\u7ec7\u3002Session \u5df2\u7ecf\u6253\u4e71\u5904\u7406\u3002</p> <p>\u590d\u76d8\u7684\u65f6\u5019\u53d1\u73b0\u81ea\u5df1\u8fd8\u6709\u597d\u591a\u95ee\u9898\u73b0\u5728\u90fd\u4e0d\u4f1a QAQ \u5f97\u627e\u65f6\u95f4\u597d\u597d\u8865\u4e00\u4e0b\u4e50</p>"},{"location":"interviews/quant/#1-\u64cd\u4f5c\u7cfb\u7edf\u548c-linux-\u76f8\u5173","title":"1 \u64cd\u4f5c\u7cfb\u7edf\u548c Linux \u76f8\u5173","text":""},{"location":"interviews/quant/#session-1","title":"Session 1","text":"<p>\u95ee\u4e86\u5f00\u53d1\u7684\u73af\u5883\u3002\u95ee\u4e86 Linux + x86-64 \u73af\u5883\u4e0b\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\u3002\u56de\u7b54\u4e86\u7cfb\u7edf\u8c03\u7528\u53f7\u5e94\u8be5\u5728 AL\uff0c\u7136\u540e\u4fdd\u5b58\u73b0\u573a\uff0c\u8fdb\u5165 kernel mode \u5f00\u59cb\u8fd0\u884c\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u8bf4\u7684\u5bf9\u4e0d\u5bf9\uff09\u3002\u95ee\u4e86\u53c2\u6570\u5e94\u8be5\u600e\u4e48\u4f20\u3002\u56de\u7b54\u4e86\u524d 6 \u4e2a\u53c2\u6570\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u91cc\uff0c\u597d\u50cf\u7b2c\u4e00\u4e2a\u662f RDI\uff0c\u987a\u5e8f\u4e0d\u8bb0\u5f97\u4e86\uff0c\u5269\u4e0b\u7684\u653e\u5728\u6808\u4e0a\u3002\uff08\u9762\u8bd5\u7684\u65f6\u5019\u521a\u597d\u8f6f\u5b89\u505a\u5230\u8fd9\u91cc\u4e86 XD \u5bf9\u4e0d\u5bf9\u5c31\u4e0d\u6e05\u695a\u4e86</p>"},{"location":"interviews/quant/#session-2","title":"Session 2","text":"<p>\u95ee virtual memory space \u5230 physical memory space \u7684\u8f6c\u6362\u3002\u56de\u7b54\u4e86\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u4e2a\u9875\u8868\uff0c\u5bfb\u5740\u65f6\u901a\u8fc7 MMU \u8f6c\u6362\u3002\u95ee MMU \u662f\u7eaf\u8f6f\u4ef6\u8fd8\u662f\u786c\u4ef6\u7684\u3002\u95ee\u9875\u8868\u5b58\u50a8\u5728\u54ea\u3002\u5982\u4f55\u52a0\u901f\u5730\u5740\u8f6c\u6362\u7684\u8fc7\u7a0b\u3002\u95ee\u5982\u679c\u865a\u62df\u5730\u5740\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u4e0d\u5728\u5185\u5b58\u91cc\u4f1a\u600e\u4e48\u6837\u3002\u95ee\u5185\u6838\u5904\u7406\u5b8c page fault \u4e4b\u540e\u4f1a\u600e\u4e48\u6837\u3002</p>"},{"location":"interviews/quant/#\u96f6\u6563\u7684\u95ee\u9898","title":"\u96f6\u6563\u7684\u95ee\u9898","text":"<ol> <li>\u95ee\u4e00\u4e2a\u5305\u5230\u8fbe\u7f51\u5361\u76f4\u5230\u7531\u4e00\u4e2a\u7528\u6237\u6001\u8fdb\u7a0b\u63a5\u6536\u7ecf\u8fc7\u4e86\u4ec0\u4e48\u6837\u7684\u8fc7\u7a0b\u3002\u63d0\u793a\u8003\u5bdf\u786c\u4ef6\u548c\u5185\u6838\u5982\u4f55\u534f\u4f5c\u3002\u6211\u56de\u7b54\u6ca1\u6709\u4e86\u89e3\u8fc7\u3002</li> <li>\u8ba9\u5bf9\u6bd4\u5171\u4eab\u5185\u5b58\u548c socket \u8fd9\u4e24\u79cd\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u65b9\u5f0f\u7684\u4f18\u52a3\u3002\u63d0\u793a\u901a\u8fc7\u6027\u80fd\u3001\u6613\u7528\u6027\u3001\u6269\u5c55\u6027\u7b49\u89d2\u5ea6\u5bf9\u6bd4\u3002</li> <li>\u95ee\u6211\u5b66\u4e60\u8fc7\u54ea\u4e9b\u9501\u3002\u95ee\u5982\u679c\u81ea\u5df1\u5b9e\u73b0 semaphore \u600e\u4e48\u5b9e\u73b0\u3002</li> <li>\u8ba9\u8bf4\u51e0\u4e2a\u5e38\u7528\u7684 linux \u547d\u4ee4\u3002\u95ee\u4e86 linux \u7684\u6743\u9650\u4f4d\u3002</li> <li>\u95ee\u4e86\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u624b\u6bb5\u3002\u95ee\u4e86\u5171\u4eab\u5185\u5b58\u5982\u4f55\u4f7f\u7528\uff0c\u6211\u4e0d\u77e5\u9053\u3002</li> <li>\u8ba9\u8bf4\u51e0\u4e2a\u5e38\u7528\u7684 gdb \u547d\u4ee4\u3002</li> <li>\u8ba9\u4ecb\u7ecd\u4e2d\u65ad\u7684\u6982\u5ff5\u3002\u8ba9\u533a\u5206\u786c\u4e2d\u65ad\u548c\u8f6f\u4e2d\u65ad\u3002</li> <li>Linux \u91cc\u4e00\u4e2a page \u591a\u5927\u3002</li> <li>\u8ba9\u89e3\u91ca page fault\uff0c\u533a\u5206\u8f6f\u7f3a\u9875\u548c\u786c\u7f3a\u9875 (major / minor fault)\u3002\u5982\u4f55\u51cf\u5c11 page fault\u3002\uff08\u6539\u5584\u8c03\u9875\u7b97\u6cd5\u3001lock \u4e00\u4e9b\u5185\u5b58\u3001\u66f4\u6539 page \u5927\u5c0f\u3001\u63d0\u5347\u5c40\u90e8\u6027\u7b49\uff09</li> <li>\u4ec0\u4e48\u547d\u4ee4\u80fd\u770b\u4e00\u4e2a\u8fdb\u7a0b\u6253\u5f00\u7684\u6587\u4ef6\u3002</li> <li>\u8ba9\u89e3\u91ca memory model \u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\u3002\u7528\u9501\u80fd\u4e0d\u80fd\u5b9e\u73b0\u7c7b\u4f3c\u7684\u6548\u679c\u3002</li> <li>\u8ba9\u89e3\u91ca spin lock \u548c mutex \u7684\u533a\u522b\u662f\u4ec0\u4e48\u3002</li> <li>\u5982\u679c\u5b9e\u73b0\u4e00\u4e2a\u591a\u7ebf\u7a0b\u7684\u961f\u5217\uff0c\u600e\u4e48\u7528\u9501\u6765\u5b9e\u73b0\u3002\u6211\u60f3\u4e86\u4e00\u4e9b\u65b9\u6cd5\uff0c\u4e0d\u8fc7\u90fd\u9700\u8981\u5bf9\u961f\u5217\u4e3a\u7a7a\u7684\u60c5\u51b5\u7279\u6b8a\u5224\u5b9a\u3002\u9762\u8bd5\u5b98\u63d0\u793a\u53ef\u4ee5\u63d2\u5165\u4e00\u4e9b\u7279\u6b8a\u7684\u4e1c\u897f\u6765\u4f7f\u5f97\u961f\u5217\u4e0d\u4f1a\u4e3a\u7a7a\u3002</li> <li>\u95ee\u5bf9\u65e0\u9501\u961f\u5217\u6709\u6ca1\u6709\u4e86\u89e3\u3002\u6211\u8bf4\u4e0d\u592a\u4e86\u89e3\u3002\u63d0\u793a\u53ef\u4ee5\u8003\u8651\u7528 <code>compare_and_swap()</code> \u5b9e\u73b0\u3002\u6211\u8bf4\u5927\u6982\u662f <code>compare_and_swap(&amp;index, index, index + 1)</code>\u3002\u4ed6\u8bf4\u5927\u6982\u662f <code>compare_and_swap(&amp;q[i], 0, value)</code>\u3002</li> </ol>"},{"location":"interviews/quant/#2-c-\u76f8\u5173","title":"2 C++ \u76f8\u5173","text":""},{"location":"interviews/quant/#session-1_1","title":"Session 1","text":"<p>\u7ed9\u51fa\u4ee3\u7801\uff1a</p> <pre><code>struct A {\nint a = 0;\nchar b;\nlong long c = 1;\n};\n</code></pre> <p>\u95ee <code>sizeof(A)</code>\u3002\u95ee\u4e3a\u4ec0\u4e48\u8981\u5bf9\u9f50\u3002</p> <pre><code>struct A {\nint a = 0;\nchar b;\nlong long c = 1;\nvirtual void printa() = 0;\nvirtual void printb() { cout &lt;&lt; b; }\nvoid printc() { cout &lt;&lt; c; }\n};\n\nstruct B : public A {\nvoid printa();\nvoid printb() { cout &lt;&lt; 2; }\nvoid printc() { cout &lt;&lt; 3; }\n};\n\nvoid print();\n\nint main() {\nB foo;\n}\n</code></pre> <p>\u95ee\u4e3a\u4ec0\u4e48 19 \u884c\u4f1a\u62a5\u9519\u3002\u56de\u7b54\u56e0\u4e3a B \u6ca1\u6709\u5b9e\u73b0 A \u91cc\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u6240\u4ee5 B \u8fd8\u662f\u62bd\u8c61\u7c7b\u3002\u8ffd\u95ee\u4e3a\u4ec0\u4e48\u62bd\u8c61\u7c7b\u5c31\u4e0d\u80fd\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u6211\u8bf4\u56e0\u4e3a\u4f1a\u94fe\u63a5\u9519\u8bef\uff08\u5176\u5b9e\u4e0d\u4f1a\uff09\u3002\u4ed6\u63d0\u793a\u4e3a\u4ec0\u4e48 16 \u884c\u8fd9\u6837\u5199\u5c31\u4e0d\u62a5\u9519\u3002\u6211\u660e\u767d\u4e86\uff0c\u8bf4\u90fd\u4e0d\u4f1a\u94fe\u63a5\u9519\u8bef\uff0c\u53ea\u662f\u6309\u8bed\u4e49\u8bbe\u8ba1\u6765\u8bf4\u62bd\u8c61\u7c7b\u5c31\u662f\u4e0d\u80fd\u5b9e\u4f8b\u5316\u3002</p> <p>\u73b0\u5728\u628a 11 \u884c\u6539\u4e3a <code>void printa() { cout &lt;&lt; 1; }</code>\uff0c\u95ee\u5728 main \u91cc <code>foo.printa();</code> <code>foo.printb();</code> <code>foo.printc();</code> \u7684\u8f93\u51fa\u5206\u522b\u662f\u591a\u5c11\u3002</p> <p>\u5982\u679c <code>A *bar = new B;</code>\uff0c\u95ee <code>bar-&gt;printa();</code> <code>bar-&gt;printb();</code> <code>bar-&gt;printc();</code> \u7684\u8f93\u51fa\u5206\u522b\u662f\u591a\u5c11\u3002\u89e3\u91ca\u539f\u56e0\u3002</p> <p>\u95ee <code>sizeof(B)</code>\u3002</p> <p>\u95ee <code>bar-&gt;printa();</code> \u7136\u540e <code>bar-&gt;printb();</code> \u7136\u540e <code>bar-&gt;printc();</code>\uff0c\u8ba9\u5bf9\u6bd4\u8fd9\u4e09\u6b21\u8bbf\u95ee\u7684\u901f\u5ea6\u3002\u7b2c\u4e00\u6b21\u6700\u6162\uff0c\u56e0\u4e3a\u8981\u5148\u627e vtable \u518d\u627e\u51fd\u6570\u5730\u5740\u3002\u7b2c\u4e8c\u6b21\u7a0d\u5feb\uff0c\u56e0\u4e3a vtable \u4f1a\u5728 cache \u91cc\u3002\u7b2c\u4e09\u6b21\u6700\u5feb\uff0c\u56e0\u4e3a\u9759\u6001\u7ed1\u5b9a\u4f7f\u5f97\u51fd\u6570\u5730\u5740\u5c31\u5728\u6c47\u7f16\u91cc\u3002</p> <p>\u95ee\u5982\u679c <code>B *p = new B[10];</code>\uff0c\u80fd\u4e0d\u80fd\u53ea delete \u524d 5 \u4e2a\u3002</p>"},{"location":"interviews/quant/#session-2_1","title":"Session 2","text":"<p>\u95ee\u4e86 C++ \u9879\u76ee\u4f7f\u7528\u7684\u6807\u51c6\u7248\u672c\uff0c\u56de\u7b54\u4e86 C++17\u3002\u95ee\u4e86\u5bf9 C++11 \u4e2d\u7684\u667a\u80fd\u6307\u9488\u6709\u4ec0\u4e48\u4e86\u89e3\u3002\u8ffd\u95ee\u6709\u6ca1\u6709\u770b\u8fc7\u5b9e\u73b0\uff0c\u56de\u7b54\u4e86\u6ca1\u6709\u3002\u4ed6\u6307\u51fa shared_ptr \u7684\u5f15\u7528\u8ba1\u6570\u662f\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c\uff0c\u95ee\u6211\u5bf9 C++11 \u4e2d\u7684 atomic \u6709\u4ec0\u4e48\u4e86\u89e3\u3002\u6211\u56de\u7b54\u4e0d\u592a\u4e86\u89e3\u3002\u95ee\u5bf9 memory order \u6709\u4ec0\u4e48\u4e86\u89e3\uff0c\u6211\u4e5f\u4e0d\u592a\u4e86\u89e3\u3002</p>"},{"location":"interviews/quant/#session-3","title":"Session 3","text":"<p>\u8ba9\u4ecb\u7ecd\u4e00\u4e0b C++ \u91cc\u7684 lambda\u3002\u7ed9\u4e86 <code>struct A {int x;}; std::vector&lt;A&gt; v;</code>\uff0c\u8ba9\u7528 <code>std::sort</code> \u6765\u6392\u5e8f\uff1a<code>std::sort(v.begin(), v.end(), [](A &amp;a, A &amp;b) {return a.x &lt; b.x;});</code>\u3002</p> <p>\u6307\u51fa lambda \u662f\u4e00\u79cd\u8bed\u6cd5\u7cd6\uff0c\u8981\u6211\u628a\u5b83\u7528\u51fd\u6570\u5bf9\u8c61\u5b9e\u73b0\u3002\u6211\u5f53\u65f6\u4e0d\u592a\u4f1a\u51fd\u6570\u5bf9\u8c61\u3002</p> <p>\u95ee\u4e86\u8fd9\u91cc\u7b2c\u4e09\u4e2a\u53c2\u6570 <code>[](A &amp;a, A &amp;b) {return a.x &lt; b.x;}</code> \u662f\u4ec0\u4e48\u7c7b\u578b\u3002\u95ee\u4e86 <code>std::sort</code> \u7684\u51fd\u6570\u7b7e\u540d\u662f\u4ec0\u4e48\u3002\u5f53\u65f6\u4e0d\u4f1a\u3002\u53c2\u89c1 \u7406\u89e3 STL \u2014\u2014 \u8fed\u4ee3\u5668\u4e0e\u51fd\u6570\u5bf9\u8c61\u3002</p>"},{"location":"interviews/quant/#session-4","title":"Session 4","text":"<p>\u5206\u6790 STL \u91cc <code>map</code>, <code>unordered_map</code>, <code>vector</code> \u63d2\u5165\u3001\u5220\u9664\u3001\u4fee\u6539\u7684\u590d\u6742\u5ea6\u3002\u95ee <code>std::string</code> \u600e\u4e48\u5b9e\u73b0\u7684\u3002</p> <p>\u5982\u679c\u6709 <code>std::string s1 = \"1\", s2 = \"12\", ..., s10 = \"12345678910\", ..., s1000 = \"...\"</code>\uff0c\u95ee <code>std::string s = s1 + s2 + ... + s1000</code> \u7684\u590d\u6742\u5ea6\u3002\u8003\u5bdf\u7684\u662f <code>s1</code> \u4f1a\u88ab\u62f7\u8d1d 999 \u6b21\u3002</p>"},{"location":"interviews/quant/#\u96f6\u6563\u7684\u95ee\u9898_1","title":"\u96f6\u6563\u7684\u95ee\u9898","text":"<ol> <li>\u95ee\u6211\u5bf9\u667a\u80fd\u6307\u9488\u6709\u4ec0\u4e48\u7406\u89e3\uff0c\u6211\u8bf4\u53ea\u77e5\u9053 shared_ptr\u3002\u8ba9\u5927\u6982\u7528\u4ee3\u7801\u5199\u4e00\u4e0b\u5b9e\u73b0\u3002\u731c\u7740\u5199\u4e86\u4e00\u4e0b\uff0c\u4f46\u662f\u597d\u50cf\u6709\u5f88\u591a\u95ee\u9898\uff0c\u6bd4\u5982\u5f15\u7528\u8ba1\u6570\u6ca1\u52a0\u9501\u4e4b\u7c7b\u7684\u3002</li> <li>\u8ba9\u4ecb\u7ecd C++ \u91cc\u7684\u9762\u5411\u5bf9\u8c61\u3002\u8ffd\u95ee\u4e86\u591a\u7ee7\u627f\u7684\u539f\u56e0\u3002\u8ffd\u95ee\u4e86\u5bf9\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\uff0c\u5982\u4f55\u627e\u5230\u865a\u51fd\u6570\u8868\u3002\u8ffd\u95ee\u4e86\u865a\u7ee7\u627f\u7684\u903b\u8f91\u548c\u5b9e\u73b0\u3002</li> <li>\u8ba9\u89e3\u91ca C++ \u4e2d static \u7684\u4f5c\u7528\u3002\u95ee\u4e86 C++ \u4e2d public, protected, private \u7ee7\u627f\u7684\u533a\u522b\u3002</li> <li>\u8ba9\u89e3\u91ca C++ \u4e2d inline \u7684\u4f5c\u7528\u3002\u95ee\u4ece\u4ee3\u7801\u5230\u53ef\u6267\u884c\u6587\u4ef6\u9700\u8981\u54ea\u4e9b\u6b65\u9aa4\uff0c\u5927\u6982\u662f <code>.cpp -&gt; .i -&gt; .S -&gt; .o -&gt; executable</code>\u3002\u95ee\u4e86 inline \u5728\u5176\u4e2d\u54ea\u4e00\u6b65\u5b8c\u6210\u3002</li> <li>\u95ee\u4e86\u52a8\u6001\u94fe\u63a5\u548c\u9759\u6001\u94fe\u63a5\u7684\u533a\u522b\uff0c\u5206\u6790\u5176\u4f18\u52a3\u3002</li> <li>\u8ba9\u89e3\u91ca C++ \u4e2d\u7684\u865a\u51fd\u6570\u53ca\u5176\u52a8\u673a\u3002\u95ee\u4e3a\u4ec0\u4e48\u5efa\u8bae\u628a\u6790\u6784\u51fd\u6570\u8bbe\u7f6e\u6210\u865a\u51fd\u6570\u3002\u95ee\u6784\u9020\u51fd\u6570\u80fd\u4e0d\u80fd\u8bbe\u7f6e\u6210\u865a\u51fd\u6570\u3002</li> <li>\u8ba9\u89e3\u91ca C++ \u4e2d\u6307\u9488\u548c\u5f15\u7528\u7684\u533a\u522b\u3002</li> <li>\u8ba9\u6307\u51fa C++ shared_ptr \u6709\u4ec0\u4e48\u95ee\u9898\u3002</li> <li>\u8ba9\u89e3\u91ca C++ \u7684\u53f3\u503c\u5f15\u7528\u662f\u5e72\u4ec0\u4e48\u7684\u3002</li> <li>\u8ba9\u4ecb\u7ecd C++17 \u6709\u4ec0\u4e48\u65b0\u7279\u6027\u3002</li> <li>\u95ee\u6a21\u677f\u662f\u5e72\u4ec0\u4e48\u7684\u3002\u5199\u5e93\u7528\u7684\uff0c\u662f\u300c\u5199\u5de5\u5177\u7684\u5de5\u5177\u300d\u3002</li> <li>\u6a21\u677f\u5b9e\u73b0\u7f16\u8bd1\u65f6\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002</li> <li>\u9012\u5f52\u6df1\u5ea6\u5927\u6982\u80fd\u591a\u5c11\u3002\u6211\u731c\u6808\u6709 256MB\uff0c\u4ed6\u8bf4\u6ca1\u6709\u90a3\u4e48\u5927\u3002</li> <li>\u4e0d\u540c\u7684\u4f18\u5316\u9009\u9879\uff0c\u7f16\u8bd1\u5668\u4f1a\u505a\u4ec0\u4e48\u4e8b\u3002</li> <li>\u8ba9\u89e3\u91ca C++ \u4e2d const \u7684\u4f5c\u7528\u3002\u95ee\u4e86 const &amp; \u4f20\u53c2\u6709\u4ec0\u4e48\u597d\u5904\u3002</li> <li>\u7ed9 Foo \u7c7b\u52a0\u4e00\u4e2a static \u6210\u5458\u53d8\u91cf\u548c\u52a0\u4e00\u4e2a\u865a\u51fd\u6570\u5206\u522b\u4f1a\u4e0d\u4f1a\u8ba9 sizeof(Foo) \u53d8\u5927\u3002</li> <li>\u91cd\u8f7d\u9700\u8981\u4ec0\u4e48\u6761\u4ef6\u3002</li> <li>\u865a\u51fd\u6570\u4f1a\u5e26\u6765\u4ec0\u4e48\u635f\u8017\u3002</li> <li>\u865a\u51fd\u6570\u8868\u662f\u4ec0\u4e48\u65f6\u5019\u6784\u9020\u7684\uff0c\u865a\u51fd\u6570\u8868\u6307\u9488\u662f\u4ec0\u4e48\u65f6\u5019\u8d4b\u503c\u7684\u3002</li> <li>\u6a21\u677f\u7684\u7279\u5316\u662f\u4ec0\u4e48\uff0c\u89e3\u91ca\u5168\u7279\u5316\u548c\u504f\u7279\u5316\u3002</li> <li>vector \u4e00\u76f4 push_back\uff0c\u5360\u7528\u7684\u5185\u5b58\u4f1a\u600e\u4e48\u53d8\u5316\uff1b\u4e8b\u5148\u77e5\u9053\u6709\u591a\u5927\u7684\u8bdd\u53ef\u4ee5\u600e\u4e48\u505a\u3002</li> <li>set \u60f3\u7528\u8fed\u4ee3\u5668\u6539\u6389\u53ef\u4ee5\u5417\u3002\u8fd9\u4e2a\u6211\u7b54\u9519\u4e86\uff0c\u5176\u5b9e\u4e0d\u884c\uff0c\u56e0\u4e3a set \u7684\u8fed\u4ee3\u5668\u662f constant\u3002</li> <li>vector \u548c map \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u5417\u3002\u6211\u4e0d\u4f1a\u3002</li> <li>sort \u5e95\u5c42\u662f\u4ec0\u4e48\u6392\u5e8f\u7b97\u6cd5\u3002</li> <li>vector \u7684 push_back \u548c emplace_back \u6709\u4ec0\u4e48\u533a\u522b\u3002</li> <li>shared_ptr b \u8d4b\u503c\u7ed9 a\uff0c\u5f15\u7528\u8ba1\u6570\u4f1a\u6709\u4ec0\u4e48\u53d8\u5316\u3002</li> <li>\u6709\u6ca1\u6709\u65b9\u6cd5\u80fd\u591f\u5728 const \u6210\u5458\u51fd\u6570\u91cc\u6539\u6210\u5458\u53d8\u91cf\u3002</li> <li>virtual function \u80fd\u4e0d\u80fd inline\u3002</li> <li>\u5bf9\u6bd4 unique_ptr, shared_ptr \u548c\u539f\u59cb\u7684\u6307\u9488\u6027\u80fd\u3002</li> <li>\u8ba9\u4ecb\u7ecd C++ \u7684 atomic\u3002\u6211\u4e0d\u592a\u61c2\u3002</li> <li>\u8ba9\u4ecb\u7ecd likely \u548c unlikely\u3002</li> <li>\u9664\u4e86 inline \u4ee5\u5916\u8fd8\u6709\u4ec0\u4e48\u4e1c\u897f\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u7684\u529f\u80fd\u3002</li> <li>\u8ba9\u89e3\u91ca volatile \u5173\u952e\u5b57\u662f\u5e72\u5565\u7684\uff0c\u6211\u4e0d\u592a\u6e05\u695a\u3002</li> <li>\u8ba9\u89e3\u91ca\u6808\u548c\u5806\u7684\u533a\u522b\u3002\u8bbf\u95ee\u548c\u5206\u914d\u7684\u6548\u7387\u6709\u4ec0\u4e48\u4e0d\u4e00\u6837\u3002</li> <li>\u4e00\u4e2a\u7a0b\u5e8f\u6302\u4e86\uff0c\u600e\u4e48\u8c03\u8bd5\u3002</li> </ol>"},{"location":"interviews/quant/#3-\u5199\u9898--\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u76f8\u5173","title":"3 \u5199\u9898 / \u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u76f8\u5173","text":""},{"location":"interviews/quant/#session-1_2","title":"Session 1","text":"<p>HackerRank \u4e0a\u7684\u4e00\u6b21\u7b14\u8bd5\u3002</p> T1 <p></p> <p></p> <p>\u9898\u76ee\u7ed9\u4e86\u90e8\u5206\u4ee3\u7801\uff0c\u5b9e\u73b0\u51fd\u6570\uff08\u540e\u9762\u51e0\u4e2a\u9898\u4e5f\u662f\u8fd9\u6837\u7684\uff0c\u5c31\u76f4\u63a5\u5199\u51fd\u6570\u8981\u6c42\u4e86\uff09\uff1a</p> \u9898\u76ee\u7ed9\u51fa\u7684\u4ee3\u7801 <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nstring ltrim(const string &amp;);\nstring rtrim(const string &amp;);\n\n\n/*\n* Complete the 'getMaximumMex' function below.\n*\n* The function is expected to return an INTEGER.\n* The function accepts following parameters:\n*  1. INTEGER_ARRAY arr\n*  2. INTEGER x\n*/\n\nint getMaximumMex(vector&lt;int&gt; arr, int x) {\n}\n\nint main()\n{\nofstream fout(getenv(\"OUTPUT_PATH\"));\n\nstring arr_count_temp;\ngetline(cin, arr_count_temp);\n\nint arr_count = stoi(ltrim(rtrim(arr_count_temp)));\n\nvector&lt;int&gt; arr(arr_count);\n\nfor (int i = 0; i &lt; arr_count; i++) {\nstring arr_item_temp;\ngetline(cin, arr_item_temp);\n\nint arr_item = stoi(ltrim(rtrim(arr_item_temp)));\n\narr[i] = arr_item;\n}\n\nstring x_temp;\ngetline(cin, x_temp);\n\nint x = stoi(ltrim(rtrim(x_temp)));\n\nint result = getMaximumMex(arr, x);\n\nfout &lt;&lt; result &lt;&lt; \"\\n\";\n\nfout.close();\n\nreturn 0;\n}\n\nstring ltrim(const string &amp;str) {\nstring s(str);\n\ns.erase(\ns.begin(),\nfind_if(s.begin(), s.end(), not1(ptr_fun&lt;int, int&gt;(isspace)))\n);\n\nreturn s;\n}\n\nstring rtrim(const string &amp;str) {\nstring s(str);\n\ns.erase(\nfind_if(s.rbegin(), s.rend(), not1(ptr_fun&lt;int, int&gt;(isspace))).base(),\ns.end()\n);\n\nreturn s;\n}\n</code></pre> \u6211\u7684\u7b54\u6848 <pre><code>int getMaximumMex(vector&lt;int&gt; arr, int x) {\nvector&lt;int&gt; cnt(x, 0);\nfor (auto i : arr)  cnt[i % x]++;\nint minn = 100005;\nfor (auto i : cnt)  minn = min(i, minn);\nfor (int i = 0; i &lt; x; i++) {\nif (cnt[i] == minn)\nreturn minn * x + i;\n}\n__builtin_unreachable();\n}\n</code></pre> T2 <p> </p> <p>\u8981\u6c42\u5b9e\u73b0\u51fd\u6570 <code>int findMaxSubsegmentsCount(vector&lt;int&gt; arr)</code></p> \u6211\u7684\u7b54\u6848 <pre><code>int findMaxSubsegmentsCount(vector&lt;int&gt; arr) {\nint n = arr.size();\nvector&lt;int&gt; premax(n), postmin(n);\n\npremax[0] = arr[0];\nfor (int i = 1; i &lt; n; i++)\npremax[i] = max(premax[i - 1], arr[i]);\n\npostmin[n - 1] = arr[n - 1];\nfor (int i = n - 2; i &gt;= 0; i--)\npostmin[i] = min(postmin[i + 1], arr[i]);\n\nint res = 1;\nfor (int i = 0; i &lt; n - 1; i++)\nif (premax[i] &lt;= postmin[i + 1])\nres++;\n\nreturn res;\n}\n</code></pre>"},{"location":"interviews/quant/#session-2_2","title":"Session 2","text":"\u5199\u9898 <p>\u623f\u95f4\u4e2d\u6709 n \u4e2a\u706f\u6ce1\uff0c\u7f16\u53f7\u4ece 0 \u5230 n-1\uff0c\u81ea\u5de6\u5411\u53f3\u6392\u6210\u4e00\u884c\u3002\u6700\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u6240\u6709\u7684\u706f\u6ce1\u90fd\u662f\u5173\u7740\u7684\u3002</p> <p>\u8bf7\u4f60\u8bbe\u6cd5\u4f7f\u5f97\u706f\u6ce1\u7684\u5f00\u5173\u72b6\u6001\u548c target \u63cf\u8ff0\u7684\u72b6\u6001\u4e00\u81f4\uff0c\u5176\u4e2d target[i] \u7b49\u4e8e 1 \u8868\u793a\u7b2c i \u4e2a\u706f\u6ce1\u662f\u5f00\u7740\u7684\uff0c\u7b49\u4e8e 0 \u610f\u5473\u7740\u7b2c i \u4e2a\u706f\u662f\u5173\u7740\u7684\u3002</p> <p>\u6709\u4e00\u4e2a\u5f00\u5173\u53ef\u4ee5\u7528\u4e8e\u7ffb\u8f6c\u706f\u6ce1\u7684\u72b6\u6001\uff0c\u7ffb\u8f6c\u64cd\u4f5c\u5b9a\u4e49\u4e3a\uff1a\u9009\u62e9\u5f53\u524d\u914d\u7f6e\u4e0b\u7684\u4efb\u610f\u4e00\u4e2a\u706f\u6ce1 (\u4e0b\u6807\u4e3a i)\uff0c\u7ffb\u8f6c\u4e0b\u6807\u4ece i \u5230 n-1 \u7684\u6bcf\u4e2a\u706f\u6ce1\u3002\u7ffb\u8f6c\u65f6\uff0c\u5982\u679c\u706f\u6ce1\u7684\u72b6\u6001\u4e3a 0 \u5c31\u53d8\u4e3a 1\uff0c\u4e3a 1 \u5c31\u53d8\u4e3a 0\u3002</p> <p>\u8fd4\u56de\u8fbe\u6210 target \u63cf\u8ff0\u7684\u72b6\u6001\u6240\u9700\u7684\u6700\u5c11\u7ffb\u8f6c\u6b21\u6570\u3002</p> <p>\u793a\u4f8b: \u8f93\u5165: target = \"10111\" \u8f93\u51fa: 3</p> <p>\u89e3\u91ca: \u521d\u59cb\u914d\u7f6e \"00000\" \u4ece\u7b2c 3 \u4e2a\u706f\u6ce1 (\u4e0b\u6807\u4e3a 2) \u5f00\u59cb\u7ffb\u8f6c \"00000\" -&gt; \"00111\" \u4ece\u7b2c 1 \u4e2a\u706f\u6ce1 (\u4e0b\u6807\u4e3a 0) \u5f00\u59cb\u7ffb\u8f6c \"00111\" -&gt; \"11000\" \u4ece\u7b2c 2 \u4e2a\u706f\u6ce1 (\u4e0b\u6807\u4e3a 1) \u5f00\u59cb\u7ffb\u8f6c \"11000\" -&gt; \"10111\" \u81f3\u5c11\u9700\u8981\u7ffb\u8f6c 3 \u6b21\u624d\u80fd\u8fbe\u6210 target \u63cf\u8ff0\u7684\u72b6\u6001\u3002</p> <p>\u63d0\u793a: 1 &lt;= target.length &lt;= 105</p> \u6211\u7684\u7b54\u6848 <pre><code>int minFlips(string &amp;target) {\nint count = 0;\nbool status = 0;\nfor (auto c : target) {\nif (c - '0' != status) {\ncount++;\nstatus = !status;\n}\n}\nreturn count;\n}\n</code></pre>"},{"location":"interviews/quant/#session-3_1","title":"Session 3","text":"\u5199\u9898 <p>\u6709\u5927\u6982\u8fd9\u6837\u7684\u4ee3\u7801\uff1a <pre><code>class Obj {\nint val;\npublic:\nvoid foo(const Obj &amp;other_obj) {\nif (other_obj.val &gt; val) {\nother_obj.val--;\nval++;\n}\n}\n}\n</code></pre> \u52a0\u9501\u4f7f\u5176\u540c\u6b65\u3002</p>"},{"location":"interviews/quant/#session-4_1","title":"Session 4","text":"<p>\u6709\u4e00\u4e2a\u968f\u673a\u51fd\u6570 <code>rand_m()</code>\uff0c\u80fd\u7b49\u6982\u7387\u5730\u751f\u6210 0 ~ m - 1 \u7684\u968f\u673a\u6570\u3002\u95ee\u5982\u4f55\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u5b9e\u73b0\u4e00\u4e2a <code>rand_n()</code>\uff0c\u6765\u7b49\u6982\u7387\u5730\u751f\u6210 0 ~ n - 1 \u7684\u968f\u673a\u6570\u3002</p> \u6211\u7684\u89e3\u6cd5 <p>\u521a\u5f00\u59cb\u8bf4\u7684\u662f\uff0c\u8c03\u7528 <code>n</code> \u6b21 <code>rand_m()</code> \u5e76\u628a\u7ed3\u679c\u76f8\u52a0\u7136\u540e\u5bf9 <code>n</code> \u53d6\u6a21\u3002\u5176\u5b9e\u662f\u9519\u7684\uff0c\u4f8b\u5982 <code>m = 3, n = 2</code> \u7684\u60c5\u51b5\uff0c\u751f\u6210 0 \u548c 1 \u7684\u6982\u7387\u663e\u7136\u4e0d\u5747\u7b49\u3002</p> <p>\u9762\u8bd5\u5b98\u95ee\u300c\u6709\u6ca1\u6709\u66f4\u5feb\u7684\u505a\u6cd5\u300d\uff0c\u4e8e\u662f\u60f3\u5230\u4e86\uff1a</p> <ol> <li>\u5982\u679c \\(m \\ge n\\)\uff0c\u90a3\u4e48\u53d6 \\(q = \\lfloor \\cfrac{m}{n} \\rfloor\\)\u3002\u7528 <code>rand_m()</code> \u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570 \\(r\\)\uff0c\u5982\u679c \\(r \\ge n\\cdot q\\) \u5219\u91cd\u65b0\u751f\u6210\uff0c\u76f4\u5230\u751f\u6210\u51fa \\(r &lt; n\\cdot q\\) \u4e3a\u6b62\uff0c\u8fd4\u56de <code>n</code> \u5373\u53ef\u3002</li> <li>\u5982\u679c \\(m &lt; n\\)\uff0c\u90a3\u4e48\u8c03\u7528 \\(k = \\lceil \\log_M N \\rceil\\) \u6b21 <code>rand_m()</code>\uff0c\u6240\u5f97\u7ed3\u679c\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a \\(k\\) \u4f4d \\(m\\) \u8fdb\u5236\u6570\uff0c\u7528\u6b64\u6570\u66ff\u4ee3 \\(m\\)\uff0c\u6309 \\(m \\ge n\\) \u7684\u65b9\u6cd5\u8ba1\u7b97\u3002</li> </ol> <p>\u67e5\u5230\u4e86 https://math.stackexchange.com/a/2249958 \uff0c\u662f\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u53eb\u505a reject sampling\uff0c\u4e0d\u8fc7\u8fd8\u6709\u522b\u7684\u65b9\u6cd5\u3002</p>"},{"location":"interviews/quant/#session-5","title":"Session 5","text":"\u5199\u9898 <p>\u5199\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u5e76\u67e5\u96c6\uff0c\u5e94\u4fdd\u8bc1 a \u548c b \u8fde\u901a\u5f53\u4e14\u4ec5\u5f53 <code>getRoot(a) == getRoot(b)</code>\uff0c\u5927\u6982\u662f\uff1a <pre><code>template&lt;class T&gt;\nclass DisjointSet {\npublic:\nDisjointSet();\nvoid addNode(const T &amp;node);\nT getRoot(const T &amp;node) const;\nvoid connectNodes(const T &amp;a, const T &amp;b);\n}\n</code></pre> \u8be2\u95ee\u4e86\u662f\u5426\u53ef\u4ee5\u5047\u8bbe<code>T</code>\u662f\u53ef\u6bd4\u8f83\u7684\u6216\u8005\u53ef\u54c8\u5e0c\u7684\uff0c\u662f\u53ef\u4ee5\u7684\u3002</p>"},{"location":"interviews/quant/#session-6","title":"Session 6","text":"\u5199\u9898 <p>\u5199\u4e00\u4e2a\u7c7b\uff0c\u5927\u6982\u662f\uff1a <pre><code>class TimeStamp {\npublic:\nTimeStamp(uint64_t num) : _num(num) {}\nTimeStamp(const std::string &amp;str) {\n// TODO\n}\nuint64_t getNum() const { return _num; }\nstd::string getStr() const {\n// TODO\n}\nprivate:\nuint64_t _num;\n}\n</code></pre> \u80fd\u591f\u5b9e\u73b0<code>\"yyyymmdd:hh:mm:ss.ffffff\"</code>\u7684\u65f6\u95f4\u683c\u5f0f\u7684\u50a8\u5b58\u3002\u4f8b\u5982<code>\"20220824:02:12:50.056789\"</code>\u3002</p>"},{"location":"interviews/quant/#session-7","title":"Session 7","text":"\u5199\u9898 <p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217 <code>array</code>\uff0c\u5b83\u7684\u5143\u7d20\u5168\u90e8\u4e3a int\uff0c\u9a8c\u8bc1\u5b83\u662f\u5426\u80fd\u4ece\u5168\u4e3a 1\uff0c\u957f\u5ea6\u4e3a <code>array.length()</code> \u7684\u6570\u5217 <code>base</code> \u7ecf\u8fc7\u82e5\u5e72\u6b21\u5982\u4e0b\u64cd\u4f5c\u53d8\u4e3a\u6570\u5217 <code>array</code>\uff1a\u9009\u62e9\u67d0\u4e2a\u5143\u7d20\uff0c\u5c06\u5176\u53d8\u4e3a <code>sum(base)</code>\u3002</p> \u6211\u7684\u7b54\u6848 <pre><code>bool check(const vector&lt;int&gt; &amp;v) {\npriority_queue&lt;int, vector&lt;int&gt;, less&lt;int&gt;&gt; pq(v.begin(), v.end());\nint sum = 0;\nfor (auto i : v)    {\nsum += i;\nif (i &lt; 1)  return false;\n}\n\nwhile (true) {\nint top = pq.top();\nif (top == 1)  return true;\nint temp = top - (sum - top);\nsum -= sum - top;\nif (temp &lt; 1)   return false;\npq.pop();\npq.push(temp);\n}\n\n__builtin_unreachable();\n}\n</code></pre>"},{"location":"interviews/quant/#session-8","title":"Session 8","text":"\u5199\u9898 <p>\u5199\u4e00\u4e2a\u7c7b\uff0c\u652f\u6301\u7ed9\u5b9a\u8def\u5f84 (\u5982 <code>\"aa/bb/c/d.txt\"</code>) \u548c user\uff0c\u521b\u5efa\u6587\u4ef6 <code>createFile</code>\uff1b\u7ed9\u5b9a\u8def\u5f84 (\u5982 <code>\"aa/bb/c\"</code>)\uff0c\u8fd4\u56de\u8def\u5f84\u4e2d\u6587\u4ef6\u7684\u4e2a\u6570<code>getFileNum</code>\uff1b\u7ed9\u5b9a\u8def\u5f84\uff0c\u8fd4\u56de\u8def\u5f84\u4e2d\u6587\u4ef6\u521b\u5efa\u8005\u7684\u5217\u8868<code>getUsers</code>\uff1a <pre><code>class Foo {\npublic:\nFoo();\nvoid createFile(const std::string &amp;path, const std::string &amp;user);\nsize_t getFileNum(const std::string &amp;path) const;\nstd::vector&lt;std::string&gt; getUsers(const std::string &amp;path) const;\n}\n</code></pre> \u4e0d\u8981\u6c42\u8003\u8651\u6587\u4ef6\u88ab\u91cd\u590d\u521b\u5efa\u7684\u60c5\u51b5\u3002\u7ed9\u51fa\u4e86\u4e00\u4e2a helper \u7c7b\uff0c\u80fd\u591f\u652f\u6301\u8def\u5f84\u7684\u62c6\u5206\uff0c\u5373\u4ece<code>std::string</code>\u5230<code>std::vector&lt;std::string&gt;</code>\uff0c\u4f8b\u5982<code>\"aa/bb/c/d.txt\"</code> -&gt; <code>[\"aa\", \"bb\", \"c\", \"d.txt\"]</code>\u3002</p>"},{"location":"interviews/quant/#\u96f6\u6563\u7684\u95ee\u9898_2","title":"\u96f6\u6563\u7684\u95ee\u9898","text":"<ol> <li>\u95ee\u5bf9\u4e8e\u5f52\u5e76\u6392\u5e8f\u7684\u7406\u89e3\u3002\u95ee\u4e8c\u8def\u5f52\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff08\u6211\u5f53\u65f6\u7adf\u7136\u638f\u51fa\u7b14\u5f00\u59cb\u7b97\u4e86\uff09\u3002</li> <li>\u8ba9\u4ecb\u7ecd\u5e38\u89c1\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u8ba9\u4ecb\u7ecd\u5feb\u901f\u6392\u5e8f\u7684\u601d\u8def\uff0c\u95ee\u4e86\u5feb\u901f\u6392\u5e8f\u7684\u989d\u5916\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\u8ba9\u4ecb\u7ecd\u5806\u6392\u5e8f\u7684\u8fc7\u7a0b\u3002</li> <li>\u8ba1\u7b97\u5b57\u7b26\u4e32\uff0c\u5305\u542b\u6570\u5b57\u548c <code>+</code>, <code>-</code>, <code>()</code>, <code></code>\u3002\u4e0d\u9700\u8981\u8003\u8651\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u3002</li> <li>\u6709 <code>n</code> \u5757\u77f3\u5934\uff0cA \u548c B \u8f6e\u6d41\u62ff\uff0c\u6bcf\u6b21 1 ~ 3 \u5757\uff0c\u5148\u62ff\u5b8c\u8005\u80dc\u3002\u5047\u8bbe\u90fd\u505a\u6700\u4f18\u9009\u62e9\uff0c\u7ed9\u5b9a <code>n</code>\uff0c\u95ee\u5148\u624b\u80fd\u5426\u53d6\u80dc\u3002\u7b54\u6848\u662f\u5982\u679c <code>n % 4 == 0</code> \u5219\u5148\u624b\u8d1f\uff0c\u5426\u5219\u5148\u624b\u80dc\u3002</li> <li>\u5251\u6307 offer \u91cc\u7684\u9898\uff1ahttps://leetcode.cn/problems/qiu-12n-lcof/ \u3002</li> <li>\u6709\u4e09\u4e2a\u5bb9\u5668\uff0c10L / 7L / 3L\uff0c10L \u7684\u662f\u6ee1\u7684\uff0c\u53e6\u5916\u4e24\u4e2a\u662f\u7a7a\u7684\uff0c\u5982\u4f55\u5206\u51fa 2 \u4efd 5L \u7684\u6c34\u3002\u7b97\u4e86\u534a\u5929\u7b97\u51fa\u6765\u4e86XD \u767e\u5ea6\u80fd\u627e\u5230\u3002\u8fd9\u91cc https://en.wikipedia.org/wiki/Water_pouring_puzzle \u6709\u4e2a\u901a\u89e3\uff0c\u4f46\u662f\u6211\u611f\u89c9\u901a\u89e3\u8fd8\u4e0d\u5982\u81ea\u5df1\u63a8\u3002</li> <li>\u6709\u4e00\u6839\u6728\u68cd\uff0c\u5c06\u5176\u5207\u6210\u4e09\u6bb5\uff0c\u95ee\u4e09\u6bb5\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u7684\u6982\u7387\u662f\u591a\u5c11\u3002\u540e\u6765\u67e5\u5230\u8fd9\u4e2a\u95ee\u9898\u53eb The Broken Stick Problem\u3002\u6211\u7684\u505a\u6cd5\u662f\u7ebf\u6027\u89c4\u5212\uff0c\u68a6\u56de\u9ad8\u4e2d\u6570\u5b66\u3002\u7b54\u6848\u662f \u00bc\u3002</li> <li>\u7ecf\u5178\u9898\u76ee\u63a5\u96e8\u6c34\u3002</li> <li>2 \u624b\u4ea4\u6613\u6700\u591a\u8d5a\u591a\u5c11\uff08\u8fd9\u9898\u8003\u8fc7\u4e24\u6b21\uff09</li> <li>\u6709 N \u4e2a\u5927\u6587\u4ef6\uff0c\u8868\u793a N \u652f\u80a1\u7968\u7684\u4ea4\u6613\u8bb0\u5f55\uff0c\u6bcf\u4e2a\u6587\u4ef6\u7684\u6bcf\u4e00\u884c\u662f <code>&lt;timestamp, record&gt;</code>\uff0c\u4e14\u5404\u6587\u4ef6\u5185 timestamp \u9012\u589e\u3002\u8bbe\u8ba1\u7b97\u6cd5\u5c06\u8fd9 N \u4e2a\u6587\u4ef6 merge \u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4ecd\u7136\u4fdd\u6301 timestamp \u9012\u589e\u3002\u76f8\u540c timestamp \u7684\u987a\u5e8f\u4efb\u610f\u3002</li> <li>\u6709\u4e24\u4e2a\u94fe\u8868\uff0c\u5728\u540e\u9762\u67d0\u4e2a\u7ed3\u70b9\u76f8\u4ea4\uff0c\u8ba9\u627e\u51fa\u8fd9\u4e2a\u7ed3\u70b9\u3002\u662f\u8fd9\u4e2a\u9898 https://leetcode.cn/problems/intersection-of-two-linked-lists/</li> <li>\u7ed9\u4e00\u4e2a int \u6570\u7ec4\uff0c\u95ee\u662f\u5426\u6709\u548c\u4e3a 0 \u7684\u8fde\u7eed\u7684\u5b50\u6570\u7ec4\u3002</li> <li>\u7ecf\u5178\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c\uff1ahttps://leetcode.cn/problems/sliding-window-maximum/ \u3002</li> </ol>"},{"location":"interviews/quant/#4-\u5176\u4ed6","title":"4 \u5176\u4ed6","text":""},{"location":"interviews/quant/#session-1-hr","title":"Session 1 (HR)","text":"<p>\u95ee\u4e86\u54ea\u91cc\u4eba\u3001\u9ad8\u8003\u6210\u7ee9\u548c\u6392\u540d\uff0c\u4e3a\u4ec0\u4e48\u9009\u62e9\u6d59\u5927\u7684\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u3002\u95ee\u4e86\u5b9e\u4e60\u671f\u95f4\u7684\u5de5\u4f5c\u60c5\u51b5\u3002\u95ee\u4e86\u4e3a\u4ec0\u4e48\u6ca1\u6709\u8f6c\u6b63\u3002\u95ee\u4e86\u671f\u671b\u7684\u5de5\u4f5c\u5730\u548c\u85aa\u8d44\u3002\u95ee\u4e86\u6bd5\u4e1a\u4e4b\u524d\u6709\u6ca1\u6709\u673a\u4f1a\u63d0\u524d\u5230\u516c\u53f8\u5b9e\u4e60\u3002</p> <p>\u95ee\u4e86\u76ee\u524d\u662f\u53ea\u5728\u770b\u91cf\u5316\u8fd8\u662f\u4e5f\u5728\u770b\u5176\u4ed6\u7684\u3002\u95ee\u4e86\u6295\u4e86\u54ea\u51e0\u5bb6\u3002\u5bf9\u4e8e\u516c\u53f8\u66f4\u5173\u6ce8\u54ea\u4e9b\u65b9\u9762\u3002</p> <p>\u95ee\u4e86\u5728\u5de5\u4f5c\u4e4b\u5916\u6709\u4ec0\u4e48\u7231\u597d\u3002\u95ee\u4e86\u6297\u538b\u80fd\u529b\u3001\u81ea\u9a71\u529b\u4e4b\u7c7b\u7684\u81ea\u6211\u8bc4\u4ef7\u3002</p>"},{"location":"interviews/quant/#session-2_3","title":"Session 2","text":"<p>\u95ee\u6211\u4e3a\u4ec0\u4e48\u5bf9\u91cf\u5316\u611f\u5174\u8da3\uff0c\u6211\u8bf4\u6211\u5bf9 C++ \u6bd4\u8f83\u611f\u5174\u8da3\uff0c\u4f4e\u5ef6\u8fdf\u9ad8\u6027\u80fd\u80fd\u53d1\u6325\u6211 C++ \u548c\u5176\u4ed6\u65b9\u9762\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u4ed6\u8ba4\u4e3a\u8fd9\u4e9b\u4f18\u5316\u662f\u91cf\u5316\u7684\u300c\u7b2c\u4e00\u9636\u6bb5\u300d\uff0c\u6210\u719f\u7684\u516c\u53f8\u90fd\u505a\u7684\u5dee\u4e0d\u591a\u4e86\u3002\u91cf\u5316\u7684\u95ee\u9898\u4e0d\u80fd\u901a\u8fc7\u5806\u751f\u4ea7\u529b\u89e3\u51b3\uff0c\u4e5f\u4e0d\u50cf\u6e38\u620f\u548c\u4e92\u8054\u7f51\u90a3\u6837\u5b58\u5728\u4f18\u5316\u7684\u4e0a\u9650\u3002</p> <p>\u95ee\u6211\u6709\u6ca1\u6709\u770b\u8fc7\u4f18\u5316\u76f8\u5173\u7684\u65b0\u4e1c\u897f\uff0c\u6211\u8bf4\u6ca1\u6709\u3002\u4ed6\u8bf4\u6700\u597d\u8fd8\u662f\u8981\u6709\u5173\u6ce8\u65b0\u4e1c\u897f\u7684\u4e60\u60ef\u3002</p> <p>\u95ee\u6211\u8ba4\u4e3a\u7ecf\u8fc7\u53d1\u5c55\u4e4b\u540e\u7684\u80fd\u529b\u80fd\u4e3a\u91cf\u5316\u53d1\u6325\u600e\u4e48\u6837\u7684\u4f5c\u7528\u3002</p>"},{"location":"interviews/quant/#\u96f6\u6563\u7684\u95ee\u9898_3","title":"\u96f6\u6563\u7684\u95ee\u9898","text":"<ol> <li>\u770b\u5230\u6211\u5b66\u7f16\u7a0b\u8bed\u8a00\uff0c\u95ee\u5bf9 lambda calculus \u662f\u5426\u6709\u4e86\u89e3\u3002</li> <li>\u5982\u679c\u7ed9\u4e00\u4e2a\u6027\u80fd\u6bd4\u8f83\u5dee\u7684\u7a0b\u5e8f\u8981\u4f18\u5316\uff0c\u6709\u4ec0\u4e48\u6837\u7684\u601d\u8def\u3002\u8bb2\u4e86\u627e\u6700\u8017\u65f6\u7684\u90e8\u5206\uff0c\u4e3e\u4e86\u7b97\u6cd5\u590d\u6742\u5ea6\u6216\u8005\u5e38\u6570\u9ad8\u3001\u4f7f\u7528\u9519\u8bef\u7684\u7c7b\u3001\u5206\u652f\u3001cache \u4e4b\u7c7b\u3002</li> <li>\u7ed9\u4e00\u676f\u5976\u548c\u4e00\u676f\u8336\uff0c\u505a\u5976\u8336\u3002\u95ee\u662f\u628a\u5976\u5012\u5230\u8336\u91cc\u597d\u559d\u8fd8\u662f\u8336\u5012\u5230\u5976\u91cc\u597d\u559d\u3002\u9762\u8bd5\u5b98\u8bf4\u8fd9\u4e2a\u95ee\u9898\u662f\u300c\u4e3a\u4e86\u8003\u5bdf\u83b7\u53d6\u4fe1\u606f\u548c\u601d\u8003\u95ee\u9898\u7684\u5168\u9762\u5ea6\uff0c\u8fd8\u6709\u601d\u7ef4\u53d1\u6563\u7684\u7a0b\u5ea6\u300d\u3002</li> <li>\u8ba9\u63cf\u8ff0\u4ea4\u6362\u673a\u66f4\u65b0\u8f6c\u53d1\u8868\u7684\u8fc7\u7a0b\u3002</li> <li>\u8ba9\u8bf4\u660e TCP \u548c UDP \u7684\u533a\u522b\u3002\u4e3a\u4ec0\u4e48\u6709\u4e9b\u9700\u8981\u53ef\u9760\u4f20\u8f93\u7684\u4e5f\u7528 UDP \u4e0d\u7528 TCP\uff0c\u4e3a\u4ec0\u4e48\u3002TCP \u54ea\u4e9b\u5730\u65b9\u4f1a\u9020\u6210\u6548\u7387\u4e0b\u964d\u3002</li> <li>\u770b\u5230\u6211\u662f\u4fe1\u5b89\u7684\uff0c\u95ee SYN Flood \u6709\u4ec0\u4e48\u89e3\u51b3\u65b9\u6848\u3002</li> <li>\u95ee\u73e0\u6d77\u53d1\u4fe1\u606f\u5230\u4e0a\u6d77\uff0c\u5ef6\u8fdf\u5927\u6982\u662f\u591a\u5c11\uff1b\u76f8\u90bb\u7684\u4e24\u53f0\u673a\u5668\u4e4b\u95f4\u53d1\u4fe1\u606f\uff0c\u5ef6\u8fdf\u5927\u6982\u662f\u591a\u5c11\u3002</li> <li>\u4ea4\u6613\u6240\u5982\u4f55\u8bbe\u8ba1\u6765\u4f7f\u5f97\u4fdd\u8bc1\u63a5\u6536\u7684\u5404\u4e2a\u7528\u6237\u516c\u5e73\u3002\uff08\u6211\u4e0d\u592a\u4f1a\uff0c\u4ed6\u7b80\u5355\u89e3\u91ca\u7684\u65f6\u5019\u597d\u50cf\u63d0\u5230\u4e86 TCP \u4e0d\u80fd\u5e7f\u64ad\uff09</li> <li>\u8fd8\u6709\u54ea\u4e9b\u6211\u4e86\u89e3\u4f46\u662f\u4ed6\u6ca1\u95ee\u5230\u7684\u3002</li> </ol>"},{"location":"math_ds_algo/","title":"\u6570\u5b66\u3001\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5","text":"<p> \u7ea6 9 \u4e2a\u5b57 </p>"},{"location":"math_ds_algo/getting_started/","title":"\u5165\u95e8\u8def\u7ebf","text":"<p> \u7ea6 1305 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Warning</p> <p>\u4ec5\u6839\u636e\u4e2a\u4eba\u7ecf\u9a8c\u63d0\u4f9b\u5165\u95e8\u5efa\u8bae\uff1b\u6211\u6bd4\u8f83\u83dc\u6240\u4ee5\u53ef\u80fd\u4e0d\u591f\u5408\u7406\u3002\u5982\u679c\u6709\u4fee\u6539\u6216\u8005\u8865\u5145\u5efa\u8bae\uff0c\u6b22\u8fce\u968f\u65f6\u63d0\u51faQWQ\uff01</p>"},{"location":"math_ds_algo/getting_started/#1-\u57fa\u7840","title":"1 \u57fa\u7840","text":"<p>\u8fd9\u4e00\u8282\u7684\u5185\u5bb9\u90fd\u4e0d\u4f1a\u5355\u72ec\u51fa\u9898\uff0c\u53ea\u662f\u6700\u57fa\u672c\u7684\u6982\u5ff5\u548c\u80fd\u529b\u3002</p> <ul> <li>\u8bed\u8a00\u57fa\u7840</li> <li>\u590d\u6742\u5ea6\u5206\u6790<ul> <li>\u8981\u80fd\u6839\u636e\u9898\u76ee\u6570\u636e\u8303\u56f4\u5f97\u77e5\u7b97\u6cd5\u590d\u6742\u5ea6\u7684 \u8981\u6c42 \u6216 \u542f\u53d1\u3002\u5373\uff0c\u80fd\u591f\u5224\u65ad\u81ea\u5df1\u60f3\u51fa\u7684\u7b97\u6cd5\u662f\u5426\u80fd\u591f\u4e0d\u8d85\u65f6\u3001\u4e0d\u8d85\u7a7a\u95f4\uff0c\u4ee5\u53ca\u80fd\u591f\u6839\u636e\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\u731c\u5230\u6709\u54ea\u4e9b\u53ef\u80fd\u7684\u7b97\u6cd5\u3002</li> <li>\u6682\u65f6\u4e0d\u9700\u8981\u638c\u63e1\u4e3b\u5b9a\u7406\u548c\u644a\u8fd8\u5206\u6790\uff08\u52bf\u80fd\u5206\u6790\uff09\u3002</li> </ul> </li> <li>\u6392\u5e8f<ul> <li>\u4f1a\u7528 <code>std::sort</code> \u5c31\u884c\uff1b</li> <li>\u77e5\u9053 <code>std::sort</code> \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(\\Theta(N\\log N)\\)\uff1b\u77e5\u9053 \\(\\Theta(N\\log N)\\) \u662f \u57fa\u4e8e\u6bd4\u8f83 \u7684\u6392\u5e8f\u7b97\u6cd5\u7684\u7406\u8bba\u4e0b\u754c\uff0c\u60f3\u8981\u7a81\u7834\u8fd9\u4e00\u4e0b\u754c\uff0c\u53ea\u80fd\u4f7f\u7528\u4e0d\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u6bd4\u5982\u8ba1\u6570\u6392\u5e8f\uff1b</li> <li>\u638c\u63e1 \u8ba1\u6570\u6392\u5e8f \u5e76\u7406\u89e3\u5176\u601d\u60f3\u3002</li> </ul> </li> <li>\u6808\u548c\u961f\u5217\uff1a\u77e5\u9053\u6982\u5ff5\uff0c\u8111\u5b50\u91cc\u6709\u8fd9\u4e2a\u4e1c\u897f\u8bb0\u5f97\u7528\u5c31\u884c\u3002</li> <li>\u9012\u5f52</li> </ul>"},{"location":"math_ds_algo/getting_started/#2-\u6bd4\u8f83\u5e38\u7528\u7684","title":"2 \u6bd4\u8f83\u5e38\u7528\u7684","text":"<p>Warning</p> <p>\u5b66\u4e60\u5404\u79cd\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u5206\u6790\u5b83\u4eec\u7684\u590d\u6742\u5ea6\uff01</p>"},{"location":"math_ds_algo/getting_started/#\u7b97\u6cd5","title":"\u7b97\u6cd5","text":"<ul> <li>\u524d\u7f00\u548c\uff1a\u6781\u5176\u5e38\u7528\u7684\u7b97\u6cd5\uff0c\u591a\u7ec3\u4e60\uff0c\u638c\u63e1\u5176\u601d\u60f3\u3002</li> <li>\u8d2a\u5fc3\uff1a\u91cd\u70b9\u662f\u8981\u80fd\u591f\u5927\u6982\u5224\u65ad\u8d2a\u5fc3\u662f\u5426\u6b63\u786e\u3002\u5927\u6982\u7684\u8bc1\u660e\u601d\u8def\u662f\u300c\u5982\u679c\u67d0\u79cd\u4e0d\u7528\u8d2a\u5fc3\u7b56\u7565\u7684\u89e3\u662f\u4e00\u4e2a\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u6309\u8d2a\u5fc3\u7b56\u7565\u5f97\u5230\u7684\u89e3\u4e00\u5b9a\u4e0d\u6bd4\u5b83\u5dee\uff0c\u56e0\u6b64\u8d2a\u5fc3\u5f97\u5230\u7684\u89e3\u4e5f\u662f\u4e00\u4e2a\u6700\u4f18\u89e3\u300d\u3002</li> <li>\u4e8c\u5206\u67e5\u627e\uff1a\u638c\u63e1 <code>std::lower_bound</code> \u548c <code>std::upper_bound</code> \u7684\u4f7f\u7528\u80fd\u89e3\u51b3\u5927\u591a\u6570\u60c5\u51b5\u3002</li> <li>\u4e8c\u5206\u7b54\u6848\uff1a\u529b\u6263 T3 \u548c T4 \u597d\u50cf\u51fa\u73b0\u5f97\u6bd4\u8f83\u591a\u3002</li> <li>DFS \u548c BFS</li> <li>\u53cc\u6307\u9488\uff1aLeetCode \u91cc\u6bd4\u8f83\u5e38\u7528\u7684\u7b97\u6cd5\uff0c\u6709\u5f88\u591a\u53d8\u5316\u3002</li> <li>\u52a8\u6001\u89c4\u5212\u3002\u7b80\u5355\u7684\u52a8\u6001\u89c4\u5212\u96be\u5ea6\u5e76\u4e0d\u9ad8\uff0c\u4f1a\u51fa\u73b0\u5728 LeetCode T2 \u96be\u5ea6\u7684\u9898\u76ee\u91cc\u3002\u4e0d\u8fc7\u52a8\u6001\u89c4\u5212\u4e0a\u9650\u5f88\u9ad8\u3002</li> <li>\u54c8\u5e0c\uff1a\u77e5\u9053\u6982\u5ff5\uff0c\u77e5\u9053 <code>std::unordered_set</code> \u548c <code>std::unordered_map</code> \u662f\u7528\u54c8\u5e0c\u505a\u7684\uff0c\u4f1a\u7528\u8fd9\u4e24\u4e2a\u5bb9\u5668\u3002</li> </ul>"},{"location":"math_ds_algo/getting_started/#\u56fe\u548c\u6811\u57fa\u7840","title":"\u56fe\u548c\u6811\u57fa\u7840","text":"<p>\u56fe\u76f8\u5173\u7684\u9898\u5728 LeetCode \u5468\u8d5b\u91cc\u6bd4\u8f83\u5c11\uff0c\u56e0\u6b64\u6211\u505a\u7684\u4e5f\u6bd4\u8f83\u5c11QWQ</p> <ul> <li>\u56fe\u7684\u5b58\u50a8\uff1a\u90bb\u63a5\u77e9\u9635\u548c\u90bb\u63a5\u8868\u8868\u793a\uff0c\u77e5\u9053\u5176\u9002\u7528\u573a\u666f\uff1b</li> <li>\u56fe\u4e0a\u7684 DFS \u548c BFS\uff1b</li> <li>\u62d3\u6251\u6392\u5e8f\uff1b</li> <li>\u77e5\u9053 \u6811 \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u56fe\u3002</li> </ul>"},{"location":"math_ds_algo/getting_started/#\u6570\u636e\u7ed3\u6784","title":"\u6570\u636e\u7ed3\u6784","text":"<ul> <li>\u5e76\u67e5\u96c6\uff1a\u4e5f\u6bd4\u8f83\u5e38\u7528\uff0c\u4f46\u662f\u901a\u5e38\u8981\u80fd\u81ea\u5df1\u770b\u5f97\u51fa\u6765\u662f\u7528\u5e76\u67e5\u96c6\u3002</li> <li>\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\u77e5\u9053\u6982\u5ff5\u5c31\u884c\uff0c\u4e0d\u9700\u8981\u81ea\u5df1\u624b\u5199\uff1b\u77e5\u9053\u5b83\u5728\u590d\u6742\u5ea6\u4e0a\u7684\u95ee\u9898\u3002</li> <li>\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\u77e5\u9053\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u7684\u5c31\u884c\uff1b\u77e5\u9053\u7ea2\u9ed1\u6811\u662f\u5176\u4e2d\u4e00\u79cd\uff0c<code>std::set</code> \u548c <code>std::map</code> \u662f\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\uff0c\u4f1a\u7528\u8fd9\u4e24\u4e2a\u5bb9\u5668\u3002</li> <li>\u5355\u8c03\u6808 &amp; \u5355\u8c03\u961f\u5217\uff1a\u4e5f\u7b97\u5e38\u7528\u3002</li> </ul>"},{"location":"math_ds_algo/getting_started/#3-\u4e0d\u90a3\u4e48\u5e38\u7528\u4f46\u662f\u4e5f\u6bd4\u8f83\u7b80\u5355\u5efa\u8bae\u5b66\u4e00\u4e0b\u7684","title":"3 \u4e0d\u90a3\u4e48\u5e38\u7528\uff0c\u4f46\u662f\u4e5f\u6bd4\u8f83\u7b80\u5355\u5efa\u8bae\u5b66\u4e00\u4e0b\u7684","text":""},{"location":"math_ds_algo/getting_started/#\u56fe\u8bba","title":"\u56fe\u8bba","text":"<ul> <li>\u6700\u77ed\u8def</li> <li>\u6700\u5c0f\u751f\u6210\u6811</li> </ul>"},{"location":"math_ds_algo/getting_started/#\u7b97\u6cd5_1","title":"\u7b97\u6cd5","text":"<ul> <li>\u79bb\u6563\u5316\uff1a\u6709\u4e00\u4e9b\u7b97\u6cd5\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u548c\u6570\u636e\u8303\u56f4\u6709\u5173\uff1b\u5728\u6570\u636e\u8303\u56f4\u8f83\u5927\u3001\u6570\u636e\u6570\u76ee\u76f8\u5bf9\u8f83\u5c0f\uff0c\u6216\u8005\u6570\u636e\u4e0d\u662f\u6574\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u79bb\u6563\u5316\u6765\u7f29\u5c0f\u6570\u636e\u8303\u56f4\u540c\u65f6\u4fdd\u6301\u6570\u636e\u987a\u5e8f\u3002</li> <li>\u5206\u5757\u601d\u60f3\u3002\u4e00\u4e2a\u7ecf\u5178\u7684\u4f8b\u5b50\u662f \u5757\u72b6\u6570\u7ec4\u3002\u6211\u4e2a\u4eba\u7684\u611f\u89c9\u662f\uff0c\u5206\u5757\u4e00\u822c\u90fd\u4e0d\u662f\u6700\u4f18\u7684\u6b63\u89e3\uff0c\u4f46\u662f\u5f88\u591a\u65f6\u5019\u786e\u5b9e\u4e5f\u80fd\u505a\u51fa\u6765\u8fd9\u4e2a\u9898\u3002</li> <li>\u5206\u6cbb</li> <li>\u9ad8\u7cbe\u5ea6\uff1a\u6bd4\u8d5b\u7684\u65f6\u5019\u5076\u5c14\u4f1a\u51fa\u73b0\u6570\u636e\u5927\u5f97\u79bb\u8c31\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u8ba1\u7b97\u3002\u638c\u63e1\u57fa\u672c\u8ba1\u7b97\u80fd\u529b\u5373\u53ef\u3002</li> <li>\u5feb\u901f\u5e42\uff1a\u5076\u5c14\u7528\u5230\u7684\u5feb\u901f\u8ba1\u7b97 \\(a^n\\) \u7684\u65b9\u6cd5\uff1b\u5176\u601d\u60f3\u6bd4\u8f83\u6709\u542f\u53d1\u6027\u3002</li> <li>\u6392\u5217\u7ec4\u5408\uff1a\u53ef\u4ee5\u590d\u4e60\u4e00\u4e0b\uff0c\u5076\u5c14\u4f1a\u7528\u5230\u3002</li> </ul>"},{"location":"math_ds_algo/getting_started/#\u6570\u636e\u7ed3\u6784_1","title":"\u6570\u636e\u7ed3\u6784","text":"<ul> <li>\u94fe\u8868</li> <li>\u7ebf\u6bb5\u6811 / \u6811\u72b6\u6570\u7ec4\uff1a\u5728 LeetCode \u91cc\uff0c\u5e94\u8be5\u6ca1\u6709\u4e0a\u8ff0\u5185\u5bb9\u89e3\u51b3\u4e0d\u4e86\u7684\u95ee\u9898\u4e86\u3002\u4e0d\u8fc7 \u7ebf\u6bb5\u6811 / \u6811\u72b6\u6570\u7ec4 \u662f\u4e24\u79cd\u4e0d\u90a3\u4e48\u96be\u4f46\u662f\u6bd4\u8f83\u300c\u6d41\u6c13\u300d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u4eec\u53ef\u4ee5\u8f7b\u6613\u89e3\u51b3\u5f88\u591a\u95ee\u9898\uff0c\u56e0\u6b64\u53ef\u4ee5\u5b66\u4e00\u4e0b\u3002</li> </ul>"},{"location":"math_ds_algo/getting_started/#4-\u8fd9\u7bc7\u6587\u7ae0\u91cc\u6ca1\u6709\u4ecb\u7ecd\u4ec0\u4e48","title":"4 \u8fd9\u7bc7\u6587\u7ae0\u91cc\u6ca1\u6709\u4ecb\u7ecd\u4ec0\u4e48","text":"<p>\u6211\u4e2a\u4eba\u6c34\u5e73\u6bd4\u8f83\u83dc\uff0c\u6c34\u5e73\u57fa\u672c\u4e5f\u5c31\u9650\u4e8e LeetCode Mid+/Hard-\uff0c\u56e0\u6b64\u4e0a\u8ff0\u57fa\u672c\u4e0a\u5c31\u662f\u6211\u638c\u63e1\u7684\u5168\u90e8\u5185\u5bb9\u4e86\u3002\u5b66\u4f1a\u300c\u600e\u4e48\u7528\u300d\u6bd4\u638c\u63e1\u4e0a\u8ff0\u6570\u636e\u7ed3\u6784\u3001\u7b97\u6cd5\u548c\u601d\u60f3\u672c\u8eab\u66f4\u4e3a\u91cd\u8981\u548c\u56f0\u96be\u3002</p> <p>\u9274\u4e8e\u6211\u7684\u4e2a\u4eba\u6c34\u5e73\uff0c\u6211\u6240\u4ecb\u7ecd\u7684\u5185\u5bb9 \u53ea\u5305\u542b \u4e3a\u4e86\u505a LeetCode \u5468\u8d5b\u53ef\u80fd\u9700\u8981\u638c\u63e1\u7684\u77e5\u8bc6\u548c\u80fd\u529b\uff1b\u4f46 \u4e0d\u5305\u542b\uff1a</p> <ol> <li>\u8ba1\u7b97\u673a\u79d1\u73ed\u751f\u5e94\u5f53\u5177\u6709\u7684\u66f4\u8fdb\u4e00\u6b65\u7684\u4e86\u89e3\u548c\u8ba4\u8bc6\uff1b</li> <li>\u8d85\u51fa\u6211\u4e2a\u4eba\u80fd\u529b\u8303\u56f4\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff0c\u5c24\u5176\u662f\u5173\u4e8e\u56fe\u8bba\uff08\u7f51\u7edc\u6d41\u7b49\uff09\u3001\u6811\uff08LCA\u3001\u76f4\u5f84\u3001\u91cd\u5fc3\u7b49\uff09\u3001\u5b57\u7b26\u4e32\uff08\u5339\u914d\u7b49\uff09\u3001\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\u7b49\u7b49\u6211\u53ef\u80fd\u89c1\u8fc7\u9898\u4f46\u662f\u6ca1\u5b66\u8fc7\u7684\u5185\u5bb9\uff0c\u8fd8\u6709\u8ba1\u7b97\u51e0\u4f55\u7b49\u7b49\u6211\u8fde\u9898\u90fd\u6ca1\u89c1\u8fc7\u7684\u5185\u5bb9\u3002\u8fd9\u4e9b\u5185\u5bb9\uff0c\u53ef\u4ee5\u81ea\u5df1\u5728 OI Wiki \u4e0a\u627e\u627e\u770b\u3002</li> </ol> <p>\u5982\u679c\u6709\u4ec0\u4e48\u4fee\u6539\u6216\u8005\u8865\u5145\u5efa\u8bae\uff08\u4f8b\u5982\u6211\u9057\u6f0f\u4e86\u54ea\u4e9b\u5e38\u89c1\u7684\u5185\u5bb9\uff09\uff0c\u8bf7\u5728\u8bc4\u8bba\u533a\u6307\u51fa~\u611f\u8c22\uff01</p>"},{"location":"other_courses/","title":"Index","text":"<p> \u7ea6 16 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u5176\u4ed6\u6ca1\u90a3\u4e48\u91cd\u8981\u7684\u8bfe\u7a0b\u7684\u4e00\u4e9b\u8bb0\u5f55</p>"},{"location":"other_courses/theory_of_computation/","title":"\u8ba1\u7b97\u7406\u8bba","text":"<p> \u7ea6 2328 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u8bfe\u5b83\u4e0d\u8fdb\u8111\u5b50\u554a\uff01</p> <p>\u8865\u5929\u7528\u7684\uff0c\u4e0d\u5168\u3002\u6709\u95ee\u9898\u8bf7\u52a1\u5fc5\u544a\u8bc9\u6211TAT</p> <p>Admonitions \u4f7f\u7528\u8bf4\u660e\uff1a</p> dangerwarningnoteexampletipsinfo <p>Danger</p> <p>\u653e\u6613\u9519\u70b9</p> <p>Warning</p> <p>\u653e\u9519\u8fc7\u7684\u9898</p> <p>Note</p> <p>\u653e\u8981\u4f1a\u8bc1\u7684 lemma</p> <p>Example</p> <p>\u653e\u8981\u4f1a\u505a\u7684\u9898</p> <p>Tips</p> <p>\u653e\u4e00\u4e9b\u601d\u8def</p> <p>Info</p> <p>\u5176\u4ed6</p>"},{"location":"other_courses/theory_of_computation/#1-finite-automata--regular-languages","title":"1 Finite Automata &amp; Regular Languages","text":""},{"location":"other_courses/theory_of_computation/#11-language","title":"1.1 Language","text":"<ul> <li>symbol</li> <li>alphabet \\(\\Sigma\\)</li> <li>string \\(w\\) (length of string \\(|w|\\), empty string \\(e\\))</li> <li>\\(\\Sigma^N\\), \\(\\Sigma^*\\), \\(\\Sigma^+\\) </li> <li>\u5b57\u7b26\u4e32\u64cd\u4f5c concatenation \\(w_1w_2\\), exponentiation \\(w^i\\), reversal \\(w^R\\)</li> <li>language \\(L\\subseteq \\Sigma^*\\)<ul> <li>\u6bcf\u4e2a\u5224\u5b9a\u95ee\u9898\u90fd\u548c\u4e00\u4e2a language \u5bf9\u5e94</li> </ul> </li> </ul>"},{"location":"other_courses/theory_of_computation/#12-deterministic-finite-automata","title":"1.2 Deterministic Finite Automata","text":"<ul> <li>DFA \\(M = (K, \\Sigma, \\delta, s, F)\\)<ul> <li>\u5176\u4e2d transition function \\(\\delta : K \\times \\Sigma \\to K\\)</li> </ul> </li> <li>configuration \\((q, w) \\in K \\times \\Sigma^*\\)</li> <li>yields in 1 step with M \\(\\vdash_M\\)</li> <li>yields with M \\(\\vdash_M^*\\)</li> <li>\u5b9a\u4e49\u4e86 \\(M\\) accept \u5b57\u7b26\u4e32\u7684\u6761\u4ef6</li> <li>\u5b9a\u4e49\u4e86 \\(M\\) accept \u7684\u8bed\u8a00 \\(L(M)\\)</li> </ul> <p>Danger</p> <p>\u753b DFA \u7684\u65f6\u5019\uff0c\u4efb\u4f55\u4e00\u4e2a\u72b6\u6001\u90fd\u8981\u5305\u542b\u6240\u6709\u53ef\u80fd symbol \u7684\u5bf9\u5e94\u5173\u7cfb\uff01\u5373 \\(\\forall p \\in K, \\forall c \\in \\Sigma, \\exists\\ q \\in K \\text{ s.t. } \\delta(p, c) = q\\)</p>"},{"location":"other_courses/theory_of_computation/#13-non-deterministic-finite-automata","title":"1.3 Non-Deterministic Finite Automata","text":"<ul> <li>NFA \\(M = (K, \\Sigma, \\Delta, s, F)\\)<ul> <li>\u5176\u4e2d transition relation \\(\\Delta\\subseteq K\\times (\\Sigma\\cup \\{e\\}) \\times K\\)</li> </ul> </li> <li>configuration \\((q, w) \\in K \\times \\Sigma^*\\)</li> <li>\u5b9a\u4e49\u4e86 yields in 1 step with M \\(\\vdash_M\\), yields with M \\(\\vdash_M^*\\), \\(M\\) accept \u5b57\u7b26\u4e32\u7684\u6761\u4ef6, \\(M\\) accept \u7684\u8bed\u8a00 \\(L(M)\\)</li> <li>Theorem. \u4efb\u610f NFA \\(M\\) \u90fd\u80fd\u627e\u5230\u4e00\u4e2a DFA \\(M'\\) \u4f7f\u5f97 \\(L(M) = L(M')\\)\uff0c\u53cd\u4e4b\u540c\u7406\u3002\\(M\\) \u5230 \\(M'\\) \u7684\u6784\u9020\u601d\u8def\u662f\uff0c\\(M'\\) \u4e2d\u7684\u72b6\u6001\u96c6\u5408 \\(K'\\) \u662f \\(M\\) \u4e2d\u72b6\u6001\u96c6\u5408 \\(K\\) \u7684 power set\u3002\u6784\u9020\u65b9\u6cd5\u662f\uff0c\\(s'\\) \u662f \\(s\\) \u7684 \\(\\epsilon\\)-closure\uff0c\u7136\u540e\u4ece\u5b83\u5f00\u59cb\u5411\u5916\u5f15\u8fb9 (See here)\u3002</li> </ul> <p>Warning</p> <p>Assignment 2 Q4. \u5c06 NFA \u8f6c\u4e3a DFA\uff1a </p> \u7b54\u6848 <p></p>"},{"location":"other_courses/theory_of_computation/#14-regular-languages","title":"1.4 Regular Languages","text":"<ul> <li>A language is regular if it is accepted by some DFA or NFA</li> </ul> <p>Note</p> <p>\u8bfe\u7a0b\u548c\u4f5c\u4e1a\u4e2d\u6784\u9020 DFA \u8bc1\u660e\u4e86\uff0c\u5982\u679c \\(A\\) \u548c \\(B\\) \u662f regular languages\uff0c\\(A\\cup B\\), \\(A\\cap B\\), \\(\\bar A\\) \u90fd\u662f regular \u7684\uff1b\u6784\u9020 NFA \u8bc1\u660e\u4e86\uff0c\u5982\u679c \\(A\\) \u662f regular \u7684\uff0c\u90a3\u4e48 \\(A*\\) \u662f regular \u7684\u3002</p> \u8bed\u8a00\u7c7b\u578b / \u5c01\u95ed\u6027 \\(\\cup\\) \\(\\cap\\) \\(\\circ\\) \\(\\bar A\\) \\(*\\) Regular <p>Note: \\(A - B = A \\cap \\bar B\\)\uff0c\u56e0\u6b64\u5982\u679c \\(\\cap\\) \u548c \\(\\bar A\\) \u90fd\u5c01\u95ed\uff0c\u5219\u5dee\u8fd0\u7b97\u4e5f\u5c01\u95ed\u3002</p>"},{"location":"other_courses/theory_of_computation/#15-regular-expression","title":"1.5 Regular Expression","text":"<ul> <li>\u7528\u6765\u63cf\u8ff0 Regular Languages</li> <li>\\(L(\\varnothing) = \\varnothing\\), \\(L(a) = \\{a\\}\\)</li> <li>\\(L(R_1\\cup R_2) = L(R_1) \\cup L(R_2)\\), \\(L(R_1R_2) = L(R_1)\\circ L(R_2), L(R^*) = L(R)^*\\)</li> <li>Precedence: \\(* &gt; \\circ &gt; \\cup\\)</li> <li>Theorem. \u4efb\u610f NFA \\(M\\) \u90fd\u80fd\u627e\u5230\u4e00\u4e2a REX \\(R\\) \u4f7f\u5f97 \\(L(M) = L(R)\\)\uff0c\u53cd\u4e4b\u540c\u7406\u3002\\(M\\) \u5230 \\(R\\) \u7684\u601d\u8def\u662f\uff0c\u9996\u5148\u7b80\u5316 \\(M\\) \u4f7f\u5f97\u4e0d\u5b58\u5728 \\(s\\) \u7684\u5165\u8fb9\u4e14 final state \u4ec5\u6709\u4e00\u4e2a\u4e14\u65e0\u51fa\u8fb9\uff1b\u7136\u540e\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a state\uff0c\u5373\u5bf9\u4e8e\u5b83\u7684\u6bcf\u4e00\u5bf9\u5165\u8fb9\u548c\u51fa\u8fb9\uff1a </li> </ul> <p>Warning</p> <p>Assignment 2 Q6. \u5199 REX\uff1a\\(\\{w\\in\\{a,b\\}^\u2217:\\text{ the number of }b\\text{'s in }w\\text{ is divisible by 3}\\}\\)</p> \u7b54\u6848 <p>\\(a^*\\cup(a^*ba^*ba^*ba^*)^*\\)</p>"},{"location":"other_courses/theory_of_computation/#16-pumping-theorem","title":"1.6 Pumping Theorem","text":"<p>Theorem. \u82e5 \\(L\\) \u662f\u4e00\u4e2a regular language\uff0c\u5219\u5b58\u5728 pump length \\(p\\in \\mathbb{Z}^*\\) \u4f7f\u5f97 \\(\\forall w\\in L\\) with \\(|w| \\ge p\\) \u53ef\u88ab\u5206\u4e3a 3 \u4e2a\u90e8\u5206 \\(w = xyz\\)\uff0c\u6ee1\u8db3\uff1a</p> <ol> <li>\\(\\forall i \\ge 0, xy^iz\\in L\\)</li> <li>\\(|y| &gt; 0\\)</li> <li>\\(|xy| \\le p\\)</li> </ol> <p>\u6cf5\u5b9a\u7406\u662f RL \u7684\u4e00\u4e2a\u5fc5\u8981\u4e0d\u5145\u5206\u6761\u4ef6\u3002</p> <p>Example</p> <p>\u8bfe\u7a0b\u4e2d\u7528\u6cf5\u5b9a\u7406\u8bc1\u660e\u4e86 \\(\\{0^n1^n : n \\ge 0\\}\\) \u4e0d\u662f regular \u7684\uff0c\u8bfe\u540e\u9898\u76ee\u4e2d\u4e5f\u8bc1\u660e\u4e86 \\(\\{ww : w \\in \\{a, b\\}^*\\}\\) \u4e0d\u662f regular \u7684\u3002</p> <p>\u8fd9\u79cd\u8bc1\u660e\u901a\u5e38\u7684\u601d\u8def\u662f\uff0c\u5047\u8bbe \\(L\\) \u662f RL\uff0c\u4ece\u800c\u5047\u8bbe pump length \u4e3a \\(p\\)\uff0c\u7136\u540e\u6784\u9020\u4e00\u4e2a\u542b \\(p\\) \u4e14\u5c5e\u4e8e \\(L\\) \u7684 string\uff0c\u8bc1\u660e\u5b83\u4e0d\u7b26\u5408 pumping theorem\u3002</p> <p>Info</p> <p>\u5e38\u89c1\u7684 non-regular languages \u548c\u7b80\u8981\u8bc1\u660e\u601d\u8def (\\(p\\) \u662f pump length):</p> <ul> <li>\\(L = \\{0^n1^n\\}\\): \u9009 \\(0^p1^p\\)\uff0c\u5219 \\(xy^0z \\notin L\\) </li> <li>\\(L = \\{ww\\}\\), \\(L = \\{ww^R\\}\\): \u9009 \\(ab^pab^p\\) \u548c \\(b^paab^p\\)\uff0c\u5219 \\(xy^0z \\notin L\\) </li> <li>\\(L = \\{0^m1^n\\}\\) where \\(m &gt; n\\): \u9009 \\(0^{p+1}1^p\\)\uff0c\u5219 \\(xy^0z \\notin L\\) (\\(m\\ge n\\) \u4e5f\u4e00\u6837)</li> <li>\\(L = \\{0^m1^n\\}\\) where \\(m &lt; n\\): \u9009 \\(0^p1^{p+1}\\)\uff0c\u5219 \\(xyyz \\notin L\\) (\\(m\\le n\\) \u4e5f\u4e00\u6837)<ul> <li>\u6839\u636e\u4e0a\u9762\u4e24\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0cunion of 2 non-regular languages \u4e0d\u4e00\u5b9a\u662f non-regular \u7684\uff0c\u4f8b\u5982 \\(m &gt; n\\) \u548c \\(m \\le n\\) \u7684 union \u662f \\(0^*1^*\\)</li> </ul> </li> <li>\\(L = \\{0^m1^n\\}\\) where \\(m \\neq n\\): \u5047\u8bbe regular\uff0c\u5219 \\((\\{0^*1^*\\} - L) \\cap \\{0^*1^*\\} = \\{0^n1^n\\}\\) is regular\uff0c\u77db\u76fe</li> <li>\\(L = \\{1^n\\}\\) where \\(n\\) is prime: \u9009 \\(1^k\\) where \\(k &gt; p\\) and \\(k\\) is prime\uff0c\u82e5 \\(y = 1^s\\) where \\(0 &lt; s \\le p\\)\uff0c\u5219 \\(\\forall n \\ge 0, k + (n - 1)s\\) is prime\u3002\u4f46\u53d6 \\(n = k + 1\\) \u5f97\u5230 \\(k + ks = k(1 + s)\\) is not prime\uff0c\u77db\u76fe</li> <li>\\(L \\in \\{0, 1\\}^*\\) where numbers of 0's and 1's are equal: \u5047\u8bbe regular\uff0c\u5219 \\(L \\cup 0^*1^* = \\{0^n1^n\\}\\) is regular\uff0c\u77db\u76fe</li> </ul> <p>Tips</p> <p>Assignment 3 Q2 \u8fd9\u6837\u7684\u9898\uff1a</p> <p></p> <p>\u591a\u60f3\u4e00\u60f3 \\(\\{0^n1^n : n \\ge 0\\}\\) \u4e0d\u662f regular \u8fd9\u4e2a\u4f8b\u5b50\uff0c\u540c\u65f6\u5584\u7528\u5fb7\u6469\u6839\u5f8b\u4e4b\u7c7b\u7684\u5404\u79cd\u4e1c\u897f\u628a\u9700\u8981\u8bc1\u660e\u7684\u7ed3\u679c\u51d1\u51fa\u6765\uff0c\u80fd\u51d1\u51fa\u6765\u5c31\u662f regular \u7684\u3002</p>"},{"location":"other_courses/theory_of_computation/#2-pushdown-automata--context-free-languages","title":"2 PushDown Automata &amp; Context-Free Languages","text":"<p>Context-Free Languages \u6709 2 \u79cd\u63cf\u8ff0\uff1aContext-Free Grammar \u548c Pushdown Automata</p>"},{"location":"other_courses/theory_of_computation/#21-context-free-grammars","title":"2.1 Context-Free Grammars","text":"<ul> <li>CFG \\(G = (V, \\Sigma, S, R)\\)<ul> <li>\\(V\\) \u662f symbols, \\(\\Sigma\\) \u662f terminals, \\(V - \\Sigma\\) \u662f non-terminals</li> <li>\\(R\\) \u4e2d\u7684\u6bcf\u4e00\u6761\u5f62\u5982 \\(A\\to u\\) \u6216\u8bb0\u4e3a \\((A, u)\\)</li> <li>\\(S\\) \u662f start symbol</li> </ul> </li> <li>derives in 1 step with G \\(\\Rightarrow_G\\)</li> <li>derives with G \\(\\Rightarrow_G^*\\)</li> <li>\u5b9a\u4e49\u4e86 \\(G\\) generates \\(w\\) \u7684\u6761\u4ef6</li> <li>\u5b9a\u4e49\u4e86 \\(G\\) generates \u7684\u8bed\u8a00 \\(L(G)\\)</li> <li>\u5b9a\u4e49\u4e86 leftmost derivation / rightmost derivation / parse tree</li> <li>\u6b67\u4e49</li> </ul> <p>Warning</p> <p>Give a context-free grammar that generates the following language. Your grammar should use at most 2 non-terminals and should have at most 6 rules.</p> <p>\\(\\{w\\in\\{0,1\\}^\u2217: w\\) has equal number of \\(0\\)'s and \\(1\\)'s\\(\\}\\)</p> \u7b54\u6848 <p>\\(S \\to e\\ |\\ 1S0\\ |\\ 0S1\\)</p> <p></p>"},{"location":"other_courses/theory_of_computation/#22-chomsky-norm-form","title":"2.2 Chomsky Norm Form","text":"<ul> <li>A CFG is in CNF if each of its rules is of 3 forms:<ol> <li>\\(S \\to e\\)</li> <li>\\(A \\to BC\\quad (B, C \\in V - \\Sigma - \\{S\\})\\)</li> <li>\\(A \\to a\\quad (a \\in \\Sigma)\\)</li> </ol> </li> <li>Theorem. Every CFG has an equivalent CFG in CNF<ul> <li>\u6784\u9020\uff1a\\(S\\) \u5728 rhs\uff0c\u5219\u65b0\u589e \\(S_0 \\to S\\) \u4f5c\u4e3a\u65b0\u7684 start symbol\uff1b\u5982\u679c\u53f3\u4fa7\u6709 \\(e\\)\uff0c\u5c31\u5220\u9664\u8fd9\u4e2a non-terminal\uff0c\u7528\u5230\u5b83\u7684\u5bf9\u5e94\u66f4\u6539\uff08\u4e14\u53ef\u80fd\u4e5f\u8981\u5220\u9664\uff09\uff1b\u5982\u679c rhs \u6709\u591a\u4e2a\uff0c\u62c6\u5f00\u5373\u53ef\uff1b\u5982\u679c\u53ea\u6709\u4e00\u4e2a non-terminal\uff0c\u7528\u5b83\u7684 rhs \u66ff\u4ee3\u5373\u53ef\uff1b\u5982\u679c rhs \u6709 terminal\uff0c\u5f15\u5165 non-terminal\u3002</li> </ul> </li> <li>Theorem. \u7528 CNF \u751f\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n &gt; 0\\) \u7684 string\uff0c\u786e\u5207\u9700\u8981 \\(2n-1\\) \u6b21 derivation\uff0c\u5176\u4e2d \\(n-1\\) \u6b21\u7528 (b) \u6269\u5c55\u957f\u5ea6\uff0c\\(n\\) \u6b21\u7528 (c) \u66ff\u6362\u6210 terminal\u3002</li> </ul>"},{"location":"other_courses/theory_of_computation/#23-pushdown-automata","title":"2.3 Pushdown Automata","text":"<ul> <li>PDA = NFA + Stack</li> <li>PDA \\(P = (K, \\Sigma, T, \\Delta, s, F)\\)<ul> <li>\\(T\\) \u662f stack alphabet</li> <li>transition relation \\(\\Delta \\subseteq (K \\times (\\Sigma \\cup \\{e\\}) \\times T^*)\\times(K \\times T^*)\\)\uff0c\u8868\u793a\u5f53\u524d\u72b6\u6001\u63a5\u53d7\u67d0\u4e2a symbol \u5e76\u4ece\u6808\u4e0a pop \u51fa\u67d0\u4e2a\u5b57\u7b26\u4e32\u540e\uff0c\u4f1a\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u5e76\u5728\u6808\u4e0a push \u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32</li> </ul> </li> <li>Configuration \\((p, w, \\alpha) \\in (K \\times \\Sigma^* \\times T^*)\\)\uff0c\u4f9d\u6b21\u8868\u793a current state, unread input, stack content</li> <li>\u5b9a\u4e49\u4e86 \\(\\vdash_P\\), \\(\\vdash_P^*\\), \\(P\\) accept \u5b57\u7b26\u4e32\u7684\u6761\u4ef6\uff08\u5230\u7ec8\u6001\u4e14\u6808\u4e3a\u7a7a\uff09, \\(P\\) accept \u7684\u8bed\u8a00 \\(L(P)\\)</li> <li>\u6211\u4eec\u804a\u7684 PDA \u662f non-deterministic \u7684\u3002\u5b83\u6bd4\u786e\u5b9a\u6027 PDA \u7684\u8fd0\u7b97\u80fd\u529b\u5f3a\uff0c\u56e0\u4e3a\u786e\u5b9a\u6027\u7684 PDA \u65e0\u6cd5\u7528\u5355\u4e2a stack \u6a21\u62df\u591a\u4e2a stack\u3002\u8fd9\u4e0e DFA = NFA \u4e0d\u540c</li> </ul> <p>Example</p> <p>\u8bfe\u7a0b\u548c\u4f5c\u4e1a\u4e2d\u7ed9\u51fa\u4e86 \\(L \\in \\{0, 1\\}^*\\) where numbers of 0's and 1's are equal \u7b49\u7684 PDA\u3002</p> <p>Danger</p> <p>\u8bed\u8a00\u4e2d\u5305\u542b\u300c\u5c0f\u4e8e\u300d\u4e4b\u7c7b\u7684\u5173\u7cfb\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u7ed9\u51fa\u529e\u6cd5\u628a\u6808\u6e05\u7a7a\u3002</p>"},{"location":"other_courses/theory_of_computation/#24-cfg--pda","title":"2.4 CFG &lt;=&gt; PDA","text":"<ul> <li>CFG \\(G\\) \\(\\to\\) PDA \\(P\\): \u5728\u6808\u4e0a non-deterministically generate a string using \\(G\\), compare it to input, accept if match.</li> <li>\u5b9a\u4e49 Simple PDA: A PDA is simple\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u7ec8\u6001\uff0c\u4e14\u6bcf\u4e2a transition \u8981\u4e48\u53ea pop \u4e00\u4e2a\uff0c\u8981\u4e48\u53ea push \u4e00\u4e2a\u3002</li> <li>PDA \\(\\to\\) Simple PDA \\(\\to\\) CFG: \u7565</li> </ul>"},{"location":"other_courses/theory_of_computation/#25-pumping-theorem-for-cfl","title":"2.5 Pumping Theorem for CFL","text":"<p>Theorem. \u82e5 \\(L\\) \u662f\u4e00\u4e2a CFL\uff0c\u5219\u5b58\u5728 pump length \\(p\\in \\mathbb{Z}^*\\) \u4f7f\u5f97 \\(\\forall w\\in L\\) with \\(|w| \\ge p\\) \u53ef\u88ab\u5206\u4e3a 3 \u4e2a\u90e8\u5206 \\(w = uvxyz\\)\uff0c\u6ee1\u8db3\uff1a</p> <ol> <li>\\(\\forall i \\ge 0, uv^ixy^iz\\in L\\)</li> <li>\\(|v| + |y| &gt; 0\\)</li> <li>\\(|vxy| \\le p\\)</li> </ol> <p>\u6cf5\u5b9a\u7406\u662f CFL \u7684\u4e00\u4e2a\u5fc5\u8981\u4e0d\u5145\u5206\u6761\u4ef6\u3002</p> <p>Example</p> <p>\u8bfe\u7a0b\u4e2d\u7528\u6cf5\u5b9a\u7406\u8bc1\u660e\u4e86 \\(L = \\{a^nb^nc^n : n \\le 0\\}\\) \u4e0d\u662f CFL\u3002</p> <p>Info</p> <p>\u4e0d\u4e25\u8c28\u5730\u8bf4\uff0c\u5982\u679c\u67d0\u4e2a\u8bed\u8a00\u80fd\u591f\u88ab\u5207\u5206\u6210\u82e5\u5e72\u65e0\u5173\u7684\u6bb5\uff0c\u6bcf\u6bb5\u662f\u4e00\u4e2a RL \u6216\u8005\u5173\u4e8e\u67d0\u4e2a\u300c\u4e2d\u70b9\u300d\u300c\u4e2d\u5fc3\u5bf9\u79f0\u300d\uff08\u4ece\u800c\u80fd\u591f\u501f\u52a9\u5806\u6808\u7684\u540e\u8fdb\u5148\u51fa\u7279\u6027\u6765\u7ef4\u62a4\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8bed\u8a00\u5c31\u662f\u4e0a\u4e0b\u6587\u65e0\u5173\u7684\u3002</p> <p>\u5e38\u89c1\u7684 non-context-free languages:</p> <ul> <li>\u6d89\u53ca\u4e09\u4e2a\u6216\u4ee5\u4e0a\u76f8\u5173\u7684\u8ba1\u6570\u3001\u6bd4\u8f83\u7684\uff0c\u56e0\u4e3a\u6808\u6ca1\u6cd5\u6bd4\u90a3\u4e48\u591a\u6b21<ul> <li>\\(a^nb^nc^n\\)</li> <li>\\(a^ib^jc^k\\), where \\(i &gt; j &gt; k\\)</li> <li>\\(w \\in \\{a, b, c\\}^*\\) where the numbers of a's, b's and c's are equal<ul> <li>\u4e0d\u8fc7\u5b83\u7684\u8865\u662f context-free \u7684\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5199\u6210 #a != #b, #a != #c, #b != #c \u7684\u5e76\u3002\u8fd9\u662f\u4e00\u5bf9\u6709\u7528\u7684\u4f8b\u5b50\u3002</li> </ul> </li> </ul> </li> <li>\u65e0\u6cd5\u7528\u6808\u7ebf\u6027\u6bd4\u8f83\u7684<ul> <li>\\(a^{n^2}\\)</li> <li>\\(a^m\\) where \\(m\\) is prime</li> </ul> </li> <li>\u9700\u8981\u7528\u5230\u975e\u6808\u9876\u4fe1\u606f\u7684\uff0c\u56e0\u4e3a\u6808\u53ea\u80fd\u8bbf\u95ee\u6808\u9876<ul> <li>\\(a^mb^nc^md^n\\)</li> <li>\\(ww\\): \u9009 \\(w = a^pb^p\\)\uff0c\u8ba8\u8bba \\(vxy\\) \u5728\u4e2d\u95f4\u6216\u8005\u5de6\u534a\u8fb9/\u53f3\u534a\u8fb9\u7684\u60c5\u51b5</li> </ul> </li> </ul> <p>Ref: Check if the language is Context Free or Not</p>"},{"location":"other_courses/theory_of_computation/#26-cfl","title":"2.6 CFL","text":"<p>A language is context-free if it's accepted by some PDA.</p> <p>Note</p> <p>Assignment 5 Q5 \u4e2d\u8bc1\u660e\u4e86 RL \u662f CFL\u3002\u7528 NFA \u6784\u9020 PDA \u5373\u53ef\u3002</p> <p>Note</p> <p>CFL \u5bf9 \\(\\cup\\), \\(\\circ\\), \\(*\\) \u5c01\u95ed\uff0c\u4f46\u5bf9 \\(\\cap\\), \\(\\bar A\\) \u4e0d\u5c01\u95ed\u3002</p> <p>\u8bc1\u660e CFL \u5bf9\u5e76\u5c01\u95ed\uff0c\u53ea\u9700\u5408\u5e76\u4e24\u4e2a CFL \u7684 CFG\uff1b\u5bf9\u8fde\u63a5\u5c01\u95ed\uff0c\u53ea\u9700\u6dfb\u52a0 \\(S\\to S_AS_B\\)\uff1b\u5bf9\u514b\u6797\u95ed\u5305\u5c01\u95ed\uff0c\u53ea\u9700\u6dfb\u52a0 \\(S\\to S_AS | e\\)\u3002</p> <p>\u4e0d\u5c01\u95ed\u7684\u53cd\u4f8b\uff1a\u6211\u4eec\u8bc1\u660e\u4e86 \\(L = \\{a^nb^nc^n : n \\le 0\\}\\) \u4e0d\u662f CFL\uff1b\u800c\u5b83\u53c8\u662f \\(L_1 = \\{a^nb^nc^m : n \\le 0, m \\le 0\\}\\) \u548c \\(L_2 = \\{a^nb^mc^m : n \\le 0, m \\le 0\\}\\) \u7684\u4ea4\uff0c\u56e0\u6b64 CFL \u5bf9\u4ea4\u8fd0\u7b97\u4e0d\u5c01\u95ed\u3002</p> <p>\u7531\u4e8e CFL \u5bf9\u5e76\u5c01\u95ed\uff0c\u90a3\u4e48\u5047\u8bbe CFL \u5bf9\u8865\u5c01\u95ed\uff0c\u5219\u7531\u5fb7\u6469\u6839\u5f8b\uff0cCFL \u5bf9\u4ea4\u5c01\u95ed\uff0c\u77db\u76fe\u3002\u56e0\u6b64 CFL \u5bf9\u8865\u4e0d\u5c01\u95ed\u3002</p> <p>Note</p> <p>\u4f46\u662f\uff0cAssignment 6 Q3 \u4e2d\u8bc1\u660e\u4e86 CFL \u548c RL \u7684\u4ea4\u662f CFL\u3002CFL \u5bf9\u4ea4\u4e0d\u5c01\u95ed\u7684\u6838\u5fc3\u539f\u56e0\u662f\u6211\u4eec\u65e0\u6cd5\u7528\u4e00\u4e2a\u6808\u6a21\u62df\u4e24\u4e2a\u6808\uff1b\u4f46\u662f\u5728 CFL \u548c RL \u4ea4\u65f6\u53ea\u9700\u8981\u4e00\u4e2a\u6808\u5c31\u591f\u4e86\u3002</p> <p>\u56e0\u6b64\uff0c\u8bc1\u660e\u4e00\u4e2a language \u4e0d\u662f CFL\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u53cd\u8bc1\u6cd5\uff0c\u8bf4\u660e\u5b83\u548c\u4e00\u4e2a RL \u7684\u4ea4\u662f\u4e00\u4e2a\u5df2\u77e5\u7684 non-CFL\u3002</p> <p>\u56e0\u6b64\uff0c\\(L-R = L \\cap \\bar R\\) \u662f CFL\uff1b\u4f46 \\(R-L = R \\cap \\bar L\\) \u4e0d\u4e00\u5b9a\u662f CFL\uff0c\u56e0\u4e3a CFL \u5bf9\u8865\u4e0d\u5c01\u95ed\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c\\(R = \\{a, b, c\\}^*, L = \\bar A\\), \u5176\u4e2d \\(A = \\{w \\in \\{a, b, c\\}^*\\}\\) where the numbers of a's, b's and c's are equal\u3002\\(L\\) \u662f CFL\uff0c\\(A\\) \u4e0d\u662f\uff0c\u800c \\(R - L = A\\)\u3002</p> \u8bed\u8a00\u7c7b\u578b / \u5c01\u95ed\u6027 \\(\\cup\\) \\(\\cap\\) \\(\\bar A\\) \\(\\circ\\) \\(*\\) Context-Free"},{"location":"other_courses/theory_of_computation/#3-turing-machines","title":"3 Turing Machines","text":""},{"location":"other_courses/theory_of_computation/#31-turing-machines","title":"3.1 Turing Machines","text":""},{"location":"other_courses/theory_of_computation/#32-usages","title":"3.2 Usages","text":""},{"location":"other_courses/theory_of_computation/#33-extensions","title":"3.3 Extensions","text":""},{"location":"other_courses/theory_of_computation/#34-description","title":"3.4 Description","text":""},{"location":"other_courses/theory_of_computation/#4-reduction-undecidability-and-grammar","title":"4 Reduction, Undecidability and Grammar","text":""},{"location":"other_courses/theory_of_computation/#41-reduction","title":"4.1 Reduction","text":""},{"location":"other_courses/theory_of_computation/#42-undecidability","title":"4.2 Undecidability","text":""},{"location":"other_courses/theory_of_computation/#43-closure-properties","title":"4.3 Closure Properties","text":"\u8bed\u8a00\u7c7b\u578b / \u5c01\u95ed\u6027 \\(\\cup\\) \\(\\cap\\) \\(\\bar A\\) \\(\\circ\\) \\(*\\) Regular Context-Free Recursively Enumerable Recursive <p>Note: \\(A - B = A \\cap \\bar B\\)\uff0c\u56e0\u6b64\u5982\u679c \\(\\cap\\) \u548c \\(\\bar A\\) \u90fd\u5c01\u95ed\uff0c\u5219\u5dee\u8fd0\u7b97\u4e5f\u5c01\u95ed\u3002</p>"},{"location":"other_courses/theory_of_computation/#44-grammar","title":"4.4 Grammar","text":""},{"location":"other_courses/theory_of_computation/#5-numerical-functions-and-recursion-theorem","title":"5 Numerical Functions and Recursion Theorem","text":""},{"location":"other_courses/theory_of_computation/#6-computational-complexity","title":"6 Computational Complexity","text":""},{"location":"pl/","title":"Index","text":"<p> \u7ea6 32 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u7f16\u7a0b\u8bed\u8a00\u548c\u7f16\u8bd1\u4e5f\u8bb8\u662f\u6bd4\u8f83\u597d\u5947\u7684\u65b9\u5411\uff0c\u4f46\u662f\u786e\u5b9e\u6ca1\u6709\u5b66\u5f88\u591a\u76f8\u5173\u7684\u4e1c\u897f</p>"},{"location":"pl/ppl_notes/","title":"\u7f16\u7a0b\u8bed\u8a00\u539f\u7406 (\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u5b66)","text":"<p> \u7ea6 109 \u4e2a\u5b57 </p> <p>2022-2023 \u79cb\u51ac\u5b66\u671f\uff0c\u6211\u505a\u4e86\u7fc1\u607a\u8001\u5e08 PPL \u8fd9\u95e8\u8bfe\u7684\u52a9\u6559\u3002\u8fd9\u95e8\u8bfe\u7b2c\u4e00\u5e74\u8bfe\u6539\uff0c\u6211\u4f5c\u4e3a\u56db\u4f4d\u52a9\u6559\u91cc\u552f\u4e00\u4e00\u4e2a\u6ca1\u5b66\u8fc7 PL \u7684\u4eba\u611f\u89c9\u5f88\u7edd\u671b\u3002\u5b66\u671f\u91cc\u4e5f\u82b1\u4e86\u5927\u91cf\u65f6\u95f4\u5b66\u4e60\u8fd9\u95e8\u8bfe\uff1b\u8fd9\u95e8\u8bfe\u7684\u4e66\u5199\u5f97\u975e\u5e38\u62bd\u8c61\uff0c\u80fd\u627e\u5230\u7684\u8d44\u6599\u4e5f\u5f88\u5c11\u3002\u603b\u4f53\u800c\u8a00\u5c31\u662f\u975e\u5e38\u75db\u82e6 XD</p>"},{"location":"pl/ppl_notes/0_PPL_Final_Problem1/","title":"PPL 2022 Final Problem 1 (Review)","text":"<p> \u7ea6 86 \u4e2a\u5b57 </p> <p>\u8fd9\u4e2a\u9898\u91cc\u5305\u542b\u4e86\u6211\u5bf9\u8bfe\u7a0b\u5185\u5bb9\u7684\u5f88\u591a\u65b0\u7406\u89e3\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u5199\u5230\u7b14\u8bb0\u91cc\u4e86XD</p> <p>(\u70b9\u51fb\u6807\u9898\u53ef\u4ee5\u4e0b\u8f7d\uff1b\u5728\u4e0b\u9762\u7684 PDF \u9884\u89c8\u91cc\u53f3\u952e\u6253\u5370\u4e5f\u53ef\u4ee5\u4fdd\u5b58\uff1b\u9700\u8981\u6e90\u7801\u7684\u8bdd\u53ef\u4ee5\u6765\u627e\u6211)</p>"},{"location":"pl/ppl_notes/0_PPL_Final_Problem1/#\u4e0d\u5e26\u7b54\u6848\u7248","title":"\u4e0d\u5e26\u7b54\u6848\u7248","text":"<p>\u9884\u89c8</p>"},{"location":"pl/ppl_notes/0_PPL_Final_Problem1/#\u5e26\u7b54\u6848\u7248","title":"\u5e26\u7b54\u6848\u7248","text":"<p>\u9884\u89c8</p>"},{"location":"pl/ppl_notes/10_product_types/","title":"10 Product Types | \u79ef\u7c7b\u578b","text":"<p> \u7ea6 315 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>\u4e24\u79cd\u7c7b\u578b \\(\\tau_1\\) \u548c \\(\\tau_2\\) \u7684 \u4e8c\u5143\u79ef (binary product) \\(\\tau_1\\times\\tau_2\\) \u662f \u6709\u5e8f\u5bf9 (ordered pair)\uff08\u6216\u79f0\u4e3a \u5143\u7ec4 (tuple)\uff09\\(\\langle e_1, e_2 \\rangle\\)\uff08\u6216\u8bb0\u4e3a \\((e_1, e_2)\\)\uff09\u7684\u7c7b\u578b\uff0c\u5176\u4e2d \\(e_1 : \\tau_1, e_2 : \\tau_2\\)\u3002</p> <p>\u66f4\u4e00\u822c\u5730\uff0c\u6709\u9650\u79ef (finite product) \\(\\langle \\tau_i \\rangle_{i\\in I}\\) \u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a tuple\uff0c\u6bcf\u4e2a tuple \u7684\u7b2c \\(i\\) \u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u4e3a \\(\\tau_i\\)\u3002\\(I\\) \u662f\u7d22\u5f15\u7684\u6709\u9650\u96c6\uff1b\u4e0a\u8ff0 tuple \u79f0\u4e3a \\(I\\)-indexed tuple\u3002\u9664\u4e86\u5e38\u89c1\u7684 \\(I = \\{0, \\cdots, n-1\\}\\) \u7d22\u5f15\u7684 \\(n\\)-tuples \u4ee5\u5916\uff0c\u4e5f\u6709\u7528\u6709\u9650\u7684\u7b26\u53f7\u96c6\u7d22\u5f15\u7684 labeled-tuples\uff0c\u4e5f\u6210\u4e3a records\u3002</p> <p>\u7a7a\u79ef (nullary product) (a.k.a unit) \u7c7b\u578b\u4ec5\u7531\u552f\u4e00\u7684\u4e0d\u542b\u4efb\u4f55\u503c\u7684\u7a7a tuple \u6784\u6210\u3002</p> <p>\u79ef\u7c7b\u578b\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\u6709\u91cd\u8981\u4f5c\u7528\u3002\u5404\u79cd\u8bed\u8a00\u4e2d\u7684 struct, record, pair, tuple \u7b49\u7c7b\u578b\u90fd\u662f\u79ef\u7c7b\u578b\u3002\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\u6216\u8005\u8fd4\u56de\u591a\u4e2a\u7ed3\u679c\u7684\u51fd\u6570\u4e5f\u662f\u79ef\u7c7b\u578b\u7684\u4e00\u79cd\u4f8b\u5b50\u3002</p> <p>\u4e8c\u5143\u79ef\u7684\u62bd\u8c61\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <p></p> <p>\u6709\u9650\u79ef\u7684\u62bd\u8c61\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <p></p> <p>\u6709\u4e86 tuple\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8fed\u4ee3\u5f0f \\(\\text{iter}\\{\\text{z}\\hookrightarrow e_0 | \\text{s}(x) \\hookrightarrow e_1\\}(e)\\) \u4ee3\u66ff\u9012\u5f52\u5f0f\u4e86\uff1a</p> <p></p>"},{"location":"pl/ppl_notes/10_product_types/#103-primitive-mutual-recursion--\u539f\u59cb\u4e92\u9012\u5f52","title":"10.3 Primitive Mutual Recursion | \u539f\u59cb\u4e92\u9012\u5f52","text":"<p>\u8fd9\u6837\u7684\u51fd\u6570\uff1a</p> <p></p> <p>\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a</p> <p></p>"},{"location":"pl/ppl_notes/11_sum_types/","title":"11 Sum Types | \u548c\u7c7b\u578b","text":"<p> \u7ea6 120 \u4e2a\u5b57 </p> <p>\u6211\u4eec\u7ed9\u51fa\u4e86\u548c\u7c7b\u578b\u7684\u8bed\u6cd5\u548c\u8bed\u4e49\u3002\u548c\u7c7b\u578b \\(\\tau_1 + \\tau_2\\) \u7684\u4e00\u4e2a\u503c\u5305\u542b \\(\\tau_1\\) \u7c7b\u578b\u7684\u4e00\u4e2a\u503c\u6216\u8005 \\(\\tau_2\\) \u7c7b\u578b\u7684\u4e00\u4e2a\u503c\uff0c\u540c\u65f6\u5305\u542b\u4e86\u4e00\u79cd\u80fd\u591f\u786e\u5b9a\u8be5\u503c\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b\u7684\u673a\u5236\u3002\u8fd9\u79cd\u673a\u5236\u662f\u4e3a\u4e86\u6ee1\u8db3\u8bed\u6cd5\u4e2d case \u8fd0\u7b97\u7b26\u7684\u9700\u6c42\u3002</p> <p>\u6211\u4eec\u533a\u5206\u4e86 void \u548c unit \u7684\u533a\u522b\uff0c\u5206\u6790\u4e86\u5e03\u5c14\u7c7b\u578b\u548c option \u5982\u4f55\u7528\u548c\u7c7b\u578b\u5b9e\u73b0\u3002</p>"},{"location":"pl/ppl_notes/1_Abstract_Syntax/","title":"1 Abstract Syntax | \u62bd\u8c61\u8bed\u6cd5","text":"<p> \u7ea6 2750 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>\u8bed\u6cd5 (syntax) \u89c4\u5b9a\u4e86\u5982\u4f55\u5c06\u5404\u79cd phrases(expr, commands / statements, decl, etc.) \u7ec4\u5408\u6210\u7a0b\u5e8f\u3002</p> <ul> <li>\u8868\u5c42\u8bed\u6cd5\u6811 / \u5177\u4f53\u8bed\u6cd5\u6811 (surface syntax tree / concrete syntax tree): \u8868\u793a parse \u51fa\u7684\u7ed3\u679c\uff0c\u548c\u8bed\u6cd5\u89c4\u5219\u5bf9\u5e94\uff1b</li> <li>\u62bd\u8c61\u8bed\u6cd5\u6811 / \u7ed3\u6784\u8bed\u6cd5\u6811 (abstract syntax tree / structural syntax tree): \u6392\u9664\u4e86\u4e00\u4e9b\u65e0\u7528\u7684\u7ec4\u5206\uff0c\u4f8b\u5982 factor, term \u4e4b\u7c7b\u7684\u5185\u5bb9\uff1b\u8fd9\u4e9b\u5185\u5bb9\u53ea\u4e3a\u4e86 parse \u7684\u6b63\u5e38\u6267\u884c\uff0c\u4f46\u662f\u5bf9 semantic \u5e2e\u52a9\u4e0d\u5927\u3002</li> </ul>"},{"location":"pl/ppl_notes/1_Abstract_Syntax/#11-abstract-syntax-tree-ast--\u62bd\u8c61\u8bed\u6cd5\u6811","title":"1.1 Abstract Syntax Tree, AST | \u62bd\u8c61\u8bed\u6cd5\u6811","text":"<p>\u62bd\u8c61\u8bed\u6cd5\u6811\u662f\u4e00\u68f5\u6709\u5e8f\u6811\uff0c\u5176\u53f6\u5b50\u7ed3\u70b9\u4e3a \u53d8\u91cf (variable) \u6216\u8005\u6ca1\u6709 \u53c2\u6570 (argument) \u7684 \u8fd0\u7b97\u7b26(operator)\uff0c\u5176\u5185\u90e8\u8282\u70b9\u662f operators\u3002</p> Note <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684 variable \u548c operator \u4e0d\u80fd\u7b80\u5355\u5730\u7406\u89e3\u4e3a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u76f8\u5173\u6982\u5ff5\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u8fd9\u68f5\u8bed\u6cd5\u6811\u91cc\uff0c\u8bf8\u5982\u300c\u51fd\u6570\u5b9a\u4e49\u300d(<code>FUNCTION_DECL</code>) \u4e4b\u7c7b\u7684\u4e2d\u95f4\u8282\u70b9\u4e5f\u662f operator\uff1b\u800c\u300c\u6574\u578b\u300d(<code>INTEGER</code>) \u4e4b\u7c7b\u7684\u53f6\u5b50\u7ed3\u70b9\u4e5f\u662f variable\u3002 </p> <p>\u53e6\u5916\uff0c\u4e25\u683c\u5730\u8bf4\uff0c\u4e0a\u9762\u8fd9\u5f20\u56fe\u5e76\u4e0d\u662f\u4e00\u68f5 AST (\u8fd9\u5f20\u56fe\u6765\u81ea\u6211\u7f16\u8bd1\u539f\u7406\u5927\u4f5c\u4e1a\u5bf9\u4e00\u4e2a\u4f8b\u7a0b\u751f\u6210\u7684\u8bed\u6cd5\u6811)\u3002\u9996\u5148\uff0c\u56fe\u4e2d\u4ecd\u7136\u4fdd\u7559\u4e86\u4e00\u4e9b\u5f62\u5982 <code>STMT_LIST</code> \u7684\u8282\u70b9\uff0c\u8fd9\u4e9b\u8282\u70b9\u4ecd\u5c5e\u4e8e concrete syntax \u7684\u8303\u7574\uff1b\u53e6\u5916\uff0c\u56fe\u4e2d\u7684 <code>ID</code> \u4e4b\u7c7b\u7684 variable \u6ce8\u660e\u4e86\u5176\u540d\u5b57\uff0c\u4f8b\u5982 <code>ANS</code>, <code>GCD</code> \u7b49\uff0c\u6240\u4ee5\u5b83\u6709\u6211\u4eec\u5728 1.2 \u4f1a\u8bb2\u5230\u7684 ABT \u7684\u6027\u8d28\u3002</p> <p>AST \u6309\u8bed\u6cd5\u7684\u4e0d\u540c\u5f62\u5f0f\u5206\u4e3a\u4e0d\u540c\u7684 \u7c7b\u522b (sort)\uff0c\u8bb0\u4f5c \\(s\\)\u3002\u7c7b\u522b\u7684\u96c6\u5408\u8bb0\u4f5c \\(S\\)\u3002  </p> <p>Example</p> <p>\u4f8b\u5982\uff0c\u5e38\u89c1\u7684\u7f16\u7a0b\u8bed\u8a00\u533a\u5206 expression \u548c statement\uff0c\u8fd9\u5c31\u662f\u4e24\u4e2a\u4e0d\u540c\u7684 sort\uff0c\u5206\u522b\u8bb0\u4e3a \\(s_1\\) \u548c \\(s_2\\)\u3002</p> <p>\u591a\u4e2a AST \u901a\u8fc7 operator \u8fdb\u884c\u7ec4\u5408\u3002\u6211\u4eec\u901a\u8fc7\u8fd0\u7b97\u7b26\u7684 \u5143\u6570 (arity) \u89c4\u5b9a\u8fd0\u7b97\u7b26\u7684 sort \\(s\\) \u53ca\u5176\u53c2\u6570\u7684\u6570\u76ee \\(n\\) \u548c sort \\(s_i\\)\uff0c\u8bb0\u4f5c \\((s_1, \\dots, s_n)s\\)\u3002 \u7528 \\(o\\) \u8868\u793a\u8fd0\u7b97\u7b26\uff0c\u5177\u6709 arity \\(\\alpha\\) \u7684\u8fd0\u7b97\u7b26\u7684\u96c6\u5408\u8bb0\u4f5c \\(O_\\alpha\\)\uff1b\u8bb0 \\(O = \\{O\\alpha\\}\\) \u4e3a\u4e00\u4e2a\u6309 arity \u7d22\u5f15\u7684\u3001\u7531\u4e92\u4e0d\u76f8\u4ea4\u7684 \\(O_\\alpha\\) \u6784\u6210\u7684\u96c6\u65cf\u3002</p> <p>Example</p> <p>\u627f\u4e0a\u4f8b\uff0c\u5047\u8bbe \\(s_1\\) \u4e2d\u5b58\u5728\u8fd0\u7b97\u7b26 <code>plus</code>, <code>times</code> \u548c <code>num</code>\uff0c\u5b83\u4eec\u7684\u7ed3\u6784\u5206\u522b\u7c7b\u4f3c\u4e8e <code>plus(expr1; expr2)</code>, <code>times(expr1; expr2)</code> \u548c <code>num[n]</code> ( \u5176\u4e2d \\(n\\in \\mathbb{N}\\) )\uff1b\\(s_2\\) \u4e2d\u5b58\u5728\u8fd0\u7b97\u7b26 <code>if</code> \uff0c\u5b83\u7684\u7ed3\u6784\u7c7b\u4f3c\u4e8e <code>if (expr) then stmt1 else stmt2</code>\u3002\u90a3\u4e48 <code>plus</code> \u548c <code>times</code> \u7684 arity \u5747\u8bb0\u4f5c \\((s_1, s_1)s_1\\)\uff0c\u800c <code>num</code> \u7684 arity \u8bb0\u4f5c \\((\\mathbb{N})s_1\\)\uff0c <code>if</code> \u7684 arity \u8bb0\u4f5c \\((s_1, s_2, s_2)s_2\\)\u3002</p> <p>Variables \u7528 \\(x\\) \u7b49\u5c0f\u5199\u5b57\u6bcd\u6765\u8868\u793a\uff1bsort \\(s\\) \u4e0a\u7684\u53d8\u91cf\u96c6\u5408\u8bb0\u4e3a \\(X_s\\)\uff1bsort \u96c6\u5408 \\(S\\) \u4e0a\u7684 \u53d8\u91cf\u65cf \u5b9a\u4e49\u4e3a \\(X = \\{X_s\\}_{s \\in S}\\)\u3002 \u53d8\u91cf\u662f\u67d0\u4e2a\u9886\u57df\u5185\u7684\u672a\u77e5\u7684\u5bf9\u8c61\uff0c\u7528\u7279\u5b9a\u5bf9\u8c61 \u4ee3\u6362 (substitution) \u67d0\u4e2a\u8868\u8fbe\u4e2d\u7684\u5168\u90e8\u540c\u4e2a\u53d8\u91cf\uff0c\u5219\u53d8\u91cf\u6210\u4e3a\u5df2\u77e5\u3002 \u53d8\u91cf\u662f\u4e00\u4e2a\u672a\u77e5\u7684\u5bf9\u8c61\u6216\u8005\u5360\u4f4d\u7b26\uff0c\u5176\u542b\u4e49\u7531\u4ee3\u6362\u8d4b\u4e88\u3002</p> <p>Example</p> <p>\u627f\u4e0a\u4f8b\uff0c\\(2 + (3 \\times x)\\) \u53ef\u4ee5\u8868\u8fbe\u4e3a <code>plus(num[2]; times(num[3]; x))</code>\u3002\u8fd9\u91cc \\(x\\) \u662f\u4e00\u4e2a\u53d8\u91cf\u3002 \u7531\u4e8e <code>num[4]</code> \u4e5f\u662f \\(s_1\\) \u7c7b\u578b\u7684 AST\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5b83 \u4ee3\u6362 \u4e0a\u9762 AST \u4e2d\u7684 \\(x\\)\uff0c\u5f97\u5230  <code>plus(num[2]; times(num[3]; num[4]))</code>\u3002 \u540c\u65f6\uff0c\u7531\u4e8e <code>plus(num[1]; num[2])</code> \u4e5f\u662f \\(s_1\\) \u7c7b\u578b\u7684 AST\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u7528\u5b83\u4ee3\u6362\u4e0a\u9762 AST \u4e2d\u7684 \\(x\\)\uff0c\u5f97\u5230  <code>plus(num[2]; times(num[3]; plus(num[1]; num[2])))</code>\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a sort \u96c6\u5408 \\(S\\) \u548c\u4e00\u4e2a operator \u96c6\u65cf \\(O\\)\uff0cvariable \u96c6\u65cf \\(X = \\{X_s\\}_{s \\in S}\\) \u5b9a\u4e49\u540c\u524d\u3002\u90a3\u4e48\uff1a</p> <ul> <li>\u5f53 \\(X\\) \u4e0a\u4e0b\u6587\u65e0\u5173 (context-free) \u65f6\uff0c\u5982\u679c \\(x \\in X_s\\)\uff0c\u90a3\u4e48\u79f0 \\(x\\) \u7684\u7c7b\u522b\u4e3a \\(s\\)\uff1b</li> <li>\u5982\u679c\u5bf9\u4e8e\u4efb\u610f \\(s\\in S\\) \u90fd\u6709 \\(x \\not \\in X_s\\)\uff0c\u90a3\u4e48\u79f0 \\(x\\) \u5bf9 \\(X\\) \u662f \u65b0 \u7684 ( \\(x\\) is fresh to \\(X\\) )\uff1b</li> <li>\u5982\u679c \\(x\\) is fresh to \\(X\\)\uff0c\u4e14 \\(s\\) \u662f\u4e00\u4e2a sort\uff0c\u90a3\u4e48\u79f0 \\(X, x\\) \u662f\u901a\u8fc7\u589e\u52a0 \\(x\\) \u5230 \\(X_s\\) \u6240\u5f97\u7684\u53d8\u91cf\u96c6\u65cf\uff1b</li> <li>\u5982\u679c \\(s\\) \u7531\u4e0a\u4e0b\u6587\u51b3\u5b9a\u800c\u4e0d\u662f\u663e\u5f0f\u58f0\u660e\u65f6\uff0c\u8fd9\u4e2a\u8bb0\u6cd5\u662f\u6709\u6b67\u4e49 (ambiguous) \u7684\u3002</li> </ul> <p>Error</p> <p>\u4e0a\u9762\u8fd9\u6bb5\u8fd8\u6ca1\u770b\u61c2\uff0c\u4e4b\u540e\u56de\u6765\u8865</p> <p>\u6211\u4eec\u5f62\u5f0f\u5316\u5730\u7ed9\u51fa AST \u7684\u5b9a\u4e49\u3002AST \u7684\u65cf \\(A[X] = \\{A[X]_s\\}_{s\\in S}\\) \u662f\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6700\u5c0f\u65cf\uff1a</p> <ul> <li>\u5982\u679c \\(x \\in X_s\\)\uff0c\u90a3\u4e48 \\(x\\in A[X]_s\\)\u3002\u5373\uff0c\u4e00\u4e2a\u7c7b\u522b\u662f \\(s\\) \u7684\u53d8\u91cf\u662f\u4e00\u68f5\u7c7b\u522b\u4e3a \\(s\\) \u7684 AST\uff1b</li> <li>\u5982\u679c \\(o\\) \u7684\u5143\u6570\u4e3a \\((s_1, \\dots, s_n)s\\)\uff0c\u4e14 \\(a_1 \\in A[X]_{s_1}, \\dots, a_n \\in A[X]_{s_n}\\)\uff0c\u90a3\u4e48 \\(o(a_1;\\dots ;a_n) \\in A[X]_s\\)\u3002\u5373\uff0c\u7528\u8fd0\u7b97\u7b26\u53ef\u4ee5\u7ec4\u5408 AST\u3002</li> </ul> <p>Structural Induction | \u7ed3\u6784\u5f52\u7eb3\u6cd5 \u6839\u636e\u4e0a\u9762\u7684\u5b9a\u4e49\uff0c\u7531\u4e8e AST \u7684\u6811\u5f62\u7ed3\u6784\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8bc1\u660e\u6240\u6709 AST \\(a\\) \u90fd\u5177\u6709\u6027\u8d28 \\(P(a)\\)\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6240\u6709\u751f\u6210 \\(a\\) \u7684\u65b9\u5f0f\uff0c\u90fd\u8bc1\u660e\uff1a\u300c\u5982\u679c\u5176\u5b50 AST \u90fd\u5177\u6709\u8be5\u6027\u8d28\uff0c\u90a3\u4e48\u751f\u6210\u7684 \\(a\\) \u4e5f\u5177\u6709\u8be5\u6027\u8d28\u300d\u5373\u53ef\u3002\u5373\u8bc1\u660e\uff1a</p> <ul> <li>\u5982\u679c \\(x\\in X_s\\)\uff0c\u5219 \\(P_s(x)\\)\uff1b</li> <li>\u5982\u679c \\((s_1, \\dots, s_n)s\\)\uff0c\u4e14 \\(P_{s_1}(a_1), \\dots, P_{s_n}(a_n)\\) \u90fd\u6210\u7acb\uff0c\u90a3\u4e48 \\(P_s(o(a_1;\\dots ;a_n))\\) \u4e5f\u6210\u7acb</li> </ul> <p>\u5373\u53ef\u3002</p> <p>\u6211\u4eec\u8fdb\u4e00\u6b65\u5f62\u5f0f\u5316\u5730\u7ed9\u51fa\u53d8\u91cf\u4ee3\u6362\u7684\u5b9a\u4e49\u3002\u5982\u679c \\(a\\in A[X, x]_s, b\\in A[X]_s\\)\uff0c\u5219\u7528 \\(b\\) \u4ee3\u6362 \\(a\\) \u4e2d\u6240\u6709 \\(x\\) \u5f97\u5230\u7684\u7ed3\u679c\u662f \\([b / x]a\\in A[X]_s\\)\uff0c\u5b9a\u4e49\u4e3a\uff1a</p> <ul> <li>\\([b / x]x = b\\)</li> <li>\\([b / x]y = y\\)</li> <li>\\([b / x]o(a_1; \\dots; a_n) = o([b / x]a_1; \\dots; [b / x]a_n)\\)</li> </ul> <p>\u53ef\u4ee5\u8bc1\u660e\uff0c\u5982\u679c \\(a\\in A[X, x]_s\\)\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f \\(b\\in A[X]\\) \u90fd\u5b58\u5728\u552f\u4e00\u7684 \\(c\\in A[X]\\) \u6ee1\u8db3 \\([b / x]a = c\\)\u3002</p> \u8bc1\u660e (\u8bfe\u5802\u4e0a\u300c\u8ba9\u5927\u5bb6\u56de\u53bb\u601d\u8003\u300d) <p>\u5bf9 \\(a\\) \u4f7f\u7528\u7ed3\u6784\u5f52\u7eb3\u6cd5\uff1a</p> <ul> <li>\u5982\u679c \\(a = x\\)\uff0c\u90a3\u4e48\u6839\u636e\u5b9a\u4e49\u6709 \\(c = b\\)\uff1b</li> <li>\u5982\u679c \\(a = y \\neq x\\)\uff0c\u90a3\u4e48\u6839\u636e\u5b9a\u4e49\u6709 \\(c = y\\)\uff1b</li> <li>\u5982\u679c \\(a = o(a_1; \\dots; a_n)\\)\uff0c\u6839\u636e\u5f52\u7eb3\u5047\u8bbe\uff0c\u6709\u552f\u4e00\u7684 \\(c_1, \\dots, c_n\\) \u6ee1\u8db3 \\(c_1 = [b / x]a_1, \\dots, c_n = [b / x]a_n\\)\uff0c\u56e0\u6b64 \\(c = o(c_1; \\dots; c_n)\\)\u3002</li> </ul>"},{"location":"pl/ppl_notes/1_Abstract_Syntax/#12-abstract-binding-tree-abt--\u62bd\u8c61\u7ed1\u5b9a\u6811","title":"1.2 Abstract Binding Tree, ABT | \u62bd\u8c61\u7ed1\u5b9a\u6811","text":"<p>\u300e\u5982\u679c\u4f60\u53bb\u7f51\u4e0a\u641c\uff0c\u4f60\u53ef\u4ee5\u53d1\u73b0\u9664\u4e86\u8fd9\u672c\u4e66\u4ee5\u5916\u6ca1\u6709\u4eba\u8bf4 ABT \u8fd9\u4e2a\u6982\u5ff5\u3002\u300f</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u8868\u8fbe\u5f0f <code>let x be expr1 in expr2</code>\uff0c\u8868\u793a\u5f15\u5165\u4e00\u4e2a\u53d8\u91cf <code>x</code>\uff0c\u7528\u4e8e\u5728\u8868\u8fbe\u5f0f <code>expr2</code> \u4e2d\u8868\u793a <code>expr1</code>\u3002  </p> <p>\u53d8\u91cf <code>x</code> \u53d7 <code>let</code> \u8868\u8fbe\u5f0f\u7684\u7ea6\u675f\uff0c\u53ea\u7528\u5728 <code>expr2</code> \u4e2d\u3002\u5728 <code>expr1</code> \u4e2d\u5982\u679c\u6709\u4efb\u4f55 <code>x</code> \u90fd\u53ea\u662f\u78b0\u5de7\u540d\u5b57\u76f8\u540c\u7684\u4e0d\u540c\u53d8\u91cf\uff1b\u8fd9\u6709\u4e9b\u7c7b\u4f3c\u4e8e \\((\\lambda\\ expr1. expr2)\\ x\\)\u3002\u4e0e \\(\\lambda\\) \u6f14\u7b97\u4e00\u6837\uff0c\u7ea6\u675f\u53d8\u91cf\u53ef\u4ee5\u6362\u540d\u3002</p> <p>Example</p> <p>\u4f8b\u5982 <code>let x be num[7] in plus(x; x)</code> \u5c31\u53ef\u4ee5\u5f97\u5230 <code>plus(num[7]; num[7])</code>\u3002\u7c7b\u4f3c\u4e8e \\((\\lambda\\ x.x + x)\\ 7 = 7 + 7\\)\u3002</p> <p>\u800c\u5bf9\u4e8e <code>let x be times(x; x) in plus(x; x)</code>\uff0c\u5c31\u7c7b\u4f3c\u4e8e \\((\\lambda\\ x.x + x)\\ (x * x) = x * x + x * x\\)\u3002\u6839\u636e \\(\\lambda\\) \u6f14\u7b97\u7684\u76f8\u5173\u77e5\u8bc6\u5bb9\u6613\u7406\u89e3\uff0c\u8fd9\u91cc <code>times</code> \u4e2d\u7684 <code>x</code> \u548c <code>plus</code> \u4e2d\u7684 <code>x</code> \u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\u3002</p> <p>\u5bb9\u6613\u7406\u89e3\uff0c<code>let y be times(x; x) in plus(y; y)</code> \u4e0e\u4e0a\u5f0f\u8868\u8fbe\u7684\u542b\u4e49\u4e00\u81f4\uff1b\u5373\u7ea6\u675f\u53d8\u91cf\u53ef\u4ee5\u6362\u540d\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5728 AST \u4e2d\u5f15\u5165\u4e86 variables \u7684\u6982\u5ff5\uff0c\u4f46\u662f\u6ca1\u6709\u8bf4\u660e\u5176\u542b\u4e49\u3002\u4e8b\u5b9e\u4e0a\uff0cvariable \u7684\u542b\u4e49\u662f\u901a\u8fc7 binding \u7ed9\u5b9a\u7684\uff1a</p> <p>\u6211\u4eec\u7528 \\(x_1, \\dots, x_k.a\\) \u7684\u5f62\u5f0f\u8868\u793a\u5c06\u53d8\u91cf\u5e8f\u5217 \\(x_1, \\dots, x_k\\) \u7ed1\u5b9a (bind) \u5230\u8fd0\u7b97\u7b26 \\(a\\) \u7684\u53c2\u6570\u4e0a\uff0c\u4ece\u800c\u5c06\u4ee5 \\(a\\) \u4e3a\u6839\u7684 AST \u6cdb\u5316\u4e3a\u4e00\u68f5 \u62bd\u8c61\u7ed1\u5b9a\u6811 (Abstract Binding Tree, ABT)\u3002\\(x_1, \\dots, x_k.a\\) \u79f0\u4e3a \u62bd\u8c61\u5b50 (abstractor)\uff1b\u8fd9\u8868\u793a\u53d8\u91cf\u5e8f\u5217 \\(x_1, \\dots, x_k\\) \u5728 ABT \\(a\\) \u4e2d\u662f\u7ea6\u675f\u7684 (bound)\u3002\u5728 \\(k = 0\\) \u65f6\uff0c\\(.a\\) \u53ef\u4ee5\u7b80\u5199\u4e3a \\(a\\)\u3002\u901a\u5e38\u6211\u4eec\u5c06 \\(x_1, \\dots, x_k\\) \u8bb0\u4e3a \\(\\vec{x}\\)\uff0c\u4ece\u800c\u7528 \\(\\vec{x}.a\\) \u8868\u793a \\(x_1, \\dots, x_k.a\\)\u3002</p> <p>\u8fd9\u79cd\u7ed1\u5b9a\u51b3\u5b9a\u4e86 \\(\\vec{x}\\) \u7684 \u4f5c\u7528\u57df (scope) \u662f ABT \\(a\\)\u3002</p> <p>\u524d\u9762\u7684 <code>let x be expr1 in expr2</code> \u5c31\u662f <code>let(expr1; x.expr2)</code>\u3002\u8fd9\u4e2a\u5f62\u5f0f\u8868\u793a <code>x</code> \u5728 <code>expr2</code> \u4e2d\u662f\u7ea6\u675f\u7684\uff0c\u6216\u8005\u8bf4 <code>x</code> \u7684\u4f5c\u7528\u57df\u662f <code>expr2</code>\u3002</p> <p>Example</p> <p>\u524d\u4f8b\u4e2d <code>let x be num[7] in plus(x; x)</code> \u8868\u793a\u4e3a <code>let(num[7]; x.plus(x; x))</code>\uff1b<code>let x be times(x; x) in plus(x; x)</code> \u53ef\u4ee5\u8868\u793a\u4e3a <code>let(times(x; x); x.plus(x; x))</code>\u3002\u540e\u8005\u8868\u793a\u7684 ABT \u5f62\u5982\uff1a </p> <p>\u7ed1\u5b9a\u4f7f\u5f97 operator \u7684 arity \u5f97\u5230\u4e86\u6cdb\u5316\u3002\u5143\u6570\u5f62\u5982 \\((s_1, \\dots, s_n)s\\)\uff0c\u800c \u6cdb\u5316\u5143\u6570 (generalized arity) \u5f62\u5982 \\((v_1, \\dots, v_n)s\\)\uff1b\u5176\u4e2d\u6bcf\u4e00\u4e2a \\(v\\) \u79f0\u4e3a\u4e00\u4e2a \u4ef7 (valence)\uff0c\u5177\u6709 \\(s_1, \\dots, s_k.s\\) \u5373 \\(\\vec{s}.s\\) \u7684\u5f62\u5f0f\uff0c\u6307\u5b9a\u4e86\u53c2\u6570\u7684\u7c7b\u522b\u4ee5\u53ca\u6240\u7ed1\u5b9a\u7684\u53d8\u91cf\u7684\u6570\u91cf\u548c\u7c7b\u522b\u3002</p> <p>\u6211\u4eec\u79f0\u53d8\u91cf\u5e8f\u5217 \\(\\vec{x}\\) \u5c5e\u4e8e \\(\\vec{s}\\)\uff0c\u5982\u679c\u5b83\u4eec\u6709\u76f8\u540c\u7684\u957f\u5ea6 \\(k\\)\uff0c\u4e14\u5bf9\u6bcf\u4e00\u4e2a \\(1 \\le i \\le k\\) \u90fd\u6709 \\(x_i\\) \u7684\u7c7b\u522b\u662f \\(s_i\\)\u3002</p> <p>Example</p> <p>\u524d\u4f8b\u4e2d <code>let</code> \u8fd0\u7b97\u7b26\u7684\u5143\u6570\uff08\u6cdb\u5316\u5143\u6570\uff0c\u4f46\u300c\u6cdb\u5316\u300d\u6839\u636e\u4e0a\u4e0b\u6587\u53ef\u4ee5\u63a8\u65ad\uff0c\u56e0\u6b64\u53ef\u4ee5\u7b80\u79f0\u4e3a\u5143\u6570\uff0c\u540e\u540c\uff09\u4e3a \\((s_1, s_1.s_1)s_1\\)\u3002\u8fd9\u8868\u793a <code>let</code> \u8fd0\u7b97\u7b26\u7684\u7c7b\u522b\u662f \\(s_1\\)\uff08\u5373\u8868\u8fbe\u5f0f\uff0c\u53c2\u89c1 1.1 \u4f8b\u5b50\u4e2d\u7684\u5b9a\u4e49\uff09\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u4e0d\u7ed1\u5b9a\u4efb\u4f55\u53d8\u91cf\u7684\u8868\u8fbe\u5f0f\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u542b\u6709\u4e00\u4e2a\u7ea6\u675f\u53d8\u91cf\u7684\u8868\u8fbe\u5f0f\uff0c\u7ea6\u675f\u53d8\u91cf\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002</p> <p>\u6211\u4eec\u5f62\u5f0f\u5316\u5730\u7ed9\u51fa ABT \u7684\u5b9a\u4e49\u3002ABT \u7684\u65cf \\(B[X]\\) \u7684\u5b9a\u4e49\u4e0e AST \u7684\u65cf \\(A[X]\\) \u7684\u5b9a\u4e49\u7c7b\u4f3c\uff0c\u4f46\u662f \\(X\\) \u5728\u8fdb\u5165\u62bd\u8c61\u5b50\u7684\u4f5c\u7528\u57df\u65f6\u4f1a\u53d1\u751f\u53d8\u5316\u3002</p> <p>\u6211\u4eec\u5c1d\u8bd5\u8fd9\u6837\u5b9a\u4e49 ABT\uff1aABT \u7684\u65cf \\(B[X] = \\{B[X]_s\\}_{s\\in S}\\) \u662f\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6700\u5c0f\u65cf\uff1a</p> <ul> <li>\u5982\u679c \\(x \\in X_s\\)\uff0c\u90a3\u4e48 \\(x\\in B[X]_s\\)\u3002\u5373\uff0c\u4e00\u4e2a\u7c7b\u522b\u662f \\(s\\) \u7684\u53d8\u91cf\u662f\u4e00\u68f5\u7c7b\u522b\u4e3a \\(s\\) \u7684 ABT\uff1b</li> <li>\u5982\u679c \\(o\\) \u7684\u5143\u6570\u4e3a \\((\\vec{s_1}.s_1, \\dots, \\vec{s_n}.s_n)s\\)\uff0c\u4e14 \\(a_1 \\in B[X, \\vec{x_1}]_{s_1}, \\dots, a_n \\in B[X, \\vec{x_n}]_{s_n}\\)\uff0c\u90a3\u4e48 \\(o(\\vec{x_1}.a_1;\\dots ;\\vec{x_n}.a_n) \\in B[X]_s\\)\u3002\u5373\uff0c\u7528\u8fd0\u7b97\u7b26\u53ef\u4ee5\u7ec4\u5408 ABT\u3002</li> </ul> <p>\u8fd9\u79cd\u5b9a\u4e49\u7684\u95ee\u9898\u662f\uff0c\u5f62\u5982 <code>let(expr1; x.let(expr2; x.expr3))</code> \u7684 ABT \u662f ill-formed \u7684\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u7ed1\u5b9a\u5c06 \\(x\\) \u6dfb\u52a0\u5230 \\(X\\) \u5f97\u5230 \\(X,x\\)\uff0c\u8fd9\u4f7f\u5f97\u7b2c\u4e8c\u4e2a\u7ed1\u5b9a\u4e0d\u80fd\u518d\u5c06 \\(x\\) \u6dfb\u52a0\u5230 \\(X,x\\) \u4e2d\uff0c\u56e0\u4e3a \\(x\\) \u5bf9\u4e8e \\(X,x\\) \u6765\u8bf4\u4e0d\u662f\u65b0\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u79cd\u5b9a\u4e49\u6ca1\u6709\u6b63\u786e\u89e3\u91ca\u7ea6\u675f\u53d8\u91cf\u7684\u6362\u540d\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 fresh renaming \u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002\u5177\u4f53\u800c\u8a00\uff0c\u7ed9\u5b9a\u53d8\u91cf\u65cf \\(X\\)\uff0c\\(\\vec{x}\\) \u7684 fresh renaming \u5b9a\u4e49\u4e3a\u4e00\u4e2a \\(\\vec{x}\\) \u5230 \\(\\vec{x}'\\) \u7684\u4e00\u4e2a\u53cc\u5c04 \\(\\rho : \\vec{x} \\leftrightarrow \\vec{x}'\\)\uff0c\u5176\u4e2d \\(\\vec{x}'\\) \u5bf9\u4e8e \\(X\\) \u800c\u8a00\u662f\u65b0\u7684\u3002\u6211\u4eec\u7528 \\(\\hat\\rho (a)\\) \u8868\u793a\u5c06 \\(a\\) \u4e2d\u7684\u6bcf\u4e2a \\(x_i\\) \u7684\u51fa\u73b0\u66ff\u6362\u4e3a \\(\\rho(x_i)\\) \u540e\u7684\u7ed3\u679c\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u7ed9\u51fa ABT \u7684\u65cf \\(B[X] = \\{B[X]_s\\}_{s\\in S}\\) \u7684\u6b63\u786e\u5b9a\u4e49\uff1a</p> <ul> <li>\u5982\u679c \\(x \\in X_s\\)\uff0c\u90a3\u4e48 \\(x\\in B[X]_s\\)\u3002</li> <li>\u5982\u679c \\(o\\) \u7684\u5143\u6570\u4e3a \\((\\vec{s_1}.s_1, \\dots, \\vec{s_n}.s_n)s\\)\uff0c\u4e14\u5bf9\u4e8e\u6bcf\u4e2a \\(1 \\le i \\le n\\) \u548c\u5bf9\u5e94\u7684 fresh renaming \\(\\rho_i : \\vec{x}_i \\leftrightarrow \\vec{x}_i'\\) \uff0c\u90fd\u6709 \\(\\hat\\rho_i(a_i) \\in B[X, \\vec{x_i}']\\)\uff0c\u90a3\u4e48 \\(o(\\vec{x_1}.a_1;\\dots ;\\vec{x_n}.a_n) \\in B[X]_s\\)\u3002</li> </ul> <p>\u5b9a\u4e49\u8fd9\u79cd\u610f\u4e49\u4e0b\u7684\u7ed3\u6784\u5f52\u7eb3\u6cd5\uff1astructural induction modulo fresh renaming\u3002\uff08\u6ca1\u8bb2\uff0c\u4e14\u61d2\u5f97\u770b\uff09</p> <p>\u5b9a\u4e49 \\(\\alpha\\)-\u7b49\u4ef7 (\\(\\alpha\\)-equivalence)\u3002\uff08\u8bb2\u4e86\uff0c\u4f46\u61d2\u5f97\u770b\uff09</p> <p>ABT \u6839\u636e\u662f\u5426 \\(\\alpha\\)-\u7b49\u4ef7\u5224\u5b9a\u662f\u5426\u76f8\u540c\u3002</p> <p>\u5b9a\u4e49 ABT \u4e0a\u7684\u4ee3\u6362\u3002\uff08\u4e5f\u8bb2\u4e86\uff0c\u4e5f\u61d2\u5f97\u770b\uff09</p>"},{"location":"pl/ppl_notes/2_Inductive_Definition/","title":"2 Inductive Definition | \u5f52\u7eb3\u5b9a\u4e49","text":"<p> \u7ea6 3238 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p>"},{"location":"pl/ppl_notes/2_Inductive_Definition/#21-judgments--\u5224\u65ad","title":"2.1 Judgments | \u5224\u65ad","text":"<p>\u5224\u65ad (judgment) \u662f\u5173\u4e8e\u67d0\u79cd\u7c7b\u522b\u7684\u4e00\u68f5\u6216\u8005\u591a\u68f5 ABT \u7684\u9648\u8ff0\uff0c\u8868\u660e\u4e00\u68f5\u6216\u591a\u68f5 ABT \u6709\u67d0\u79cd\u6027\u8d28\u6216\u8005\u5f7c\u6b64\u4e4b\u95f4\u6709\u67d0\u79cd\u8054\u7cfb\u3002</p> <p>\u4e00\u4e9b judgment</p> <ul> <li>\\(n \\text{ nat}\\) ( \\(n\\) \u662f\u4e00\u4e2a\u81ea\u7136\u6570 )</li> <li>\\(n_1 + n_2 = n\\)</li> <li>\\(\\tau \\text{ type}\\) ( \\(\\tau\\) \u662f\u4e00\u4e2a\u7c7b\u578b )</li> <li>\\(e : \\tau\\) ( \u8868\u8fbe\u5f0f \\(e\\) \u5177\u6709 \\(\\tau\\) \u7c7b\u578b )</li> <li>\\(e \\Downarrow v\\) ( \u8868\u8fbe\u5f0f \\(e\\) \u7684\u503c\u4e3a \\(v\\) )</li> </ul> <p>\u8fd9\u4e9b\u300c\u6027\u8d28\u6216\u8054\u7cfb\u300d\u672c\u8eab\u79f0\u4e3a \u5224\u65ad\u5f62\u5f0f (judgment form)\uff0c\u800c\u300c\u4e00\u4e2a\u6216\u591a\u4e2a ABT \u5177\u6709\u8fd9\u79cd\u6027\u8d28\u6216\u8054\u7cfb\u300d\u79f0\u4e3a\u5224\u65ad\u5f62\u5f0f\u7684 \u5b9e\u4f8b (instance)\u3002</p> <p>\u5224\u65ad\u5f62\u5f0f\u4e5f\u79f0\u4e3a \u8c13\u8bcd (predicate)\uff0c\u800c\u6784\u6210\u5b9e\u4f8b\u7684 ABT \u79f0\u4e3a\u5b9e\u4f8b\u7684 \u4e3b\u8bed / \u4e3b\u8bcd (subject)\u3002</p> <p>\u6211\u4eec\u5c06\u5224\u65ad\u300cABT \\(a\\) \u5177\u6709 \\(J\\) \u6027\u8d28\u300d\u8bb0\u4e3a \\(a\\ J\\) \u6216\u8005 \\(J\\ a\\)\uff1b\u76f8\u5e94\u5730\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u5224\u65ad\u5f62\u5f0f \\(J\\) \u8bb0\u4e3a \\(-\\ J\\) \u6216\u8005 \\(J\\ -\\)\uff0c\u5176\u4e2d \\(-\\) \u4ee3\u8868 \\(J\\) \u7f3a\u5c11\u7684\u53c2\u6570\uff0c\u4ece\u800c\u5f3a\u8c03\u5224\u65ad\u7684\u4e3b\u8bed\u3002</p>"},{"location":"pl/ppl_notes/2_Inductive_Definition/#22-rules--\u89c4\u5219","title":"2.2 Rules | \u89c4\u5219","text":"<p>\u89c4\u5219 (rule) \u89c4\u5b9a\u4e00\u4e2a judgment \u6709\u6548\u7684\u5145\u8981\u6761\u4ef6\u3002\u56e0\u800c\u5b8c\u5168\u51b3\u5b9a\u4e86\u8fd9\u4e2a judgment \u7684\u542b\u4e49\u3002</p> <p>\u4e00\u4e2a judgment form \u7684 \u5f52\u7eb3\u5b9a\u4e49 (inductive definition) \u7531\u4e00\u7ec4\u5f62\u5982 \\(\\cfrac{J_1\\cdots J_k}{J}\\) \u7684 rules \u7ec4\u6210\uff0c\u8868\u660e\u5f53 \u524d\u63d0 (premise) \\(J_1, \\cdots, J_k\\) \u90fd\u6210\u7acb\u65f6\uff0c\u8db3\u4ee5\u8ba9 \u7ed3\u8bba (conclusion) \\(J\\) \u6210\u7acb\uff0c\u53cd\u4e4b\u4e0d\u4e00\u5b9a\u6210\u7acb\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u89c4\u5219\u6ca1\u6709\u4efb\u4f55\u524d\u63d0\uff0c\u5373 \\(k = 0\\)\uff0c\u5219\u79f0\u8be5\u89c4\u5219\u4e3a \u516c\u7406 (axiom)\uff0c\u5426\u5219\u79f0\u4e3a \u6b63\u5e38\u89c4\u5219 (proper rule)\u3002</p> <p>\u6211\u4eec\u65e9\u4e0a\u53bb\u98df\u5802\uff0c\u53ef\u80fd\u4f1a\u60f3\u300c\u5982\u679c\u6709\u6cb9\u6761\uff0c\u6211\u5c31\u5403\u6cb9\u6761\uff1b\u5982\u679c\u6709\u62cc\u9762\uff0c\u6211\u5c31\u5403\u62cc\u9762\u300d\uff1b\u4f46\u662f\u6211\u4eec\u4e00\u822c\u4e0d\u4f1a\u7ed9\u5224\u65ad\u4e2d\u52a0\u4e0a\u300c\u5426\u5219\u300d\uff0c\u53d8\u6210\uff1a\u300c\u5982\u679c\u6709\u6cb9\u6761\uff0c\u6211\u5c31\u5403\u6cb9\u6761\uff1b\u5426\u5219\uff0c\u5982\u679c\u6709\u62cc\u9762\uff0c\u6211\u5c31\u5403\u62cc\u9762\u300d\uff1b\u9664\u975e\u4f5c\u4e3a\u4e00\u4e2a \"default\" \u6761\u6b3e\u65f6\u624d\u4f1a\u7528\u300c\u5426\u5219\u300d\u3002\u4f46\u662f\u6211\u4eec\u5728\u7f16\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u66f4\u52a0\u9891\u7e41\u5730\u4f7f\u7528 \"else\"\u3002</p> <p>Example</p> <p>Judgment form \u300c\\(- \\text{ nat}\\)\u300d\u7684\u5f52\u7eb3\u5b9a\u4e49\u53ef\u4ee5\u662f\uff1a</p> \\[\\frac{}{\\text{zero nat}}\\] \\[\\frac{a \\text{ nat}}{\\text{succ}(a)\\text{ nat}}\\] <p>\u7c7b\u4f3c\u5730\uff0c\u5224\u5b9a\u4e24\u4e2a\u81ea\u7136\u6570\u76f8\u540c\u7684 judgment form \u300c\\(- \\text{ is } -\\)\u300d\u7684\u5f52\u7eb3\u5b9a\u4e49\u53ef\u4ee5\u662f\uff1a</p> \\[\\frac{}{\\text{zero is zero}}\\] \\[\\frac{a \\text{ is } b}{\\text{succ}(a)\\text{ is succ}(b)}\\] <p>\u5b9a\u4e49\u4e8c\u53c9\u6811\u7684 judgment form \u300c\\(- \\text{ tree}\\)\u300d\u7684\u5f52\u7eb3\u5b9a\u4e49\u53ef\u4ee5\u662f\uff1a</p> \\[\\frac{}{\\text{empty tree}}\\] \\[\\frac{a_1\\text{ tree  }a_2\\text{ tree}}{\\text{node}(a_1; a_2)\\text{ tree}}\\] <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6709\u9650\u6570\u91cf\u7684 \u89c4\u5219\u6a21\u5f0f (rule scheme)\uff0c\u6307\u5b9a\u4e86\u65e0\u9650\u7684\u89c4\u5219\u65cf\u3002</p> <p></p> <p>\u4e00\u7ec4\u89c4\u5219\u88ab\u770b\u4f5c\u80fd\u591f\u5b9a\u4e49\u5c01\u95ed\u4e8e\u8fd9\u4e9b\u89c4\u5219\u7684\u6700\u5f3a\u5224\u65ad\u5f62\u5f0f\u3002 A collection of rules is considered to define the strongest judgment form that is closed under these rules.</p> <p>\u300c\u5c01\u95ed\u4e8e\u8fd9\u4e9b\u89c4\u5219 (closed under these rules)\u300d\u8bf4\u660e\u8fd9\u4e9b\u89c4\u5219\u8db3\u4ee5\u8bc1\u660e\u4e00\u4e2a\u5224\u65ad\u7684\u6709\u6548\u6027\u3002\u5373\uff0c\u5982\u679c\u5229\u7528\u7ed9\u5b9a\u7684\u89c4\u5219\u80fd\u591f\u5f97\u5230\u5224\u65ad \\(J\\)\uff0c\u5219 \\(J\\) \u4e00\u5b9a\u6210\u7acb\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u7ec4\u5408\u8fd9\u4e9b\u89c4\u5219 \u63a8\u5bfc (derive) \u51fa \\(J\\) \u6765\u8bc1\u660e \\(J\\) \u6210\u7acb\u3002</p> <p>\u300c\u5c01\u95ed\u4e8e\u8fd9\u4e9b\u89c4\u5219\u7684\u6700\u5f3a\u5224\u65ad\u5f62\u5f0f (the strongest judgment form that is closed under these rules)\u300d\u8bf4\u660e\u6240\u6709\u7684\u89c4\u5219\u90fd\u662f\u5fc5\u8981\u7684\u3002\u5373\uff0c\u53ea\u6709\u901a\u8fc7\u8fd9\u4e9b\u89c4\u5219\u5f97\u51fa \\(J\\) \u65f6\uff0c\\(J\\) \u624d\u6210\u7acb\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \u89c4\u5219\u5f52\u7eb3 (rule induction) \u6765\u8bc1\u660e \\(J\\) \u6210\u7acb\u3002</p> <p>\u5728\u4e0b\u9762\u4e24\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u300c\u63a8\u5bfc\u300d\u548c\u300c\u89c4\u5219\u5f52\u7eb3\u300d\u7684\u7ec6\u8282\u3002</p>"},{"location":"pl/ppl_notes/2_Inductive_Definition/#23-derivations--\u63a8\u5bfc","title":"2.3 Derivations | \u63a8\u5bfc","text":"<p>\u4e00\u4e2a judgment \u7684\u63a8\u5bfc\u8fc7\u7a0b\u662f\u89c4\u5219\u7684\u6709\u9650\u7ec4\u5408\uff0c\u4ece\u516c\u7406\u5f00\u59cb\uff0c\u4ee5\u5224\u65ad\u7ed3\u675f\u3002</p> <p>\u4f8b\u5982\uff0c\\(\\text{node(node(empty; empty); empty) tree}\\) \u7684\u63a8\u5bfc\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> \\[\\cfrac{\\cfrac{\\cfrac{}{\\text{empty tree}}\\quad \\cfrac{}{\\text{empty tree}}}{\\text{node(empty; empty) tree}}\\quad \\cfrac{}{\\text{empty tree}}}{\\text{node(node(empty; empty); empty) tree}}\\] <p>\u8981\u8bf4\u660e\u4e00\u4e2a judgment \u662f \u53ef\u63a8\u5bfc\u7684 (derivable)\uff0c\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u3002</p> <p>\u4ece\u516c\u7406\u5f00\u59cb\u7684\u63a8\u5bfc\u79f0\u4e3a \u524d\u5411\u8fde\u63a5 (forwarding chainning) \u6216 \u81ea\u5e95\u5411\u4e0a\u6784\u9020 (bottom-up construction)\u3002\u5b83\u7c7b\u4f3c BFS\uff0c\u7ef4\u62a4\u4e00\u4e2a\u53ef\u63a8\u5bfc\u7684\u5224\u65ad\u96c6\uff0c\u5e76\u6269\u5c55\u8fd9\u4e2a\u96c6\u5408\uff0c\u76f4\u5230\u76ee\u6807\u5224\u65ad\u51fa\u73b0\u5728\u96c6\u5408\u4e2d\u65f6\u7ec8\u6b62\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u4f46\u662f\u5b83\u5728\u7b97\u6cd5\u4e0a\u901a\u5e38\u65e0\u6cd5\u51b3\u5b9a\u4f55\u65f6\u7ec8\u6b62\u63a8\u5bfc\u5e76\u5f97\u51fa\u76ee\u6807\u5224\u65ad\u4e0d\u53ef\u63a8\u5bfc\u7684\u7ed3\u8bba\u3002</p> <p>\u4ece\u7ed3\u8bba\u5f00\u59cb\u7684\u63a8\u5bfc\u79f0\u4e3a \u53cd\u5411\u94fe\u63a5 (backwarding chainning) \u6216 \u81ea\u9876\u5411\u4e0b\u6784\u9020 (top-down construction)\u3002\u5b83\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u8fd9\u4e2a\u961f\u5217\u521a\u5f00\u59cb\u53ea\u6709\u76ee\u6807\u5224\u65ad\uff0c\u6bcf\u6b21\u4ece\u961f\u5934\u53d6\u51fa\u4e00\u6761\u5224\u65ad\uff0c\u5e76\u5c06\u5176\u6240\u6709\u524d\u63d0\u52a0\u5165\u961f\u5217\u3002\u5f53\u961f\u5217\u4e3a\u7a7a\u65f6\uff0c\u8bf4\u660e\u6211\u4eec\u5df2\u7ecf\u8fbe\u5230\u4e86\u6240\u6709\u76ee\u6807\u3002\u4f46\u540c\u6837\u7684\uff0c\u53cd\u5411\u94fe\u63a5\u4e5f\u6ca1\u6709\u901a\u7528\u7684\u7b97\u6cd5\u6765\u5224\u5b9a\u5f53\u524d\u76ee\u6807\u662f\u5426\u53ef\u63a8\u5bfc\u3002</p>"},{"location":"pl/ppl_notes/2_Inductive_Definition/#24-rule-induction--\u89c4\u5219\u5f52\u7eb3","title":"2.4 Rule Induction | \u89c4\u5219\u5f52\u7eb3","text":"<p>\u6211\u4eec\u8bf4\uff0c\u300c\u4e00\u7ec4\u89c4\u5219\u88ab\u770b\u4f5c\u80fd\u591f\u5b9a\u4e49\u5c01\u95ed\u4e8e\u8fd9\u4e9b\u89c4\u5219\u7684\u6700\u5f3a\u5224\u65ad\u5f62\u5f0f\u300d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u7ed9\u5b9a\u4e00\u7ec4\u89c4\u5219\uff0c\u5b83\u5b9a\u4e49\u7684\u300c\u5c01\u95ed\u4e8e\u8fd9\u4e9b\u89c4\u5219\u7684\u6700\u5f3a\u5224\u65ad\u5f62\u5f0f\u300d\u662f \\(J\\)\uff1b\u800c\u6211\u4eec\u8bc1\u660e\u4e86\u53e6\u4e00\u4e2a\u5224\u65ad\u5f62\u5f0f \\(P\\) \u4e5f\u5c01\u95ed\u4e8e\u8fd9\u4e9b\u89c4\u5219\uff0c\u90a3\u4e48\u7531\u4e8e \\(J\\) \u662f\u5c01\u95ed\u4e8e\u8fd9\u4e9b\u89c4\u5219\u7684\u5224\u65ad\u5f62\u5f0f\u4e2d\u6700\u5f3a\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8bc1\u660e\u300c\u53ea\u8981 \\(a\\ J\\) \u53ef\u63a8\u5bfc\uff0c\u90a3\u4e48 \\(a\\ P\\) \u6210\u7acb\u300d\u3002\u8fd9\u5c31\u662f \u89c4\u5219\u5f52\u7eb3 (rule induction) \u7684\u539f\u7406\u3002</p> <p>\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u8981\u8bc1\u660e\u5f53 \u5f52\u7eb3\u5047\u8bbe (inductive hypotheses) \\(P(a_1), \\cdots, P(a_n)\\) \u6210\u7acb\u65f6 \u5f52\u7eb3\u7ed3\u8bba (inductive conclusion) \\(P(a)\\) \u6210\u7acb\uff0c\u5219\u9700\u8981\u8bc1\u660e\u6027\u8d28 \\(P\\) \u5c01\u95ed\u4e8e\u89c4\u5219 \\(\\cfrac{a_1\\ J\\cdots a_k\\ J}{a\\ J}\\)\u3002</p> <p>\u4f8b\u5982\uff0c\u8981\u8bc1\u660e\u5f53 \\(a\\text{ nat}\\) \u65f6 \\(P(a)\\) \u6210\u7acb\uff0c\u53ea\u9700\u8981\u8bc1\u660e\uff1a</p> <ol> <li>\\(P(\\text{zero})\\)</li> <li>\\(\\forall a,\\  P(a) \\to P(\\text{succ}(a))\\)</li> </ol> <p>\u5f15\u7406 2.1</p> <p>\u5f15\u7406 2.1 \u8981\u8bc1\u660e\u5f53 \\(a\\text{ nat}\\) \u65f6 \\(P(a)\\) \u6210\u7acb\uff0c\u53ea\u9700\u8981\u8bc1\u660e\uff1a</p> <ol> <li>\\(P(\\text{zero})\\)</li> <li>\\(\\forall a,\\  P(a) \\land a\\text{ nat} \\to P(\\text{succ}(a))\\)</li> </ol> <p>Proof. \u5b9a\u4e49 \\(Q(a) = P(a) \\land a\\text{ nat}\\)\uff0c\u663e\u7136 \\(Q(a)\\to P(a)\\)\u3002</p> <p>\u5f15\u7406 2.2</p> <p>\u5f15\u7406 2.2 \u5982\u679c \\(\\text{succ}(a) \\text{ nat}\\) \u6210\u7acb\uff0c\u90a3\u4e48 \\(a\\text{ nat}\\) \u6210\u7acb\u3002</p> <p>Proof. \u5373\u8bc1\u660e\uff0c\\(\\forall a,b,\\ (b = \\text{succ}(a) \\land b\\text{ nat}) \\to a\\text{ nat}\\)\u3002</p> \\[\\begin{array}{rl} \\\\ &amp;\\forall a,b,\\  (b = \\text{succ}(a) \\land b\\text{ nat}) \\to a\\text{ nat}\\\\ \\Leftrightarrow &amp; \\forall a,b,\\  b = \\text{succ}(a) \\to (b\\text{ nat} \\to a\\text{ nat})\\\\ \\Leftrightarrow &amp; \\forall a,b,\\  b\\text{ nat} \\to (b = \\text{succ}(a) \\to a\\text{ nat})\\\\ \\Leftrightarrow &amp; \\forall b,\\  b\\text{ nat} \\to (\\forall a,\\  b = \\text{succ}(a) \\to a\\text{ nat})\\\\ \\end{array} \\] <p>\u8bb0 \\(P(b) = (\\forall a,\\  b = \\text{succ}(a) \\to a\\text{ nat})\\)\uff0c\u6211\u4eec\u8981\u8bc1\u660e\u5f53 \\(b\\text{ nat}\\) \u65f6 \\(P(b)\\) \u6210\u7acb\u3002</p> <p>Tips</p> <p>\u8fd9\u662f\u8fd9\u91cc\u7684\u6280\u5de7\u6240\u5728\uff0c\u5373\u5f53\u8981\u8bc1\u7684\u5f62\u5f0f\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u89c4\u5219\u5f52\u7eb3\u65f6\uff0c\u501f\u7528\u65b0\u7684\u53d8\u91cf\u6765\u6784\u9020\u89c4\u5219\u5f52\u7eb3\u7684\u5f62\u5f0f\u3002</p> <p>\u540c\u65f6\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684 \\(b = \\text{succ}(a)\\) \u548c \\(b \\text{ is succ}(a)\\) \u6709\u4e00\u70b9\u4e0d\u540c\uff1a\u540e\u8005\u6765\u81ea\u4e8e\u6211\u4eec\u5bf9 \\(\\text{is}\\) \u8fd9\u4e2a judgment form \u7684\u5b9a\u4e49\uff0c\u800c\u524d\u8005\u5219\u6765\u81ea ABT \u7684\u76f8\u7b49\u5173\u7cfb\u3002</p> <p>\u8fdb\u884c\u89c4\u5219\u5f52\u7eb3\uff1a</p> <ol> <li>\\(P(\\text{zero}) \\Leftrightarrow \\forall a,\\  \\text{zero} = \\text{succ}(a) \\to a\\text{ nat}\\)\u3002\u800c\u7531\u4e8e\u6ee1\u8db3 \\(\\text{zero} = \\text{succ}(a)\\) \u7684 \\(a\\) \u4e0d\u5b58\u5728\uff0c\u8be5\u5f0f\u6210\u7acb\u3002</li> <li>\\(\\cfrac{\\forall a,\\  b = \\text{succ}(a) \\to a\\text{ nat}\\quad b\\text{ nat}}{\\forall a,\\  \\text{succ}(b) = \\text{succ}(a) \\to a\\text{ nat}}\\)\u3002\u800c \\(\\text{succ}(b) = \\text{succ}(a) \\to b = a\\)\uff0c\u53c8 \\(b \\text{ nat}\\)\uff0c\u56e0\u6b64 \\(a \\text{ nat}\\)\uff0c\u8be5\u5f0f\u6210\u7acb\u3002</li> </ol> <p>\u8bc1\u6bd5\u3002</p> <p>\uff08\u6240\u4ee5\u53ef\u4ee5\u770b\u5230\uff0c\u5f52\u7eb3\u5047\u8bbe\u662f\u6709\u53ef\u80fd\u7528\u4e0d\u5230\u7684\u3002\uff09</p> <p>\u5f15\u7406 2.3</p> <p>\u5f15\u7406 2.3 \\(\\forall a, a\\text{ nat}\\to a \\text{ is }a\\)\u3002</p> <p>\u8bc1\u660e\u6682\u7565\u3002</p> <p>\u5f15\u7406 2.4</p> <p>\u5f15\u7406 2.4 \\(\\text{succ}(a_1)\\text{ is succ}(a_2) \\to a_1\\text{ is }a_2\\)\u3002</p> <p>\u8bc1\u660e\u4e0e \u5f15\u7406 2.2 \u7c7b\u4f3c\uff0c\u6682\u7565\u3002</p>"},{"location":"pl/ppl_notes/2_Inductive_Definition/#25-iterated-and-simultaneous-inductive-definitions--\u8fed\u4ee3\u548c\u8054\u7acb\u5f52\u7eb3\u5b9a\u4e49","title":"2.5 Iterated and Simultaneous Inductive Definitions | \u8fed\u4ee3\u548c\u8054\u7acb\u5f52\u7eb3\u5b9a\u4e49","text":"<p>\u4e4b\u524d\u5c55\u793a\u7684\u5f52\u7eb3\u5b9a\u4e49\u90fd\u662f \u8fed\u4ee3\u7684 (iterated)\uff0c\u5373\u4e00\u4e2a\u5f52\u7eb3\u5b9a\u4e49\u5efa\u7acb\u5728\u53e6\u4e00\u4e2a\u5f52\u7eb3\u5b9a\u4e49\u4e4b\u4e0a\uff1b\u800c\u4e00\u4e2a \u8054\u7acb\u5f52\u7eb3\u5b9a\u4e49 (simultaneous inductive definitions) \u7531\u4e00\u4e2a\u89c4\u5219\u96c6\u7ec4\u6210\uff0c\u8fd9\u4e9b\u89c4\u5219\u80fd\u5bfc\u51fa\u591a\u4e2a\u4e0d\u540c\u5224\u65ad\u5f62\u5f0f\u7684\u5b9e\u4f8b\u3002</p> <p>Example</p> <p>\u4e0b\u9762\u8fd9\u4e9b\u89c4\u5219\u6784\u9020\u4e86\u5bf9\u5947\u81ea\u7136\u6570\u548c\u5076\u81ea\u7136\u6570\u7684\u8054\u7acb\u5f52\u7eb3\u5b9a\u4e49\uff1a</p> \\[\\cfrac{}{\\text{zero even}}\\] \\[\\cfrac{b \\text{ odd}}{\\text{succ}(b)\\text{ even}}\\] \\[\\cfrac{a \\text{ even}}{\\text{succ}(a)\\text{ odd}}\\] <p>\u9488\u5bf9\u4e0a\u4f8b\u4e2d\u7684\u89c4\u5219\uff0c\u5176\u89c4\u5219\u5f52\u7eb3\u539f\u7406\u8868\u660e\uff0c\u8981\u8bc1\u660e \\(a\\text{ even}\\) \u65f6\u6709 \\(P(a)\\) \u4e14 \\(b\\text{ odd}\\) \u65f6\u6709 \\(Q(b)\\)\uff0c\u53ea\u9700\u8981\u8bc1\u660e\uff1a</p> <ol> <li>\\(P(\\text{zero})\\)</li> <li>\\(\\forall b,\\ Q(b)\\to P(\\text{succ}(b))\\)</li> <li>\\(\\forall a,\\ P(a)\\to Q(\\text{succ}(a))\\)</li> </ol>"},{"location":"pl/ppl_notes/2_Inductive_Definition/#26-defining-functions-by-rules--\u7528\u89c4\u5219\u5b9a\u4e49\u51fd\u6570","title":"2.6 Defining Functions by Rules | \u7528\u89c4\u5219\u5b9a\u4e49\u51fd\u6570","text":"<p>\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u81ea\u7136\u6570\u7684\u52a0\u6cd5\u51fd\u6570 \\(\\text{sum}(a; b; c)\\)\uff0c\u8868\u793a \\(c\\) \u662f \\(a\\) \u4e0e \\(b\\) \u7684\u548c\uff1a</p> \\[\\frac{b\\text{ nat}}{\\text{sum}(\\text{zero};b;b)}\\] \\[\\frac{\\text{sum}(a;b;c)}{\\text{sum}(\\text{succ}(a);b;\\text{succ}(c))}\\] <p>\u5b9a\u7406 2.5</p> <p>\u5b9a\u7406 2.5 \u5bf9\u4e8e\u6bcf\u4e2a \\(a\\text{ nat}\\) \u548c \\(b\\text{ nat}\\)\uff0c\u5b58\u5728\u552f\u4e00\u7684 \\(c\\text{ nat}\\) \u4f7f\u5f97 \\(\\text{sum}(a; b; c)\\)\u3002</p> <p>\u5148\u8bc1\u5b58\u5728\u6027\uff0c\u5373\u5982\u679c \\(a\\text{ nat}\\) \u4e14 \\(b\\text{ nat}\\)\uff0c\u5b58\u5728 \\(c\\text{ nat}\\) \u4f7f\u5f97 \\(\\text{sum}(a; b; c)\\)\u3002</p> <p>\u8bbe \\(P(a)\\) \u4e3a\uff1a\u5982\u679c \\(b\\text{ nat}\\)\uff0c\u5b58\u5728 \\(c\\text{ nat}\\) \u4f7f\u5f97 \\(\\text{sum}(a; b; c)\\)\u3002\u7528\u89c4\u5219\u5f52\u7eb3\u8bc1\u660e\u5982\u679c \\(a\\text{ nat}\\) \u5219 \\(P(a)\\) \u6210\u7acb\uff1a</p> <ol> <li>\\(P(\\text{zero}) \\Leftrightarrow \\text{sum}(\\text{zero};b;c)\\)\uff0c\u5219\u663e\u7136\u5b58\u5728 \\(c \\text{ is } b\\)\uff1b</li> <li>\\(\\cfrac{P(a)}{P(\\text{succ}(a))} \\Leftrightarrow \\cfrac{\\text{sum}(a; b; c_1)}{\\text{sum}(\\text{succ}(a); b; c)}\\)\uff0c\u5219\u663e\u7136\u5b58\u5728 \\(c \\text{ is } \\text{succ}(c_1)\\)\u3002</li> </ol> <p>\u518d\u8bc1\u552f\u4e00\u6027\uff0c\u5373\u5982\u679c \\(\\text{sum}(a; b; c)\\) \u4e14 \\(\\text{sum}(a; b; c')\\)\uff0c\u5219 \\(c\\text{ is }c'\\)\u3002\u4ea6\u5373\uff1a</p> \\[\\begin{array}{rl} &amp;\\forall a, b, c, c',\\ (\\text{sum}(a; b; c) \\land \\text{sum}(a; b; c')) \\to c\\text{ is }c' \\\\ \\Leftrightarrow &amp;\\forall a, b, c, c',\\ \\text{sum}(a; b; c) \\to (\\text{sum}(a; b; c') \\to c\\text{ is }c') \\\\ \\Leftrightarrow &amp;\\forall a, b, c, \\ \\text{sum}(a; b; c) \\to (\\forall c',\\ \\text{sum}(a; b; c') \\to c\\text{ is }c') \\end{array} \\] <p>\uff08\u8fd9\u91cc\u4f7f\u7528\u4e86 \u5f15\u7406 2.2 \u8bc1\u660e\u4e2d\u63d0\u5230\u7684\u6280\u5de7\u3002\uff09</p> <p>\u8bbe \\(P(a; b; c)\\) \u4e3a\uff1a\\(\\forall c',\\ \\text{sum}(a; b; c') \\to c\\text{ is }c'\\)\u3002\u7528\u89c4\u5219\u5f52\u7eb3\u8bc1\u660e \\(\\forall a, b, c, \\ \\text{sum}(a; b; c) \\to P(a; b; c)\\)\uff1a</p> <ol> <li>\u6839\u636e \\(\\text{sum}\\) \u7684\u7b2c\u4e00\u6761\u5b9a\u4e49 \\(\\cfrac{b\\text{ nat}}{\\text{sum}(\\text{zero};b;b)}\\)\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e \\(\\cfrac{b\\text{ nat}}{P(\\text{zero};b;b)}\\)\uff1b\u4e5f\u5c31\u662f\u8981\u8bc1 \\(\\forall c',\\ (b\\text{ nat} \\land \\text{sum}(\\text{zero};b;c'))\\to b\\text{ is }c'\\)\u3002\u8fd9\u4e0d\u662f\u663e\u7136\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4ecd\u7136\u8981\u901a\u8fc7\u89c4\u5219\u5f52\u7eb3\u8bc1\u660e\u4e4b\uff1a<ul> <li>\u6211\u4eec\u5c06\u5176\u6539\u5199\u4e3a\uff1a\\(\\forall a', b', c', \\ (b\\text{ nat} \\land \\text{sum}(a';b';c') \\land a' = \\text{zero} \\land b' = b) \\to b \\text{ is } c\\)\uff0c\u4ea6\u5373 \\(\\forall a', b', c', \\ (b\\text{ nat} \\land \\text{sum}(a';b';c')) \\to (a' = \\text{zero} \\to (b' = b \\to b \\text{ is } c))\\)\u3002</li> <li>\u6211\u4eec\u8bb0 \\(Q(a';b';c')\\) \u4e3a \\(a' = \\text{zero} \\to (b' = b \\to b\\text{ is }c)\\)\uff0c\u5373\u6211\u4eec\u9700\u8981\u8bc1\u660e \\(\\forall a', b', c', \\ (b\\text{ nat} \\land \\text{sum}(a';b';c')) \\to Q(a';b';c')\\)\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u6211\u4eec\u4ecd\u7136\u4f7f\u7528\u4e86\u524d\u8ff0\u6280\u5de7\u6765\u5c06\u5f85\u8bc1\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u89c4\u5219\u5f52\u7eb3\u7684\u5f62\u5f0f\u3002\u6211\u4eec\u7528\u89c4\u5219\u5f52\u7eb3\u8bc1\u660e\u4e4b\uff08\u8fd9\u5c31\u662f\u8bfe\u672c\u63d0\u5230\u7684\u300c\u5185\u5c42\u5f52\u7eb3\u300d\uff09\uff1a<ol> <li>\u9996\u5148\u8981\u8bc1 \\(\\cfrac{b'\\text{ nat}}{Q(\\text{zero};b';b')}\\)\uff0c\u8fd9\u91cc \\(Q(\\text{zero};b';b') \\Leftrightarrow \\text{zero} = \\text{zero} \\to (b' = b \\to b \\text{ is } b')\\)\u3002\u6839\u636e \u5f15\u7406 2.3\uff0c\u8be5\u5f0f\u4e3a\u771f\u3002</li> <li>\u7136\u540e\u8bc1 \\(\\cfrac{Q(a';b';c')\\quad \\text{sum}(a';b';c')}{Q(\\text{succ}(a'); b'; \\text{succ}(c'))}\\)\u3002\u8fd9\u91cc \\(Q(\\text{succ}(a'); b'; \\text{succ}(c')) \\Leftrightarrow \\text{succ}(a') = \\text{zero} \\to (b' = b \\to b \\text{ is } \\text{succ}(c'))\\)\u3002\u7531\u4e8e\u4e0d\u5b58\u5728 \\(a'\\) \u4f7f\u5f97 \\(\\text{succ}(a') = \\text{zero}\\)\uff0c\u56e0\u6b64\u8be5\u5f0f\u4e3a\u771f\u3002</li> </ol> </li> </ul> </li> <li>\u6839\u636e \\(\\text{sum}\\) \u7684\u7b2c\u4e8c\u6761\u5b9a\u4e49 \\(\\cfrac{\\text{sum}(a;b;c)}{\\text{sum}(\\text{succ}(a);b;\\text{succ}(c))}\\)\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e \\(\\cfrac{P(a;b;c)\\quad \\text{sum}(a;b;c)}{P(\\text{succ}(a);b;\\text{succ}(c))}\\)\uff1b\u4e5f\u5c31\u662f\u8981\u8bc1 \\(\\forall c',\\ (P(a;b;c)\\land \\text{sum}(a;b;c))\\to (\\text{sum}(\\text{succ}(a);b;c') \\to \\text{succ}(c)\\text{ is } c')\\)\u3002\u8fd9\u4e5f\u4e0d\u662f\u663e\u7136\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u8981\u901a\u8fc7\u89c4\u5219\u5f52\u7eb3\u8bc1\u660e\u4e4b\uff1a<ul> <li>\u6211\u4eec\u5c06\u5176\u6539\u5199\u4e3a\uff1a\\(\\forall a', b', c',\\ (P(a;b;c)\\land \\text{sum}(a;b;c) \\land \\text{sum}(a';b';c')) \\to (a' = \\text{succ}(a) \\to (b' = b \\to \\text{succ}(c)\\text{ is } c')))\\)</li> <li>\u8bb0 \\(Q(a';b';c')\\) \u4e3a \\(a' = \\text{succ}(a) \\to (b' = b \\to \\text{succ}(c)\\text{ is } c')\\)\uff0c\u6211\u4eec\u7528\u89c4\u5219\u5f52\u7eb3\u8bc1\u660e \\(\\forall a', b', c',\\ (P(a;b;c)\\land \\text{sum}(a;b;c) \\land \\text{sum}(a';b';c')) \\to Q(a';b';c')\\)\uff1a<ol> <li>\u9996\u5148\u8981\u8bc1 \\(\\cfrac{b'\\text{ nat}}{Q(\\text{zero};b';b')}\\)\uff0c\u7c7b\u4f3c\u4e0a\u8ff0 2.b \u7684\u8bc1\u660e\uff0c\u4e0d\u5b58\u5728 \\(a'\\) \u4f7f\u5f97 \\(\\text{succ}(a') = \\text{zero}\\)\uff0c\u56e0\u6b64\u8be5\u5f0f\u4e3a\u771f\u3002</li> <li>\u7136\u540e\u8bc1 \\(\\cfrac{Q(a';b';c')\\quad \\text{sum}(a';b';c')\\quad P(a;b;c)}{Q(\\text{succ}(a'); b'; \\text{succ}(c'))}\\)\uff1a<ul> <li>\u5176\u4e2d\uff0c\u7ed3\u8bba \\(Q(\\text{succ}(a'); b'; \\text{succ}(c'))\\) \u7b49\u4ef7\u4e8e \\(\\text{succ}(a') = \\text{succ}(a) \\to (b' = b \\to \\text{succ}(c)\\text{ is } \\text{succ}(c'))\\)</li> <li>\u6839\u636e ABT \u7684\u76f8\u7b49\u5173\u7cfb\u4ee5\u53ca \u5f15\u7406 2.4\uff0c\u8be5\u5f0f\u7b49\u4ef7\u4e8e \\(a' = a \\to (b' = b \\to c\\text{ is } c')\\)</li> <li>\u8981\u8bc1\u7684\u89c4\u5219\u5373\u4e3a \\(\\cfrac{Q(a';b';c')\\quad \\text{sum}(a';b';c')\\quad P(a;b;c)}{a' = a \\to (b' = b \\to c\\text{ is } c')}\\)</li> <li>\u4ea6\u5373 \\(\\cfrac{Q(a';b';c')\\quad \\text{sum}(a';b';c')\\quad P(a;b;c)\\quad a' = a\\quad b' = b}{c\\text{ is } c'}\\)</li> <li>\u800c\u7531 \\(\\text{sum}(a';b';c')\\land a' = a\\land b' = b\\) \u6709\u524d\u63d0 \\(\\text{sum}(a; b; c')\\)\uff0c\u53c8 \\(P(a;b;c) \\Leftrightarrow \\forall c',\\ \\text{sum}(a; b; c') \\to c\\text{ is }c'\\)\uff0c\u56e0\u6b64\u7ed3\u8bba\u5f97\u8bc1\u3002</li> </ul> </li> </ol> </li> </ul> </li> </ol> <p>\u8bc1\u6bd5\u3002</p> <p>\u4e60\u9898 1</p> <p>\u7ed9\u5b9a\u5224\u65ad \\(max(m;n;p)\\) \u7684\u4e00\u4e2a\u5f52\u7eb3\u5b9a\u4e49\uff0c\u5176\u4e2d \\(m\\text{ nat}, n\\text{ nat}, p\\text{ nat}\\)\uff0c\u4e14 \\(p\\) \u662f \\(m\\) \u548c \\(n\\) \u4e2d\u7684\u8f83\u5927\u8005\u3002\u8bc1\u660e\uff1a\u901a\u8fc7\u8fd9\u4e2a\u5224\u65ad\uff0c\u6bcf\u4e2a \\(m\\) \u548c \\(n\\) \u90fd\u4e0e\u552f\u4e00\u7684 \\(p\\) \u76f8\u5173\u3002</p>"},{"location":"pl/ppl_notes/3_Hypothetical_and_General_Judgments/","title":"3 Hypothetical and General Judgments | \u5047\u8a00\u5224\u65ad\u4e0e\u4e00\u822c\u6027\u5224\u65ad","text":"<p> \u7ea6 1480 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"pl/ppl_notes/3_Hypothetical_and_General_Judgments/#31-hypothetical-judgments--\u5047\u8a00\u5224\u65ad","title":"3.1 Hypothetical Judgments | \u5047\u8a00\u5224\u65ad","text":"<p>2.1 \u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u57fa\u672c\u5224\u65ad (basic judgments)\uff0c\u4f8b\u5982 \\(a \\text{ nat}\\) \u7b49\uff0c\u5b83\u4eec\u7528\u6765\u8868\u660e\u4e00\u68f5\u6216\u591a\u68f5 ABT \u6709\u67d0\u79cd\u6027\u8d28\u6216\u8005\u5f7c\u6b64\u4e4b\u95f4\u6709\u67d0\u79cd\u8054\u7cfb\u3002\u5047\u8a00\u5224\u65ad (hypothetical judgment) \u5219\u8868\u793a\u4e00\u4e2a\u6216\u591a\u4e2a \u5047\u8bbe (hypothesis) \u548c\u4e00\u4e2a \u7ed3\u8bba (conclusion) \u4e4b\u95f4\u7684 \u8574\u542b\u5173\u7cfb (entailment)\u3002\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e24\u79cd\u8574\u542b\u6982\u5ff5\u3002</p>"},{"location":"pl/ppl_notes/3_Hypothetical_and_General_Judgments/#311-derivability--\u53ef\u5bfc\u6027","title":"3.1.1 Derivability | \u53ef\u5bfc\u6027","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u89c4\u5219\u96c6\u5408 \\(R\\)\uff0c\u6211\u4eec\u7528 \\(R \\cup \\{J_1, \\dots, J_k\\}\\) \u8868\u793a\u5229\u7528\u516c\u7406 \\(\\overline{J_1}, \\dots, \\overline{J_k}\\) \u5bf9 \\(R\\) \u7684 \u6269\u5c55 (expansion)\uff1b\u8fd9\u91cc\u7684 \\(J_i\\) \u5747\u4e3a\u57fa\u672c\u5224\u65ad\uff0c\u8fd9\u4e2a\u6269\u5c55\u4e5f\u5c31\u662f\u5c06\u8fd9\u4e9b\u57fa\u672c\u5224\u65ad\u5bf9\u5e94\u7684\u516c\u7406\u52a0\u5165\u89c4\u5219\u96c6\u5408\u5f97\u5230\u7684\u65b0\u7684\u89c4\u5219\u96c6\u5408\u3002</p> <p>Tips</p> <p>\u6211\u4eec\u901a\u5e38\u7528\u5927\u5199\u5e0c\u814a\u5b57\u6bcd \\(\\Gamma\\), \\(\\Delta\\) \u7b49\u8868\u793a a finite set of basic judgments\u3002</p> <p>\u4e00\u4e2a \u53ef\u5bfc\u6027\u5224\u65ad (derivability judgment) \\(\\Gamma \\vdash_R K\\) \u8868\u793a\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u89c4\u5219\u96c6\u5408 \\(R\\) \u548c\u82e5\u5e72\u57fa\u672c\u5224\u65ad\u7684\u96c6\u5408 \\(\\Gamma = \\{J_1, \\dots, J_k\\}\\)\uff0c\\(R \\cup \\Gamma\\) \u80fd\u591f\u63a8\u5bfc\u51fa \\(K\\)\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u628a\u8be5\u5224\u65ad\u7684 \u5047\u8bbe (hypothesis) \u6216\u79f0 \u524d\u4ef6 (antecedent) \\(J_1, \\dots, J_k\\) \u89c6\u4e3a\u4e34\u65f6\u516c\u7406\uff0c\u548c \\(R\\) \u4e2d\u7684\u89c4\u5219\u4e00\u540c\u63a8\u5bfc\u51fa \u7ed3\u8bba (conclusion) \u6216\u79f0 \u540e\u4ef6 (consequent) \\(K\\)\u3002\u8fd9\u91cc\u7684 \\(J_i\\) \u548c \\(K\\) \u5747\u4e3a\u57fa\u672c\u5224\u65ad\u3002</p> <p>\\(\\Gamma \\vdash_R K\\) \u7b49\u4ef7\u4e8e\u79f0\u300c\u89c4\u5219 \\(\\cfrac{J_1, \\dots, J_k}{J}\\) \u53ef\u4ee5\u4ece \\(R\\) \u4e2d\u63a8\u5bfc\u300d\u3002\u8bf4\u4eba\u8bdd\u5c31\u662f\uff1a\u6839\u636e \\(R\\)\uff0c\u5982\u679c \\(\\Gamma\\) \u6210\u7acb\uff0c\u90a3\u4e48\u53ef\u4ee5\u63a8\u5bfc\u51fa \\(K\\) \u6210\u7acb\u3002</p> <p>Example</p> <p>\u4f8b\u5982\uff0c\u8bb0 \\(R\\) \u4e3a 2.2 \u4e2d\u5bf9 \\(-\\text{ nat}\\) \u7684\u5f52\u7eb3\u5b9a\u4e49\uff0c\u5373\uff1a</p> \\[\\frac{}{\\text{zero nat}}\\] \\[\\frac{a \\text{ nat}}{\\text{succ}(a)\\text{ nat}}\\] <p>\u90a3\u4e48\u53ef\u5bfc\u6027\u5224\u65ad\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\uff1a</p> \\[a\\text{ nat}\\vdash_R \\text{succ}(\\text{succ}(a))\\text{ nat}\\] <p>\u4e5f\u53ef\u4ee5\u8868\u8fbe\u4e3a\uff0c\\(\\cfrac{a \\text{ nat}}{\\text{succ}(\\text{succ}(a))\\text{ nat}}\\) \u53ef\u4ee5\u4ece\u89c4\u5219 \\(R\\) \u4e2d\u63a8\u5bfc\u5f97\u51fa\u3002</p> <p>\u8bf4\u4eba\u8bdd\u5c31\u662f\uff1a\u6839\u636e \\(R\\) \u53ef\u77e5\uff0c\u5bf9\u4e8e\u4efb\u610f \\(a\\)\uff0c\u5982\u679c \\(a \\text{ nat}\\)\uff0c\u90a3\u4e48 \\(\\text{succ}(\\text{succ}(a))\\text{ nat}\\)\u3002</p> <p>\u53ef\u5bfc\u6027\u5224\u65ad\u4e5f\u662f\u4e00\u4e2a\u5224\u65ad\uff0c\u4e5f\u9700\u8981\u901a\u8fc7\u63a8\u5bfc\u6765\u8bc1\u660e\u5176\u6b63\u786e\u6027\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u5224\u65ad\u5bf9\u4e8e\u4efb\u610f \\(a\\) \u7684\u9009\u53d6\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u5176\u5bf9\u5e94\u7684\u63a8\u5bfc\u662f\uff1a</p> \\[\\cfrac{\\cfrac{a \\text{ nat}}{\\text{succ}(a))\\text{ nat}}}{\\text{succ}(\\text{succ}(a))\\text{ nat}}\\] <p>\u8fdb\u4e00\u6b65\u5730\uff0c\\(\\Gamma_1 \\vdash_R \\Gamma_2\\) \u8868\u793a\u5bf9\u4e8e \\(\\Gamma_2\\) \u4e2d\u7684\u6bcf\u4e2a \\(J\\) \u90fd\u6709 \\(\\Gamma_1 \\vdash_R J\\)\u3002</p> <p>\\(\\vdash_R J\\) \u8868\u793a \\(J\\) \u53ef\u4ee5\u76f4\u63a5\u7531 \\(R\\) \u63a8\u5bfc\u800c\u51fa\u3002</p> <p></p> <p>\u7531\u53ef\u5bfc\u6027\u7684\u5b9a\u4e49\u53ef\u5f97\uff0c\u53ef\u5bfc\u6027\u5728\u6269\u5c55\u65b0\u89c4\u5219\u65f6\u662f \u7a33\u5b9a\u7684 (stable)\uff1a</p> <p>\u5b9a\u7406 3.1 - \u7a33\u5b9a\u6027</p> <p>(\u7a33\u5b9a\u6027 Stability) \\(\\quad\\) \u5982\u679c \\(\\Gamma \\vdash_R J\\)\uff0c\u90a3\u4e48 \\(\\Gamma \\vdash_{R\\ \\cup\\ R'} J\\)</p> <p>\u53ef\u5bfc\u6027\u6709\u8bb8\u591a\u6e90\u81ea\u5176\u5b9a\u4e49\u7684 \u7ed3\u6784\u6027\u8d28 (structural properties)\uff0c\u8fd9\u4e0e \\(R\\) \u7684\u9009\u53d6\u65e0\u5173\uff1a</p> <ul> <li>\u81ea\u53cd\u6027 (reflexivity) \\(\\quad\\) \\(J, \\Gamma \\vdash_R J\\)\uff0c\u5373 each hypothesis justifies itself as conclusion\u3002</li> <li>\u5f31\u5316 (weakening) \\(\\quad\\) \u5982\u679c \\(\\Gamma \\vdash_R J\\)\uff0c\u90a3\u4e48 \\(\\Gamma, K \\vdash_R J\\)\uff0c\u5373\u8574\u542b\u4e0d\u53d7\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\u672a\u4f7f\u7528\u7684\u89c4\u5219\u7684\u5f71\u54cd\u3002</li> <li>\u4f20\u9012\u6027 (transitivity) \\(\\quad\\) \u5982\u679c \\(\\Gamma, K \\vdash_R J\\) \u4e14 \\(\\Gamma \\vdash_R K\\)\uff0c\u90a3\u4e48 \\(\\Gamma \\vdash_R J\\)\u3002\u5982\u679c\u6211\u4eec\u5c06\u4e00\u4e2a\u516c\u7406\u66ff\u6362\u4e3a\u5bf9\u5176\u7684\u63a8\u5bfc\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u5230\u6ca1\u6709\u8fd9\u4e2a\u5047\u8bbe\u7684\u60c5\u51b5\u4e0b\u5bf9\u7ed3\u8bba\u7684\u63a8\u5bfc\u3002\u53ef\u4ee5\u5728\u7b2c\u4e00\u4e2a\u524d\u63d0\u4e0b\u901a\u8fc7\u89c4\u5219\u5f52\u7eb3\u8bc1\u660e\u3002</li> </ul> <p>Bug</p> <p>\u4f20\u9012\u6027\u600e\u4e48\u901a\u8fc7\u89c4\u5219\u5f52\u7eb3\u8bc1\u660e\uff1f\u8fd8\u6ca1\u60f3\u51fa\u6765</p>"},{"location":"pl/ppl_notes/3_Hypothetical_and_General_Judgments/#312-admissibility--\u53ef\u7eb3\u6027","title":"3.1.2 Admissibility | \u53ef\u7eb3\u6027","text":"<p>\u53ef\u7eb3\u6027\u5224\u65ad\u8bb0\u4f5c \\(\\Gamma \\vDash_R J\\)\uff0c\u8868\u793a \\(\\vdash_R \\Gamma\\) \u8574\u542b \\(\\vdash_R J\\)\uff1b\u5373\u5982\u679c \\(\\Gamma\\) \u4e2d\u7684\u89c4\u5219\u90fd\u80fd\u7531 \\(R\\) \u63a8\u5bfc\uff0c\u90a3\u4e48 \\(J\\) \u4e5f\u80fd\u7531 \\(R\\) \u63a8\u5bfc\u3002\u8fd9\u662f\u4e00\u79cd\u8f83\u5f31\u7684\u5047\u8a00\u5224\u65ad\u5f62\u5f0f\u3002</p> <p>\u53ef\u7eb3\u6027\u5224\u65ad \\(J_1, \\dots, J_k \\vDash_R J\\) \u7b49\u4ef7\u4e8e\u79f0\u300c\u89c4\u5219 \\(\\cfrac{J_1, \\dots, J_k}{J}\\) \u76f8\u5bf9\u4e8e \\(R\\) \u662f \u53ef\u7eb3\u7684 (admissible)\u300d\u3002</p> <p>\u53ef\u7eb3\u6027\u5224\u65ad\u5728\u5bf9\u89c4\u5219\u6269\u5c55\u65f6\u5e76\u4e0d\u7a33\u5b9a\u3002</p> <p>Example</p> <p>\u4f8b\u5982\uff0c\u8bb0 \\(R\\) \u4e3a 2.5 \u4e2d\u5bf9\u5947\u81ea\u7136\u6570\u548c\u5076\u81ea\u7136\u6570\u7684\u5f52\u7eb3\u5b9a\u4e49\uff0c\u5373\uff1a</p> \\[\\cfrac{}{\\text{zero even}}\\] \\[\\cfrac{b \\text{ odd}}{\\text{succ}(b)\\text{ even}}\\] \\[\\cfrac{a \\text{ even}}{\\text{succ}(a)\\text{ odd}}\\] <p>\u90a3\u4e48\u53ef\u7eb3\u6027\u5224\u65ad \\(\\text{succ}(a) \\text{ even} \\vDash_R a\\text{ odd}\\) \u662f\u5408\u6cd5\u7684\u3002\u5b83\u7b49\u4ef7\u4e8e\u79f0\u89c4\u5219 \\(\\cfrac{\\text{succ}(a) \\text{ even}}{a\\text{ odd}}\\) \u76f8\u5bf9\u4e8e \\(R\\) \u662f\u53ef\u7eb3\u7684\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u7528\u516c\u7406 \\(\\cfrac{}{\\text{succ(zero) even}}\\) \u6269\u5c55 \\(R\\)\uff0c\u5219\u4e0a\u8ff0\u89c4\u5219\u662f\u4e0d\u53ef\u7eb3\u7684\u3002\u56e0\u4e3a\u5f53 \\(a = \\text{zero}\\) \u65f6\uff0c\u521a\u521a\u6dfb\u52a0\u7684\u89c4\u5219\u80fd\u63a8\u5bfc\u51fa \\(\\text{succ(zero) even}\\)\uff0c\u4f46\u662f\u6ca1\u6709\u4efb\u4f55\u89c4\u5219\u53ef\u4ee5\u63a8\u5bfc\u51fa \\(\\text{zero odd}\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ef\u7eb3\u6027\u5224\u65ad\u5728\u5bf9\u89c4\u5219\u6269\u5c55\u65f6\u5e76\u4e0d\u7a33\u5b9a\u3002</p> <p>\u53ef\u5bfc\u6027\u7684\u7ed3\u6784\u7279\u6027\u786e\u4fdd\u4e86\u53ef\u5bfc\u6027\u6bd4\u53ef\u7eb3\u6027\u66f4\u5f3a\u3002</p> <p>\u5b9a\u7406 3.2</p> <p>\u5982\u679c \\(\\Gamma\\vdash_R J\\)\uff0c\u90a3\u4e48 \\(\\Gamma\\vDash_R J\\)\u3002</p> <p>\u8bc1\u660e\uff1a\u5373\u8981\u8bc1\uff0c\u5982\u679c \\(\\Gamma\\vdash_R J\\) \u4e14 \\(\\vdash_R \\Gamma\\)\uff0c\u90a3\u4e48 \\(\\vdash_R J\\)\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u53ef\u5bfc\u6027\u5224\u65ad\u7684\u4f20\u9012\u6027\u8bc1\u660e\u3002</p> <p>\u9006\u547d\u9898\u662f\u4e0d\u6210\u7acb\u7684\u3002\u4e00\u4e2a\u53cd\u4f8b\u662f\uff0c\u5728\u524d\u4f8b\u4e2d\uff0c\\(\\text{succ}(a) \\text{ even} \\vDash_R a\\text{ odd}\\) \u662f\u5408\u6cd5\u7684\uff0c\u4f46 \\(\\text{succ}(a) \\text{ even} \\vdash_R a\\text{ odd}\\) \u662f\u4e0d\u5408\u6cd5\u7684\u3002</p> <p>\u53ef\u7eb3\u6027\u4e5f\u6709\u4e0e\u53ef\u5bfc\u6027\u7c7b\u4f3c\u7684\u7ed3\u6784\u6027\u8d28\uff1a</p> <ul> <li>\u81ea\u53cd\u6027 (reflexivity) \\(\\quad\\) \\(J, \\Gamma \\vDash_R J\\)\u3002</li> <li>\u5f31\u5316 (weakening) \\(\\quad\\) \u5982\u679c \\(\\Gamma \\vDash_R J\\)\uff0c\u90a3\u4e48 \\(\\Gamma, K \\vDash_R J\\)\u3002</li> <li>\u4f20\u9012\u6027 (transitivity) \\(\\quad\\) \u5982\u679c \\(\\Gamma, K \\vDash_R J\\) \u4e14 \\(\\Gamma \\vDash_R K\\)\uff0c\u90a3\u4e48 \\(\\Gamma \\vDash_R J\\)\u3002</li> </ul>"},{"location":"pl/ppl_notes/3_Hypothetical_and_General_Judgments/#32-hypothetical-inductive-definitions--\u5047\u8a00\u5f52\u7eb3\u5b9a\u4e49","title":"3.2 Hypothetical Inductive Definitions | \u5047\u8a00\u5f52\u7eb3\u5b9a\u4e49","text":"<p>\u6ca1\u8bb2\uff0c\u6682\u7565\u3002</p>"},{"location":"pl/ppl_notes/3_Hypothetical_and_General_Judgments/#33-general-judgments--\u4e00\u822c\u6027\u5224\u65ad","title":"3.3 General Judgments | \u4e00\u822c\u6027\u5224\u65ad","text":"<p>\u7b80\u5355\u6765\u8bf4\uff0c\u76f8\u5bf9\u4e8e \\(\\Gamma\\vdash_R J\\) \u800c\u8a00\uff0c\u6211\u4eec\u7528 \\(\\Gamma \\vdash_R^X J\\) \u8868\u793a \\(\\Gamma\\) \u4e2d\u7528\u5230\u4e86\u4e00\u4e9b variable\uff0c\u8fd9\u4e9b variable \u7684\u96c6\u5408\u4e3a \\(X\\)\u3002</p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u628a \\(X\\) \u5206\u4e3a\u4e24\u4e2a\u90e8\u5206 \\(XY\\)\uff0c\u5176\u4e2d \\(Y\\) \u662f \\(\\Gamma\\) \u4e2d\u7528\u5230\u7684\u6240\u6709\u81ea\u7531\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4eec\u53ef\u4ee5\u88ab\u4efb\u610f\u547d\u540d\u548c\u66ff\u6362\uff1b\\(X\\) \u662f\u5269\u4f59\u7684\u53d8\u91cf\uff0c\\(X\\cap Y = \\varnothing\\)\uff0c\u5373 \\(\\Gamma \\vdash_R^{XY} J\\)\u3002\u6211\u4eec\u8bb0 \\(Y\\ |\\ \\Gamma \\vdash_R^X J\\) \u4e0e\u4e4b\u7b49\u4ef7\u3002</p> <p>\u53c2\u8003\u8bfe\u672c\u4e2d\u8be5\u8282\u7684\u4f8b\u5b50\u4ee5\u53ca\u4e60\u9898 3.6 \u53ef\u4ee5\u6709\u66f4\u660e\u786e\u7684\u4f8b\u5b50\u3002</p>"},{"location":"pl/ppl_notes/3_Hypothetical_and_General_Judgments/#34-generic-inductive-definitions--\u6cdb\u578b\u5f52\u7eb3\u5b9a\u4e49","title":"3.4 Generic Inductive Definitions | \u6cdb\u578b\u5f52\u7eb3\u5b9a\u4e49","text":"<p>\u6ca1\u8bb2\uff0c\u6682\u7565\u3002</p>"},{"location":"pl/ppl_notes/4_Statics/","title":"4 Statics | \u9759\u6001\u8bed\u4e49","text":"<p> \u7ea6 1042 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\uff08\u65e0\u8bba\u662f\u7f16\u8bd1\u578b\u8fd8\u662f\u89e3\u91ca\u578b\uff09\u4ece\u4ee3\u7801\u5230\u6267\u884c\u4e4b\u95f4\u90fd\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a\u9759\u6001 (static) \u9636\u6bb5\u548c \u52a8\u6001 (dynamic) \u9636\u6bb5\u3002\u9759\u6001\u9636\u6bb5\u7531 parsing\uff08\u6ee1\u8db3\u8bed\u6cd5\uff09 \u548c type checking\uff08\u6ee1\u8db3\u9759\u6001\u8bed\u4e49\uff09 \u7ec4\u6210\uff0c\u4ee5\u4fdd\u8bc1\u7a0b\u5e8f\u662f well-formed \u7684\uff1b\u52a8\u6001\u9636\u6bb5\u7531 well-formed \u7a0b\u5e8f\u7684\u6267\u884c\u7ec4\u6210\uff0c\u5982\u679c\u80fd\u591f\u6b63\u786e\u8fd0\u884c\uff0c\u5219\u7a0b\u5e8f\u662f well-behaved \u7684\u3002</p> <p>\u5f53\u4e14\u4ec5\u5f53 well-formed \u7684\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\u662f well-behaved \u7684\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u7f16\u7a0b\u8bed\u8a00\u662f \u5b89\u5168 (safe) \u7684\u3002</p> <p>\u4e66\u4e2d\u5b9a\u4e49\u4e86 E \u8bed\u8a00\uff0c\u5b83\u7684\u62bd\u8c61\u548c\u5177\u4f53\u8bed\u6cd5\u5982\u4e0b\u9762\u7684 \u8bed\u6cd5\u8868 (syntax chart) \u6240\u793a\uff1a</p> <p></p> <p>\u4e0a\u8868\u4e2d\u89c4\u5b9a\u4e86\u4e00\u7cfb\u5217 operators \u548c\u5b83\u4eec\u7684 arities\uff0c\u4f8b\u5982 <code>let</code> \u7684 arity \u5c31\u662f <code>(Exp, Exp.Exp)Exp</code>\u3002</p> <p>\u6211\u4eec\u5728\u7b2c 1 \u8282\u63d0\u5230\uff0c\u8bed\u6cd5 (syntax) \u89c4\u5b9a\u4e86\u5982\u4f55\u5c06\u5404\u79cd phrases(expr, commands / statements, decl, etc.) \u7ec4\u5408\u6210\u7a0b\u5e8f\u3002\u5728\u672c\u8282\u7684\u5f00\u5934\u6211\u4eec\u4e5f\u63d0\u5230\uff0c\u5728\u9759\u6001\u9636\u6bb5\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4e00\u4e2a\u7a0b\u5e8f\u662f well-formed \u7684\uff0c\u6211\u4eec\u9700\u8981\u68c0\u67e5\u5b83\u6ee1\u8db3\u8bed\u6cd5\u548c\u9759\u6001\u8bed\u4e49\u3002\u8fd9\u91cc\u63d0\u5230\u7684 \u9759\u6001\u8bed\u4e49 (statics) \u7531\u4e00\u7cfb\u5217\u89c4\u5219\u7ec4\u6210\uff0c\u8fd9\u4e9b\u89c4\u5219\u662f\u7528\u6765\u63a8\u5bfc \u5b9a\u578b\u5224\u65ad (typing judgments) \u7684\u3002\u6240\u8c13 typing judgments\uff0c\u5c31\u662f\u7528\u6765\u9648\u8ff0\u67d0\u4e2a\u8868\u8fbe\u5f0f\u7b26\u5408\u67d0\u4e2a\u7c7b\u578b\u7684\u5224\u65ad\u3002</p> <p>\u5bb9\u6613\u7406\u89e3\u7684\u662f\uff0c\u8868\u8fbe\u5f0f <code>plus(x; num[n])</code> \u662f\u5426\u5408\u6cd5\uff0c\u53d6\u51b3\u4e8e <code>x</code> \u7684\u7c7b\u578b\u662f\u5426\u662f <code>num</code>\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cphrases \u5bf9\u4e8e\u5176\u6240\u5904\u7684\u4e0a\u4e0b\u6587\u662f\u654f\u611f\u7684\u3002\u56e0\u6b64\uff0cE \u7684 statics \u7531\u5f62\u5982 \\(\\vec{x}\\ |\\ \\Gamma\\vdash e:\\tau\\) \u7684\u6cdb\u578b\u5047\u8a00\u5224\u65ad\u7ec4\u6210\u3002\u5176\u4e2d\uff0c\\(\\vec{x} = \\text{dom}(\\Gamma)\\) \u662f\u53d8\u91cf\u7684\u6709\u9650\u96c6\u5408\uff1b \\(\\Gamma\\) \u662f\u5b9a\u578b\u4e0a\u4e0b\u6587\uff0c\u5b83\u5bf9\u6bcf\u4e2a \\(x\\in \\vec{x}\\) \u6709\u4e00\u4e2a\u5f62\u5982 \\(x:\\tau\\) \u7684\u5047\u8bbe\u3002</p> <p>\u5982\u679c \\(x\\notin \\text{dom}(\\Gamma)\\)\uff0c\u90a3\u4e48\u6211\u4eec\u79f0 \\(x\\) \u5bf9\u4e8e \\(\\Gamma\\) \u662f\u65b0\u7684\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a \\(x:\\tau\\) \u6dfb\u52a0\u5230 \\(\\Gamma\\) \u4e2d\u5f97\u5230 \\(\\Gamma, x:\\tau\\)\u3002</p> <p>E \u7684 statics \u7528\u4ee5\u4e0b\u89c4\u5219\u5b9a\u4e49\uff1a</p> \\[\\frac{}{\\Gamma, x:\\tau\\vdash x:\\tau}\\] \\[\\frac{}{\\Gamma\\vdash \\text{str}[s]:\\text{str}}\\] \\[\\frac{}{\\Gamma\\vdash \\text{num}[n]:\\text{num}}\\] \\[\\frac{\\Gamma\\vdash e_1:\\text{num}\\quad \\Gamma\\vdash e_2:\\text{num}}{\\Gamma\\vdash \\text{plus}(e_1;e_2):\\text{num}}\\] \\[\\frac{\\Gamma\\vdash e_1:\\text{num}\\quad \\Gamma\\vdash e_2:\\text{num}}{\\Gamma\\vdash \\text{times}(e_1;e_2):\\text{num}}\\] \\[\\frac{\\Gamma\\vdash e_1:\\text{str}\\quad \\Gamma\\vdash e_2:\\text{str}}{\\Gamma\\vdash \\text{cat}(e_1;e_2):\\text{str}}\\] \\[\\frac{\\Gamma\\vdash e:\\text{str}}{\\Gamma\\vdash \\text{len}(e):\\text{num}}\\] \\[\\frac{\\Gamma\\vdash e_1:\\tau_1\\quad \\Gamma, x:\\tau_1\\vdash e_2:\\tau_2}{\\Gamma\\vdash \\text{let}(e_1; x.e_2):\\tau_2}\\] Note <p>\u7b2c 2 \u548c\u7b2c 3 \u6761\u7684 <code>str</code> \u548c <code>num</code> \u662f\u7c7b\u578b\u7684 \u5f15\u5165\u5f62\u5f0f (introduction form)\uff0c\u786e\u5b9a\u67d0\u4e2a\u7c7b\u578b\u7684 value \u6216\u8005\u8bf4\u662f canonical form</p> <p>\u800c\u540e\u9762\u7684\u82e5\u5e72\u6761\u5219\u662f\u4e00\u4e9b \u6d88\u53bb\u6a21\u5f0f (elimination form)\uff0c\u786e\u5b9a\u5982\u4f55\u4f7f\u7528\u7c7b\u578b\u6765\u5f62\u6210\u53e6\u4e00\u79cd\uff08\u53ef\u80fd\u662f\u76f8\u540c\u7684\uff09\u7c7b\u578b\u3002</p> <p>\u4f8b\u5982\uff0c<code>num</code> \u7c7b\u578b\u7684\u5f15\u5165\u5f62\u5f0f\u662f\u6570\uff0c\u800c\u6d88\u53bb\u5f62\u5f0f\u662f <code>plus</code> \u548c <code>times</code>\u3002</p> <p>\u6839\u636e\u4e0a\u8ff0\u5b9a\u4e49\uff0c\u6709\u5982\u4e0b\u5f15\u7406\uff1a</p> <p>\u5f15\u7406 4.1\uff08\u7c7b\u578b\u552f\u4e00\u6027\uff0cunicity of typing\uff09\uff1a\\(\\forall\\ \\Gamma, e\\)\uff0c\u81f3\u591a\u5b58\u5728\u4e00\u4e2a \\(\\tau\\) s.t. \\(\\Gamma\\vdash e:\\tau\\)\u3002</p> <p>\u5f15\u7406 4.2\uff08\u5b9a\u578b\u53cd\u8f6c\uff0cinversion for typing\uff09\uff1a\u5047\u8bbe \\(\\Gamma\\vdash e:\\tau\\)\uff0c\u82e5 \\(e = \\text{plus}(e_1;e_2)\\)\uff0c\u90a3\u4e48 \\(\\tau = \\text{num}, \\Gamma\\vdash e_1:\\text{num}, \\Gamma\\vdash e_2:\\text{num}\\)\u3002\u5bf9\u4e8e times \u7b49\u5176\u4ed6\u7ed3\u6784\u4e5f\u7c7b\u4f3c\u3002</p> <p>\u5f15\u7406 4.3\uff08\u5f31\u5316\uff0cweakening\uff09\uff1a\u82e5 \\(\\Gamma\\vdash e':\\tau'\\)\uff0c\u5219\u5bf9\u4efb\u610f \\(x\\notin \\text{dom}(\\Gamma)\\)\uff0c\u6709 \\(\\Gamma, x:\\tau\\vdash e':\\tau'\\)\u3002</p> <p>\u5f15\u7406 4.4\uff08\u4ee3\u6362\uff0csubstitution\uff09\uff1a\u82e5 \\(\\Gamma, x:\\tau\\vdash e':\\tau'\\) \u4e14 \\(\\Gamma\\vdash e:\\tau\\)\uff0c\u5219 \\(\\Gamma\\vdash [e/x]e':\\tau'\\)\u3002</p> <p>\u4ece\u5b9e\u9645\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7406\u89e3\uff0c\\(x:\\tau\\) \u662f\u4e00\u68f5 ABT\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5728 \\(e'\\) \u4e2d\u7684\u6bcf\u6b21\u51fa\u73b0\u8868\u793a\u4e00\u4e2a\u4ee3\u7801\u7247\u6bb5\uff1b\u800c \\(e:\\tau\\) \u662f\u4e00\u68f5\u540c\u6837\u7c7b\u578b\u7684 ABT\uff0c\u8868\u793a\u4e00\u4e2a\u4ee3\u7801\u7247\u6bb5\u3002\u8fd9\u91cc\u7684\u300c\u4ee3\u6362\u300d\u5176\u5b9e\u5c31\u5b9e\u73b0\u4e86\u51fd\u6570\u8c03\u7528\uff0c\u5373 \\(x\\) \u5b9e\u9645\u4e0a\u7ed9\u51fa\u7684\u662f\u51fd\u6570\u7b7e\u540d\uff0c\u800c \\(e\\) \u5219\u5305\u542b\u4e86\u5177\u4f53\u7684\u5b9e\u73b0\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e00\u5f15\u7406\u8868\u8fbe\u4e86 \u6a21\u5757\u5316 (modularity) \u548c \u94fe\u63a5 (linking) \u7684\u91cd\u8981\u6982\u5ff5\u3002</p> <p>\u5f15\u7406 4.5\uff08\u5206\u89e3\uff0cdecomposition\uff09\uff1a\u82e5 \\(\\Gamma\\vdash [e/x]e':\\tau'\\)\uff0c\u5219\u5bf9\u6ee1\u8db3 \\(\\Gamma\\vdash e:\\tau\\) \u7684\u6bcf\u4e2a\u7c7b\u578b \\(\\tau\\)\uff0c\u6709 \\(\\Gamma, x:\\tau \\vdash e':\\tau'\\)\u3002</p> <p>\u8fd9\u5176\u5b9e\u662f\u5f15\u7406 4.4 \u7684\u9006\u64cd\u4f5c\uff0c\u8868\u660e\u4efb\u4f55\u4e00\u4e2a\uff08\u5927\u7684\uff09\u5b50\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u5206\u5272\u51fa\u6765\u5f62\u6210\u4e00\u4e2a\u72ec\u7acb\u6a21\u5757\u3002</p>"},{"location":"pl/ppl_notes/5_Dynamics/","title":"5 Dynamics | \u52a8\u6001\u8bed\u4e49","text":"<p> \u7ea6 714 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"pl/ppl_notes/5_Dynamics/#51-transition-systems--\u8f6c\u6362\u7cfb\u7edf","title":"5.1 Transition Systems | \u8f6c\u6362\u7cfb\u7edf","text":"<p>\u6211\u4eec\u7528\u4e0b\u9762 4 \u4e2d\u5f62\u5f0f\u7684\u5224\u65ad\u6765\u63cf\u8ff0 \u8f6c\u6362\u7cfb\u7edf (transition system)\u3002\u8f6c\u6362\u7cfb\u7edf\u7528\u4e8e\u5f52\u7eb3\u5730\u6307\u660e\u7a0b\u5e8f\u6267\u884c\u7684\u4e00\u6b65\u6b65\u8fc7\u7a0b\uff1a</p> <ol> <li>\\(s\\) state\uff08\\(s\\) \u662f\u8f6c\u6362\u7cfb\u7edf\u7684\u4e00\u4e2a\u72b6\u6001\uff09</li> <li>\\(s\\) final\uff08\u5728 \\(s\\) state \u7684\u524d\u63d0\u4e0b\uff0c\\(s\\) \u662f\u4e00\u4e2a\u7ec8\u7ed3\u72b6\u6001\uff09</li> <li>\\(s\\) initial\uff08\u5728 \\(s\\) state \u7684\u524d\u63d0\u4e0b\uff0c\\(s\\) \u662f\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\uff09</li> <li>\\(s \\mapsto s'\\)\uff08\u5728 \\(s\\) state \u548c \\(s'\\) state \u7684\u524d\u63d0\u4e0b\uff0c\\(s\\) \u53ef\u4ee5\u8f6c\u6362\u5230 \\(s'\\)\uff09</li> </ol> <p>\u6211\u4eec\u79f0\u4e00\u4e2a\u65e0\u6cd5\u8f6c\u6362\u7684\u72b6\u6001\u662f \u5361\u4f4f\u7684 (stuck)\u3002\u6211\u4eec\u7ea6\u5b9a\uff0c\u6240\u6709\u7ec8\u7ed3\u72b6\u6001\u90fd\u662f stuck \u7684\uff1b\u4f46\u662f\u8f6c\u6362\u7cfb\u7edf\u4e2d\u4e5f\u53ef\u80fd\u5b58\u5728 stuck \u7684\u975e\u7ec8\u7ed3\u72b6\u6001\u3002</p> <p>\u6211\u4eec\u79f0\u4e00\u4e2a\u8f6c\u6362\u7cfb\u7edf\u662f \u786e\u5b9a\u6027\u7684 (deterministic)\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u6bcf\u4e2a\u72b6\u6001 \\(s\\)\uff0c\u6709\u81f3\u591a\u4e00\u4e2a \\(s'\\) \u4f7f\u5f97 \\(s\\mapsto s'\\)\u3002\u5426\u5219\uff0c\u79f0\u4e4b\u4e3a \u975e\u786e\u5b9a\u6027\u7684 (non-deterministic)\u3002</p> <p>\u5982\u679c\u4e00\u7cfb\u5217\u72b6\u6001 \\(s_0, \\cdots, s_n\\) \u6ee1\u8db3 \\(s_0\\) initial\uff0c\u4e14 \\(s_i\\mapsto s_{i+1}, 0\\le i &lt; n\\)\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u4e2a \u8f6c\u6362\u5e8f\u5217 (transition sequence)\u3002\u79f0\u4e00\u4e2a\u8f6c\u6362\u5e8f\u5217\u4e3a \u6700\u5927\u7684 (maximal)\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(s_n\\) \u662f stuck \u7684\u3002\u79f0\u4e00\u4e2a\u8f6c\u6362\u5e8f\u5217\u4e3a \u5b8c\u5907\u7684 (complete)\uff0c\u5f53\u4e14\u4ec5\u5f53\uff08\u5b83\u662f maximal \u7684\uff0c\u800c\u4e14\uff09\\(s_n\\) final\u3002</p> <p>\u5224\u65ad \\(s\\downarrow\\) \u8868\u793a\u6709\u4e00\u4e2a\u4ece \\(s\\) \u5f00\u59cb\u7684 complete transition sequence\uff0c\u5373 \\(s\\) initial \u4e14\u5b58\u5728 \\(s'\\) final s.t. \\(s\\mapsto^*s'\\)\u3002\u5176\u4e2d \u8f6c\u6362\u5224\u65ad\u7684\u8fed\u4ee3 (iteration) \\(s\\mapsto^*s'\\) \u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[\\frac{}{s\\mapsto^* s}\\] \\[\\frac{s\\mapsto s'\\quad s'\\mapsto^* s''}{s\\mapsto^* s''}\\] <p>\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u5b9a\u4e49 \u8f6c\u6362\u5224\u65ad\u7684 n \u6b21\u8fed\u4ee3 (n-times iteration) \\(s\\mapsto^n s'\\) \u5982\u4e0b\uff1a</p> \\[\\frac{}{s\\mapsto^0 s}\\] \\[\\frac{s\\mapsto s'\\quad s'\\mapsto^n s''}{s\\mapsto^{n+1}s''}\\] <p>\u5b9a\u7406 5.1 \u5bf9\u6240\u6709\u72b6\u6001 \\(s\\) \u548c \\(s'\\)\uff0c\\(s\\mapsto^*s'\\) \u5f53\u4e14\u4ec5\u5f53 \\(\\exists k \\ge 0, s\\mapsto^ks'\\)\u3002</p>"},{"location":"pl/ppl_notes/5_Dynamics/#52-structural-dynamics--\u7ed3\u6784\u5316\u52a8\u6001\u8bed\u4e49","title":"5.2 Structural Dynamics | \u7ed3\u6784\u5316\u52a8\u6001\u8bed\u4e49","text":"<p>\u7ed3\u6784\u5316\u52a8\u6001\u8bed\u4e49\u901a\u8fc7\u8f6c\u6362\u7cfb\u7edf\u6765\u5f52\u7eb3\u5730\u6307\u660e\u7a0b\u5e8f\u6267\u884c\u7684\u4e00\u6b65\u6b65\u8fc7\u7a0b\u3002E \u8bed\u8a00\u7684\u7ed3\u6784\u5316\u52a8\u6001\u8bed\u4e49\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p>\u6240\u6709\u72b6\u6001\u90fd\u662f\u521d\u59cb\u72b6\u6001\u3002</p> <p>\u5224\u65ad \\(e\\) val \u8868\u793a \\(e\\) \u662f\u4e00\u4e2a \u95ed\u503c\uff0c\u4ee3\u8868\u5df2\u5b8c\u6210\u7684\u8ba1\u7b97\uff0c\u662f\u5c01\u95ed\u72b6\u6001\u3002\u5176\u5f52\u7eb3\u5b9a\u4e49\u7531\u5982\u4e0b\u89c4\u5219\u7ed9\u51fa\uff1a</p> <p></p> <p>\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u6362\u5224\u65ad \\(e\\mapsto e'\\) \u7531\u4ee5\u4e0b\u89c4\u5219\u5f52\u7eb3\u5b9a\u4e49\uff1a</p> <p></p> <p></p> <p>\uff08<code>times</code> \u548c <code>len</code> \u7c7b\u4f3c\uff0c\u7565\uff09</p> <p>\u5728\u4e0a\u8ff0\u5b9a\u4e49\u4e2d\uff0c5.4a, 5.4d, 5.4h \u662f\u57fa\u672c\u7684\u6c42\u503c\u6b65\u9aa4\uff0c\u79f0\u4e3a \u6307\u4ee4\u8f6c\u6362 (instruction transition)\uff1b\u800c\u5176\u4ed6\u89c4\u5219\u7528\u4e8e\u786e\u5b9a\u6267\u884c\u987a\u5e8f\uff0c\u79f0\u4e3a \u641c\u7d22\u8f6c\u6362 (search transition)\u3002</p> <p>\u4f8b\u5982\uff0c5.4b \u548c 5.4c \u5c31\u8868\u793a\uff0c\u5982\u679c \\(\\text{plus}(e_1;e_2)\\) \u4e2d \\(e_1\\) \u4e0d\u5728\u7ec8\u7ed3\u72b6\u6001\uff0c\u5c31\u5e94\u5f53\u5148\u505a\u8f6c\u6362\uff1b\u5982\u679c \\(e_1\\) final\uff0c\u90a3\u4e48\u5728\u8003\u8651 \\(e_2\\) \u80fd\u5426\u8f6c\u6362\uff0c\u5982\u679c\u80fd\u8f6c\u6362\u5219\u4f18\u5148\u8f6c\u6362\u3002\u76f4\u5230\u6240\u6709\u8f6c\u6362\u90fd\u5b8c\u6210\uff0c\u5373 \\(e_1\\) final \u4e14 \\(e_2\\) final\uff0c\u518d\u6839\u636e 5.4a \u8fdb\u884c\u6c42\u503c\u3002</p> <p>\u4e0a\u8ff0\u5b9a\u4e49\u7684 5.4h \u7684\u524d\u63d0\u90e8\u5206\u548c 5.4g \u88ab\u65b9\u62ec\u53f7\u62ec\u8d77\uff0c\u8fd9\u5176\u5b9e\u662f\u9488\u5bf9 <code>let</code> \u7684\u4e24\u79cd\u4e0d\u540c\u7406\u89e3\u63d0\u51fa\u7684\u3002\u4e00\u79cd\u662f \u6309\u503c\u89e3\u91ca (by-value interpretation)\uff0c\u5373\u5728\u7ed1\u5b9a\u5230\u5df2\u5b9a\u4e49\u7684\u53d8\u91cf\u4e4b\u524d\u5148\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u6c42\u503c\uff0c\u5982\u679c\u91c7\u53d6\u8fd9\u79cd\u7406\u89e3\uff0c\u5219\u65b9\u62ec\u53f7\u62ec\u8d77\u7684\u90e8\u5206\u5e94\u5f53\u88ab\u4fdd\u7559\uff1b\u800c\u53e6\u4e00\u79cd\u662f \u6309\u540d\u89e3\u91ca (by-name interpretation)\uff0c\u5373\u5728\u6ca1\u6709\u6c42\u503c\u7684\u60c5\u51b5\u4e0b\u76f4\u63a5\u8fdb\u884c\u7ed1\u5b9a\u3002 \u5bb9\u6613\u7406\u89e3\uff0c\u5df2\u5b9a\u4e49\u53d8\u91cf\u88ab\u591a\u6b21\u4f7f\u7528\u65f6\uff0c\u6309\u503c\u89e3\u91ca\u6548\u7387\u8f83\u9ad8\uff1b\u800c\u5df2\u5b9a\u4e49\u53d8\u91cf\u4e0d\u88ab\u4f7f\u7528\u65f6\uff0c\u6309\u540d\u89e3\u91ca\u6548\u7387\u8f83\u9ad8\u3002</p> Example <p>\u4e0b\u9762\u7684\u6c42\u503c\u5e8f\u5217\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1b</p> <p></p> <p>\u5176\u4e2d\u7684\u6bcf\u4e00\u6b65\u90fd\u53ef\u4ee5\u901a\u8fc7\u524d\u8ff0\u89c4\u5219\u63a8\u5bfc\u8bc1\u660e\uff1a</p> <p></p> <p>\u4e0a\u8ff0\u5bf9 E \u7684\u7ed3\u6784\u5316\u52a8\u6001\u8bed\u4e49\u53ef\u4ee5\u5f15\u51fa\u4e00\u4e0b\u4e24\u4e2a\u5f15\u7406\uff1a</p> <p>\u5f15\u7406 5.2\uff08\u503c\u7684\u7ec8\u7ed3\u6027\uff0cfinality of value\uff09 \uff08\u5728 E \u8bed\u8a00\u4e2d\uff0c\uff09\u4e0d\u5b58\u5728\u8868\u8fbe\u5f0f \\(e\\)\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u67d0\u4e2a \\(e'\\)\uff0c\\(e\\) val \u548c \\(e\\mapsto e'\\) \u540c\u65f6\u6210\u7acb\u3002</p> <p>\u5f15\u7406 5.3\uff08\u786e\u5b9a\u6027\uff0cdeterminacy\uff09 \uff08\u5728 E \u8bed\u8a00\u4e2d\uff0c\uff09\u5982\u679c \\(e\\mapsto e'\\) \u4e14 \\(e\\mapsto e''\\)\uff0c\u90a3\u4e48 \\(e'\\) \u548c \\(e''\\) \u662f \\(\\alpha\\)-equivalent \u7684\u3002</p>"},{"location":"pl/ppl_notes/5_Dynamics/#53-contextual-dynamics--\u4e0a\u4e0b\u6587\u52a8\u6001\u8bed\u4e49","title":"5.3 Contextual Dynamics | \u4e0a\u4e0b\u6587\u52a8\u6001\u8bed\u4e49","text":"<p>\u6ca1\u770b\u61c2\uff0c\u6682\u7565\u3001</p>"},{"location":"pl/ppl_notes/5_Dynamics/#54-equational-dynamics--\u7b49\u5f0f\u52a8\u6001\u8bed\u4e49","title":"5.4 Equational Dynamics | \u7b49\u5f0f\u52a8\u6001\u8bed\u4e49","text":"<p>\u6ca1\u8bb2\uff0c\u6682\u7565\u3002</p>"},{"location":"pl/ppl_notes/6_Type_Safety/","title":"6 Type Safety | \u7c7b\u578b\u5b89\u5168","text":"<p> \u7ea6 352 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>\u5b9a\u7406 6.1\uff08\u7c7b\u578b\u5b89\u5168\uff0ctype safety\uff09 \u6211\u4eec\u5b9a\u4e49\uff0c\u6ee1\u8db3\u5982\u4e0b\u4e24\u4e2a\u6027\u8d28\u7684\u8bed\u8a00\u662f\u7c7b\u578b\u5b89\u5168\u7684\uff1a</p> <ul> <li>\u5b9a\u7406 6.2\uff08\u4fdd\u6301\u6027\uff0cpreservation\uff09 \u5982\u679c \\(e:\\tau\\) \u4e14 \\(e\\mapsto e'\\)\uff0c\u90a3\u4e48 \\(e':\\tau\\)\u3002</li> <li>\u5b9a\u7406 6.4\uff08\u8fdb\u5c55\u6027\uff0cprogress\uff09 \u5982\u679c \\(e:\\tau\\)\uff0c\u5219\u8981\u4e48 \\(e\\) val\uff0c\u8981\u4e48\u5b58\u5728 \\(e'\\) \u4f7f\u5f97 \\(e\\mapsto e'\\)\u3002</li> </ul>"},{"location":"pl/ppl_notes/6_Type_Safety/#\u8fd0\u884c\u65f6\u9519\u8bef","title":"\u8fd0\u884c\u65f6\u9519\u8bef","text":"<p>\u4f8b\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u7ed9 E \u52a0\u4e0a\u9664\u6cd5\u8fd0\u7b97\uff1a</p> <p></p> <p>\u4f46\u662f\uff0c<code>div(num[3]; num[0])</code> \u662f well-typed \u7684\uff0c\u4f46\u662f\u4f1a stuck\u3002\u6211\u4eec\u6709 2 \u79cd\u601d\u8def\u7ea0\u6b63\u8fd9\u79cd\u95ee\u9898\uff1a</p> <ol> <li>\u589e\u5f3a\u7c7b\u578b\u7cfb\u7edf\uff0c\u4f7f\u5f97 divide by 0 \u7684\u60c5\u51b5\u4e0d\u4f1a\u51fa\u73b0\u3002\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u56f0\u96be\uff0c\u56e0\u4e3a\u6211\u4eec\u5f88\u96be\u9759\u6001\u5730\u9884\u6d4b\u8868\u8fbe\u5f0f\u5728\u6c42\u503c\u65f6\u662f\u5426\u975e 0\u3002</li> <li>\u589e\u52a0\u52a8\u6001\u68c0\u67e5\uff0c\u4f7f\u5f97 divide by 0 \u65f6\u62a5\u9519\u5e76\u5c06\u9519\u8bef\u89c6\u4f5c\u6c42\u503c\u7684\u8f93\u51fa\u3002</li> </ol> <p>\u5b9e\u73b0\u4e0a\u8ff0\u7b2c 2 \u79cd\u601d\u8def\uff0c\u53ef\u4ee5\u5f15\u5165\u5f62\u5982 \\(e\\) err \u7684\u5224\u65ad\u6765\u8868\u793a \\(e\\) \u4f1a\u5bfc\u81f4\u8fd0\u884c\u65f6\u9519\u8bef\uff0c\u6bd4\u5982 divide by 0\u3002\u5176\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\u5982\u4e0b\uff1b</p> <p></p> <p>\u7b2c\u4e00\u6761\u662f err \u7684\u4ea7\u751f\uff0c\u800c\u540e\u9762\u4e24\u6761\uff08\u4ee5\u53ca\u5176\u4ed6\u7c7b\u4f3c\u7684\u8ba1\u7b97\uff09\u662f err \u7684\u4f20\u64ad\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u5c06\u9519\u8bef\u5206\u4e3a\u4e86\u4e24\u79cd\uff1achecked error \u548c unchecked error\uff1b\u524d\u8005\u662f\u7c7b\u4f3c\u8fd9\u91cc divide by 0 \u7684\u9519\u8bef\uff0c\u6211\u4eec\u9700\u8981\u989d\u5916\u7684\u89c4\u5219\u6765\u68c0\u67e5\uff1b\u800c\u540e\u8005\u662f\u7c7b\u578b\u7cfb\u7edf\u672c\u8eab\u5c31\u80fd\u591f\u6392\u9664\u7684\u9519\u8bef\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u989d\u5916\u7684\u68c0\u67e5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002</p>"},{"location":"pl/ppl_notes/8_Func_Def_and_Val/","title":"8 Function Definitions and Values","text":"<p> \u7ea6 1116 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>\u5728 E \u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u5b9e\u73b0\u5c06\u7ed9\u5b9a\u8868\u8fbe\u5f0f\u52a0\u500d\u7684\u8fd0\u7b97\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u6784\u9020\u300c\u52a0\u500d\u300d\u8fd9\u6837\u4e00\u4e2a\u6982\u5ff5\uff0c\u4e5f\u5c31\u662f\u5b9a\u4e49\u4e00\u4e2a \u51fd\u6570 (function)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a\u4e00\u4e2a\u540d\u5b57\u7ed1\u5b9a\u5230\u4e00\u68f5\u5e26\u7ea6\u675f\u53d8\u91cf\u7684 abt \u4e0a\u6765\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u3002\u8fd9\u91cc\u7684\u7ea6\u675f\u53d8\u91cf\u5c31\u662f\u51fd\u6570\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u7279\u5b9a\u7684\u8868\u8fbe\u5f0f\u66ff\u6362\u7ea6\u675f\u53d8\u91cf\u6765\u5b8c\u6210\u51fd\u6570\u7684\u5e94\u7528\u3002</p>"},{"location":"pl/ppl_notes/8_Func_Def_and_Val/#81-first-order-function--\u4e00\u9636\u51fd\u6570","title":"8.1 First-Order Function | \u4e00\u9636\u51fd\u6570","text":"<p>\u8bed\u8a00 ED \u5728\u8bed\u8a00 E \u7684\u57fa\u7840\u4e0a\u6269\u5145\u4e86\u51fd\u6570\u5b9a\u4e49\u548c\u51fd\u6570\u5e94\u7528\uff0c\u5176\u62bd\u8c61\u548c\u5177\u4f53\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <p></p> <p>\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\\(f\\) \u662f \\(e\\) \u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u5b83\u88ab\u7ed1\u5b9a\u5230\u62bd\u8c61\u5b50 \\(x_1.e_2\\) \u4e0a\uff0c\u5373\u53c2\u6570\u4e3a \\(x_1\\)\uff0c\u5b9a\u4e49\u662f \\(e_2\\)\u3002</p> \u5173\u4e8e\u82b1\u62ec\u53f7 <p>\u8bfe\u672c 1.2 \u8282\u672b\u5c3e\u4e3e\u4f8b\uff0cabt \\(o\\{a_1;a_2\\}(a_3;x.a_4)\\) \u548c abt \\(o(a_1;a_2;a_3;x.a_4)\\) \u76f8\u540c\uff1b\u8fd9\u6837\u7684\u62ec\u53f7\u53ea\u662f\u7528\u6765\u5206\u7ec4\u4ece\u800c\u63d0\u9ad8\u53ef\u8bfb\u6027\u7684\u3002</p> <p>\u51fd\u6570\u5934 (function header) \\(f(x_1:\\tau_1):\\tau_2\\) \u8868\u793a\u51fd\u6570\u7684 \u5b9a\u4e49\u57df (domain) \u662f \\(\\tau_1\\), \u503c\u57df (range) \u662f \\(\\tau_2\\)\u3002\u7531\u4e8e E \u4e2d\u53ea\u6709 <code>num</code> \u548c <code>str</code> \u4e24\u4e2a\u7c7b\u578b\uff0c\u56e0\u6b64\u4e0a\u8ff0\u5b9a\u4e49\u57df\u548c\u503c\u57df\u4e5f\u53ea\u80fd\u662f\u8fd9\u4e24\u79cd\u3002</p> <p>\u5728 E \u7684\u57fa\u7840\u4e0a\uff0cED \u7684\u9759\u6001\u8bed\u4e49\u7531\u4ee5\u4e0b\u5b9a\u578b\u89c4\u5219\u5b9a\u4e49\uff1a</p> <p></p> <p>\u4e3a\u4e86\u7ed9\u51fa ED \u7684\u52a8\u6001\u8bed\u4e49\uff0c\u6211\u4eec\u5b9a\u4e49 \u51fd\u6570\u4ee3\u6362 (function substitution) \\([\\![ x_1.e_2/f ]\\!] e\\)\uff0c\u8868\u793a\u7528 \\(x_1.e_2\\) \u4ee3\u6362 \\(e\\) \u4e2d\u6240\u6709 \\(f\\) \u7684\u51fa\u73b0\u3002</p> <p>\u6211\u4eec\u4e0b\u9762\u5c1d\u8bd5\u7ed9\u51fa\u51fd\u6570\u4ee3\u6362\u7684\u5177\u4f53\u542b\u4e49\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u5f62\u5982 \\(\\text{apply}\\{f\\}(e')\\) \u7684\u51fd\u6570\u5e94\u7528\u4e2d\u624d\u4f1a\u51fa\u73b0\u51fd\u6570\u540d \\(f\\)\uff0c\u56e0\u6b64\u6b64\u65f6\u6211\u4eec\u5bf9 \\([\\![ x.e/f ]\\!] \\text{ apply}\\{f\\}(e')\\) \u7684\u5b9a\u4e49\u5c31\u7c7b\u4f3c\u4e8e \\(\\text{let } x \\text{ be } e' \\text{ in } e\\)\u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e \\(e'\\) \u4e2d\u8fd8\u53ef\u80fd\u5b58\u5728 \\(f\\)\uff0c\u56e0\u6b64\u6211\u4eec\u5bf9\u51fd\u6570\u4ee3\u6362\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p></p> <p>\u6709\u4e86\u51fd\u6570\u4ee3\u6362\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 E \u7684\u57fa\u7840\u4e0a\u5b9a\u4e49 ED \u7684\u52a8\u6001\u8bed\u4e49\u4e86\uff1a</p> <p></p> <p>\u5373\uff0c\u5982\u679c\u5728\u67d0\u4e2a abt \\(e\\) \u4e2d\u5b58\u5728\u5bf9\u51fd\u6570 \\(f\\) \u7684\u5b9a\u4e49\uff0c\u90a3\u4e48\u5728\u6c42\u503c\u65f6\uff0c\u5e94\u5f53\u7528 \\(x_1.e_2\\) \u4ee3\u6362 \\(e\\) \u4e2d\u6240\u6709 \\(f\\) \u7684\u51fa\u73b0\u3002</p>"},{"location":"pl/ppl_notes/8_Func_Def_and_Val/#82-high-order-functions--\u9ad8\u9636\u51fd\u6570","title":"8.2 High-Order Functions | \u9ad8\u9636\u51fd\u6570","text":"<p>\u5728 ED \u4e2d\uff0c\u53d8\u91cf\u5b9a\u4e49\u548c\u51fd\u6570\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c\uff1b\u6211\u4eec\u8bd5\u56fe\u5c06\u5b83\u4eec\u7edf\u4e00\u8d77\u6765\u3002</p> <p>\u8bed\u8a00 EF \u5728\u8bed\u8a00 E \u7684\u57fa\u7840\u4e0a\u6269\u5145\u4e86\u51fd\u6570\u7c7b\u578b\uff0c\u5176\u62bd\u8c61\u548c\u5177\u4f53\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <p></p> <p>Note</p> <p>\u4e0a\u9762\u7684\u62bd\u8c61\u8bed\u6cd5\u4e2d \\(\\to (\\tau_1; \\tau_2)\\) \u5728\u4e2d\u6587\u8bfe\u672c\u548c\u8bfe\u4ef6\u4e2d\u8bb0\u4f5c \\(\\text{arr}(\\tau_1; \\tau_2)\\)\uff1b\\(\\lambda \\{\\tau\\}(x.e)\\) \u5728\u4e2d\u6587\u8bfe\u672c\u548c\u8bfe\u4ef6\u4e2d\u8bb0\u4f5c \\(\\text{lam}\\{\\tau\\}(x.e)\\)\u3002</p> <p>\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\u51fd\u6570\u5b9a\u4e49\u5c31\u662f\u5c06\u51fd\u6570\u540d\u7ed1\u5b9a\u5230\u62bd\u8c61\u5b50\u4e0a\u3002\u56e0\u6b64\u6211\u4eec\u628a\u62bd\u8c61\u5b50\u5177\u4f53\u5316\u4e3a\u4e00\u79cd\u8868\u8fbe\u5f0f\u5f62\u5f0f\uff0c\u79f0\u4f5c \\(\\lambda\\) \u62bd\u8c61\uff0c\u8bb0\u4f5c \\(\\lambda \\{\\tau\\}(x.e)\\)\uff1b\u5176\u7c7b\u578b\u5373\u4e3a\u51fd\u6570\u7c7b\u578b \\(\\to (\\tau_1; \\tau_2)\\)\uff0c\\(\\tau_1\\) \u548c \\(\\tau_2\\) \u5206\u522b\u662f\u5176\u5b9a\u4e49\u57df\u548c\u503c\u57df\u3002\\(\\text{ap}(e_1;e_2)\\) \u7684\u51fd\u6570\u5e94\u7528\uff0c\u8fd9\u91cc \\(e_1\\) \u4e0d\u4e00\u5b9a\u662f\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u5b83\u53ef\u80fd\u662f\u4efb\u4f55\u7c7b\u578b\u4e3a\u51fd\u6570\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u3002</p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u51fd\u6570\u5f53\u505a\u4efb\u4f55\u5176\u4ed6\u8868\u8fbe\u5f0f\u4e00\u6837\u4f7f\u7528\u4e86\uff0c\u5305\u62ec\u4f5c\u4e3a\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8bf4\u5728\u8fd9\u6837\u7684\u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u662f \u4e00\u7b49 (first-class) \u7684\uff1b\u8fd9\u6837\u7684\u51fd\u6570\u88ab\u79f0\u4e3a\u662f\u9ad8\u9636\u7684\uff0c\u800c\u975e\u4e00\u9636\u7684\u3002</p> <p>\u5728 E \u7684\u57fa\u7840\u4e0a\uff0cEF \u7684\u9759\u6001\u8bed\u4e49\u4ee5\u5982\u4e0b\u5b9a\u578b\u89c4\u5219\u7ed9\u51fa\uff1a</p> <p></p> <p>\u5f15\u7406 4.2 \u7684\u7c7b\u578b\u53cd\u8f6c\u548c\u5f15\u7406 4.4 \u7684\u4ee3\u6362\u5728\u6b64\u5904\u4e5f\u6210\u7acb\u3002</p> <p>\u5728 E \u7684\u57fa\u7840\u4e0a\uff0cEF \u7684\u52a8\u6001\u8bed\u4e49\u4ee5\u5982\u4e0b\u89c4\u5219\u7ed9\u51fa\uff1a</p> <p></p> <p></p> <p>\u548c 5.2 \u8282\u8ba8\u8bba\u7684\u4e00\u6837\uff0c\u8fd9\u91cc\u7528\u65b9\u62ec\u53f7\u62ec\u8d77\u7684\u90e8\u5206\uff08\u9664\u4e86\u4ee3\u6362\uff09\u533a\u5206\u6309\u503c\u8c03\u7528\u548c\u6309\u540d\u8c03\u7528\u4e24\u79cd\u89c4\u5219\uff0c\u4e5f\u5c31\u662f\u53c2\u6570\u662f\u5426\u9700\u8981\u88ab\u6c42\u503c\u540e\u518d\u5e94\u7528\u3002</p> <p>8.4 Dynamic Scope | \u52a8\u6001\u4f5c\u7528\u57df</p> <p>\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff0c\u8fd4\u56de <code>1</code> \u8fd8\u662f <code>2</code>\uff1a</p> <pre><code>x &lt;- 1\nf &lt;- function(a) x + a\ng &lt;- function() {\n    x &lt;- 2\n    f(0)\n}\ng()\n</code></pre> <p>\u5728 dynamic scoping \u4e2d\uff0c\u51fd\u6570\u53ea\u4f1a\u8bbf\u95ee\u5f53\u524d\u73af\u5883\u4e2d\u7684\u5bf9\u5e94\uff08\u540c\u540d\uff09\u53d8\u91cf\u3002</p> <p>\u800c\u5728 lexical scoping (a.k.a. static scoping) \u7684\u8bed\u8a00\u4e2d\uff0c\u53d8\u91cf\u7684 scope \u7531\u7a0b\u5e8f\u7684\u8bcd\u6cd5\u7ed3\u6784\u51b3\u5b9a\uff1b\u4ea6\u5373\uff0c\u8fd9\u6837\u7684\u8bed\u8a00\u7684\u51fd\u6570\u8bbf\u95ee\u7684\u59cb\u7ec8\u662f\u5b83\u88ab\u521b\u5efa\u5904\u7684\u5bf9\u5e94\u53d8\u91cf\u3002\u7531\u4e8e\u8fd9\u6837\u7684\u53d8\u91cf\u4e0d\u5728\u8c03\u7528\u65f6\u7684\u5f53\u524d\u73af\u5883\u4e2d\uff0c\u56e0\u6b64\u5b83\u4eec\u5fc5\u987b\u88ab\u5b58\u5728\u4e00\u4e2a \u95ed\u5305 (closure) \u4e2d\u3002</p> <p>\u7edd\u5927\u591a\u6570\u8bed\u8a00\u662f lexical scoped \u7684\u3002</p>"},{"location":"pl/ppl_notes/9_Sys_T_of_Higher_Order_Recursion/","title":"9 System T of Higher Order Recursion","text":"<p> \u7ea6 1563 \u4e2a\u5b57  13 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"pl/ppl_notes/9_Sys_T_of_Higher_Order_Recursion/#91-\u77e5\u8bc6\u8865\u5145","title":"9.1 \u77e5\u8bc6\u8865\u5145","text":"<p>\u5728\u4ecb\u7ecd System T \u4e4b\u524d\uff0c\u6211\u4eec\u8865\u5145\u4e00\u4e9b\u9884\u5907\u77e5\u8bc6\u3002</p> <p>\u90e8\u5206\u51fd\u6570 (partial functions)\u3002\u5982\u679c \\(f\\) \u662f \\(A\\) \u5230 \\(B\\) \u7684\u4e8c\u5143\u5173\u7cfb\uff0c\u4e14 \\(\\forall a \\in A\\)\uff0c\u6709 \\(f(a) = \\varnothing\\) \u6216\u5b58\u5728 \\(b\\in B\\) \u4f7f\u5f97 \\(f(a) = {b}\\) \uff0c\u5219\u79f0 \\(f\\) \u662f\u4e00\u4e2a\u90e8\u5206\u51fd\u6570\u3002\u5f53 \\(f(a) \\neq \\varnothing\\) \u65f6\uff0c\u8bb0 \\(f(a)\\downarrow\\)\u3002</p> <p>\u5168\u51fd\u6570 (total functions)\u3002\u5982\u679c \\(f\\) \u662f\u90e8\u5206\u51fd\u6570\uff0c\u4e14 \\(\\forall a \\in A, f(a)\\downarrow\\)\uff0c\u5219\u79f0 \\(f\\) \u662f\u4e00\u4e2a\u5168\u51fd\u6570\u3002</p> <p>\u975e\u7ec8\u6b62\u6027\u3002\u5728\u6570\u5b66\u4e2d\u7684\u51fd\u6570\u57fa\u672c\u662f\u5168\u51fd\u6570\uff1b\u4f46\u90e8\u5206\u51fd\u6570\u5bf9\u4e8e\u8ba1\u7b97\u673a\u79d1\u5b66\u6765\u8bf4\u662f\u91cd\u8981\u7684\u3002\u4e00\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u8868\u793a\u4e3a\u6c42\u51fa \\(a\\in A\\) \u5728\u96c6\u5408 \\(B\\) \u4e2d\u5bf9\u5e94\u5143\u7d20\u7684\u8fc7\u7a0b\uff0c\u4f46\u8fd9\u4e2a\u7b97\u6cd5\u5bf9\u4e8e\u90e8\u5206 \\(a\\in A\\) \u53ef\u80fd\u4e0d\u4f1a\u7ec8\u6b62\uff0c\u8fd9\u79cd\u60c5\u51b5\u662f\u5f88\u5e38\u89c1\u7684\u3002</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>f :: Int -&gt; Int\nf 1 = 1\nf n = n + f(n - 2)\n</code></pre> <p>\u8fd9\u4e2a\u51fd\u6570 <code>f</code> \u5bf9\u4e8e\u5076\u81ea\u7136\u6570\u548c\u8d1f\u6570\u90fd\u4e0d\u4f1a\u7ec8\u6b62\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u4e2a\u90e8\u5206\u51fd\u6570\u3002</p> <p>\u9012\u5f52\u51fd\u6570\u8bba\u3002\u9012\u5f52\u51fd\u6570\u8bba\u662f\u548c\u56fe\u7075\u673a\u4ee5\u53ca \\(\\lambda\\) \u6f14\u7b97\u76f8\u7b49\u4ef7\u7684\u8ba1\u7b97\u6a21\u578b\uff0c\u5b83\u4ece\u53e6\u4e00\u4e2a\u2ec6\u5ea6\u523b\u753b\u4e86\u53ef\u8ba1\u7b97\u6027\u3002\u5728\u9012\u5f52\u51fd\u6570\u8bba\u4e2d\uff0c\u4eba\u4eec\u628a\u51fd\u6570\u5212\u5206\u4e3a\u4e86 3 \u4e2a\u5c42\u6b21\uff1a\u539f\u59cb\u9012\u5f52\u51fd\u6570\uff0c\u9012\u5f52\u51fd\u6570\uff0c\u548c\u5176\u4ed6\u7684\u4e0d\u80fd\u7528\u9012\u5f52\u51fd\u6570\u8868\u793a\u7684\u51fd\u6570\u3002\u8fd9\u4e9b\u51fd\u6570\u96c6\u5408\u7684\u8303\u56f4\u8d8a\u6765\u8d8a\u5927\u3002</p> <p>\u539f\u59cb\u9012\u5f52 (primitive recursion) \u8fd0\u7b97\u3002\u8bbe \\(f\\) \u662f\u4e00\u4e2a \\(n\\) \u5143\u5168\u51fd\u6570\uff0c\\(g\\) \u662f \\(n+2\\) \u5143\u5168\u51fd\u6570\uff0c\u4ee4</p> \\[ \\begin{array}{rl} h(x_1, \\dots, x_n, 0) &amp;= &amp;f(x_1, \\dots, x_n) \\\\ h(x_1, \\dots, x_n, t+1) &amp;= &amp;g(t, h(x_1, \\dots, x_n, t), x_1, \\dots, x_n)  \\end{array} \\] <p>\u5219\u79f0 \\(h\\) \u662f\u7531 \\(f\\) \u548c \\(g\\) \u7ecf\u8fc7\u539f\u59cb\u9012\u5f52\u8fd0\u7b97\u5f97\u5230\u7684\u3002</p>"},{"location":"pl/ppl_notes/9_Sys_T_of_Higher_Order_Recursion/#92-g\u00f6dels-system-t","title":"9.2 G\u00f6del's System T","text":"<p>System T \u662f\u51fd\u6570\u7c7b\u578b\u548c\u81ea\u7136\u6570\u7c7b\u578b\u7684\u7ed3\u5408\uff0c\u540c\u65f6\u5f15\u5165\u4e86\u539f\u59cb\u9012\u5f52\u673a\u5236\u3002</p> <p>T \u8bed\u8a00\u7684\u62bd\u8c61\u548c\u5177\u4f53\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u95ed\u503c\u7531\u4ee5\u4e0b\u89c4\u5219\u5b9a\u4e49\uff0c\u8fd9\u662f\u52a8\u6001\u8bed\u4e49\u7684\u4e00\u90e8\u5206\uff1a</p> <p></p> <p>\u4e0e\u524d\u9762\u7684\u8ba8\u8bba\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u65b9\u62ec\u53f7\u62ec\u8d77\u7684\u90e8\u5206\u4e5f\u662f\u7528\u6765\u533a\u5206\u4e0d\u540c\u7684\u89e3\u91ca\u7684\u3002\u5728 eager form of T \u4e2d\u65b9\u62ec\u53f7\u4e2d\u7684\u5185\u5bb9\u5e94\u5f53\u4fdd\u7559\uff0c\u5728 lazy form \u4e2d\u5219\u5e94\u53bb\u6389\u3002\u540e\u6587\u4e2d\u6d89\u53ca\u52a8\u6001\u8bed\u4e49\u7684\u90e8\u5206\u7701\u7565\u76f8\u5173\u89e3\u91ca\u3002</p> <p>Note</p> <p>\u8fd9\u91cc\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u300c\u6309\u503c\u8c03\u7528\u300d\u548c\u300c\u6309\u540d\u8c03\u7528\u300d\u7684\u8bf4\u6cd5\uff0c\u4f46\u662f\u6211\u4eec\u6539\u4e3a\u7528 eager \u548c lazy \u63cf\u8ff0\uff1b\u8fd9\u662f\u56e0\u4e3a\uff0c\\(\\text{s}(e)\\) \u4e5f\u6d89\u53ca\u5230\u8fd9\u4e24\u8005\u7684\u533a\u522b\uff0c\u4f46\u662f \\(\\text{s}\\) \u662f\u4e00\u4e2a\u8fd0\u7b97\u7b26\u800c\u975e\u51fd\u6570\uff0c\u56e0\u6b64\u518d\u7528\u300c\u8c03\u7528\u300d\u5219\u7a0d\u663e\u4e0d\u59a5\u3002</p> <p>\u6211\u4eec\u5206\u51e0\u4e2a\u90e8\u5206\u6765\u8ba8\u8bba\u548c\u89e3\u91ca\u4e0a\u8ff0\u8bed\u6cd5\u3002</p>"},{"location":"pl/ppl_notes/9_Sys_T_of_Higher_Order_Recursion/#921-abstraction-and-application","title":"9.2.1 Abstraction and Application","text":"<p>T \u5bf9\u4e8e\u51fd\u6570\u7684\u5904\u7406\u548c EF \u662f\u4e00\u81f4\u7684\uff0c\u5176\u9759\u6001\u8bed\u4e49\u7531\u4ee5\u4e0b\u89c4\u5219\u5b9a\u4e49\uff1a</p> <p></p> <p>\u76f8\u5173\u95ed\u503c\u7684\u5b9a\u4e49\u5df2\u7ecf\u5728\u524d\u6587\u8ba8\u8bba\u8fc7\u4e86\u3002\u52a8\u6001\u8bed\u4e49\u4e2d\u76f8\u5173\u7684\u8f6c\u6362\u89c4\u5219\u5982\u4e0b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u548c EF \u4e2d\u7684\u5e76\u65e0\u533a\u522b\u3002</p>"},{"location":"pl/ppl_notes/9_Sys_T_of_Higher_Order_Recursion/#922-natural-numbers","title":"9.2.2 Natural Numbers","text":"<p>T \u5bf9\u4e8e\u81ea\u7136\u6570\u7684\u5b9a\u4e49\u548c\u6211\u4eec\u5728 2.2 \u8282\u4e2d\u5b9a\u4e49\u7684\u57fa\u672c\u4e00\u81f4\uff0c\u53ea\u662f\u91c7\u7528\u7684\u7b26\u53f7\u7565\u6709\u4e0d\u540c\u3002\u5176\u9759\u6001\u8bed\u4e49\u7531\u4ee5\u4e0b\u89c4\u5219\u5b9a\u4e49\uff1a</p> <p></p> <p>\u76f8\u5173\u95ed\u503c\u7684\u5b9a\u4e49\u5df2\u7ecf\u5728\u524d\u6587\u8ba8\u8bba\u8fc7\u4e86\u3002\u52a8\u6001\u8bed\u4e49\u4e2d\u76f8\u5173\u7684\u8f6c\u6362\u89c4\u5219\u5982\u4e0b\uff1a</p> <p></p> <p>\u6211\u4eec\u628a \\(\\text{s(}\\cdots \\text{s(z))}\\) \u7b80\u5199\u4e3a \\(\\overline{n}\\)\uff0c\u8868\u793a\u540e\u7ee7\u88ab\u4f5c\u7528\u5230 0 \u4e0a \\(n \\ge 0\\) \u6b21\u3002</p>"},{"location":"pl/ppl_notes/9_Sys_T_of_Higher_Order_Recursion/#923-recursion","title":"9.2.3 Recursion","text":"<p>\u4e0e E \u4e0d\u540c\uff0cT \u4e2d\u5bf9\u4e8e\u81ea\u7136\u6570\u7684\u64cd\u4f5c\u53ea\u6709\u539f\u59cb\u9012\u5f52\u3002\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u79cd\u64cd\u4f5c\u66f4\u52a0\u901a\u7528\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5b9e\u73b0 E \u4e2d\u7684\u6240\u6709\u7b97\u672f\u64cd\u4f5c\uff0c\u751a\u81f3\u66f4\u591a\u3002</p> <p>\u6211\u4eec\u4e0b\u9762\u6765\u8ba8\u8bba T \u8bed\u8a00\u4e2d\u7684\u9012\u5f52\u64cd\u4f5c\u3002\u9012\u5f52\u5f0f (recursor) \u7684\u62bd\u8c61\u8bed\u6cd5\u662f \\(\\text{rec}\\{e_0;x.y.e_1\\}(e)\\)\uff1b\u5177\u4f53\u8bed\u6cd5\u662f \\(\\text{rec }e\\{\\text{z}\\hookrightarrow e_0 | \\text{s}(x) \\text{ with } y \\hookrightarrow e_1\\}\\)\uff0c\u6216\u8005\u5199\u4f5c \\(\\text{rec}\\{\\text{z}\\hookrightarrow e_0 | \\text{s}(x) \\text{ with } y \\hookrightarrow e_1\\}(e)\\)\u3002</p> <p>\u5b83\u8868\u793a\u7684\u542b\u4e49\u5176\u5b9e\u5c31\u662f\uff1a\u5982\u679c \\(e\\) \u6ee1\u8db3 \\(\\text{z}\\) \u7684\u5f62\u5f0f\uff0c\u5219\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a \\(e_0\\)\uff1b\u5426\u5219 \\(e\\) \u53ef\u4ee5\u8868\u793a\u4e3a \\(\\text{s}(e')\\) \u7684\u5f62\u5f0f\uff0c\u6b64\u65f6\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a \\(e_1\\)\uff0c\\(e_1\\) \u6709\u7ed1\u5b9a\u53d8\u91cf \\(x\\) \u548c \\(y\\)\uff0c\\(e'\\) \u88ab\u7ed1\u5b9a\u5230 \\(x\\) \u4e0a\uff0c\u4ee5 \\(e'\\) \u4e3a\u64cd\u4f5c\u6570\u9012\u5f52\uff0c\u5c06\u9012\u5f52\u7684\u7ed3\u679c\u7ed1\u5b9a\u5230 \\(y\\) \u4e0a\u3002</p> <p>\u7528 9.1 \u8282\u4e2d\u300c\u539f\u59cb\u9012\u5f52\u300d\u7684\u65b9\u6cd5\u8868\u793a\uff0c\u5176\u5b9e\u5c31\u662f\uff1a</p> \\[ \\begin{array}{rl} h(\\vec{x}, \\text{z}) &amp;= &amp;\\vec{x}.e_0 \\\\ h(\\vec{x}, \\text{s}(e')) &amp;= &amp;\\vec{x}.e_1(e', h(\\vec{x}, e'))  \\end{array} \\] <p>\u4e0a\u9762\u7684\u63cf\u8ff0\u53ef\u80fd\u8fd8\u662f\u6709\u70b9\u62bd\u8c61\uff0c\u4e0d\u59a8\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u3002\u6211\u4eec\u5728 OCaml \u4e2d\u5b9a\u4e49\u5982\u4e0b\u7684 <code>nat</code> \u7c7b\u578b\uff1a</p> <pre><code>type nat = \n| Z \n| S of nat;;\n</code></pre> <p>\u6211\u4eec\u5b9a\u4e49\u300c\u52a0\u500d\u300d\u51fd\u6570\uff1a</p> <pre><code>let rec double a = \n  match a with\n  | Z -&gt; Z\n  | S x -&gt; S(S(double x));;\n\ndouble (S (S Z));;\n</code></pre> <p>\u5c1d\u8bd5\u8fd0\u884c\u53ef\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff1a</p> <p></p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u5c06\u5176\u6539\u5199\u4e3a\u9012\u5f52\u5f0f\u7684\u5f62\u5f0f\uff1a</p> <pre><code>let rec double a = \n  match a with\n  | Z -&gt; Z\n  | S x -&gt; let y = double x in S(S y);;\n</code></pre> <p></p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5bb9\u6613\u5730\u5199\u51fa <code>double</code> \u5bf9\u5e94\u7684\u9012\u5f52\u5f0f\uff1a</p> \\[\\lambda(e:\\text{nat})\\text{rec}\\{\\text{z}\\hookrightarrow \\text{z} | \\text{s}(x) \\text{ with } y \\hookrightarrow \\text{s}(\\text{s}(y))\\}(e)\\] <p>\u5373</p> \\[\\lambda\\{\\text{nat}\\}(e.\\text{rec}\\{\\text{z}; x.y.\\text{s}(\\text{s}(y))\\}(e))\\] <p>\u8fed\u4ee3\u5f0f</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u5728 \\(\\text{s}(\\text{s}(y))\\) \u4e2d\u867d\u7136 \\(x\\) \u88ab\u7ed1\u5b9a\u4e86\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u88ab\u4f7f\u7528\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 \u8fed\u4ee3\u5f0f (iterator) \\(\\text{iter}\\{e_0;y.e_1\\}(e)\\) \u66ff\u4ee3\u9012\u5f52\u5f0f\u3002\u8fd9\u662f\u9012\u5f52\u5f0f\u7684\u4e00\u79cd\u7279\u4f8b\u3002</p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5176\u5b9e\u5c31\u5bb9\u6613\u7406\u89e3\u8bfe\u672c\u4e2d\u8bf4\u300c\u9012\u5f52\u5f0f \\(\\text{rec}\\{e_0;x.y.e_1\\}(e)\\) \u8868\u793a\u4ece \\(e_0\\) \u5f00\u59cb\uff0c\u5bf9\u53d8\u6362 \\(x.y.e_1\\) \u7684 \\(e\\) \u8f6e\u6298\u53e0\u300d\u662f\u4ec0\u4e48\u610f\u601d\u4e86\u3002\u4f8b\u5982\u8c03\u7528 \\(\\text{rec}\\{e_0;x.y.e_1\\}(\\overline{n})\\)\uff0c\u5982\u679c\u4ece\u53c2\u6570\u4e3a \\(\\overline{n}\\to 0\\) \u7684\u65b9\u5411\u770b\uff0c\u5176\u5b9e\u5c31\u662f\u6b63\u5e38\u9012\u5f52\u8c03\u7528\u7684\u8def\u5f84\uff1b\u5982\u679c\u4ece\u53c2\u6570\u4e3a \\(0\\to \\overline{n}\\) \u7684\u65b9\u5411\u770b\uff0c\u5176\u5b9e\u5c31\u662f\u5c06 \\(\\text{z}\\) \u4f5c\u4e3a \\(x\\)\u3001\\(e_0\\) \u4f5c\u4e3a \\(y\\) \u8ba1\u7b97 \\(e_1\\)\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u4f5c\u4e3a \\(y\\)\u3001\\(\\text{s}(x)\\) \u4f5c\u4e3a \\(x\\) \u518d\u8ba1\u7b97 \\(e_1\\)\uff0c\u91cd\u590d \\(n\\) \u6b21\uff0c\u5f97\u5230\u8be5\u9012\u5f52\u5f0f\u7684\u503c\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9\u51fa\u9012\u5f52\u7684\u9759\u6001\u548c\u52a8\u6001\u8bed\u4e49\u4e86\u3002</p> <p>\u9759\u6001\u8bed\u4e49\uff1a</p> <p></p> <p>\u52a8\u6001\u8bed\u4e49\uff1a</p> <p></p>"},{"location":"pl/ppl_notes/9_Sys_T_of_Higher_Order_Recursion/#924-definability","title":"9.2.4 Definability","text":"<p>\u81ea\u7136\u6570\u4e0a\u7684\u4e00\u4e2a\u6570\u5b66\u51fd\u6570 \\(f : \\mathbb{N}\\to\\mathbb{N}\\) \u662f \u53ef\u5b9a\u4e49 (definable) \u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a \\(\\text{nat}\\to\\text{nat}\\) \u7c7b\u578b\u7684\u8868\u8fbe\u5f0f \\(e_f\\)\uff0c\u4f7f\u5f97 \\(\\forall n \\in \\mathbb{N}, e_f(\\overline{n})\\equiv \\overline{f(n)} : \\text{ nat}\\)\u3002</p>"},{"location":"%E4%B8%BB%E9%A1%B5/about/","title":"\u5173\u4e8e\u6211","text":"<p> \u7ea6 89 \u4e2a\u5b57 </p> \u670b\u53cb\u4eec\uff01 <p>\uff08\u6b22\u8fce\u53cb\u94fe\uff01\uff09</p> <ul> <li>\u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c\uff01 \uff08\u8fd9\u4e2a\u597d\u5389\u5bb3\uff01\uff09</li> <li>\u770b\u770b zbgg \u65e5\u62a5\u80fd\u575a\u6301\u51e0\u5929</li> <li>\u65ed\u5b9d\u7684\u535a\u5ba2\uff01</li> <li>\u4fee\u52fe\u7684\u5168\u65b0\u7b14\u8bb0\u672c\u2014\u2014</li> <li>\u641c\u62c9\u5b85\uff01</li> <li>Frank!</li> <li>\u5c0f\u89d2\u9f99\uff01</li> <li>\u5a03\u5a03\u673a\uff01</li> </ul>"},{"location":"%E4%B8%BB%E9%A1%B5/about/#\u5173\u4e8e\u6211\u548c\u6211\u7684\u7b14\u8bb0","title":"\u5173\u4e8e\u6211\u548c\u6211\u7684\u7b14\u8bb0","text":"<p>\u6211\u53eb\u54b8\u9c7c\u6684\uff0c\u6d59\u6c5f\u5927\u5b66 2019 \u7ea7\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u3002\u6bd5\u4e1a\u5c31\u53bb\u6253\u5de5\u4e50\u3002</p>"},{"location":"%E4%B8%BB%E9%A1%B5/theme/","title":"\u989c\u8272\u4e3b\u9898","text":"<p> \u7ea6 69 \u4e2a\u5b57 </p>"},{"location":"%E4%B8%BB%E9%A1%B5/theme/#\u65e5\u95f4--\u591c\u95f4","title":"\u65e5\u95f4 / \u591c\u95f4","text":"<code>default</code> <code>slate</code>"},{"location":"%E4%B8%BB%E9%A1%B5/theme/#\u4e3b\u8272","title":"\u4e3b\u8272","text":"red pink purple indigo blue cyan teal green lime orange brown grey black white    var buttons = document.querySelectorAll(\"button[data-md-color-primary]\")   buttons.forEach(function(button) {     button.addEventListener(\"click\", function() {       var attr = this.getAttribute(\"data-md-color-primary\")       document.body.setAttribute(\"data-md-color-primary\", attr)       localStorage.setItem(\"data-md-color-primary\",attr);     })   })"},{"location":"%E5%AE%89%E5%85%A8/","title":"\u5b89\u5168","text":"<p> \u7ea6 14 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u867d\u7136\u5b66\u4e86\u5b89\u5168\uff0c\u4f46\u662f\u6ca1\u5b8c\u5168\u5b66 XD</p>"},{"location":"%E6%9D%82%E9%A1%B9/","title":"\u6742\u9879","text":"<p> \u7ea6 26 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u4e00\u4e9b\u96f6\u6563\u7684\u77e5\u8bc6\u8bb0\u5f55\u3001\u5de5\u5177\u4f7f\u7528\u8bb0\u5f55\u3001\u5c0f\u4f5c\u54c1\u4e4b\u7c7b\u7684\u4e1c\u897f</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/","title":"\u535a\u5ba2\u642d\u5efa\u8bb0\u5f55","text":"<p> \u7ea6 1209 \u4e2a\u5b57  167 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u8bb0\u5f55\u642d\u4e2a\u4eba\u4e3b\u9875 / \u54b8\u9c7c\u8086\u8fc7\u7a0b\u4e2d\u7684\u601d\u8003\u3001\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\uff01</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u4e3a\u4ec0\u4e48\u4f7f\u7528-mkdocs-material","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528 mkdocs-material\uff1f","text":"<p>\u56e0\u4e3a\u6211\u7684\u7b14\u8bb0\u957f\u5f97\u66f4\u50cf\u4e66\u4e00\u6837\u7684\u4e1c\u897f\u800c\u4e0d\u662f\u6bd4\u8f83\u96f6\u6563\u7684\u535a\u5ba2\uff1b\u770b OIWiki \u4e4b\u7c7b\u7684\u4e1c\u897f\u5c31\u4e00\u76f4\u5f88\u5fc3\u52a8\uff01\uff01</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u5165\u95e8\u6559\u7a0b","title":"\u5165\u95e8\u6559\u7a0b","text":"<ul> <li>Material for MkDocs1\uff1a\u5b98\u65b9\u6587\u6863\uff0c\u662f\u6d0b\u6587\u3002</li> <li>Material for MkDocs \u4e2d\u6587\u6587\u68632\uff1a\u5b98\u65b9\u6587\u6863\u7684\u7ffb\u8bd1\uff1b\u4f46\u662f\u4ecd\u7136\u5efa\u8bae\u5c3d\u53ef\u80fd\u770b\u4e0a\u9762\u90a3\u4e2a\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6709\u4e9b\u4e1c\u897f\u8fc7\u65f6\u4e86QWQ</li> </ul> <p>\u53e6\u5916\uff0c\u7531\u4e8e mkdocs \u5bf9\u5e94\u7684\u4ed3\u5e93\u91cc\u80fd\u770b\u5230\u6587\u6863\u7684 md \u6e90\u7801\uff0c\u56e0\u6b64\u5176\u5b9e\u53ef\u4ee5\u5728\u8fd9\u4e24\u4e2a\u6587\u6863\uff0c\u6216\u8005\u5176\u4ed6\u7528 mkdocs \u505a\u7684\u535a\u5ba2\uff08\u4f8b\u5982 OI Wiki, CTF Wiki \u7b49\uff09\u91cc\u9762\u770b\u6709\u54ea\u4e9b\u60f3\u7528\u7684\u5199\u6cd5\uff0c\u7136\u540e\u4ece\u5bf9\u5e94\u7684\u4ed3\u5e93\u91cc\u76f4\u63a5\u62ff\u8fdb\u6765\uff01</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u4e3b\u9898\u989c\u8272--\u591c\u95f4\u6a21\u5f0f","title":"\u4e3b\u9898\u989c\u8272 / \u591c\u95f4\u6a21\u5f0f","text":"<p>Warning</p> <p>\u6211\u5e76\u4e0d\u719f\u6089 HTML/CSS/JS\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684\u5f88\u591a\u505a\u6cd5\u53ef\u80fd\u6bd4\u8f83\u8822QWQ\uff0c\u5982\u679c\u6709\u597d\u7684\u505a\u6cd5\u8bf7\u52a1\u5fc5\u544a\u8bc9\u6211\uff01</p> <p>\u662f\u4ece OI Wiki \u6284\u7684\uff01</p> <p>\u4fee\u6539\u4e3b\u9898\u989c\u8272\u7684\u754c\u9762\u4ee3\u7801\u957f\u8fd9\u6837\uff1a</p> <pre><code>### \u65e5\u95f4 / \u591c\u95f4\n\n&lt;div class=\"tx-switch\"&gt;\n  &lt;button data-md-color-scheme=\"default\"&gt;&lt;code&gt;default&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-scheme=\"slate\"&gt;&lt;code&gt;slate&lt;/code&gt;&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\nvar buttons = document.querySelectorAll(\"button[data-md-color-scheme]\")\nbuttons.forEach(function(button) {\nbutton.addEventListener(\"click\", function() {\nvar attr = this.getAttribute(\"data-md-color-scheme\")\ndocument.body.setAttribute(\"data-md-color-scheme\", attr)\nlocalStorage.setItem(\"data-md-color-scheme\",attr);\nupdateScheme();\n})\n})\n&lt;/script&gt;\n\n### \u4e3b\u8272\n\n&lt;div class=\"tx-switch\"&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"red\" style=\"background-color:red\"&gt;red&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"pink\" style=\"background-color:pink;color:black\"&gt;pink&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"purple\" style=\"background-color:purple\"&gt;purple&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"indigo\" style=\"background-color:indigo\"&gt;indigo&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"blue\" style=\"background-color:blue\"&gt;blue&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"cyan\" style=\"background-color:cyan;color:black\"&gt;cyan&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"teal\" style=\"background-color:teal\"&gt;teal&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"green\" style=\"background-color:green\"&gt;green&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"lime\" style=\"background-color:lime;color:black\"&gt;lime&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"orange\" style=\"background-color:orange;color:black\"&gt;orange&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"brown\" style=\"background-color:brown;border-radius=3px\"&gt;brown&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"grey\" style=\"background-color:grey\"&gt;grey&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"black\" style=\"background-color:black\"&gt;black&lt;/button&gt;\n  &lt;button class=\"button1\" data-md-color-primary=\"white\" style=\"background-color:white;color:black\"&gt;white&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\nvar buttons = document.querySelectorAll(\"button[data-md-color-primary]\")\nbuttons.forEach(function(button) {\nbutton.addEventListener(\"click\", function() {\nvar attr = this.getAttribute(\"data-md-color-primary\")\ndocument.body.setAttribute(\"data-md-color-primary\", attr)\nlocalStorage.setItem(\"data-md-color-primary\",attr);\n})\n})\n&lt;/script&gt;\n</code></pre> <p>\u4e24\u6bb5 script \u7ed9\u8fd9\u4e9b\u6309\u94ae\u7ed1\u5b9a\u4e86\u54cd\u5e94\u51fd\u6570\uff0c\u5c06\u5bf9\u5e94\u7684\u989c\u8272\u5b58\u5165 <code>localStorage</code>\u3002</p> <p>\u5176\u4e2d <code>button1</code> \u7684 css \u6211\u653e\u5728\u4e86\u4e00\u4e2a\u6587\u4ef6 extra.css \u91cc\uff1a</p> <pre><code>.button1 {\ncolor: white;\npadding: 1px 4px;\ntext-align: center;\ntext-decoration: none;\ndisplay: inline-block;\nfont-size: 15px;\nmargin: 0px 2px;\ncursor: pointer;\nborder-radius: 4px;\n}\n</code></pre> <p>\u7136\u540e\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u6587\u4ef6 extra.js \u91cc\u9762\u5305\u542b\u4e86\u5982\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>(() =&gt; {\nvar p = localStorage.getItem(\"data-md-color-primary\");\nif (p) {\ndocument.body.setAttribute('data-md-color-primary', p);\n}\nvar a = localStorage.getItem('data-md-color-scheme');\nif (a == null) {\na = \"slate\";\nlocalStorage.setItem(\"data-md-color-scheme\", a);\n}\ndocument.body.setAttribute('data-md-color-scheme', a);\n})()\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f\u4ece <code>localStorage</code> \u91cc\u628a\u5b58\u4e86\u7684\u90a3\u4e9b\u4e1c\u897f\u62ff\u51fa\u6765\uff0c\u7136\u540e\u8bbe\u7f6e\u5230\u6587\u6863\u7684\u5bf9\u5e94\u4f4d\u7f6e\u91cc\u53bb\u3002</p> <p>\u6211\u4eec\u5728 mkdocs.yml \u91cc\u589e\u52a0\u8fd9\u6837\u7684\u6761\u76ee\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u9875\u9762\u90fd\u4f1a\u5305\u542b\u8fd9\u6bb5 js\uff0c\u4ece\u800c\u6bcf\u4e2a\u9875\u9762\u52a0\u8f7d\u65f6\u90fd\u4f1a\u8fd0\u884c\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u8fdb\u800c\u7ef4\u6301\u4e3b\u9898\u7684\u8bbe\u7f6e\uff1a</p> <pre><code>extra_javascript:\n- 'path/extra.js'\n</code></pre> <p>\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u628a extra.css \u5305\u542b\u8fdb\u6765\uff1a</p> <pre><code>extra_css:\n- 'path/extra.css'\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u8bc4\u8bba\u7cfb\u7edf","title":"\u8bc4\u8bba\u7cfb\u7edf","text":"<p>\u57fa\u672c\u7684\u6559\u7a0b\u53c2\u8003\u4e86 https://squidfunk.github.io/mkdocs-material/setup/adding-a-comment-system/ \u3002</p> <p>\u540c\u65f6\uff0c\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u4f55\u4fdd\u6301\u8bc4\u8bba\u7cfb\u7edf\u7684\u4e3b\u9898\uff08\u65e5\u95f4 / \u591c\u95f4\u6a21\u5f0f\uff09\u548c\u524d\u9762\u8bbe\u7f6e\u7684\u4e00\u81f4\u5462\uff1f\u5728\u524d\u4e00\u8282\u7b2c\u4e00\u6bb5\u7684 md/html \u4ee3\u7801\u7684\u7b2c 15 \u884c\u6709\u4e00\u4e2a <code>updateScheme();</code>\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e5f\u5728 extra.js \u91cc\uff0c\u7528\u6765\u5728\u66f4\u6539\u4e3b\u9898\u65f6\u901a\u77e5\u8bc4\u8bba\u7cfb\u7edf\u540c\u6b65\uff08\u5176\u5b9e\u8bc4\u8bba\u7cfb\u7edf\u7684 <code>comment.html</code> \u91cc\u6709 <code>/* Register event handlers after documented loaded */</code> \u7684\u7247\u6bb5\uff0c\u4f46\u662f\u54cd\u5e94\u7684\u548c\u4e0a\u9762\u6284\u7684 OI Wiki \u6539\u7684\u597d\u50cf\u5e76\u4e0d\u5bf9\u5e94\uff0c\u6240\u4ee5\u6211\u6ce8\u91ca\u6389\u4e86QWQ\uff09\uff1a</p> <pre><code>const updateScheme = e =&gt; {\nvar giscus = document.querySelector(\".giscus-frame\");\nvar a = localStorage.getItem('data-md-color-scheme');\nvar theme = a === \"default\" ? \"light\" : \"dark\";\nalert(a + \" -&gt; \" + theme);\ngiscus.contentWindow.postMessage(\n{ giscus: { setConfig: { theme } } },\n\"https://giscus.app\"\n)\n}\n</code></pre> <p>\u540c\u65f6\uff0c\u6211\u4eec\u5728\u8bc4\u8bba\u7cfb\u7edf\u7684 <code>comment.html</code> \u4e2d\uff0c\u672c\u6765\u4e5f\u6709\u4e00\u6bb5\u6ce8\u91ca\u4e86 <code>/* Set palette on initial load */</code> \u7684\u4ee3\u7801\uff0c\u6211\u4eec\u4e5f\u5c06\u5176\u6539\u4e3a <code>updateScheme();</code>\uff01</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u89e3\u51b3\u516c\u5f0f\u5e26\u7eb5\u5411\u6eda\u52a8\u6761\u7684\u95ee\u9898","title":"\u89e3\u51b3\u516c\u5f0f\u5e26\u7eb5\u5411\u6eda\u52a8\u6761\u7684\u95ee\u9898","text":"\u524d\u7f6e\u8981\u6c42 <p>\u5728 mkdocs.yml \u91cc\u5f15\u5165\u4e00\u4e2a css \u6587\u4ef6\uff0c\u6bd4\u5982\u53eb extra.css</p> <pre><code>extra_css:\n- 'path/extra.css'\n</code></pre> <p>\u5728 extra.css \u91cc\u589e\u52a0\u8fd9\u6837\u7684\u4e1c\u897f\uff1a</p> <pre><code>.md-typeset div.arithmatex {\noverflow-y: hidden;\n}\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u663e\u793a\u521b\u5efa\u65f6\u95f4\u548c\u66f4\u65b0\u65f6\u95f4","title":"\u663e\u793a\u521b\u5efa\u65f6\u95f4\u548c\u66f4\u65b0\u65f6\u95f4","text":"<p>\u5728 mkdocs.yml \u4e2d\u589e\u52a0\u8fd9\u6837\u7684\u5185\u5bb9\uff1a</p> <pre><code>plugins:\n- git-revision-date-localized:\nenable_creation_date: true\n</code></pre> <p>\u8fd9\u4e2a\u63d2\u4ef6\u9700\u8981\u901a\u8fc7 <code>pip3 install mkdocs-git-revision-date-localized-plugin</code> \u6765\u5b89\u88c5\u3002</p> <p>\u5bf9\u5e94\u5730\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528 Github Action \u4e4b\u7c7b\u7684 CI \u6765\u81ea\u52a8\u90e8\u7f72\u535a\u5ba2\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u5728\u5176\u4e2d\u5f15\u5165\u8fd9\u4e2a\u63d2\u4ef6\uff08\u89c1\u7b2c 18 \u884c\u9ad8\u4eae\u5904\uff09\uff1a</p> .github/workflows/autoBuild.yaml<pre><code>name: autoBuild\non:\npush:\nbranches:\n- master\n- main\njobs:\ndeploy:\nruns-on: ubuntu-latest\nsteps:\n- uses: actions/checkout@v3\nwith:\nfetch-depth: 0\n- uses: actions/setup-python@v2\nwith:\npython-version: 3.x\n- run: pip install mkdocs-material\n- run: pip install mkdocs-git-revision-date-localized-plugin\n- run: mkdocs gh-deploy --force\n</code></pre> <p>\u540c\u65f6\uff0c\u5982\u679c\u4f7f\u7528\u4e86 CI \u6765\u81ea\u52a8\u90e8\u7f72\u535a\u5ba2\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u8bbe\u7f6e\uff0c\u53c2\u89c1 Note when using build environments\uff1b\u5bf9\u4e8e Github Actions\uff0c\u6211\u4eec\u9700\u8981\u7528\u4e0a\u9762\u4ee3\u7801\u4e2d 11-13 \u884c\u9ad8\u4eae\u5904\u7684 <code>uses</code> \u6765\u4ee3\u66ff\u539f\u5148\u7684 <code>- uses: actions/checkout@v2</code>\u3002</p> <p>\u8fd9\u91cc\u7684 <code>enable_creation_date</code> \u4e4b\u7c7b\u7684\u9009\u9879\u53ef\u4ee5\u5728 \u5b98\u65b9\u6587\u6863 \u6216\u8005 \u8fd9\u4e2a\u63d2\u4ef6\u7684\u6587\u6863 \u91cc\u770b\uff0c\u6211\u7528\u7684\u662f\uff1a</p> <pre><code>plugins:\n- git-revision-date-localized:\nenable_creation_date: true\ntype: timeago\n</code></pre> <p>\u6548\u679c\u53c2\u89c1\u672c\u9875\u6700\u4e0b\u9762\uff09\uff09</p> Tips <p>\u5982\u679c mkdocs.yml \u91cc\u6ca1\u6709</p> <pre><code>    plugins:\n- search\n</code></pre> <p>\u90a3\u8981\u8bb0\u5f97\u52a0\u4e0a\uff0c\u56e0\u4e3a MkDocs enables it by default if there is no <code>plugins</code> entry set3.</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#status-\u5c0f\u65b9\u5757","title":"status \u5c0f\u65b9\u5757\uff01","text":"<p>\u6548\u679c\u5c55\u793a\uff1a</p> <p>blue green red yellow gray</p> <p>\uff08\u5077\u61d2\uff0c\u591c\u95f4\u6a21\u5f0f\u4e0b\u5168\u90fd\u5f04\u6210\u767d\u8272\u5b57\u4f53\u4e86\uff09</p> <p>\u4ece \u848b\u708e\u5ca9\u8001\u5e08\u7684\u7f51\u7ad9 \u91cc\u5077\u6765\u4e86\u5982\u4e0b css\uff08\u91cc\u9762\u7684\u90e8\u5206\u53c2\u6570\u88ab\u6211\u6539\u4e86\uff09\uff0c\u653e\u5728\u4e86 status.css\uff1a</p> <pre><code>.box {\nborder-radius: 3px; padding: 1px 4px;\nfont-family: 'Lato', 'SimHei', 'STHeiti', 'SimHei', 'Serif';\nfont-size: 90%;\n}\n.box-blue,  .badge-primary  { background-color: rgba(66, 139, 202, 0.5); color: #1d4ed8; }\n.box-green, .badge-success  { background-color: rgba(92, 184, 92, 0.5);  color: #15803d; }\n.box-red,   .badge-danger   { background-color: rgba(217, 83, 79, 0.5);  color: #b91c1c; }\n.box-yellow,.badge-warning  { background-color: rgba(240, 173, 78, 0.5); color: #a16207; }\n.box-gray   { background-color: #a0a0a0; }\n</code></pre> <p>\u4f7f\u7528\u65b9\u6cd5\u5982\uff1a</p> <pre><code>&lt;span class=\"box box-blue\"&gt;blue&lt;/span&gt;\n&lt;span class=\"box box-green\"&gt;green&lt;/span&gt;\n&lt;span class=\"box box-red\"&gt;red&lt;/span&gt;\n&lt;span class=\"box box-yellow\"&gt;yellow&lt;/span&gt;\n&lt;span class=\"box box-gray\"&gt;gray&lt;/span&gt;\n</code></pre> <p>\u53e6\u5916\uff0c\u5982\u679c\u5728\u6697\u9ed1\u6a21\u5f0f\uff0c\u4e0a\u9762\u7684 CSS \u8bbe\u7f6e\u4f1a\u770b\u4e0d\u6e05\u3002\u4e8e\u662f\u5077\u61d2\uff0c\u5728\u6697\u9ed1\u6a21\u5f0f\u628a\u5b57\u4f53\u5168\u90fd\u6539\u6210\u767d\u8272\uff1b</p> <pre><code>const updateBoxFontColor = e =&gt; {\nvar a = localStorage.getItem('data-md-color-scheme');\nif (a !== \"default\") {\nvar elements = document.getElementsByClassName('box');\nfor (var i in elements) {\n// alert(elements[i].style.color);\nelements[i].style.color = \"white\";\n}\n}\n}\n</code></pre> <p>\u5728 extra.js \u91cc\u628a\u8fd9\u4e2a\u51fd\u6570\u7684\u8c03\u7528\u52a0\u5230 <code>(()=&gt;{})</code> \u90a3\u4e2a\u51fd\u6570\u7684\u6700\u540e\u53bb\uff0c\u8ba9\u5b83\u6bcf\u6b21\u81ea\u52a8\u8dd1\u3002</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u5b57\u6570\u7edf\u8ba1","title":"\u5b57\u6570\u7edf\u8ba1","text":"<p>\u5077\u4e86 xg \u7684\u5b57\u6570\u7edf\u8ba1\uff01\u5728\u8fd9\u91cc\uff1ahttps://github.com/TonyCrane/mkdocs-statistics-plugin</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u7c98\u8d34-url","title":"\u7c98\u8d34 URL","text":"<p>\u56e0\u4e3a\u6709\u7c98\u8d34\u51fa <code>[dcl.type.general#1](https://timsong-cpp.github.io/cppwp/n4868/dcl.type.general#1)</code> \u7684\u9700\u6c42\uff08\u5373\u7c98\u8d34\u8fd9\u4e2a URL \u65f6\uff0c\u81ea\u52a8\u7c98\u8d34\u4e3a md \u7684\u94fe\u63a5\u683c\u5f0f\u5e76\u5c06\u540d\u5b57\u586b\u5145\u6210 URL \u7684\u6700\u540e\u4e00\u4e2a path segment\uff09\uff0c\u56e0\u6b64\u627e\u4e86\u627e\u529e\u6cd5\u3002</p> <p>\u627e\u5230\u4e86 https://marketplace.visualstudio.com/items?itemName=mkloubert.vs-script-commands \u8fd9\u4e2a\u63d2\u4ef6\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49 commands</p> <p>\u5728\u5de5\u4f5c\u533a\u7684 .vscode/settings.json \u91cc\u52a0\u4e86\uff1a</p> <pre><code>{\n\"script.commands\": {\n\"commands\": [\n{\n\"id\": \"xuan.pasteUrl\",\n\"script\": \".vscode/paste_url.js\"\n}\n]\n}\n}\n</code></pre> <p>\u5176\u4e2d</p> .vscode/settings.json<pre><code>exports.execute = async function () {\nconst vscode = require('vscode');\n\nlet editor = vscode.window.activeTextEditor;\nlet url = await vscode.env.clipboard.readText();\nlet title = url.substring(url.lastIndexOf('/') + 1);\nlet markdown = `[${title}](${url})`;\neditor.edit(editBuilder =&gt; {\neditBuilder.insert(editor.selection.active, markdown);\n});\n}\n</code></pre> <p>\u7136\u540e\u5728 VSCode \u7684 Keyboard Shortcuts \u91cc\u5c31\u80fd\u770b\u5230 <code>xuan.pasteUrl</code> \u4e86\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e0b\u5feb\u6377\u952e\u548c <code>when</code>\uff1a</p> <p></p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u4e00\u4e9b\u96f6\u788e\u95ee\u9898","title":"\u4e00\u4e9b\u96f6\u788e\u95ee\u9898","text":""},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u5bb9\u6613\u5fd8\u7684\u4e1c\u897f","title":"\u5bb9\u6613\u5fd8\u7684\u4e1c\u897f","text":"<ul> <li>\u4ee3\u7801\u5757\u6807\u9898\uff1a<code>title=\"\"</code></li> <li>\u4ee3\u7801\u5757\u9ad8\u4eae\uff1a<code>hl_lines=\"2 5-10\"</code></li> <li>\u884c\u5185\u4ee3\u7801\u7ed9\u51fa\u5bf9\u5e94\u8bed\u8a00\u9ad8\u4eae\uff1a<code>\\</code>#!python range()`<code>\uff0c\u6548\u679c\u662f</code>#!python range()`</li> <li>\u5c06\u5176\u4ed6\u6587\u4ef6\u5185\u5bb9\u63d2\u5165\u6587\u4ef6\uff1a<code>--8&lt;-- \"filename.ext\"</code> \uff0c\u53c2\u89c1 Snippets</li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u8868\u683c\u8c03\u6574\u5217\u5bbd","title":"\u8868\u683c\u8c03\u6574\u5217\u5bbd","text":"<p>\u53c2\u8003 https://stackoverflow.com/questions/36121672/set-table-column-width-via-markdown</p> <p>\u5373\u5217\u5bbd\u662f\u7531\u6bcf\u5217\u6700\u957f\u7684\u5143\u7d20\u51b3\u5b9a\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u7ed9\u4e00\u4e2a\u5143\u7d20\uff08\u6bd4\u5982\u5217\u6807\u9898\uff09\u5b9a\u4e49\u660e\u786e\u7684\u5bbd\u5ea6\u6765\u8c03\u6574\u5217\u5bbd\uff0c\u4f8b\u5982 <code>&lt;div style=\"width:290px\"&gt;property&lt;/div&gt;</code>\u3002\u6216\u8005\u663e\u5f0f\u5730\u6dfb\u52a0\u82e5\u5e72\u7a7a\u683c <code>&amp;nbsp;</code> \u4e5f\u53ef\u4ee5\u8fbe\u5230\u7c7b\u4f3c\u7684\u6548\u679c\u3002</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/#\u5d4c\u5165-pdf","title":"\u5d4c\u5165 PDF","text":"<p>\u628a\u4e0b\u9762\u7684 path \u6539\u6210 PDF \u76f8\u5bf9\u9875\u9762\u7684\u8def\u5f84\u5c31\u597d\u4e86\uff1a</p> <pre><code>&lt;object data=\"path\" type=\"application/pdf\" width=\"100%\" height=\"800\"&gt;\n    &lt;embed src=\"path\" type=\"application/pdf\" /&gt;\n&lt;/object&gt;\n</code></pre> <p>\uff08<code>width</code> \u548c <code>height</code> \u53ef\u4ee5\u6309\u9700\u4fee\u6539\uff09</p> <p>\u672a\u5b8c\u5f85\u7eed\uff01</p> <ol> <li> <p>Material for MkDocs repo \u21a9</p> </li> <li> <p>Material for MkDocs \u4e2d\u6587\u6587\u6863 repo \u21a9</p> </li> <li> <p>https://github.com/timvink/mkdocs-git-revision-date-localized-plugin#setup \u21a9</p> </li> </ol>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/","title":"\u6838\u5fc3\u77e5\u8bc6","text":"<p> \u7ea6 56 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u5b66\u6821\u8bfe\u7a0b\u91cc\u771f\u6b63\u6709\u7528\u7684\u4f3c\u4e4e\u6ca1\u6709\u51e0\u95e8\u2026\u2026 \u642c\u8fd0\u8fc7\u6765\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5c1d\u8bd5\u5c06\u5185\u5bb9\u5206\u5272\uff0c\u800c\u4e0d\u662f\u4ee5\u4e00\u7bc7\u8d85\u7ea7\u8d85\u7ea7\u957f\u7684\u6587\u6863\u7684\u5f62\u5f0f\u5448\u73b0</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/15_review/","title":"15 \u603b\u7ed3","text":"<p> \u7ea6 420 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>\u9274\u4e8e\u80fd\u5e26 3 \u5f20 A4\uff0c\u4e14 hjh \u5b66\u957f\u7684 A4 \u8db3\u591f\u4e30\u5bcc\uff0c\u6211\u4eec\u4e3b\u8981\u590d\u4e60\u6982\u5ff5\u9898\u4ee5\u5916\u7684\u90e8\u5206\u3002</p> <p>\u4e0b\u9762\u7528 \u9ec4\u8272\u6846 \u6216 \u94fe\u63a5 \u6807\u51fa\u7684\u5185\u5bb9\uff0c\u662f\u53ef\u80fd\u8003\u5bdf\u8ba1\u7b97\u7684\u9898\u578b\uff1b\u5176\u4e2d\u52a0\u7c97\u7684\u4e3a\u7ecf\u5e38\u8003\u5bdf\u7684\u5185\u5bb9\u3002\u53ef\u4ee5\u81ea\u884c\u8fdb\u4e00\u6b65\u590d\u4e60\u3002</p> <p>\u5df2\u77e5\u4e0d\u5168 \u6807\u51fa\u7684\u5185\u5bb9\uff0c\u8868\u793a\u6211\u5bf9\u5e94\u7ae0\u8282\u7684\u7b14\u8bb0\u4e2d\u7f3a\u5c11\u7684\u76f8\u5173\u5185\u5bb9\uff1b\u5982\u679c\u7528\u6211\u7684\u7b14\u8bb0\u5b66\u4e60\u8be5\u8bfe\u7a0b\uff0c\u8bf7\u5c24\u5176\u6ce8\u610f\u56de\u987e\u8fd9\u4e9b\u90e8\u5206\u7684\u8bfe\u672c\u6216 PPT\u3002</p> <ul> <li>2 Overview<ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u57fa\u672c\u6982\u5ff5</li> <li>\u4e2d\u65ad</li> <li>\u7528\u6237\u6001\u4e0e\u5185\u6838\u6001\uff1b\u7cfb\u7edf\u8c03\u7528</li> <li>\u5df2\u77e5\u4e0d\u5168 \u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u7684\u79cd\u7c7b</li> </ul> </li> <li>3 \u8fdb\u7a0b<ul> <li>\u7ec4\u6210</li> <li>\u72b6\u6001</li> <li>PCB</li> <li>\u521b\u5efa fork tree</li> <li>\u7ec8\u6b62</li> <li>IPC</li> </ul> </li> <li>4 \u8c03\u5ea6<ul> <li>\u65f6\u673a</li> <li>\u8fc7\u7a0b\uff08\u4e0a\u4e0b\u6587\u5207\u6362\uff09</li> <li>\u8c03\u5ea6\u7b97\u6cd5\u8bc4\u4ef7</li> <li>\u8c03\u5ea6\u7b97\u6cd5</li> </ul> </li> <li>5 \u7ebf\u7a0b<ul> <li>\u52a8\u673a\u548c\u6982\u5ff5</li> <li>\u4f18\u7f3a\u70b9</li> <li>\u7528\u6237\u7ea7 / \u5185\u6838\u7ea7\uff1b\u591a\u7ebf\u7a0b\u6a21\u578b</li> </ul> </li> <li>6 \u540c\u6b65<ul> <li>\u5f15\u5165\u548c CS Problem</li> <li>Peterson's Solution</li> <li>\u786c\u4ef6\u6307\u4ee4</li> <li>\u4fe1\u53f7\u91cf</li> <li>Atomic Vars</li> <li>Mutex</li> <li>Priority Inversion</li> </ul> </li> <li>7 \u7ecf\u5178\u540c\u6b65\u95ee\u9898<ul> <li>Bounded-Buffer Problem</li> <li>Readers-Writers Problem</li> <li>Dining-Philosophers Problem</li> </ul> </li> <li>8 \u6b7b\u9501<ul> <li>\u8d44\u6e90\u5206\u914d\u56fe</li> <li>\u6761\u4ef6</li> <li>\u9884\u9632 \u94f6\u884c\u5bb6\u7b97\u6cd5</li> <li>\u907f\u514d</li> <li>\u68c0\u6d4b</li> <li>\u6062\u590d</li> </ul> </li> <li>9 \u4e3b\u5b58<ul> <li>\u8fde\u7eed Dynamic Storage-Allocation Problem</li> <li>\u5206\u6bb5</li> <li>\u5206\u9875 \u9875\u8868 EAT</li> <li>\u5df2\u77e5\u4e0d\u5168 \u4ea4\u6362</li> </ul> </li> <li>10 \u865a\u62df\u5185\u5b58<ul> <li>Lazy Allocation / Demand Paging</li> <li>Copy-on-Write</li> <li>Page Replacement</li> <li>Allocation of Frames</li> <li>Thrashing</li> <li>Kernel Memory Allocation</li> </ul> </li> <li>11 Mass Storage<ul> <li>HDD / NVM</li> <li>\u78c1\u76d8\u8c03\u5ea6</li> <li>\u78c1\u76d8\u7ba1\u7406</li> <li>RAID</li> </ul> </li> <li>12 I/O<ul> <li>\u65b9\u5f0f</li> <li>\u5e94\u7528\u7a0b\u5e8f I/O \u63a5\u53e3</li> </ul> </li> <li>13 \u6587\u4ef6\u7cfb\u7edf\u63a5\u53e3<ul> <li>\u6587\u4ef6</li> <li>\u8bbf\u95ee\u65b9\u5f0f</li> <li>\u76ee\u5f55\u7ed3\u6784</li> <li>\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d</li> <li>\u4fdd\u62a4</li> </ul> </li> <li>14 \u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0<ul> <li>\u5206\u5c42\u8bbe\u8ba1</li> <li>\u6570\u636e\u7ed3\u6784</li> <li>VFS</li> <li>\u76ee\u5f55\u5b9e\u73b0</li> <li>Disk Block Allocation</li> <li>\u7a7a\u95f2\u7a7a\u95f4\u7ba1\u7406</li> </ul> </li> <li>\u5df2\u77e5\u4e0d\u5168 Linux \u76f8\u5173 <code>/dev/hdb6</code>, <code>kill -9</code>, <code>ln -s</code></li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/","title":"6 Synchronization Tools","text":"<p> \u7ea6 3838 \u4e2a\u5b57  168 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 15 \u5206\u949f</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#61-\u4e3a\u4ec0\u4e48\u9700\u8981\u540c\u6b65","title":"6.1 \u4e3a\u4ec0\u4e48\u9700\u8981\u540c\u6b65","text":"<p>\u6211\u4eec\u8bf4 Cooperating Process\u00a0\u662f\u53ef\u4ee5\u5f71\u54cd\u7cfb\u7edf\u4e2d\u5176\u4ed6\u8fd0\u884c\u8fdb\u7a0b\u6216\u88ab\u5176\u4ed6\u8fdb\u7a0b\u5f71\u54cd\u7684\u8fdb\u7a0b\u3002</p> <p>Cooperating processes \u4f1a\u5171\u540c\u4f7f\u7528\u4e00\u4e9b\u6570\u636e\uff0c\u53ef\u80fd\u662f\u76f4\u63a5\u4f7f\u7528\u540c\u4e00\u6bb5\u5730\u5740\u7a7a\u95f4\uff08\u4ee3\u7801+\u6570\u636e\uff09\uff0c\u6216\u8005\u662f\u901a\u8fc7\u5171\u4eab\u7684\u5185\u5b58\u6216\u4fe1\u606f\u4f20\u9012\u6765\u5171\u7528\u4e00\u4e9b\u6570\u636e\u3002\u5bf9\u6570\u636e\u7684\u540c\u65f6\u8bbf\u95ee (concurrent access) \u53ef\u80fd\u4f1a\u5bfc\u81f4 data inconsistency\uff0c\u56e0\u4e3a\u6570\u636e\u7684\u4e00\u81f4\u6027\u9700\u8981 cooperating processes \u6709\u5e8f\u7684\u8fd0\u884c\u3002</p> Bounded-buffer Problem <p>\u7ed9\u5b9a\u4e24\u4e2a\u8fdb\u7a0b\uff1aproducer \u548c consumer\uff0c\u5b83\u4eec\u5171\u7528\u5927\u5c0f\u4e3a \\(n\\) \u7684 buffer\u3002Producer \u751f\u4ea7\u6570\u636e\u653e\u5165 buffer\uff0cconsumer \u4ece buffer \u53d6\u51fa\u6570\u636e\u4ece\u800c\u4f7f\u7528\u4e4b\u3002</p> <p>\u8be5\u95ee\u9898\u9700\u8981\u4fdd\u8bc1\uff1aproducer \u4e0d\u5e94\u5f53\u5728 buffer \u6ee1\u65f6\u653e\u5165\u6570\u636e\uff0cconsumer \u4e5f\u4e0d\u5e94\u5f53\u5728 buffer \u7a7a\u65f6\u53d6\u51fa\u6570\u636e\u3002</p> <p>\u6211\u4eec\u53ef\u80fd\u60f3\u8981\u50cf\u8fd9\u6837\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\uff1a</p> <pre><code>/* Producer Process */\nwhile (true) {\n/* produce an item in next_produced */\nwhile (count == BUFFER_SIZE)\n; /* do nothing */\nbuffer[in] = next_produced;\nin = (in + 1) % BUFFER_SIZE;\ncount++;\n}\n\n/* Consumer Process */\nwhile (true) {\nwhile (count == 0)\n; /* do nothing */\nnext_consumed = buffer[out];\nout = (out + 1) % BUFFER_SIZE;\ncount--;\n/* consume the item in next_consumed */\n}\n</code></pre> <p>\u4f46\u662f\uff0c<code>count</code> \u7684\u503c\u53ef\u80fd\u662f\u9519\u8bef\u7684\u3002</p> <p></p> <p>\u4e00\u79cd\u53ef\u80fd\u7684\u8fd0\u884c\u987a\u5e8f\u662f\uff1a</p> <p></p> <p>\u51fa\u73b0\u4e0a\u4f8b\u4e2d\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u5141\u8bb8\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u64cd\u63a7\u53d8\u91cf <code>count</code>\u3002\u7c7b\u4f3c\u8fd9\u6837\u7684\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u64cd\u63a7\u540c\u4e00\u4e2a\u6570\u636e\uff0c\u56e0\u800c\u7ed3\u679c\u53d6\u51b3\u4e8e\u6bcf\u4e00\u79cd\u64cd\u63a7\u7684\u51fa\u73b0\u987a\u5e8f\u7684\u60c5\u5f62\uff0c\u79f0\u4e3a race condition\u3002\u4e3a\u4e86\u9632\u6b62 race condition\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u64cd\u63a7\u67d0\u4e2a\u53d8\u91cf\u3002</p> <p>Race condition \u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u662f\u5e38\u89c1\u7684\u3002Kernel code \u4e2d\u4e5f\u5305\u542b race condition \u7684\u53ef\u80fd\u6027\u3002</p> <p>Kernel \u4e2d\u4e5f\u5b58\u5728 race condition \u7684\u53ef\u80fd</p> <p></p> <p>\u4e24\u4e2a\u8fdb\u7a0b P0\u00a0\u548c P1\u00a0\u540c\u65f6 <code>fork()</code> \u65f6\uff0c\u5982\u679c\u4e0d\u52a0\u9650\u5236\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u524d\u4f8b\u7684\u60c5\u51b5\uff0c\u5373\u5728\u67d0\u4e00\u4e2a\u8fdb\u7a0b\u628a\u5f53\u524d\u7684 <code>next_avaliable_pid</code>\u00a0\u5206\u914d\u7ed9\u4ed6\u7684 child \u540e\uff0c\u5728\u6ca1\u6765\u5f97\u53ca\u66f4\u65b0 <code>next_avaliable_pid</code>\u00a0\u524d\uff0c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u4e86 <code>next_avaliable_pid</code>\u00a0\u6765\u7ed9 child \u5206\u914d PID\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u4e24\u4e2a\u4e0d\u540c\u7684\u7ebf\u7a0b\u4f7f\u7528\u540c\u4e00\u4e2a PID \u7684\u60c5\u51b5\u3002</p> <p>\u56e0\u6b64\uff0c\u4ece\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u8ba1\u672c\u8eab\u6765\u8bf4\uff0c\u907f\u514d race condition \u5e26\u6765\u9519\u8bef\u7684\u7ed3\u679c\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u4eba\u5458\u5728\u4f7f\u7528\u591a\u8fdb\u7a0b\u65f6\u4e5f\u5e94\u5f53\u5145\u5206\u8003\u8651\u662f\u5426\u4f1a\u5e26\u6765\u95ee\u9898\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#62-\u95ee\u9898\u5efa\u6a21-the-critical-section-problem","title":"6.2 \u95ee\u9898\u5efa\u6a21: The Critical-Section Problem","text":"<p>\u200b\u8003\u8651\u4e00\u4e2a\u6709 n \u4e2a\u8fdb\u7a0b\u7684\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u90fd\u6709\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff0c\u5b83\u53ef\u80fd\u4f1a\u4fee\u6539\u4e00\u4e9b\u4e0e\u5176\u4ed6\u81f3\u5c11\u4e00\u4e2a\u8fdb\u7a0b\u516c\u7528\u7684\u6570\u636e\uff0c\u8fd9\u6bb5\u4ee3\u7801\u79f0\u4e3a critical section\u3002\u8fd9\u4e2a\u7cfb\u7edf\u9700\u8981\u6ee1\u8db3\u7684\u91cd\u8981\u6027\u8d28\u662f\uff1a\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u5b83\u7684 critical section \u65f6\uff0c\u5176\u4ed6\u8fdb\u7a0b\u90fd\u4e0d\u80fd\u8fdb\u5165\u5b83\u7684 critical section\u3002</p> <p>\u200b\u6211\u4eec\u5c06\u8fd9\u4e2a\u95ee\u9898\u79f0\u4e3a Critical-section problem\uff0c\u4e5f\u5c31\u662f\u8981\u8bbe\u8ba1\u4e00\u79cd\u8fbe\u6210\u8fd9\u4e00\u6027\u8d28\u7684\u65b9\u6cd5\uff1b\u6216\u8005\u8bf4\uff0c\u8bbe\u8ba1\u4e00\u79cd\u80fd\u8ba9\u5404\u4e2a\u8fdb\u7a0b\u00a0\u540c\u6b65 (synchronize)\u00a0\u5b83\u4eec\u7684\u6d3b\u52a8\uff0c\u4ece\u800c\u5b89\u5168\u5730\u5171\u4eab\u6570\u636e\u7684\u534f\u8bae\u3002</p> <p>Tips</p> <p>\u300c\u200b\u540c\u6b65\u300d\u7684\u6838\u5fc3\u610f\u4e49\u662f\uff0c\u89c4\u5b9a\u8fdb\u7a0b\u6240\u505a\u7684\u5de5\u4f5c\u4e4b\u95f4\u7684\u987a\u5e8f\u6216\u8005\u5148\u5e8f\u5173\u7cfb\uff0c\u4ece\u800c\u9632\u6b62\u4e00\u4e9b\u975e\u6cd5\u60c5\u51b5\u7684\u53d1\u751f\u3002</p> <p></p> <p>\u200b\u6bcf\u4e2a\u8fdb\u7a0b\u5fc5\u987b\u5728 entry section \u4e2d\u7533\u8bf7\u8fdb\u5165 critical section \u7684\u8bb8\u53ef\uff1b\u5728 critical section \u8fd0\u884c\u7ed3\u675f\u540e\u8fdb\u5165 exit section\uff0c\u5728\u8fd9\u91cc\u8bb8\u53ef\u88ab\u91ca\u653e\u3002\u5176\u4ed6\u4ee3\u7801\u79f0\u4e3a remainder section\u3002</p> <p>\u200bCritical-section problem \u7684\u89e3\u51b3\u65b9\u6cd5\u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u4e09\u4e2a\u8981\u6c42\uff1a</p> <ul> <li>Mutual exclusion\u00a0- \u6ca1\u6709\u4e24\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u540c\u65f6\u5728\u8fd0\u884c critical section\u3002</li> <li>Progress\u00a0- \u7cfb\u7edf\u6574\u4f53\u4e0a\u662f\u5728\u8fd0\u884c\u7684\uff0c\u5373\u8981\u4e48\u6709\u8fdb\u7a0b\u5728\u8fd0\u884c\u5b83\u7684 critical section\uff0c\u8981\u4e48\u6ca1\u6709\u4efb\u4f55\u8fdb\u7a0b\u60f3\u8981\uff08\u5c06\u8981\uff0c\u5373\u5728\u8fd0\u884c critical section \u4e4b\u524d\u7684 section\uff09\u8fdb\u5165 critical section\uff0c\u8981\u4e48\u5728\u6709\u9650\u65f6\u95f4\u5185\u5c06\u6709\u4e00\u4e2a\u8fdb\u7a0b\u88ab\u9009\u4e2d\u8fdb\u5165\u5b83\u7684 critical section\u3002</li> <li>Bounded waiting\u00a0- \u4efb\u4f55\u4e00\u4e2a\u8fdb\u7a0b\u7b49\u5f85\u8fdb\u5165 critical section \u7684\u65f6\u95f4\u662f\u6709\u9650\u7684\u3002\u5373\uff0c\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u63d0\u51fa\u4e00\u4e2a\u8fdb\u5165 critical section \u7684\u8bf7\u6c42\u540e\uff0c\u53ea\u6709\u6709\u9650\u4e2a\uff08\u6b21\uff09\u8fdb\u7a0b\u4f1a\u5728\u5b83\u4e4b\u524d\u8fdb\u5165 critical section\u3002</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#kernel-\u4e2d\u7684-cs-problem","title":"Kernel \u4e2d\u7684 CS Problem","text":"<p>\u200b\u5bf9\u4e8e\u5355\u6838\u7cfb\u7edf\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 critical section \u4e2d\u7981\u6b62\u4e2d\u65ad\uff08\u5373\uff0c\u5728 entry section \u4e2d disable\uff0c\u5728 exit section \u4e2d enable\uff09\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd\uff08\u867d\u7136\u53ef\u80fd\u662f\u5371\u9669\u7684\uff09\u3002\u200b\u4f46\u662f\u5bf9\u4e8e\u591a\u6838\u7cfb\u7edf\uff0c\u4e2d\u65ad\u7981\u6b62\u7684\u6d88\u606f\u8981\u4f20\u5230\u6240\u6709\u5904\u7406\u5668\uff0c\u6d88\u606f\u4f20\u9012\u4f1a\u5ef6\u8fdf\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u4f1a\u964d\u4f4e\u6548\u7387\uff1b\u540c\u65f6\u4e5f\u4f1a\u5f71\u54cd\u65f6\u949f\u4e2d\u65ad\u3002</p> <p>\u200b\u6211\u4eec\u9700\u8981\u4fdd\u8bc1 kernel \u7684\u8bbe\u8ba1\u5b9e\u73b0\u4e86 critical section\u3002Kernel \u7684\u5b9e\u73b0\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff0c\u5206\u522b\u662f \u62a2\u5360\u5f0f\u5185\u6838 preemptive kernel\u00a0\u548c \u975e\u62a2\u5360\u5f0f\u5185\u6838 nonpreemptive kernel\uff0c\u5176\u533a\u522b\u662f\u662f\u5426\u5141\u8bb8\u5904\u4e8e kernel mode \u7684\u8fdb\u7a0b\u88ab\u62a2\u5360\u3002</p> <p>\u200b\uff08\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u975e\u62a2\u5360\u5f0f\u5185\u6838\u7684\u5b9e\u73b0\u662f\u4fdd\u8bc1\u540c\u4e00\u4e2a\u65f6\u95f4\u70b9\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u80fd\u5728 kernel \u91cc\u8dd112 \u2014\u2014\u8fd9\u79cd\u5b9e\u73b0\u548c\u4e0a\u8ff0\u6982\u5ff5\u7684\u533a\u522b\u662f\uff0c\u6709\u53ef\u80fd\u6709\u591a\u4e2a\u5904\u7406\u5668\uff1b\u5982\u679c\u6309\u4e0a\u8ff0\u7684\u6982\u5ff5\u6765\u8bf4\u7684\u8bdd\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6ca1\u6709\u591a\u4e2a CPU \u540c\u65f6\u8dd1\u5728 kernel \u91cc\u3002\uff09\u56e0\u6b64\uff0c\u975e\u62a2\u5360\u5f0f\u5185\u6838\u4e0d\u4f1a\u5bfc\u81f4 kernel mode \u7684 race condition\uff0c\u56e0\u4e3a\u5728\u4efb\u4e00\u65f6\u95f4\u70b9\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u80fd\u5728 kernel \u91cc\u8dd1\uff0c\u6240\u4ee5 kernel \u7528\u5230\u7684\u5404\u79cd\u6570\u636e\u548c\u8d44\u6e90\u4e5f\u5c31\u53ea\u6709\u5b83\u4e00\u4e2a\u4eba\u7528\u4e86\uff01</p> <p>\u200b\u62a2\u5360\u5f0f\u5185\u6838\u76f8\u5bf9\u800c\u8a00\u66f4\u96be\u8bbe\u8ba1\uff0c\u4f46\u662f\u540c\u65f6\u4e5f\u80fd\u6709\u66f4\u5feb\u7684\u54cd\u5e94\u3002\u6211\u4eec\u5728\u540e\u9762\u82e5\u5e72\u8282\u6765\u8ba8\u8bba\u8bbe\u8ba1\u62a2\u5360\u5f0f\u5185\u6838\uff0c\u6216\u8005\u8bf4\u8bbe\u8ba1\u51fa\u89e3\u51b3\u4e86 critical-section problem \u7684\u7a0b\u5e8f\u7684\u65b9\u6848\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#63-petersons-solution","title":"6.3 Peterson's Solution","text":"<p>\u200bPeterson's solution \u57fa\u4e8e\u4e00\u5b9a\u7684\u5047\u8bbe\u89e3\u51b3\u4e86\u4e24\u4e2a task \u7684 synchornization\uff1a</p> <pre><code>int turn;           // Who is allowed to enter\nboolean flag[2];    // Ready to enter its CS\n\nvoid foo() {\nwhile (true) {\nflag[i] = true;     // Mark self ready\nturn = 1 - i;       // Assert that if the other process wishes to \n// enter its CS, it can do so.\nwhile (flag[1 - i] &amp;&amp; turn == 1 - i);   // Wait\n/* critical section */\nflag[i] = false;    // Set ready to false\n/* remainder section */\n}\n}\n</code></pre> <p>\u5176\u4e2d\uff0c <code>i</code>\u00a0\u662f 0 \u6216 1\uff0c\u8868\u793a\u7b2c i \u4e2a\u8fdb\u7a0b\uff1b <code>turn</code>\u00a0\u662f\u5f53\u524d\u6709\u6743\u8fdb\u5165 critical section \u7684\u8fdb\u7a0b\uff080 \u6216 1\uff09\uff1b <code>flag[i]</code>\u00a0\u662f\u7b2c i \u4e2a\u8fdb\u7a0b\u662f\u5426\u51c6\u5907\u597d\u8fdb\u5165 critical section\uff0c\u521d\u59cb\u503c\u5747\u4e3a FALSE\u3002</p> <p>To enter the critical section, process Pi first sets <code>flag[i]</code> to be true and then sets <code>turn</code> to the value <code>1-i</code>\u00a0(the other process), thereby asserting that if the other process wishes to enter the critical section, it can do so. If both processes try to enter at the same time, <code>turn</code> will be set to both <code>0</code> and <code>1</code> at roughly the same time. Only one of these assignments will last; the other will occur but will be overwritten immediately. The eventual value of <code>turn</code> determines which of the two processes is allowed to enter its critical section first.</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#\u6027\u8d28\u8bc1\u660e","title":"\u6027\u8d28\u8bc1\u660e","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7b80\u6613\u7684\u5206\u7c7b\u8ba8\u8bba\u8bc1\u660e Peterson's Solution \u6ee1\u8db3 6.2 \u4e2d\u63d0\u5230\u7684\u4e09\u4e2a\u6027\u8d28\uff1aMutual exclusion, process and bounded waiting\u3002</p> <p></p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#reordering","title":"Reordering","text":"<p>\u200b\u4f46\u5b9e\u9645\u4e0a\uff0cPeterson's solution \u5728\u73b0\u4ee3\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4e0a\u4e0d\u4e00\u5b9a\u9002\u7528\uff0c\u56e0\u4e3a\u73b0\u4ee3\u7684\u5904\u7406\u5668\u548c\u7f16\u8bd1\u5668\u6709\u53ef\u80fd\u4f1a\u4e3a\u4e86\u4f18\u5316\u6027\u80fd\u800c\u5bf9\u4e00\u4e9b\u8bfb\u5199\u64cd\u4f5c\u8fdb\u884c\u91cd\u6392\u3002\u5728\u4f18\u5316\u4e2d\uff0c\u5904\u7406\u5668\u6216\u7f16\u8bd1\u5668\u4f1a\u8003\u8651\u5176\u91cd\u6392\u7684\u5408\u7406\u6027\uff0c\u5373\u4fdd\u8bc1\u4e86\u5728\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\u7ed3\u679c\u503c\u662f\u7a33\u5b9a\u4e14\u6b63\u786e\u7684\u3002\u4f46\u662f\u8fd9\u4e0d\u80fd\u4fdd\u8bc1\u5176\u5728\u591a\u7ebf\u7a0b\u5171\u7528\u6570\u636e\u65f6\u7684\u6b63\u786e\u6027\uff0c\u91cd\u6392\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u7a33\u5b9a\u6216\u8005\u4e0d\u671f\u671b\u7684\u8f93\u51fa\u3002\u4f8b\u5982\u5982\u679c\u7f16\u8bd1\u5668\u5c06\u5bf9 <code>flag[i]</code> \u548c <code>turn</code> \u8d4b\u503c\u7684\u987a\u5e8f\u4ea4\u6362\uff1a</p> <p></p> <p>\u200bNote that reordering of memory accesses can happen even on processors that don't reorder instructions3.</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#memory-barrier","title":"Memory Barrier","text":"<p>\u200b\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u4f1a\u5bf9\u4ee3\u7801\u7684\u7ed3\u6784\u8fdb\u884c reorder\uff0c\u4ee5\u8fbe\u5230\u6700\u4f73\u6548\u679c\u3002</p> <p>\u91cd\u6392\u7684\u4f8b\u5b50</p> <p>\u5bf9 a2 \u548c b1 \u8fdb\u884c\u91cd\u6392\uff0c\u4f7f\u5f97\u4e0d\u9700\u53cd\u590d\u8bfb\u53d6\u4ea4\u66ff x \u548c y \u503c\uff1a</p> <pre><code>int x = 1;\nint y = 2;\nint a1 = x * 1;\nint b1 = y * 1;\nint a2 = x * 2;\nint b2 = y * 2;\n// \u53ef\u80fd\u4f1a\u4f18\u5316\u4e3a\uff1a\nint x = 1;\nint y = 2;\nint a1 = x * 1;\nint a2 = x * 2;\nint b1 = y * 1;     // a2, b1 \u7684\u987a\u5e8f\u8fdb\u884c\u4e86\u91cd\u6392\nint b2 = y * 2; </code></pre> <p>\u200b\u91cd\u6392\u53ef\u80fd\u4f7f\u5f97\u5728\u591a\u6838\u8fd0\u884c\u65f6\u51fa\u73b0\u4e0e\u671f\u671b\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5f15\u5165 Memory Barrier\uff1a\u5b83\u7528\u6765\u4fdd\u8bc1\u5176\u4e4b\u524d\u7684\u5185\u5b58\u8bbf\u95ee\u5148\u4e8e\u5176\u540e\u7684\u5b8c\u6210\u3002\u5373\uff0c\u6211\u4eec\u4fdd\u8bc1\u5728\u6b64\u524d\u5bf9\u5185\u5b58\u7684\u6539\u53d8\u5bf9\u5176\u4ed6\u5904\u7406\u5668\u4e0a\u7684\u8fdb\u7a0b\u662f\u53ef\u89c1\u7684\u3002</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#memory-model","title":"Memory Model","text":"<p>\u200b\u53e6\u5916\uff0c\u5728\u73b0\u4ee3\u7684\u4f53\u7cfb\u7ed3\u6784\u4e0a\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5199\u4e86\u5bf9\u5e94\u7684\u53d8\u91cf\u540e\u6709\u53ef\u80fd\u4e0d\u4f1a\u7acb\u523b\u5199\u56de\u5185\u5b58\uff0c\u8fd9\u4e5f\u6709\u53ef\u80fd\u5bfc\u81f4\u95ee\u9898\uff1a</p> <p>How a computer architecture determines what memory guarantees it will provide to an application program is known as its memory model. In general, a memory model falls into one of two categories:</p> <ol> <li>Strongly ordered, where a memory modification on one processor is immediately visible to all other processors.</li> <li>Weakly ordered, where modifications to memory on one processor may not be immediately visible to other processors.</li> </ol>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#64-\u786c\u4ef6\u6307\u4ee4","title":"6.4 \u786c\u4ef6\u6307\u4ee4","text":"<p>\u200b\u8bb8\u591a\u73b0\u4ee3\u7cfb\u7edf\u63d0\u4f9b\u786c\u4ef6\u6307\u4ee4\uff0c\u7528\u4e8e\u68c0\u6d4b\u548c\u4fee\u6539 word \u7684\u5185\u5bb9\uff0c\u6216\u8005\u7528\u4e8e atomically\uff08uniterruptably\uff0c\u4e0d\u53ef\u88ab\u6253\u65ad\u5730\uff09 \u4ea4\u6362\u4e24\u4e2a word\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u4e0d\u8ba8\u8bba\u7279\u5b9a\u673a\u5668\u7684\u7279\u5b9a\u6307\u4ee4\uff0c\u800c\u662f\u901a\u8fc7\u6307\u4ee4 <code>test_and_set()</code> \u548c <code>compare_and_swap()</code> \u62bd\u8c61\u4e86\u89e3\u8fd9\u4e9b\u6307\u4ee4\u80cc\u540e\u7684\u4e3b\u8981\u6982\u5ff5\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#641-test_and_set","title":"6.4.1 <code>test_and_set</code>","text":"<p>\u6307\u4ee4 <code>test_and_set()</code>\u00a0\u7684\u529f\u80fd\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u6765\u5b9a\u4e49\uff1a</p> <pre><code>bool test_and_set(bool *target) {\nbool rv = *target;\n*target = true;\nreturn rv;\n}\n</code></pre> <p>\u4e0a\u8ff0\u7684\u300c\u5b9a\u4e49\u300d\u53ea\u8bf4\u660e\u4e86\u8fd9\u4e2a\u6307\u4ee4\u7684\u529f\u80fd\uff0c\u4f46\u662f\u8fd9\u4e00\u6307\u4ee4\u7684\u91cd\u8981\u7279\u5f81\u662f\uff0c\u5b83\u7684\u6267\u884c\u662f atomic \u7684\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5728\u652f\u6301\u8fd9\u4e2a\u6307\u4ee4\u7684\u673a\u5668\u4e0a\u5b9e\u73b0 mutual exclusive\uff1a\u5b9a\u4e49\u4e00\u4e2a bool \u53d8\u91cf <code>lock</code>\u00a0\uff0c\u521d\u59cb\u5316\u4e3a false\u3002\u8fdb\u7a0b\u7684\u7ed3\u6784\u4e3a\uff1a</p> <pre><code>while (true) {\n/* Entry Section */\nwhile (test_and_set(&amp;lock))     ; /* do nothing */\n\n/* Critical Section */\n\n/* Exit Section */\nlock = false;\n\n/* Remainder Section */\n}\n</code></pre> <p>\u53ef\u89c1\uff0c\u5982\u679c <code>lock</code>\u00a0\u5728 Entry Section \u65f6\u4e3a true\uff0c\u90a3\u4e48 <code>test_and_set(&amp;lock)</code>\u00a0\u5c06\u8fd4\u56de true\uff0c\u56e0\u6b64\u4f1a\u59cb\u7ec8\u5728 while \u5faa\u73af\u4e2d\u8be2\u95ee\u3002\u76f4\u5230\u67d0\u4e2a\u65f6\u523b <code>lock</code>\u00a0\u4e3a false\uff0c\u90a3\u4e48 <code>test_and_set(&amp;lock)</code> \u5c06\u8fd4\u56de false \u540c\u65f6\u5c06 <code>lock</code>\u00a0\u7f6e\u4e3a true\uff0c\u8fdb\u7a0b\u8fdb\u5165 Critical Section\uff0c\u540c\u65f6\u4fdd\u8bc1\u5176\u4ed6\u8fdb\u7a0b\u65e0\u6cd5\u8fdb\u5165 Critical Section\u3002\u5f53\u6301\u9501\u7684\u8fdb\u7a0b\u5b8c\u6210 Critical Section \u7684\u8fd0\u884c\uff0c\u5b83\u5728 Exit Section \u4e2d\u91ca\u653e <code>lock</code>\u00a0\uff0c\u4ece\u800c\u5141\u8bb8\u5176\u4ed6\u8fdb\u7a0b\u8fdb\u5165 Critical Section\u3002</p> <p>\u800c\u5982\u679c\u67d0\u4e2a\u65f6\u523b <code>lock</code>\u00a0\u4e3a false\uff0c\u800c\u6709\u4e24\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u51e0\u4e4e\u540c\u65f6\u8c03\u7528\u4e86 <code>test_and_set(&amp;lock)</code>\u00a0\u3002\u4f46\u7531\u4e8e\u5b83\u662f atomic \u7684\uff0c\u56e0\u6b64\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u8fd4\u56de false\u3002</p> <p>\u200b\u4f46\u662f\uff0c\u5982\u4e0a\u6240\u793a\u7684\u63a7\u5236\u4e0d\u80fd\u6ee1\u8db3 bounded waiting \u6761\u4ef6\uff1a</p> <p></p> <p>\u200b\u6211\u4eec\u53ef\u4ee5\u4f5c\u5982\u4e0b\u66f4\u6539\u4ee5\u6ee1\u8db3 bounded waiting\uff1a</p> <pre><code>while (true) {\n/* Entry Section */\nwaiting[i] = true;\nwhile (waiting[i] &amp;&amp; test_and_set(&amp;lock))   ; /* do nothing */\nwaiting[i] = false;\n\n/* Critical Section */\n\n/* Exit Section */\nj = (i + 1) % n;\nwhile ((j != i) &amp;&amp; !waiting[j]))\nj = (j + 1) % n;\nif (j == i)\nlock = false;\nelse\nwaiting[j] = false;\n\n/* Remainder Section */\n}\n</code></pre> <p>\u6211\u4eec\u5f15\u5165\u4e86 bool \u6570\u7ec4 <code>waiting[]</code>\u00a0\u3002\u5728 Entry Section \u4e2d\uff0c\u6211\u4eec\u9996\u5148\u7f6e <code>waiting[i]</code>\u00a0\u4e3a true\uff1b\u5f53 <code>waiting[i]</code>\u00a0\u6216\u8005 <code>lock</code>\u00a0\u4e2d\u4efb\u610f\u4e00\u4e2a\u88ab\u91ca\u653e\u65f6\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u8fdb\u5165 Critical Section\u3002\u521d\u59cb\u65f6\uff0c <code>lock</code>\u00a0\u4e3a false\uff0c\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u8fdb\u5165 CS \u7684\u8fdb\u7a0b\u53ef\u4ee5\u83b7\u8bb8\u8fd0\u884c\u3002\u5728 Exit Section \u4e2d\uff0c\u8fdb\u7a0b\u4ece\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u5f00\u59cb\uff0c\u904d\u5386\u4e00\u904d\u6240\u6709\u8fdb\u7a0b\uff0c\u53d1\u73b0\u6b63\u5728\u7b49\u5f85\u7684\u8fdb\u7a0b\u65f6\u91ca\u653e\u5b83\u7684 <code>waiting[j]</code>\u00a0\uff0c\u4f7f\u5176\u83b7\u8bb8\u8fdb\u5165 CS\uff0c\u5f53\u524d\u8fdb\u7a0b\u7ee7\u7eed Remainder Section \u7684\u8fd0\u884c\uff1b\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u8fdb\u7a0b\u5728\u7b49\u5f85\uff0c\u90a3\u4e48\u5b83\u91ca\u653e <code>lock</code>\u00a0\uff0c\u4f7f\u5f97\u4e4b\u540e\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u8fdb\u5165 CS \u7684\u8fdb\u7a0b\u53ef\u4ee5\u76f4\u63a5\u83b7\u8bb8\u3002</p> <p>\u8fd9\u6837\u7684\u65b9\u5f0f\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u591a\u7b49\u5f85 n-1 \u4e2a\u8fdb\u7a0b\u5728\u5176\u524d\u9762\u8fdb\u5165 CS\uff0c\u6ee1\u8db3\u4e86 bounded waiting \u6761\u4ef6\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#642-compare_and_swap","title":"6.4.2 <code>compare_and_swap</code>","text":"<p>\u6307\u4ee4 <code>compare_and_swap()</code>\u00a0\u53ef\u4ee5\u5982\u4e0b\u5b9a\u4e49\uff1a</p> <pre><code>int compare_and_swap(int *value, int expected, int new_value) {\nint temp = *value;\nif (*value == expected)\n*value = new_value;\nreturn temp;\n}\n</code></pre> <p>\u540c\u6837\uff0c<code>compare_and_swap()</code> \u7684\u6267\u884c\u662f atomic \u7684\u3002\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf <code>lock</code>\u00a0\uff0c\u521d\u59cb\u503c\u8bbe\u4e3a 0\u3002\u8fdb\u7a0b\u7684\u7ed3\u6784\u4e3a\uff1a</p> <pre><code>while (true) {\n/* Entry Section */\nwhile (compare_and_swap(&amp;lock, 0, 1) != 0)  ; /* do nothing */\n\n/* Critical Section */\n\n/* Exit Section */\nlock = 0;\n\n/* Remainder Section */\n}\n</code></pre> <p>\u53ef\u89c1\uff0c<code>compare_and_swap()</code> \u548c <code>test_and_set()</code> \u6ca1\u6709\u672c\u8d28\u533a\u522b\u3002\u4e0a\u4f8b <code>compare_and_swap()</code>  \u7684\u4f7f\u7528\u65b9\u6cd5\u540c\u6837\u65e0\u6cd5\u4fdd\u8bc1 bounded waiting\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0e <code>test_and_set()</code> \u540c\u6837\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#65-atomic-variables","title":"6.5 Atomic Variables","text":"<p>\u200b\u5982\u6211\u4eec\u5148\u524d\u6240\u8bf4\uff0c\u4e4b\u524d\u4ecb\u7ecd\u7684\u6307\u4ee4\u5e38\u88ab\u7528\u6765\u4f5c\u4e3a\u540c\u6b65\u5de5\u5177\u7684\u7ec4\u6210\u90e8\u5206\u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>compare_and_swap()</code> \u6307\u4ee4\u6765\u5b9e\u73b0\u4e00\u4e9b\u5de5\u5177\u3002\u5176\u4e2d\u4e00\u4e2a\u5de5\u5177\u5c31\u662f Atomic Variable\u3002</p> <p>\u200b\u4e00\u4e2a\u53d8\u91cf\u5728\u66f4\u65b0\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e2a race condition\uff0c\u800c Atomic Variable \u53ef\u4ee5\u4e3a\u6570\u636e\u63d0\u4f9b atomic updates\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4f7f\u7528\u4e0d\u53ef\u6253\u65ad\u7684 <code>increment(&amp;count)</code>; \u6307\u4ee4\u6765\u4ee3\u66ff\u53ef\u88ab\u6253\u65ad\u7684 <code>count++</code> \u6307\u4ee4\u5c31\u53ef\u4ee5\u89e3\u51b3\u672c\u8282\u5f00\u5934\u7684 Bounded-buffer Problem\uff1a</p> <pre><code>void increment(atomic_int *v) {\nint temp;\ndo {\ntemp = *v;\n} while (temp != compare_and_swap(v, temp, temp+1));\n}\n</code></pre> <p>\u6ce8\u610f\u5230\uff0c\u7a0b\u5e8f\u5faa\u73af\u5c1d\u8bd5\u5c06 <code>v</code>\u00a0\u8d4b\u503c\u4e3a <code>temp+1</code>\u00a0\uff0c\u5f53\u8d4b\u503c\u6210\u529f\u65f6\u8fd4\u56de\u3002\u7531\u4e8e CAS \u6307\u4ee4\u662f atomic \u7684\uff0c\u56e0\u6b64\u5b83\u4e0d\u4f1a\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u88ab\u6253\u65ad\uff1b\u5728\u7a0b\u5e8f\u5176\u4ed6\u8fd0\u884c\u8fc7\u7a0b\u4e2d <code>v</code>\u00a0\u7684\u503c\u90fd\u6ca1\u6709\u53d1\u751f\u6539\u53d8\u3002</p> <p>\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c buffer \u6709\u4e24\u4e2a consumer \u5728\u540c\u65f6\u7b49\u5f85\u8bfb\u53d6\uff0c\u90a3\u4e48\u5f53 <code>count</code>\u00a0\u7531 0 \u53d8\u6210 1 \u7684\u65f6\u5019\u4e24\u4e2a consumer \u53ef\u80fd\u4f1a\u540c\u65f6\u8fdb\u5165\u6765\u8bfb\u53d6\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u53ea\u6709 1 \u4e2a\u503c\u5728 buffer \u4e2d\u3002\u5373\uff0cAtomic Variable \u5e76\u4e0d\u80fd\u89e3\u51b3\u6240\u6709 race condition\uff0c\u56e0\u4e3a\u5b83\u89e3\u51b3\u7684\u95ee\u9898\u4ec5\u662f\u53d8\u91cf\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u7684 race condition\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#66-mutex","title":"6.6 Mutex","text":"<p>\u200b\u6211\u4eec\u5c1d\u8bd5\u8bbe\u8ba1\u8f6f\u4ef6\u5de5\u5177\u6765\u89e3\u51b3 CS problem\u3002\u6211\u4eec\u8ba8\u8bba Mutex (MUTual EXclusion) Lock \u7684\u5b9e\u73b0\uff0c\u5b83\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u6700\u7b80\u5355\u7684 synchronization tool\u3002</p> <p>\u200b\u6211\u4eec\u8003\u8651\u8ba9\u8fdb\u7a0b\u5728 Entry Section \u7533\u8bf7 acquire() \u4e00\u4e2a\u9501\uff0c\u7136\u540e\u5728 Exit Section release() \u4e00\u4e2a\u9501\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u9501\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u5e03\u5c14\u53d8\u91cf\u6765\u8868\u793a\u5b83\u662f\u5426 avaliable\uff1a</p> <pre><code>while (true) {\nacquire();\n/* critical section */\nrelease();\n/* remainder section */\n}\n\n/* ------- */\nvoid acquire() {\nwhile (!available)\n; /* busy waiting */\navaliable = false;\n}\n\nvoid release() {\navaliable = true;\n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u4fdd\u8bc1 <code>acquire()</code>\u00a0\u548c <code>release()</code>\u00a0\u662f atomic \u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>test_and_set()</code>\u00a0\u548c <code>compare_and_swap()</code>\u00a0\u6765\u5b9e\u73b0\uff1a <pre><code>void acquire() {\nwhile (compare_and_swap(&amp;available, 1, 0) != 1)\n; /* busy waiting */\n}\n\nvoid release() {\navailable = true;\n}\n</code></pre></p> <p>\u4f46\u662f\u8fd9\u79cd\u5b9e\u73b0\u7684\u7f3a\u70b9\u662f\uff0c\u5b83\u9700\u8981 busy waiting\uff0c\u5373\u5f53\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5728\u4e34\u754c\u533a\u4e2d\u65f6\uff0c\u5176\u4ed6\u8fdb\u7a0b\u5728\u8bf7\u6c42\u8fdb\u5165\u4e34\u754c\u533a\u65f6\u5728 acquire() \u4e2d\u6301\u7eed\u7b49\u5f85\uff0c\u4f8b\u5982\u5f53\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u4f7f\u7528\u4e00\u4e2a CPU \u65f6\uff1a</p> <p>T0 acquires lock -&gt; INTERRUPT-&gt; T1 runs, spin, spin spin \u2026 (till time's out) -&gt; INTERRUPT-&gt; T0 runs -&gt; INTERRUPT-&gt;T1 runs, spin, spin spin \u2026 -&gt; INTERRUPT-&gt; T0 runs, release locks -&gt; INTERRUPT -&gt; T1 runs, enters CS</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0cT1 \u5728\u5b83\u7684 CPU \u65f6\u95f4\u5185\u4e0d\u65ad\u5faa\u73af\u7b49\u5f85\uff0c\u76f4\u5230 T0 \u91ca\u653e\u9501\u3002\u56e0\u6b64\u8fd9\u79cd\u9501\u4e5f\u6210\u4e3a spinlock\u3002\u53ef\u4ee5\u60f3\u8c61\uff0c\u5982\u679c\u6709 N \u4e2a\u8fdb\u7a0b\u540c\u65f6\u4f7f\u7528\u4e00\u4e2a CPU\uff0c\u90a3\u4e48\u5c06\u6709\u5927\u7ea6 \\(\\frac{N-1}{N}\\)\u00a0\u7684\u65f6\u95f4\u88ab\u6d6a\u8d39\u3002\u5982\u679c\u6709\u8fdb\u7a0b\u5728\u4f01\u56fe acquire \u4e00\u4e2a\u9501\u65f6\u88ab\u963b\u6b62\uff0c\u6211\u4eec\u79f0\u5b83\u662f\u00a0contended\uff08\u88ab\u4e89\u593a\uff09\uff1b\u53cd\u4e4b\u6211\u4eec\u79f0\u5b83 uncontended\u3002\u5982\u6211\u4eec\u6240\u8ff0\uff0chighly contended locks \u4f1a\u964d\u4f4e\u5f53\u524d\u8fd0\u884c\u7a0b\u5e8f\u7684\u6574\u4f53\u6027\u80fd\u3002</p> <p>\u200b\u6211\u4eec\u8fd8\u53ef\u4ee5\u8003\u8651\u4e0b\u9762\u7684\u8bbe\u8ba1\uff0c\u5176\u4e2d yield() \u4f1a\u4f7f\u7a0b\u5e8f\u4ece running \u8f6c\u4e3a ready\uff0c\u4ece\u800c\u8ba9\u51fa CPU\uff1a</p> <pre><code>void acquire() {\nwhile (compare_and_swap(&amp;avaliable, 1, 0) != 1)\nyield(); }\n\nvoid release() {\navaliable = true;\n}\n</code></pre> <p>\u200b\u4e0d\u8fc7\uff0c\u5982\u679c\u6240\u9700\u7684\u7b49\u5f85\u65f6\u95f4\u4e00\u822c\u5c0f\u4e8e context switch \u6240\u9700\u7684\u65f6\u95f4\u7684\u8bdd\uff0c\u7528 spinlock \u53ef\u80fd\u662f\u66f4\u597d\u76844\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#67-semaphores","title":"6.7 Semaphores","text":"<p>\u6211\u4eec\u7ed9\u51fa\u4e00\u79cd\u66f4\u5389\u5bb3\u7684 synchronization tool\uff0c\u79f0\u4e3a semaphore\u3002\u4e00\u4e2a semaphore <code>S</code>\u00a0\u662f\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\uff0c\u5b83\u9664\u4e86\u521d\u59cb\u5316\u5916\u53ea\u80fd\u901a\u8fc7\u4e24\u4e2a atomic \u64cd\u4f5c <code>wait()</code>\u00a0\u548c <code>signal()</code>\u00a0\uff08\u539f\u79f0\u4e3a <code>P()</code>\u00a0\u548c <code>V()</code>\u00a0\uff09\u6765\u8bbf\u95ee\uff1a</p> <pre><code>void wait(S) {\nwhile (S &lt;= 0)\n;   /* busy waiting */\nS--;\n}\n\nvoid signal(S) {\nS++;\n}\n</code></pre> <p>Tips</p> <p>\u9700\u8981\u91cd\u7533\u7684\u662f\uff0c<code>wait()</code> \u548c <code>signal()</code> \u7684\u5b9e\u73b0\u4e5f\u5e94\u662f atomic \u7684\u3002</p> <p>\u6709 2 \u79cd semaphore\uff1a</p> <ul> <li>Counting semaphore\u00a0- S \u7684\u503c\u4e0d\u53d7\u9650\u5236\uff1b</li> <li>Binary semaphore\u00a0- S \u7684\u503c\u53ea\u80fd\u662f 0 \u6216 1\u3002\u7c7b\u4f3c\u4e8e\u4e92\u65a5\u9501\u3002</li> </ul> <p>Example</p> <p></p> <p>\u4f46\u662f\uff0c\u5982\u540c\u524d\u9762\u6211\u4eec\u6240\u8bf4\uff0csemaphore \u4e5f\u5177\u6709 busy waiting \u7684\u95ee\u9898\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a semaphore \u5f15\u5165 waiting queue\uff1a</p> <pre><code>typedef struct {\nint value;\nstruct list_head * waiting_queue;\n} semaphore; wait(semaphore *S) {\nS-&gt;value--;\nif (S-&gt;value &lt; 0) {\nadd this process to S-&gt;list;\nblock();\n}\n}\nsignal(semaphore *S) {\nS-&gt;value++;\nif (S-&gt;value &lt;= 0) {\nremove a process P from S-&gt;list;\nwakeup(P);\n}\n}\n</code></pre> <p>\u64cd\u4f5c <code>block()</code>\u00a0\u6302\u8d77\u8c03\u7528\u5b83\u7684\u8fdb\u7a0b\uff0c\u64cd\u4f5c <code>wakeup(P)</code>\u00a0\u91cd\u65b0\u542f\u52a8 P \u7684\u6267\u884c\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u90fd\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u4f5c\u4e3a\u57fa\u672c\u7cfb\u7edf\u8c03\u7528\u63d0\u4f9b\u7684\u3002</p> <p>The list of waiting processes can be easily implemented by a link field in each process control block (PCB). Each semaphore contains an integer value and a pointer to a list of PCBs. One way to add and remove processes from the list so as to ensure bounded waiting is to use a FIFO queue, where the semaphore contains both head and tail pointers to the queue. In general, however, the list can use any queuing strategy. Correct usage of semaphores does not depend on a particular queuing strategy for the semaphore lists.</p> <p>\u6211\u4eec\u5728\u7b2c 7 \u7ae0\u8ba8\u8bba semaphore \u7684\u82e5\u5e72\u4f7f\u7528\u6848\u4f8b\u3002</p> <p>\u200b\u540c\u65f6\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9519\u8bef\u5730\u4f7f\u7528 semaphore \u53ef\u80fd\u4f1a\u5bfc\u81f4 deadlock\uff1a</p> <p></p> <p>\u6211\u4eec\u5728\u7b2c 8 \u7ae0\u8ba8\u8bba deadlock \u7684\u66f4\u591a\u7ec6\u8282\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/6_sync_tools/#68-priority-inversion","title":"6.8 Priority Inversion","text":"<p>\u200b\u8fd9\u4e2a\u95ee\u9898\u79f0\u4e3a priority inversion\uff0c\u5373\u5177\u6709\u4e2d\u7b49\u4f18\u5148\u7ea7\u7684 M \u7684\u8fd0\u884c\u65f6\u95f4\u53cd\u800c\u5f71\u54cd\u4e86\u5177\u6709\u8f83\u9ad8\u4f18\u5148\u7ea7\u7684 H \u7684\u7b49\u5f85\u65f6\u95f4\u3002</p> <p>\u200b\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f18\u5148\u7ea7\u7ee7\u627f priority inheritance \u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff1a\u6240\u6709\u6b63\u5728\u8bbf\u95ee\u8d44\u6e90\uff08\u5982\u4e0a\u4f8b\u4e2d\uff0c\u4f4e\u4f18\u5148\u7ea7\u7684 L \u6240\u6301\u7684\u9501\uff09\u7684\u8fdb\u7a0b\u83b7\u5f97\u9700\u8981\u8bbf\u95ee\u8fd9\u4e2a\u8d44\u6e90\u7684\u66f4\u9ad8\u4f18\u5148\u7ea7\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\uff0c\u76f4\u5230\u5b83\u4eec\u7528\u5b8c\u6709\u5173\u8d44\u6e90\u4e3a\u6b62\u3002\uff08\u5982\u4e0a\u4f8b\u4e2d\uff0cpriority inheritance \u5c06\u5141\u8bb8 L \u4e34\u65f6\u7ee7\u627f H \u7684\u4f18\u5148\u7ea7\u4ece\u800c\u9632\u6b62\u88ab M \u62a2\u5360\uff1b\u5f53 L \u91ca\u653e\u9501\u540e\u5219\u56de\u5230\u539f\u6765\u7684\u4f18\u5148\u7ea7\uff0c\u6b64\u65f6 H \u5c06\u5728 M \u4e4b\u524d\u6267\u884c\u3002\uff09</p> <ol> <li> <p>What was the reason of the non-preemptivity of older Linux kernels? | StackExchange \u21a9</p> </li> <li> <p>Giant lock | Wikipedia \u21a9</p> </li> <li> <p>Peterson's algorithm #note | Wikipedia \u21a9</p> </li> <li> <p>When to use busy waiting \u21a9</p> </li> </ol>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/7_sync_examples/","title":"7 Synchronization Examples","text":"<p> \u7ea6 1942 \u4e2a\u5b57  279 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/7_sync_examples/#71-\u7ecf\u5178\u540c\u6b65\u95ee\u9898","title":"7.1 \u7ecf\u5178\u540c\u6b65\u95ee\u9898","text":"<p>\u4e00\u822c\u6211\u4eec\u7528\u4fe1\u53f7\u91cf\u89e3\u51b3\u95ee\u9898\uff0c\u56e0\u4e3a\u4fe1\u53f7\u91cf\u76f8\u5bf9\u6765\u8bf4\u529f\u80fd\u66f4\u591a\uff0c\u800c\u4e14\u5f88\u591a\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u4fe1\u53f7\u91cf\u505a\u4e86\u66f4\u591a\u8bbe\u8ba1\uff0c\u7528\u6765\u907f\u514d busy waiting \u7b49\u95ee\u9898\u3002</p> <p>\u4fe1\u53f7\u91cf\u7684\u903b\u8f91\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff1a\u4e00\u4e2a\u4fe1\u53f7\u91cf\u7528\u6765\u8868\u793a \u4e00\u7c7b\u300c\u8d44\u6e90\u300d\u7684\u4f59\u91cf\uff1b<code>wait()</code> \u7b49\u5f85\u5230\u5176\u6709\u4f59\u91cf\u65f6\u4ece\u4e2d\u53d6\u8d70\u4e00\u4e2a\uff0c\u800c <code>signal()</code> \u91ca\u653e\u4e00\u4e2a\u8d44\u6e90\u3002\u56e0\u6b64\uff0c\u5728\u7528\u4fe1\u53f7\u91cf\u89e3\u51b3\u540c\u6b65\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u8003\u8651\u54ea\u4e9b\u4e1c\u897f\u5c5e\u4e8e\u8d44\u6e90\uff0c\u5bf9\u5b83\u4eec\u7684\u8bbf\u95ee\u6709\u54ea\u4e9b\u3002\u540c\u65f6\uff0c\u901a\u8fc7\u8003\u8651\u5728\u54ea\u4e9b\u5730\u65b9\u9700\u8981\u7b49\u5f85\uff0c\u6211\u4eec\u4e5f\u80fd\u591f\u5f97\u5230\u4e00\u4e9b\u63d0\u793a\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/7_sync_examples/#711-bounded-buffer-problem","title":"7.1.1 Bounded-Buffer Problem","text":"<p>Bounded-Buffer Problem</p> <p>\u7ed9\u5b9a\u4e24\u4e2a\u8fdb\u7a0b\uff1aproducer \u548c consumer\uff0c\u5b83\u4eec\u5171\u7528\u5927\u5c0f\u4e3a \\(n\\) \u7684 buffer\u3002Producer \u751f\u4ea7\u6570\u636e\u653e\u5165 buffer\uff0cconsumer \u4ece buffer \u53d6\u51fa\u6570\u636e\u4ece\u800c\u4f7f\u7528\u4e4b\u3002</p> <p>\u8be5\u95ee\u9898\u9700\u8981\u4fdd\u8bc1\uff1aproducer \u4e0d\u5e94\u5f53\u5728 buffer \u6ee1\u65f6\u653e\u5165\u6570\u636e\uff0cconsumer \u4e5f\u4e0d\u5e94\u5f53\u5728 buffer \u7a7a\u65f6\u53d6\u51fa\u6570\u636e\u3002</p> <p>\u9996\u5148\uff0c\u6839\u636e\u6211\u4eec\u5728\u524d\u4e00\u8282\u4e2d\u7684\u8ba8\u8bba\uff0cproduce \u548c consume \u7684\u8fc7\u7a0b\u4f1a\u8bbf\u95ee\u5230 <code>buffer</code> \u7684\u8d44\u6e90\uff0c\u56e0\u6b64\u662f critical section\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u9501\uff08\u6216\u8005\u4fe1\u53f7\u91cf\uff0c\u540e\u540c\uff09\u6765\u63a7\u5236\u5bf9 <code>buffer</code> \u7684\u8bbf\u95ee\uff1a</p> <pre><code>semaphore lock = 1;\n\nproducer() {\nwhile (true) {\n// &lt;1&gt; If buffer is full, wait \nwait(lock);\nadd_to_buffer(next_produced);\nsignal(lock);\n}\n}\n\nconsumer() {\nwhile (true) {\n// &lt;2&gt; If buffer is empty, wait\nwait(lock);\nnext_consumed = take_from_buffer();\nsignal(lock);\n}\n}\n</code></pre> <p>\u4e0d\u8fc7\uff0c\u4e0a\u9762\u4e24\u5904\u6ce8\u91ca\u4e2d\u8981\u6c42\u6839\u636e <code>buffer</code> \u7684\u5bb9\u91cf\u51b3\u5b9a\u662f\u5426\u9700\u8981\u7b49\u5f85\u7684\u9700\u6c42\u8fd8\u6ca1\u6709\u5b9e\u73b0\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf <code>count</code> \u6765\u8bb0\u5f55 <code>buffer</code> \u4e2d\u6709\u591a\u5c11\u4e2a\u5143\u7d20\uff1b\u5982\u679c\u8fd9\u6837\u5b9e\u73b0\u7684\u8bdd\uff0c\u5bf9 <code>count</code> \u7684\u4fee\u6539\u4e5f\u662f critical section\uff0c\u56e0\u6b64\u4e5f\u9700\u8981\u9501\u7684\u63a7\u5236\uff1a</p> <pre><code>semaphore lock = 1;\nint count = 0;\n\nproducer() {\nwhile (true) { wait(lock);\nwhile (count == BUFFER_SIZE) ;  // If buffer is full, wait \nadd_to_buffer(next_produced);\ncount++;\nsignal(lock);\n}\n}\n\nconsumer() {\nwhile (true) {\nwait(lock);\nwhile (count == 0) ;    // If buffer is empty, wait\nnext_consumed = take_from_buffer();\ncount--;\nsignal(lock);\n}\n}\n</code></pre> <p>\u8fd9\u79cd\u65b9\u5f0f\u7684\u5b9e\u73b0\u95ee\u9898\u662f\u663e\u7136\u7684\uff1a\u6bd4\u5982\u5f53\u524d <code>buffer</code> \u4e3a\u7a7a\uff0c\u5373 <code>count</code> \u4e3a 0\uff0c<code>consumer</code> \u4f1a\u5728 16 \u884c\u5904\u7b49\u5f85\uff1b\u4f46\u56e0\u4e3a\u6b64\u65f6\u5b83\u6301\u6709\u7740 <code>lock</code>\uff0c\u4efb\u4f55 producer \u90fd\u4e0d\u80fd produce\uff0c\u56e0\u6b64\u8fd9\u4e2a\u7b49\u5f85\u4f1a\u6c38\u4e45\u6301\u7eed\u4e0b\u53bb\u3002\u8fd9\u8fdd\u53cd\u4e86 Progress \u548c Bounded waiting \u7684\u8981\u6c42\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u7a0d\u4f5c\u4fee\u6539\uff0c\u5f53 <code>count</code> \u7684\u8981\u6c42\u4e0d\u6ee1\u8db3\u65f6\uff0c\u7acb\u5373\u91ca\u653e <code>lock</code> \u5e76\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\uff0c\u5373\uff1a</p> <pre><code>semaphore lock = 1;\nint count = 0;\n\nproducer() {\nwhile (true) { wait(lock);\nif (count == BUFFER_SIZE) {\n// If buffer is full, give up\nsignal(lock);\ncontinue;\n} else {\nadd_to_buffer(next_produced);\ncount++;\nsignal(lock);\n}\n}\n}\n\nconsumer() {\nwhile (true) {\nwait(lock);\nif (count == 0) {\n// If buffer is empty, give up\nsignal(lock);\ncontinue;\n} else {\nnext_consumed = take_from_buffer();\ncount--;\nsignal(lock);\n}\n}\n}\n</code></pre> <p>\u4e5f\u5c31\u662f\uff1a</p> <pre><code>semaphore lock = 1;\nint count = 0;\n\nproducer() {\nwhile (true) { wait(lock);\nif (count != BUFFER_SIZE) {\nadd_to_buffer(next_produced);\ncount++;\n}\nsignal(lock);\n}\n}\n\nconsumer() {\nwhile (true) {\nwait(lock);\nif (count != 0) {\nnext_consumed = take_from_buffer();\ncount--;\n}\nsignal(lock);\n}\n}\n</code></pre> <p>\u4f46\u662f\uff0c\u8fd9\u79cd\u5b9e\u73b0\u65b9\u6cd5\u5f3a\u5236\u4e86 busy waiting\u3002\u6211\u4eec\u5728\u524d\u4e00\u8282\u8ba8\u8bba\u8fc7\u4e86 busy waiting \u53ca\u5176\u5229\u5f0a\uff1b\u5728\u8fd9\u91cc critical section \u7684\u8fd0\u884c\u65f6\u95f4\u660e\u663e\u6bd4 context switch \u7684\u65f6\u95f4\u8981\u957f\uff0c\u56e0\u6b64\u8fd9\u91cc\u4f7f\u7528 busy waiting \u662f\u6d6a\u8d39\u65f6\u95f4\u7684\u3002</p> <p>\u800c\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u8bb8\u591a\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u4fe1\u53f7\u91cf\u505a\u4e86\u4e00\u4e9b\u5904\u7406\uff0c\u4f7f\u5f97\u5176\u7b49\u5f85\u4e0d\u518d\u662f busy waiting\uff0c\u800c\u662f\u7c7b\u4f3c\u4e8e\u7b2c 6 \u8282\u4e2d\u8bb2\u5230\u7684\u89e3\u51b3\u65b9\u6848\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u4fe1\u53f7\u91cf\u6765\u89e3\u51b3\u95ee\u9898\u3002</p> <p>\u9996\u5148\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u4e00\u4e2a <code>lock</code>\u00a0 \u548c\u4e00\u4e2a <code>eslot</code> (empty slot\uff0c\u7a7a\u95f2 buffer \u7684\u4e2a\u6570) \u6765\u89e3\u51b3\uff1a</p> <pre><code>semaphore lock = 1;\nsemaphore eslot = BUFFER_SIZE;\n\nproducer() {\nwhile (true) {\nwait(eslot);    // if buffer is full, i.e. eslot == 0, wait\n// else, eslot--\nwait(lock);\nadd_to_buffer(next_produced);\nsignal(lock);\n}\n}\n\nconsumer() {\nwhile (true) {\n// &lt;2&gt; If buffer is empty, i.e. eslot == BUFFER_SIZE, wait\nwait(lock);\nnext_consumed = take_from_buffer();\nsignal(lock);\nsignal(eslot);  // eslot++\n}\n}\n</code></pre> <p>\u7531\u4e8e <code>eslot</code> \u4f5c\u4e3a\u4e00\u4e2a\u4fe1\u53f7\u91cf\uff0c\u6211\u4eec\u5bf9\u5b83 <code>++</code> \u548c <code>--</code> (\u5b9e\u9645\u4e0a\u662f <code>wait</code> \u548c <code>signal</code>) \u662f atomic \u7684\uff0c\u4e0d\u9700\u8981\u8003\u8651\u540c\u6b65\u95ee\u9898\u3002</p> <p>\u4f46\u662f\uff0c16 \u884c\u5904\u6211\u4eec\u5e0c\u671b\u8ba9 <code>eslot == BUFFER_SIZE</code> \u7684\u65f6\u5019\u5faa\u73af\u7b49\u5f85\uff0c\u4e0d\u8fc7\u4fe1\u53f7\u91cf\u672c\u8eab\u5e76\u6ca1\u6709\u63d0\u4f9b\u8fd9\u4e2a\u529f\u80fd\u3002\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684 semaphore <code>fslot</code>\u00a0 (full slot) \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a</p> <pre><code>semaphore lock = 1;\nsemaphore eslot = BUFFER_SIZE;\nsemaphore fslot = 0;\n\nproducer() {\nwhile (true) {\nwait(eslot);    // if buffer is full, i.e. eslot == 0, wait\n// else, eslot--\nwait(lock);\nadd_to_buffer(next_produced);\nsignal(lock);\nsignal(fslot);  // fslot++\n}\n}\n\nconsumer() {\nwhile (true) {\nwait(fslot);    // if buffer is empty, i.e. fslot == 0, wait\n// else, fslot--\nwait(lock);\nnext_consumed = take_from_buffer();\nsignal(lock);\nsignal(eslot);  // eslot++\n}\n}\n</code></pre> <p>\u4e8b\u5b9e\u4e0a\uff0c\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\u5206\u6790\u4e24\u5904\u9700\u8981 wait \u7684\u60c5\u51b5\uff08\u5373 producer \u5728 buffer \u6ee1\u65f6\u3001consumer \u5728 buffer \u7a7a\u65f6\uff09\u5c31\u53ef\u4ee5\u5f97\u5230\u4f7f\u7528\u4fe1\u53f7\u91cf\u7684\u63d0\u793a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e producer \u6765\u8bf4\uff0c\u300c\u7a7a\u683c\u5b50\u300d\u662f\u5b83\u9700\u8981\u7684\u8d44\u6e90\uff1b\u800c\u5bf9\u4e8e consumer \u6765\u8bf4\uff0c\u300c\u6709\u4e1c\u897f\u7684\u683c\u5b50\u300d\u662f\u5b83\u9700\u8981\u7684\u8d44\u6e90\u3002\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u6837\u7684\u63d0\u793a\u6765\u8bbe\u8ba1\u4fe1\u53f7\u91cf\u3002</p> <p>\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f <code>wait</code> \u4e4b\u95f4\u7684\u987a\u5e8f\u3002\u4f8b\u5982\u5982\u679c\u5c06 <code>wait(lock)</code> \u548c <code>wait(fslot)</code> \u7684\u987a\u5e8f\u8c03\u8f6c\u8fc7\u6765\uff0c\u5c31\u4f1a\u53d1\u751f\u548c\u524d\u9762\u63d0\u5230\u7684\u60c5\u51b5\u4e00\u6837\u7684\u6b7b\u9501\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/7_sync_examples/#712-readers-writers-problem","title":"7.1.2 Readers-Writers Problem","text":"<p>Readers-Writers Problem</p> <p>\u5bf9\u4e00\u4e2a\u6570\u636e\uff0creaders \u8bfb\uff0cwriters \u8bfb\u548c\u5199\u3002</p> <p>\u8bbe\u8ba1\u65b9\u6848\u4fdd\u8bc1\uff1a\u591a\u4e2a readers \u53ef\u4ee5\u540c\u65f6\u8bfb\u53d6\uff0c\u4f46\u662f writer \u8fdb\u884c\u8bfb\u5199\u65f6\u4e0d\u80fd\u6709\u5176\u4ed6 writers \u548c readers\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5e0c\u671b\u7684\u65b9\u6848\u5927\u6982\u5982\u4e0b\uff1a</p> <pre><code>writer() {\nwhile (true) {\n// if there is any reader or any other writer, wait\nread_and_write();\n}\n}\n\nreader() {\nwhile (true) {\n// if there is any writer, wait\nread();\n}\n}\n</code></pre> <p>\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\u4e0d\u540c\u7684\u60c5\u5f62\u4e0b\uff0creader \u548c writer \u5728 entry section \u4e2d\u671f\u671b\u7684\u505a\u6cd5\uff1a</p> <p>\u5bf9\u4e8e reader\uff1a</p> <ul> <li>\u6709 writer\uff1a\u7b49\u5f85</li> <li>\u6709\u5176\u4ed6 reader\uff1a\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u76f4\u63a5\u8fdb\u5165 CS</li> <li>\u90fd\u6ca1\u6709\uff1a\u7981\u6b62 writer\uff0c\u7136\u540e\u8fdb\u5165 CS</li> </ul> <p>\u8fd9\u6837\u7684\u505a\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u4f1a\u540c\u65f6\u6709 writer \u548c reader \u5728 critical section\u3002</p> <p>\u5bf9\u4e8e writer\uff1b</p> <ul> <li>\u6709\u5176\u4ed6 reader / writer\uff1a\u7b49\u5f85</li> <li>\u90fd\u6ca1\u6709\uff1a\u7981\u6b62 reader \u548c\u5176\u4ed6 writer\uff0c\u7136\u540e\u8fdb\u5165 CS</li> </ul> <p>\u5728 exit section \u7684\u64cd\u4f5c\u4e0e\u4e4b\u5bf9\u79f0\u3002</p> <p>\u8fd9\u4e24\u5904\u300c\u7981\u6b62\u300d\u53ef\u80fd\u5bf9\u5e94\u7740\u4e24\u5904\u4fe1\u53f7\u91cf\uff0c\u6211\u4eec\u5206\u522b\u7ed9\u5b83\u4eec\u8d77\u540d\u4e3a <code>R</code> \u548c <code>W</code>\uff0c\u521d\u503c\u5747\u4e3a 1\uff1b\u90a3\u4e48 reader \u7684 entry section \u5c31\u5f62\u5982\uff1a</p> <pre><code>wait for W but not take;    // if there is a writer, wait\nif (no other readers)       // if no other readers, take R\nwait(R);                // else, do nothing\n</code></pre> <p>writer \u7684 entry section \u5f62\u5982\uff1a</p> <pre><code>wait for R but not take;    // if there are some readers, wait\nwait(W);                    // if there is another writer, wait; else take W\n</code></pre> <p>\u8fd9\u91cc\u6709\u4e24\u4e2a\u95ee\u9898\u6ca1\u6709\u89e3\u51b3\uff0c\u7b2c\u4e00\u4e2a\u662f\u300cwait but not take\u300d\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5982\u4f55\u5224\u5b9a\u300cno other readers\u300d\u3002\u6211\u4eec\u5206\u522b\u8ba8\u8bba\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002</p> <p>\u9996\u5148\uff0cwait but not take \u80af\u5b9a\u8fd8\u662f\u8981\u4f7f\u7528 <code>wait()</code> \u6765\u89e3\u51b3\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u9664\u6b64\u4e4b\u5916\u7684\u7528\u6765\u7b49\u5f85\u7684\u4fe1\u53f7\u91cf\u64cd\u4f5c\u3002\u6211\u4eec\u5206\u522b\u8003\u8651\u4e24\u5904 wait but not take \u5982\u679c\u76f4\u63a5\u7528 <code>wait()</code> \u5b9e\u73b0\u4f1a\u5e26\u6765\u4ec0\u4e48\u95ee\u9898\u3002</p> <p>\u5bf9\u4e8e reader\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u6539\u4e3a <code>wait(W)</code>\uff0c\u4f1a\u51fa\u73b0\u7684\u95ee\u9898\u662f\uff1a\u8fd9\u6837\u53ea\u6709\u7b2c\u4e00\u4e2a reader \u80fd\u591f\u8fdb\u5165 CS \u4e86\uff0c\u540e\u7eed\u7684\u90fd\u4f1a\u88ab\u963b\u585e\u3002\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ea\u8981\u628a <code>wait(W)</code> \u4e5f\u653e\u5230 <code>if</code> \u91cc\u9762\u53bb\u5c31\u597d\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6709\u5176\u4ed6 reader \u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u5b9a\u4e0d\u5b58\u5728 writer\uff0c<code>W</code> \u4e5f\u4e00\u5b9a\u88ab\u67d0\u4e2a\uff08\u7b2c\u4e00\u4e2a\uff09reader \u6301\u6709\uff0c\u5c31\u4e0d\u9700\u8981\u518d wait \u4e86\u3002\u5373\uff1a</p> <pre><code>if (no other readers) {\nwait(W);\nwait(R);      }         </code></pre> <p>\u5bb9\u6613\u68c0\u67e5\uff0c\u8fd9\u6837\u7684\u8bbe\u8ba1\u7b26\u5408\u6211\u4eec\u4e4b\u524d\u5206\u7c7b\u8ba8\u8bba\u7684\u8981\u6c42\u3002</p> <p>\u5bf9\u4e8e writer\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6539\u4e3a <code>wait(R)</code>\uff0c\u56e0\u4e3a\u91ca\u653e <code>W</code> \u4e4b\u524d\u4e00\u5b9a\u4e0d\u4f1a\u6709 reader \u80fd\u591f\u8fdb\u5165 CS\uff0c\u800c\u91ca\u653e <code>W</code> \u65f6\u53ef\u4ee5\u4e00\u5e76\u91ca\u653e <code>R</code>\u3002\u5373\uff1a</p> <pre><code>wait(R);      wait(W);\n</code></pre> <p>\u8fd9\u91cc\u672c\u6765\u5e94\u8be5\u68c0\u67e5\u4e00\u4e0b\u6b7b\u9501\uff0c\u56e0\u4e3a\u4ece\u7b2c 8 \u8282\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u6709\u5faa\u73af\u7b49\u5f85\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u6709\u6b7b\u9501\u7684\u98ce\u9669\uff1b\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e <code>R</code> \u548c <code>W</code> \u603b\u662f\u4f1a\u540c\u65f6\u88ab\u83b7\u53d6\uff08\u5bf9\u79f0\u5730\uff0c\u4e5f\u540c\u65f6\u88ab\u91ca\u653e\uff09\uff0c\u56e0\u6b64\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u5408\u5e76\u4e3a\u4e00\u4e2a\u4fe1\u53f7\u91cf\uff0c\u4e0d\u59a8\u53eb\u505a <code>write_lock</code>\u3002\u5176\u8bbe\u8ba1\u4e3a\uff1a</p> <pre><code>semaphore write_lock = 1;\n\nwriter() {\nwhile (true) {\nwait(write_lock);\nread_and_write();\nsignal(write_lock);\n}\n}\n\nreader() {\nwhile (true) {\nif (no other readers)\nwait(write_lock);\nread();\nif (no other readers)\nsignal(write_lock);\n}\n}\n</code></pre> <p>\u300cno other readers\u300d\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u597d\u89e3\u51b3\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u6574\u578b <code>reader_count</code> \u7528\u6765\u4fdd\u5b58\u6709\u591a\u5c11\u4e2a readers\uff0c\u5f53\u5176\u503c\u53d8\u4e3a 0 \u65f6\uff0c\u4ee3\u8868\u6ca1\u6709\u5176\u4ed6 readers \u5728\u8bfb\u4e86\u3002\u6211\u4eec\u540c\u65f6\u589e\u52a0\u4fdd\u8bc1\u5176\u540c\u6b65\u7684\u4fe1\u53f7\u91cf\u3002\u5373\uff1a</p> <pre><code>semaphore write_lock = 1;\nint reader_count = 0;\nsemaphore reader_count_lock = 1;\n\nwriter() {\nwhile (true) {\nwait(write_lock);\nread_and_write();\nsignal(write_lock);\n}\n}\n\nreader() {\nwhile (true) {\nwait(reader_count_lock);\nreader_count++;\nif (reader_count == 1)     // first reader take write_lock\nwait(write_lock);\nsignal(reader_count_lock);\n\nread();\n\nwait(reader_count_lock);\nreader_count--;\nif (reader_count == 0)      // release write_lock when ...\nsignal(write_lock);     // ... no other readers reading\nsignal(reader_count_lock);\n}\n}\n</code></pre> <p>\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u5b9e\u73b0\u7684\u7ed3\u679c\u662f\uff1a\u5f53\u5b58\u5728\u8bfb\u8fdb\u7a0b\u65f6\uff0c\u5199\u8fdb\u7a0b\u5c06\u88ab\u5ef6\u8fdf\u3002\u8fd9\u53ef\u80fd\u5bfc\u81f4\u5199\u8fdb\u7a0b\u53d1\u751f starvation\u3002</p> <p>\u5982\u679c\u5e0c\u671b\u5199\u8fdb\u7a0b\u4f18\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u89c4\u5b9a\uff0c\u5982\u679c\u5199\u8fdb\u7a0b ready\uff0c\u90a3\u4e48\u5176\u4ed6\u8bfb\u8fdb\u7a0b\u5e94\u5f53\u7b49\u5f85\uff0c\u76f4\u5230\u5199\u8fdb\u7a0b\u7ed3\u675f\uff1b\u5373\u4f7f\u5f97\u5199\u8fdb\u7a0b\u5c3d\u53ef\u80fd\u65e9\u5730\u5f00\u59cb\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u65b0\u589e\u4e00\u4e2a\u4fe1\u53f7\u91cf\u5b9e\u73b0\uff1a</p> <pre><code>semaphore write_lock = 1;\nint reader_count = 0;\nsemaphore reader_count_lock = 1;\nsemaphore writer_first = 1;\n\nwriter() {\nwhile (true) {\nwait(writer_first);\nwait(write_lock);\nread_and_write();\nsignal(write_lock);\nsignal(writer_first);\n}\n}\n\nreader() {\nwhile (true) {\nwait(writer_first);\nwait(reader_count_lock);\nreader_count++;\nif (reader_count == 1)\nwait(write_lock);\nsignal(reader_count_lock);\nsignal(writer_first);\nread();\n\nwait(reader_count_lock);\nreader_count--;\nif (reader_count == 0)\nsignal(write_lock);\nsignal(reader_count_lock);\n}\n}\n</code></pre>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/7_sync_examples/#713-dining-philosophers-problem","title":"7.1.3 Dining-Philosophers Problem","text":"<p>Dining-Philosophers Problem</p> <p>5 \u4e2a\u54f2\u5b66\u5bb6\u4e00\u8d77\u5403\u996d\uff01\u6bcf\u4e24\u4e2a\u54f2\u5b66\u5bb6\u4e4b\u95f4\u6709\u4e00\u6839\u7b77\u5b50\uff0c\u6bcf\u4e2a\u4eba\u4e00\u6b21\u53ef\u4ee5\u62ff\u8d77\u6765\u4e00\u6839\u7b77\u5b50\uff0c\u62ff\u5230\u4e24\u6839\u7b77\u5b50\u7684\u5c31\u53ef\u4ee5\u5403\u4e00\u6bb5\u65f6\u95f4\u3002\u5403\u5b8c\u601d\u8003\u4e00\u6bb5\u65f6\u95f4\u3002</p> <p></p> <p>\u4e00\u4e2a\u6734\u7d20\u7684\u89e3\u6cd5\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>vector&lt;semaphore&gt; chopstick(5, 1);  // initialize semaphores to all 1\n\nphilosopher(int index) {\nwhile (true) {\nwait(chopstick[i]);\nwait(chopstick[(i + 1) % 5]);\neat();\nsignal(chopstick[i]);\nsignal(chopstick[(i + 1) % 5]);\nthink();\n}\n}\n</code></pre> <p>\u95ee\u9898\u662f\uff0c\u53ef\u80fd\u67d0\u65f6\u523b\u6bcf\u4e2a\u4eba\u540c\u65f6\u62ff\u8d77\u5de6\u8fb9\u7684\u7b77\u5b50\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u6b7b\u9501\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\u662f\uff0c\u53ea\u5141\u8bb8\u540c\u65f6\u62ff\u8d77\u4e24\u6839\u7b77\u5b50\uff1b\u8fd9\u79cd\u65b9\u6848\u7684\u5b9e\u73b0\u662f\uff0c\u8f6e\u6d41\u8be2\u95ee\u6bcf\u4e2a\u4eba\u662f\u5426\u80fd\u591f\u62ff\u8d77\u4e24\u6839\u7b77\u5b50\uff0c\u5982\u679c\u80fd\u5219\u62ff\u8d77\uff0c\u5982\u679c\u4e0d\u80fd\u5219\u9700\u8981\u7b49\u5f85\u90a3\u4e9b\u7b77\u5b50\u653e\u4e0b\uff1a</p> <pre><code>vector&lt;semaphore&gt; chopstick(5, 1);  // initialize semaphores to all 1\nsemaphore lock = 1;\nphilosopher(int index) {\nwhile (true) {\nwait(lock);\nwait(chopstick[i]);\nwait(chopstick[(i + 1) % 5]);\nsignal(lock);\neat();\n\nsignal(chopstick[i]);\nsignal(chopstick[(i + 1) % 5]);\nthink();\n}\n}\n</code></pre> <p>\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u5947\u6570\u53f7\u4eba\u5148\u62ff\u5de6\u8fb9\u7b77\u5b50\uff0c\u5076\u6570\u53f7\u4eba\u5148\u62ff\u53f3\u8fb9\u7b77\u5b50\uff0c\u8fd9\u6837\u4e5f\u80fd\u907f\u514d\u6b7b\u9501\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/7_sync_examples/#72-linux-sync","title":"7.2 Linux Sync","text":"<p>2.6 \u4ee5\u524d\u7684\u7248\u672c\u7684 kernel \u4e2d\u901a\u8fc7\u7981\u7528\u4e2d\u65ad\u6765\u5b9e\u73b0\u4e00\u4e9b\u77ed\u7684 critical section\uff1b2.6 \u53ca\u4e4b\u540e\u7684\u7248\u672c\u7684 kernel \u662f\u62a2\u5360\u5f0f\u7684\u3002</p> <p>Linux \u63d0\u4f9b\uff1a</p> <ul> <li>Atomic integers</li> <li>Spinlocks</li> <li>Semaphores</li> <li>Reader-writer locks</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/7_sync_examples/#73-posix-sync","title":"7.3 POSIX Sync","text":""},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/","title":"8 Deadlocks","text":"<p> \u7ea6 3371 \u4e2a\u5b57  14 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#81-\u6b7b\u9501\u7684\u5b9a\u4e49\u548c\u4f8b\u5b50","title":"8.1 \u6b7b\u9501\u7684\u5b9a\u4e49\u548c\u4f8b\u5b50","text":"<p>\u6b7b\u9501 (Deadlock) \u662f\u6307\uff0c\u591a\u4e2a\u8fdb\u7a0b\u56e0\u7ade\u4e89\u8d44\u6e90\u5bfc\u81f4\u7684\u4e00\u79cd\u50f5\u5c40\uff0c\u5373\u82e5\u5e72\u8fdb\u7a0b\u5404\u81ea\u6301\u6709\u4e00\u4e9b\u8d44\u6e90\uff0c\u540c\u65f6\u7b49\u5f85\u83b7\u53d6\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u6301\u6709\u7684\u8d44\u6e90\uff0c\u5f62\u6210\u7684\u4e92\u76f8\u7b49\u5f85\u7684\u5c40\u9762\u3002</p> <p>Example</p> <p>\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c\u4e00\u4e2a\u7cfb\u7edf\u91cc\u6709\u4e24\u4e2a\u8fdb\u7a0b \\(P_1\\) \u548c \\(P_2\\)\uff0c\u5206\u522b\u5b8c\u6210\u4ece\u4e00\u4e2a\u78c1\u76d8\u9a71\u52a8\u5668\u62f7\u8d1d\u5185\u5bb9\u5230\u53e6\u4e00\u4e2a\u78c1\u76d8\u9a71\u52a8\u5668\u7684\u64cd\u4f5c\uff0c\u5373\u5404\u81ea\u9700\u8981\u4e24\u4e2a\u78c1\u76d8\u9a71\u52a8\u5668\u3002\u7cfb\u7edf\u91cc\u4e24\u4e2a\u78c1\u76d8\u9a71\u52a8\u5668 \\(A\\) \u548c \\(B\\)\u3002\u5f53\u524d\uff0c\\(P_1\\) \u6301\u6709 \\(A\\) \u5e76\u5e0c\u671b\u83b7\u53d6 \\(B\\)\uff0c\u540c\u65f6 \\(P_2\\) \u6301\u6709 \\(B\\) \u5e76\u5e0c\u671b\u83b7\u53d6 \\(A\\)\uff0c\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u76f8\u4e92\u7b49\u5f85\uff0c\u9677\u5165\u6b7b\u9501\u3002</p> <p>\u5373\uff1a</p> <pre><code>semaphore first_mutex = 1;\nsemaphore second_mutex = 1;\n\nthread_one() {\nwait(first_mutex);\nwait(second_mutex);\n// ......\n}\n\nthread_two() {\nwait(second_mutex);\nwait(first_mutex);\n// ......\n}\n</code></pre> <p>Bridge Crossing Example</p> <p></p> <p>\u4e0a\u56fe\u6240\u793a\u7684\u60c5\u5f62\u4e5f\u5c55\u793a\u4e86\u4e00\u79cd\u6b7b\u9501\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u6865\u4e0a\u7684\u4efb\u4e00\u8f86\u8f66\u613f\u610f\u5012\u8f66\u56de\u53bb\uff0c\u5c31\u80fd\u591f\u89e3\u51b3\u6b7b\u9501\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5206\u914d\u4f18\u5148\u7ea7\u7684\u65b9\u5f0f\u8981\u6c42\u54ea\u8f86\u8f66\u5012\u8f66\u3002</p> <p>\u4f18\u5148\u7ea7\u53ef\u80fd\u5bfc\u81f4 starvation\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#82-\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u56fe","title":"8.2 \u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u56fe","text":"<p>\u6211\u4eec\u5bf9\u7cfb\u7edf\u8fdb\u884c\u5efa\u6a21\u3002\u5047\u8bbe\u6709 \\(m\\) \u79cd\u4e0d\u540c\u7c7b\u578b\u7684 \u8d44\u6e90 (resources) \\(R_1, \\dots, R_m\\)\uff0c\u6bcf\u79cd\u8d44\u6e90\u7c7b\u578b \\(R_i\\) \u6709 \\(W_i\\) \u4e2a \u5b9e\u4f8b (instance)\u3002\u5404\u4e2a\u6d3b\u52a8\u8fdb\u7a0b \\(P_1, \\dots, P_n\\) \u4f1a\u5229\u7528\u8fd9\u4e9b\u8d44\u6e90\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u8d44\u6e90\u7684\u5229\u7528\u7531 request, use, release \u4e09\u6b65\u7ec4\u6210\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u56fe (system resource-allocation graph, \u7b80\u79f0\u4e3a \u8d44\u6e90\u5206\u914d\u56fe \u6216 \u5206\u914d\u56fe) \u523b\u753b\u7cfb\u7edf\u8d44\u6e90\u7684\u60c5\u51b5\u3002\u8d44\u6e90\u5206\u914d\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u56fe\u3002\u70b9\u96c6 \\(V = P \\cup R\\)\uff0c\u5176\u4e2d \\(P = \\{P_1, \\dots, P_n\\}\\) \u662f\u6240\u6709\u6d3b\u52a8\u8fdb\u7a0b\u7684\u96c6\u5408\uff0c\\(R = \\{R_1, \\dots, R_m\\}\\) \u662f\u6240\u6709\u8d44\u6e90\u7c7b\u578b\u7684\u96c6\u5408\u3002\u8fb9\u96c6 \\(E\\) \u4e2d\u5305\u542b \u7533\u8bf7\u8fb9 (request edge)\uff0c\u5373\u5f62\u5982 \\(P_i\\to R_j\\) \u7684\u8fb9\uff0c\u8868\u793a\u8fdb\u7a0b \\(P_i\\) \u5df2\u7ecf\u7533\u8bf7\u4e86\u8d44\u6e90\u7c7b\u578b \\(R_j\\) \u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5e76\u6b63\u5728\u7b49\u5f85\u8fd9\u4e2a\u8d44\u6e90\uff1b\u4ee5\u53ca \u5206\u914d\u8fb9 (assignment edge)\uff0c\u5373\u5f62\u5982 \\(R_j\\to P_i\\) \u7684\u8fb9\uff0c\u8868\u793a\u8d44\u6e90\u7c7b\u578b \\(R_j\\) \u7684\u4e00\u4e2a\u5b9e\u4f8b\u5df2\u7ecf\u5206\u914d\u7ed9\u4e86\u8fdb\u7a0b \\(P_i\\)\u3002</p> <p>\u5728\u56fe\u5f62\u4e0a\uff0c\u6211\u4eec\u7528\u5706\u8868\u793a\u8fdb\u7a0b\uff0c\u7528\u77e9\u5f62\u8868\u793a\u8d44\u6e90\u7c7b\u578b\u3002\u7531\u4e8e\u8d44\u6e90\u7c7b\u578b\u53ef\u80fd\u6709\u591a\u4e2a\u5b9e\u4f8b\uff0c\u6211\u4eec\u5728\u77e9\u5f62\u5185\u7528\u6570\u91cf\u7b49\u540c\u4e8e\u5b9e\u4f8b\u6570\u91cf\u7684\u5706\u70b9\u8868\u793a\u5404\u4e2a\u5b9e\u4f8b\u3002\u6bcf\u6761\u7533\u8bf7\u8fb9\u7531\u4e00\u4e2a\u5706\u6307\u5411\u4e00\u4e2a\u77e9\u5f62\uff0c\u800c\u6bcf\u6761\u5206\u914d\u8fb9\u7531\u77e9\u5f62\u4e2d\u7684\u4e00\u4e2a\u5706\u70b9\u6307\u5411\u4e00\u4e2a\u77e9\u5f62\u3002</p> <p>Example</p> <p></p> <p>Example</p> <p>\u672c\u8282\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u8d44\u6e90\u5206\u914d\u56fe\u523b\u753b\uff1a</p> <p></p> <p>\u5f53\u8fdb\u7a0b\u7533\u8bf7\u4e00\u4e2a\u8d44\u6e90\u65f6\uff0c\u5e94\u5f53\u6dfb\u52a0\u4e00\u6761\u7533\u8bf7\u8fb9\uff1b\u5f53\u8be5\u7533\u8bf7\u53ef\u4ee5\u5f97\u5230\u6ee1\u8db3\u65f6\uff0c\u8fd9\u6761\u7533\u8bf7\u8fb9\u5e94\u5f53 \u7acb\u5373 \u8f6c\u6362\u4e3a\u5206\u914d\u8fb9\uff1b\u5f53\u8fdb\u7a0b\u4e0d\u518d\u9700\u8981\u67d0\u4e2a\u8d44\u6e90\u65f6\uff0c\u5c31\u5220\u9664\u5bf9\u5e94\u5206\u914d\u8fb9\u3002</p> <p>\u6839\u636e\u8d44\u6e90\u5206\u914d\u56fe\u7684\u5b9a\u4e49\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5982\u679c\u8d44\u6e90\u5206\u914d\u56fe\u5f53\u524d\u6ca1\u6709\u73af\uff0c\u90a3\u4e48\u7cfb\u7edf\u5f53\u524d \u4e00\u5b9a \u6ca1\u6709\u6b7b\u9501\uff1b\u5982\u679c\u5206\u914d\u56fe\u6709\u73af\uff0c\u90a3\u4e48\u7cfb\u7edf\u5f53\u524d \u53ef\u80fd \u5b58\u5728\u6b7b\u9501\u3002\u4f46\u662f\uff0c\u5982\u679c\u5206\u914d\u56fe\u6709\u73af\uff0c\u4e14\u6bcf\u4e2a\u8d44\u6e90\u7c7b\u578b\u53ea\u6709 1 \u4e2a\u5b9e\u4f8b\uff0c\u90a3\u4e48 \u5fc5\u5b9a \u5b58\u5728\u6b7b\u9501\u3002</p> \u5206\u914d\u56fe\u6709\u73af\u4e0d\u4e00\u5b9a\u5b58\u5728\u6b7b\u9501 <p></p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#83-\u6b7b\u9501\u7684\u5fc5\u8981\u6761\u4ef6","title":"8.3 \u6b7b\u9501\u7684\u5fc5\u8981\u6761\u4ef6","text":"<p>\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u4e0b\u9762\u56db\u4e2a\u6761\u4ef6 \u540c\u65f6 \u6210\u7acb\u65f6\uff0c\u7cfb\u7edf\u624d\u4f1a\u51fa\u73b0\u6b7b\u9501\uff1a</p> <ol> <li>Mutual exclusion\u00a0: \u81f3\u5c11\u4e00\u4e2a\u8d44\u6e90\u5904\u4e8e\u975e\u5171\u4eab\u6a21\u5f0f\uff1b</li> <li>Hold and wait\u00a0: \u4e00\u4e2a\u8fdb\u7a0b\u5e94 \u5360\u6709\u00a0\u81f3\u5c11\u4e00\u4e2a\u8d44\u6e90\uff0c\u5e76 \u7b49\u5f85\u00a0\u53e6\u4e00\u4e2a\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u5360\u6709\u7684\u8d44\u6e90\uff1b</li> <li>No preemption\u00a0: \u8d44\u6e90\u4e0d\u80fd\u88ab\u62a2\u5360\uff0c\u53ea\u80fd\u5728\u8fdb\u7a0b\u7ed3\u675f\u540e\u4e3b\u52a8\u91ca\u653e\uff1b</li> <li>Circular wait\u00a0: \u6709\u4e00\u7ec4\u7b49\u5f85\u8fdb\u7a0b {T0, T1, ..., Tn}\uff0cT0 is waiting for a resource held by T1, T1 is waiting for a resource held by T2, ..., Tn\u22121 is waiting for a resource held by Tn, and Tn is waiting for a resource held by T0.</li> </ol> <p>\u8fd9\u56db\u4e2a\u6761\u4ef6\u5e76\u4e0d\u5b8c\u5168\u72ec\u7acb\u3002</p> <p>Example</p> <p>\u4e0b\u56fe\u4e2d\u63cf\u8ff0\u4e86\u4e00\u4e2a\u6b7b\u9501\u72b6\u6001\uff1a</p> <p></p> <p>\u6211\u4eec\u9a8c\u8bc1\u5b83\u7b26\u5408\u4e0a\u8ff0\u56db\u4e2a\u6761\u4ef6\uff1a</p> <ul> <li>mutual exclusive\uff1a\u6bcf\u4e2a\u8def\u53e3\uff08\u8d44\u6e90\uff09 1 ~ 4 \u540c\u65f6\u53ea\u80fd\u6709\u4e00\u8f86\u8f66\u7b49\u5f85\u6216\u901a\u884c</li> <li>hold and wait\uff1a\u4f4d\u4e8e 1, 2, 3, 4 \u8def\u53e3\u7684\u8f66\u5206\u522b\u6301\u6709\u5f53\u524d\u8def\u53e3\uff0c\u5e76\u4e14\u7b49\u5f85 2, 3, 4, 1\u8def\u53e3\u7684\u8f66\u7ecf\u8fc7</li> <li>no preemption\uff1a\u663e\u7136\uff0c\u4efb\u4f55\u4e00\u4e2a\u8def\u53e3\u8fb9\u7b49\u5f85\u7684\u8f66\u4e0d\u80fd\u5148\u4e8e\u5f53\u524d\u5728\u8def\u53e3\u7b49\u5f85\u7684\u8f66\u7ecf\u8fc7\u8def\u53e3</li> <li>circular wait\uff1a\u4f4d\u4e8e 1, 2, 3, 4 \u8def\u53e3\u7684\u8f66\u5206\u522b\u7b49\u5f85 2, 3, 4, 1\u8def\u53e3\u7684\u8f66\u7ecf\u8fc7</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#84-\u6b7b\u9501\u7684\u5904\u7406\u7b56\u7565","title":"8.4 \u6b7b\u9501\u7684\u5904\u7406\u7b56\u7565","text":"<p>\u5982\u4f55\u5904\u7406\u6b7b\u9501\u5462\uff1f\u6709\u56db\u79cd\u65b9\u6cd5\uff1a</p> <ul> <li>\u4fdd\u8bc1\u7cfb\u7edf\u4e0d\u4f1a\u8fdb\u5165\u6b7b\u9501\u72b6\u6001<ul> <li>\u6b7b\u9501\u9884\u9632 (deadlock prevention)</li> <li>\u6b7b\u9501\u907f\u514d (deadlock avoidance)</li> </ul> </li> <li>\u5728\u7cfb\u7edf\u8fdb\u5165\u6b7b\u9501\u72b6\u6001\u540e\u6062\u590d<ul> <li>\u6b7b\u9501\u68c0\u6d4b\u548c\u6062\u590d (deadlock detection and recovery)\uff1a\u4f8b\u5982\u6570\u636e\u5e93</li> </ul> </li> <li>\u5047\u88c5\u7cfb\u7edf\u4e0d\u4f1a\u53d1\u751f\u6b7b\u9501\uff0c\u771f\u7684\u53d1\u751f\u4e86\u5c31\u5bc4</li> </ul> <p>\u4e8b\u5b9e\u4e0a\uff0c\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\uff08\u5305\u62ec Linux \u548c Windows\uff09\u9009\u62e9\u7684\u662f\u6700\u540e\u4e00\u79cd\u65b9\u6848\u3002\u56e0\u6b64\uff0c\u7a0b\u5e8f\u5458\u9700\u8981\u81ea\u5df1\u7f16\u5199\u7a0b\u5e8f\u6765\u5904\u7406\u6b7b\u9501\u3002</p> <p>\u4f46\u662f\u524d\u9762\u4e09\u79cd\u8fd8\u662f\u8981\u5b66\ud83d\udc49\ud83d\udc48</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#841-\u6b7b\u9501\u9884\u9632","title":"8.4.1 \u6b7b\u9501\u9884\u9632","text":"<p>\u6b7b\u9501\u9884\u9632\u7684\u6838\u5fc3\u601d\u8def\u662f\uff0c\u786e\u4fdd 8.3 \u8282\u4e2d\u81f3\u5c11\u4e00\u4e2a\u5fc5\u8981\u6761\u4ef6\u6c38\u4e0d\u6210\u7acb\uff0c\u6765\u4fdd\u8bc1\u7cfb\u7edf\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u9501\u3002\u6211\u4eec\u5206\u522b\u8ba8\u8bba\u56db\u4e2a\u6761\u4ef6\u5982\u4f55\u7834\u574f\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8411-mutual-exclusion","title":"8.4.1.1 Mutual Exclusion","text":"<p>\u5982\u679c\u4fdd\u8bc1\u7cfb\u7edf\u8d44\u6e90\u90fd\u80fd\u5171\u4eab\uff0c\u5219\u8be5\u6761\u4ef6\u7528\u4e0d\u6210\u7acb\u3002</p> <p>\u4f46\u662f\u8fd9\u53ea\u662f\u4e2a\u7f8e\u597d\u7684\u613f\u671b\uff0c\u56e0\u4e3a\u6709\u5f88\u591a\u8d44\u6e90\u5929\u751f\u5c31\u4e0d\u80fd\u5171\u4eab\uff0c\u6bd4\u5982\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8412-hold-and-wait","title":"8.4.1.2 Hold and Wait","text":"<p>\u4fdd\u8bc1\u6bcf\u4e2a\u8fdb\u7a0b\u5728\u7533\u8bf7\u8d44\u6e90\u65f6\u4e0d\u80fd\u5360\u6709\u5176\u4ed6\u8d44\u6e90\u3002</p> <p>\u5b9e\u73b0\u65b9\u5f0f\u4e4b\u4e00\u662f\uff0c\u5728\u5f00\u59cb\u6267\u884c\u524d\u7533\u8bf7\u5e76\u83b7\u5f97\u6240\u6709\u8d44\u6e90\u3002\u6216\u8005\uff0c\u53ea\u5141\u8bb8\u8fdb\u7a0b\u5728\u6ca1\u6709\u8d44\u6e90\u65f6\u624d\u80fd\u7533\u8bf7\u8d44\u6e90\u3002</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u7684\u95ee\u9898\u662f\uff0c\u8d44\u6e90\u5229\u7528\u7387\u8f83\u4f4e\uff0c\u800c\u4e14\u9700\u8981\u8d44\u6e90\u8f83\u591a\u7684\u8fdb\u7a0b\u53ef\u80fd\u53d1\u751f starvation\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8413-no-preemption","title":"8.4.1.3 No Preemption","text":"<p>\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u8bf7\u6c42\u4e00\u4e2a\u8d44\u6e90\u4f46\u662f\u6ca1\u6709\u7acb\u523b\u5f97\u5230\u6ee1\u8db3\u65f6\uff0c\u5b83\u5fc5\u987b\u91ca\u653e\u5df2\u7ecf\u6301\u6709\u7684\u6240\u6709\u8d44\u6e90\uff1b\u76f4\u5230\u5b83\u9700\u6c42\u7684\u6240\u6709\u8d44\u6e90\uff08\u5305\u62ec\u521a\u624d\u91ca\u653e\u7684\u90a3\u4e9b\u8d44\u6e90\uff09\u90fd\u53ef\u7528\u65f6\u624d\u80fd\u4e00\u5e76\u83b7\u53d6\u5b83\u4eec\u5e76\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u4f46\u662f\u4fe1\u53f7\u91cf\u4e4b\u7c7b\u7684\u8d44\u6e90\u4e5f\u4e0d\u80fd\u8fd9\u6837\u7528\uff1b\u540c\u65f6\u4e5f\u4f1a\u964d\u4f4e\u8d44\u6e90\u5229\u7528\u7387\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8414-circular-wait","title":"8.4.1.4 Circular Wait","text":"<p>\u5bf9\u6240\u6709\u8d44\u6e90\u7c7b\u578b\u8fdb\u884c\u6392\u5e8f\uff0c\u8981\u6c42\u6bcf\u4e2a\u8fdb\u7a0b\u6309\u7167\u9012\u589e\u987a\u5e8f\u7533\u8bf7\u8d44\u6e90\u3002</p> <p>\u7a0b\u5e8f\u5458\u9700\u8981\u4fdd\u8bc1\u6309\u7167\u8fd9\u4e2a\u987a\u5e8f\u7533\u8bf7\u8d44\u6e90\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u7a0b\u5e8f\u5458\u4e0d\u542c\u8bdd\uff0c\u8fd8\u662f\u4f1a\u53d1\u751f\u6b7b\u9501\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u53ef\u80fd\u5f71\u54cd\u8d44\u6e90\u5229\u7528\u7387\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#842-\u6b7b\u9501\u907f\u514d","title":"8.4.2 \u6b7b\u9501\u907f\u514d","text":"<p>\u907f\u514d\u6b7b\u9501\u9700\u8981\u4e00\u4e9b\u989d\u5916\u4fe1\u606f\uff0c\u4f8b\u5982\u8fdb\u7a0b\u672a\u6765\u9700\u8981\u4f7f\u7528\u54ea\u4e9b\u8d44\u6e90\u3001\u8d44\u6e90\u7684\u4f7f\u7528\u987a\u5e8f\u7b49\u3002\u5728\u6bcf\u6b21\u8bf7\u6c42\u5230\u6765\u65f6\uff0c\u5373\u4f7f\u5bf9\u5e94\u8d44\u6e90\u53ef\u7528\uff0c\u7cfb\u7edf\u4e5f\u5e94\u8be5\u7ed3\u5408\u73b0\u6709\u53ef\u7528\u8d44\u6e90\u3001\u73b0\u6709\u5df2\u5206\u914d\u8d44\u6e90\u4ee5\u53ca\u5404\u4e2a\u8fdb\u7a0b\u672a\u6765\u7533\u8bf7\u548c\u91ca\u653e\u7684\u8d44\u6e90\uff0c\u8003\u8651\u662f\u5426\u8ba9\u8fd9\u4e2a\u8bf7\u6c42\u7b49\u5f85\u4ece\u800c\u907f\u514d\u672a\u6765\u53ef\u80fd\u7684\u6b7b\u9501\u3002</p> <p>\u4e0d\u540c\u6a21\u578b\u53ef\u80fd\u5bf9\u4e0a\u8ff0\u989d\u5916\u4fe1\u606f\u6709\u4e0d\u540c\u7684\u9700\u6c42\u3002\u6700\u7b80\u5355\u4e14\u6700\u6709\u7528\u7684\u6a21\u578b\u7ef4\u62a4\u8fd9\u6837\u7684 \u8d44\u6e90\u5206\u914d\u72b6\u6001 (resource allocation state):</p> <ul> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u58f0\u660e\u53ef\u80fd\u5bf9\u6bcf\u79cd\u8d44\u6e90\u7c7b\u578b\u7684 \u6700\u5927\u9700\u6c42 (maximum demands)</li> <li>\u5f53\u524d\u7cfb\u7edf\u7684 available \u548c allocated \u7684\u8d44\u6e90\u6570\u76ee\u3002</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8421-\u8d44\u6e90\u5206\u914d\u56fe\u7b97\u6cd5","title":"8.4.2.1 \u8d44\u6e90\u5206\u914d\u56fe\u7b97\u6cd5","text":"<p>\u8fd9\u79cd\u7b97\u6cd5\u9002\u7528\u4e8e\u6bcf\u79cd\u8d44\u6e90\u7c7b\u578b\u53ea\u6709 1 \u4e2a\u5b9e\u4f8b\u7684\u60c5\u51b5\u3002</p> <p>\u6211\u4eec\u5728\u8d44\u6e90\u5206\u914d\u56fe\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u79cd\u8fb9\uff0c\u53eb claim edge\uff0c\u8868\u793a\u67d0\u4e2a\u8fdb\u7a0b\u672a\u6765 \u53ef\u80fd \u4f1a\u9700\u6c42\u67d0\u79cd\u8d44\u6e90\uff0c\u7528\u865a\u7ebf\u8868\u793a\u3002</p> <p></p> <p></p> <p>\u5f53\u8fd9\u4e2a\u9700\u6c42\u771f\u7684\u51fa\u73b0\u7684\u65f6\u5019\uff0cclaim edge \u8f6c\u4e3a request edge\uff1b\u5f53\u9700\u6c42\u88ab\u6ee1\u8db3\u7684\u65f6\u5019\uff0crequest edge \u8f6c\u4e3a assignment edge\uff1b\u5f53\u8be5\u8fdb\u7a0b\u91ca\u653e\u8be5\u8d44\u6e90\u65f6\uff0cassignment edge \u8f6c\u4e3a claim edge\u3002</p> <p>\u5f53\u4e00\u4e2a\u9700\u6c42\u6765\u4e86\u7684\u65f6\u5019\uff0c\u5982\u679c request edge \u8f6c\u4e3a assignment edge \u4e0d\u4f1a\u5bfc\u81f4\u56fe\u4e2d\u6709\u4e00\u4e2a cycle\uff0c\u5219\u8be5\u8981\u6c42\u53ef\u4ee5\u88ab\u6ee1\u8db3\uff1b\u5426\u5219\u8be5\u8bf7\u6c42\u5e94\u5f53\u7b49\u5f85\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8422-\u5b89\u5168\u72b6\u6001--safe-state","title":"8.4.2.2 \u5b89\u5168\u72b6\u6001 | Safe State","text":"<p>\u5982\u679c\u7cfb\u7edf\u80fd\u591f\u6309\u7167\u4e00\u5b9a\u987a\u5e8f\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u914d\u8d44\u6e90\uff0c\u540c\u65f6\u907f\u514d\u6b7b\u9501\uff0c\u90a3\u4e48\u7cfb\u7edf\u5c31\u5904\u5728 \u5b89\u5168\u72b6\u6001 (safe state)\u3002</p> <p>\u5177\u4f53\u800c\u8a00\uff0c\u5982\u679c\u67d0\u4e2a\u8d44\u6e90\u5f53\u524d\u6709 \\(A\\) \u4e2a\u7a7a\u95f2\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6d3b\u52a8\u8fdb\u7a0b \\(P_i\\)\uff0c\u5b83\u4eec\u5404\u81ea\u6301\u6709 \\(C_i\\) \u4e2a\u8be5\u8d44\u6e90\uff0c\u5e76\u4ecd\u7136\u9700\u8981 \\(D_i\\) \u4e2a\u8be5\u8d44\u6e90\u3002\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5e8f\u5217 \\(&lt;P_1, \\dots, P_n&gt;\\) \u4f7f\u5f97\u5bf9\u4e8e\u4efb\u4e00 \\(P_i\\)\uff0c\u90fd\u6709 \\(A + \\sum_{j = 1}^{j &lt; i} C_i \\ge D_i\\)\uff0c\u5219\u7cfb\u7edf\u5904\u4e8e\u5b89\u5168\u72b6\u6001\u3002</p> <p>\u5b89\u5168\u72b6\u6001\u4fdd\u8bc1\u4e0d\u53d1\u751f\u6b7b\u9501\u3002</p> Proof <p>\u7528\u5f52\u7eb3\u6cd5\u3002\u5982\u679c \\(P_i\\) \u7684\u9700\u6c42\u4e0d\u80fd\u7acb\u523b\u6ee1\u8db3\uff0c\u5b83\u53ea\u9700\u8981\u7b49\u5230 \\(\\{P_j\\ |\\ j &lt; i\\}\\) \u5168\u90e8\u5b8c\u6210\uff0c\\(P_i\\) \u5c31\u80fd\u83b7\u53d6\u6240\u9700\u8d44\u6e90\u3002</p> <p></p> <p>Example</p> <p></p> <p>\\(&lt;P1, P0, P2&gt;\\) \u662f\u4e00\u4e2a safe sequence\u3002\u56e0\u6b64\u7cfb\u7edf\u5904\u5728\u5b89\u5168\u72b6\u6001\u3002</p> <p>\u6839\u636e\u8fd9\u4e00\u6982\u5ff5\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\u6b7b\u9501\u907f\u514d\u7684\u7b97\u6cd5\uff1a\u8d77\u521d\uff0c\u7cfb\u7edf\u5904\u4e8e\u5b89\u5168\u72b6\u6001\u3002\u5f53\u6709\u8fdb\u7a0b\u7533\u8bf7\u4e00\u4e2a\u53ef\u7528\u8d44\u6e90\u65f6\uff0c\u7cfb\u7edf\u5e94\u786e\u5b9a\uff0c\u5982\u679c\u7acb\u523b\u8fdb\u884c\u8fd9\u4e00\u5206\u914d\u540e\u7cfb\u7edf\u4ecd\u5904\u4e8e\u5b89\u5168\u72b6\u6001\u5219\u53ef\u4ee5\u5206\u914d\uff0c\u5426\u5219\u5e94\u5f53\u8ba9\u8fdb\u7a0b\u7b49\u5f85\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8423-\u94f6\u884c\u5bb6\u7b97\u6cd5--bankers-algorithm","title":"8.4.2.3 \u94f6\u884c\u5bb6\u7b97\u6cd5 | Banker's Algorithm","text":"<p>\u6211\u4eec\u901a\u8fc7 available, max, allocation, need \u8fd9\u56db\u4e2a\u77e9\u9635\u523b\u753b\u4e00\u4e2a\u65f6\u95f4\u5185\u5404\u4e2a\u8fdb\u7a0b\u5bf9\u5404\u79cd\u8d44\u6e90\u7684\u6301\u6709\u548c\u9700\u6c42\u60c5\u51b5\uff0c\u4ee5\u53ca\u5f53\u524d\u7cfb\u7edf\u7684\u8d44\u6e90\u60c5\u51b5\uff1b\u64cd\u4f5c\u7cfb\u7edf\u6839\u636e\u8fd9\u4e9b\u6570\u636e\u4fdd\u6301\u7cfb\u7edf\u5904\u4e8e\u5b89\u5168\u72b6\u6001\uff0c\u4ece\u800c\u51b3\u5b9a\u4e00\u4e2a\u9700\u6c42\u662f\u5426\u5e94\u5f53\u88ab\u7acb\u5373\u6ee1\u8db3\u3002</p> <p>\u53c2\u8003\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u95ee\u9898 1 \u7406\u89e3\uff0c\u627e\u4e00\u4e2a\u5b89\u5168\u5e8f\u5217\u7684\u57fa\u672c\u601d\u8def\u5c31\u662f\uff1a\u9009\u53d6\u4e00\u4e2a need\uff08\u7684\u6bcf\u4e00\u9879\u90fd\u5bf9\u5e94\u5730\uff09\u5c0f\u4e8e available\uff08\u7684\u5bf9\u5e94\u9879\uff09\u7684\u8fdb\u7a0b\uff0c\u5176\u8fd0\u884c\u5b8c\u540e\u4f1a\u5c06 allocation \u91ca\u653e\u56de available\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u800c\u51b3\u5b9a\u4e00\u4e2a\u9700\u6c42\u662f\u5426\u5e94\u5f53\u88ab\u7acb\u5373\u6ee1\u8db3\u7684\u65b9\u6848\u662f\uff0c\u5047\u8bbe \u8fd9\u4e2a\u9700\u6c42\u88ab\u63a5\u53d7\u4e86\uff0c\u6839\u636e\u8be5\u9700\u6c42\u66f4\u65b0\u5bf9\u5e94\u7684 need, available, allocation\uff0c\u5728\u6b64\u72b6\u6001\u4e0b\u63a8\u6f14\u662f\u5426\u6709\u5408\u6cd5\u7684\u5b89\u5168\u5e8f\u5217\u3002\u5982\u679c\u6709\uff0c\u5219\u53ef\u4ee5\u7acb\u5373\u6ee1\u8db3\uff0c\u5426\u5219\u5e94\u7b49\u5f85\u3002\u53c2\u8003\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684\u95ee\u9898 2~4\u3002</p> <p>Question</p> <p>8.28 Consider the following snapshot of a system:</p> <p></p> <p>Answer the following questions using the banker\u2019s algorithm: </p> <ol> <li>Illustrate that the system is in a safe state by demonstrating an order in which the threads may complete. </li> <li>If a request from thread T4 arrives for (2, 2, 2, 4), can the request be granted immediately? </li> <li>If a request from thread T2 arrives for (0, 1, 1, 0), can the request be granted immediately? </li> <li>If a request from thread T3 arrives for (2, 2, 1, 2), can the request be granted immediately?</li> </ol> \u7b54\u6848 <ol> <li>\u5982\u56fe\uff1a  \u6211\u4eec\u53ef\u4ee5\u5148\u8ba9 T2 \u8fd0\u884c\uff08\u4e5f\u53ef\u4ee5\u662f T3\uff09\uff0c\u6b64\u540e\u53d8\u6210\uff1a  \u73b0\u5728\u53ef\u4ee5\u8ba9\u9664\u4e86 T4 \u4ee5\u5916\u7684\u6bcf\u4e2a thread \u8fd0\u884c\uff0c\u540e\u7eed\u7c7b\u4f3c\u3002\u56e0\u6b64\u4e00\u4e2a\u5b89\u5168\u5e8f\u5217\u662f T2-&gt;T0-&gt;T1-&gt;T3-&gt;T4\u3002\u56e0\u6b64\u5f53\u524d\u7cfb\u7edf\u662f\u5b89\u5168\u7684\u3002</li> <li>\u5982\u679c\u6ee1\u8db3\u8fd9\u4e00\u8981\u6c42\uff0c\u4e4b\u540e\u7684\u72b6\u6001\u4e3a\uff1a  \u53ef\u89c1\uff0c\u6b64\u65f6\u4efb\u4e00\u7ebf\u7a0b\u90fd\u65e0\u6cd5\u6267\u884c\u3002\u56e0\u6b64\u6b64\u8981\u6c42\u4e0d\u80fd\u7acb\u5373\u6ee1\u8db3\u3002  </li> <li>\u5982\u679c\u6ee1\u8db3\u8fd9\u4e00\u8981\u6c42\uff0c\u4e4b\u540e\u7684\u72b6\u6001\u4e3a\uff1a  \u8fd9\u4e0d\u5f71\u54cd\u6211\u4eec\u5982 1) \u90a3\u6837\u5b8c\u6210\u5168\u90e8\u7ebf\u7a0b\u7684\u8fd0\u884c\uff0c\u5373\u7cfb\u7edf\u662f\u5b89\u5168\u7684\u3002\u56e0\u6b64\u6b64\u8981\u6c42\u53ef\u4ee5\u7acb\u5373\u6ee1\u8db3\u3002  </li> <li>\u5982\u679c\u6ee1\u8db3\u8fd9\u4e00\u8981\u6c42\uff0c\u4e4b\u540e\u7684\u72b6\u6001\u4e3a\uff1a  \u6211\u4eec\u53ef\u4ee5\u6309 T3-&gt;T2-&gt;T4-&gt;T1-&gt;T0 \u7b49\u987a\u5e8f\u5b8c\u6210\u5168\u90e8\u7ebf\u7a0b\u7684\u8fd0\u884c\uff0c\u5373\u7cfb\u7edf\u662f\u5b89\u5168\u7684\u3002\u56e0\u6b64\u6b64\u8981\u6c42\u53ef\u4ee5\u7acb\u5373\u6ee1\u8db3\u3002</li> </ol>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#843-\u6b7b\u9501\u68c0\u6d4b","title":"8.4.3 \u6b7b\u9501\u68c0\u6d4b","text":""},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8431-single-instance-resources","title":"8.4.3.1 Single Instance Resources","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u8d44\u6e90\u5206\u914d\u56fe\u7684\u53d8\u4f53 wait-for graph \u6765\u89e3\u51b3\uff1a</p> <p></p> <p>\u5728\u8fd9\u4e2a\u56fe\u91cc\u627e\u73af\uff0c\u7528\u62d3\u6251\u6392\u5e8f\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(V + E)\\) \u7684\uff0c\u8fd9\u6700\u5dee\u60c5\u51b5\u4e0b\u662f \\(O(n^2)\\) \u7684\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8432-multi-instance-resources","title":"8.4.3.2 Multi-Instance Resources","text":"<p>\u7c7b\u4f3c\u94f6\u884c\u5bb6\u7b97\u6cd5\u3002\u5982\u679c\u627e\u4e0d\u5230\u4efb\u4f55\u5b89\u5168\u5e8f\u5217\uff0c\u5219\u8bf4\u660e\u7cfb\u7edf\u5904\u4e8e\u6b7b\u9501\u72b6\u6001\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#844-\u6b7b\u9501\u6062\u590d","title":"8.4.4 \u6b7b\u9501\u6062\u590d","text":"<p>\u6b7b\u9501\u6062\u590d\u6709\u4e24\u4e2a\u9009\u62e9\uff1a</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8441-\u8fdb\u7a0b\u7ec8\u6b62-treminate-deadlocked-processes","title":"8.4.4.1 \u8fdb\u7a0b\u7ec8\u6b62 Treminate deadlocked processes","text":"<p>\u7ec8\u6b62\u8fdb\u7a0b\u5e76\u4e0d\u7b80\u5355\uff0c\u5b83\u9700\u8981\u7ef4\u62a4\u7ec8\u6b62\u65f6\u7684\u72b6\u6001\uff0c\u5e76\u4e14\u6709\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u4e00\u4e9b\u5185\u5bb9\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u907f\u514d\u4ea7\u751f\u91cd\u590d\u7684\u526f\u4f5c\u7528\uff08\u5982\u8f93\u51fa\uff09\uff1b\u8fd9\u9700\u8981\u82b1\u8d39\u5f88\u591a\u65f6\u95f4\u3002</p> <p>Options:</p> <ul> <li>\u653e\u5f03\u6240\u6709\u6b7b\u9501\u8fdb\u7a0b\u3002\u8fd9\u6837\u7684\u82b1\u8d39\u4f1a\u5f88\u5927\uff01</li> <li>\u6bcf\u6b21\u653e\u5f03\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u76f4\u5230\u6b7b\u9501\u73af\u89e3\u9664\u3002\u8fd9\u6837\u7684\u82b1\u8d39\u4e5f\u5f88\u5927\uff0c\u56e0\u4e3a\u6bcf\u6b21\u653e\u5f03\u4e00\u4e2a\u8fdb\u7a0b\u4e4b\u540e\u90fd\u9700\u8981\u8c03\u7528\u6b7b\u9501\u68c0\u6d4b\u7b97\u6cd5\u3002</li> </ul> <p>\u540c\u65f6\u540e\u8005\u9700\u8981\u8003\u8651\u7684\u662f\uff0c\u5982\u4f55\u9009\u62e9\u653e\u5f03\u7684\u8fdb\u7a0b\uff1f\u5e94\u5f53\u6839\u636e\u5177\u4f53\u60c5\u51b5\uff0c\u53c2\u8003\u5982\u4e0b\u6307\u6807\u9009\u62e9\u9020\u6210\u7684\u4ee3\u4ef7\u6700\u5c0f\u7684\u8fdb\u7a0b\u6765\u7ec8\u6b62\uff1a</p> <ul> <li>\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7</li> <li>\u5df2\u7ecf\u7b97\u4e86\u591a\u4e45\uff0c\u8fd8\u8981\u7b97\u591a\u4e45</li> <li>\u7528\u4e86\u54ea\u4e9b\u3001\u591a\u5c11\u8d44\u6e90\uff0c\u662f\u5426\u5bb9\u6613\u62a2\u5360</li> <li>\u8fd8\u9700\u8981\u591a\u5c11\u8d44\u6e90</li> <li>\u7ec8\u6b62\u8fd9\u4e00\u8fdb\u7a0b\u7684\u8bdd\u8fd8\u9700\u8981\u7ec8\u6b62\u591a\u5c11\u8fdb\u7a0b</li> <li>\u8fdb\u7a0b\u662f\u4ea4\u4e92\u7684\u8fd8\u662f\u6279\u5904\u7406\u7684</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/III_process_sync/8_deadlocks/#8442-\u8d44\u6e90\u62a2\u5360-resource-preemption","title":"8.4.4.2 \u8d44\u6e90\u62a2\u5360 Resource preemption","text":"<p>\u4e0d\u65ad\u62a2\u5360\u8d44\u6e90\u7ed9\u5176\u4ed6\u8fdb\u7a0b\u7528\uff0c\u76f4\u5230\u6d88\u9664\u6b7b\u9501\u73af\u4e3a\u6b62\u3002</p> <p>\u9700\u8981\u8003\u8651\u4e09\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u9009\u62e9\u727a\u7272\u8fdb\u7a0b (Select a victim)\u3002\u62a2\u5360\u54ea\u4e9b\u8fdb\u7a0b\u7684\u54ea\u4e9b\u8d44\u6e90\uff1f\u8fd9\u548c\u524d\u4e00\u8282\u7684\u8ba8\u8bba\u5dee\u4e0d\u591a\u3002</li> <li>\u56de\u6eda (Rollback)\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u7684\u82e5\u5e72\u8d44\u6e90\u88ab\u62a2\u5360\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2a\u8fdb\u7a0b \u56de\u6eda \u5230\u67d0\u4e2a\u5b89\u5168\u72b6\u6001\uff0c\u5373\u56de\u6eda\u5230\u7533\u8bf7\u90a3\u4e9b\u88ab\u62a2\u5360\u7684\u8d44\u6e90\u4e4b\u524d\u3002 \u4e0d\u8fc7\u4e00\u822c\u6765\u8bf4\uff0c\u5f88\u96be\u786e\u5b9a\u4ec0\u4e48\u662f\u5b89\u5168\u72b6\u6001\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6848\u5c31\u662f\u5b8c\u5168\u56de\u6eda\uff0c\u4e5f\u5c31\u662f\u7ec8\u6b62\u8fdb\u7a0b\u5e76\u91cd\u65b0\u6267\u884c\u3002\u56de\u6eda\u5230\u8db3\u591f\u6253\u65ad\u6b7b\u9501\u7684\u72b6\u6001\u66f4\u52a0\u7ecf\u6d4e\uff0c\u4f46\u662f\u9700\u8981\u7cfb\u7edf\u4fdd\u5b58\u66f4\u591a\u8d44\u6e90\u3002</li> <li>\u9965\u997f (Starvation)\u3002\u5982\u4f55\u4fdd\u8bc1\u4e0d\u4f1a\u6c38\u8fdc\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u62a2\u5360\u8d44\u6e90\uff1f\u5728\u4ee3\u4ef7\u8bc4\u4ef7\u4e2d\u589e\u52a0\u56de\u6eda\u6b21\u6570\uff0c\u4e5f\u7c7b\u4f3c\u4e8e priority aging\u3002</li> </ol>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/3_process/","title":"3 Processes | \u8fdb\u7a0b","text":"<p> \u7ea6 2129 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/3_process/#31-\u8fdb\u7a0b\u662f\u5565","title":"3.1 \u8fdb\u7a0b\u662f\u5565","text":"<p>\u8fdb\u7a0b (Process) \u662f\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u3001\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002\u591a\u4e2a\u8fdb\u7a0b\u53ef\u80fd\u5bf9\u5e94\u540c\u4e00\u4e2a\u7a0b\u5e8f\u3002\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684 OS \u4e2d\u4f1a\u6709\u591a\u4e2a\u8fdb\u7a0b\u3002\u8fdb\u7a0b\u662f\u7a0b\u5e8f\u7684\u4e00\u6b21\u6267\u884c\u8fc7\u7a0b\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\u3002</p> <p>\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u8fdb\u7a0b process \u548c \u4f5c\u4e1a job \u8fd9\u4e24\u4e2a\u6982\u5ff5\u53ef\u4ee5\u8ba4\u4e3a\u662f\u7b49\u540c\u7684\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/3_process/#311-\u8fdb\u7a0b\u7684\u7ec4\u6210","title":"3.1.1 \u8fdb\u7a0b\u7684\u7ec4\u6210","text":"<p>\u4e00\u4e2a\u8fdb\u7a0b\u5305\u62ec\uff1a</p> <ul> <li>code\u00a0or text <ul> <li>\u5373\u7a0b\u5e8f\u4ee3\u7801\uff0c\u52a0\u8f7d\u5230\u5185\u5b58\u524d\u4ee5 executable file \u7684\u5f62\u5f0f\u5b58\u50a8\u5728 disk \u4e2d</li> </ul> </li> <li>program counter <ul> <li>PC\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u8981\u8fd0\u884c\u7684\u6307\u4ee4</li> </ul> </li> <li>content of the processer's registers <ul> <li>\u5728\u8fdb\u7a0b\u4e4b\u95f4\u5207\u6362\u65f6\uff0c\u9700\u8981\u4fdd\u5b58\u5bc4\u5b58\u5668\u7684\u503c\u4ee5\u4fbf\u4e0b\u6b21\u56de\u5230\u8be5\u8fdb\u7a0b\u65f6\u7ee7\u7eed\u8fd0\u884c</li> </ul> </li> <li>run time stack <ul> <li>\u5728 ICS \u548c\u6c47\u7f16\u8bed\u8a00\u4e2d\u5b66\u4e60\u8fc7\u76f8\u5173\u5185\u5bb9\u3002\u5176\u4e2d\u7684\u6761\u76ee\u79f0\u4e3a activation records (stack frames)</li> <li>\u7531\u7528\u6237\u4ee3\u7801\u64cd\u63a7\uff08\u7f16\u8bd1\u65f6\u5b8c\u6210\u5173\u4e8e\u6808\u7684\u76f8\u5173\u8c03\u7528\uff09\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u6682\u65f6\u5b58\u50a8\u4e00\u4e9b\u6570\u636e\uff0c\u5982 local variables, return address, return values, state of registers, parameters \u7b49</li> </ul> </li> <li>data section <ul> <li>global variables</li> </ul> </li> <li>heap <ul> <li>dynamically allocated memory</li> </ul> </li> </ul> <p></p> ELF (Executable and Linkable Format) <p></p> <p>.data: \u521d\u59cb\u5316\u4e86\u7684\u9759\u6001\u53d8\u91cf</p> <p>.bss: block starting symbol\uff0c\u672a\u521d\u59cb\u5316\u7684\u9759\u6001\u53d8\u91cf\u3002ELF \u91cc\u53ea\u4f1a\u5b58\u8fd9\u4e2a\u6bb5\u7684\u957f\u5ea6\uff0c\u52a0\u8f7d\u5230\u5185\u5b58\u65f6\u4f1a\u5360\u7528\u5bf9\u5e94\u5927\u5c0f\u7684\u7a7a\u95f4\uff0c\u521d\u503c\u4e3a 0</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/3_process/#312-\u8fdb\u7a0b\u7684\u72b6\u6001","title":"3.1.2 \u8fdb\u7a0b\u7684\u72b6\u6001","text":"<p>\u8fdb\u7a0b\u5728\u6267\u884c (execute) \u65f6\u4f1a\u6539\u53d8\u72b6\u6001 (state)\uff1a</p> <p></p> <p>\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\uff0c\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5 running\uff0c\u66f4\u591a\u7684\u8fdb\u7a0b\u53ef\u80fd\u5904\u4e8e ready \u6216 waiting \u72b6\u6001\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/3_process/#313-\u8fdb\u7a0b\u63a7\u5236\u5757","title":"3.1.3 \u8fdb\u7a0b\u63a7\u5236\u5757","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u7528\u4e00\u4e2a Process Control Block (PCB, a.k.a. task control block)\u00a0\u8868\u793a\u8fdb\u7a0b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a PCB\u3002</p> <p>PCB \u5305\u542b\u8bb8\u591a\u5f53\u524d\u8fdb\u7a0b\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5982\uff1a</p> <ul> <li>Process state </li> <li>Program counter </li> <li>CPU registers\u00a0\uff0c\u5b58\u50a8\u6240\u6709\u8fdb\u7a0b\u76f8\u5173\u7684\u5bc4\u5b58\u5668\u7684\u503c</li> <li>CPU scheduling information\u00a0\uff0cproperities, scheduling queue pointers, etc.</li> <li>Memory-management information </li> <li>Accounting information\u00a0\uff0cCPU \u4f7f\u7528\u65f6\u95f4\u3001\u65f6\u95f4\u671f\u9650\u3001\u8bb0\u8d26\u6570\u636e\u7b49</li> <li>I/O status information\u00a0\uff0c\u5206\u914d\u7ed9\u8fdb\u7a0b\u7684 I/O \u8bbe\u5907\u5217\u8868\u3001\u6253\u5f00\u6587\u4ef6\u5217\u8868\u7b49</li> </ul> <p></p> <p>\u4e0d\u540c\u7684\u7cfb\u7edf\u53ef\u80fd\u6709\u4e0d\u540c\u7684 PCB\u3002Linux \u4e2d\u7684\u8fdb\u7a0b\u7528\u7ed3\u6784\u4f53 <code>task_struct</code> \u5b58\u50a8\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/3_process/#32-\u8fdb\u7a0b\u7684\u521b\u5efa","title":"3.2 \u8fdb\u7a0b\u7684\u521b\u5efa","text":"<p>\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u4e00\u4e2a\u552f\u4e00\u7684 \u8fdb\u7a0b\u6807\u8bc6\u7b26 (process indentifier, pid)\u00a0\u6765\u8bc6\u522b\u4e00\u4e2a\u8fdb\u7a0b\u3002\u4e00\u4e2a\u8fdb\u7a0b\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\uff0c\u5219\u5b83\u6210\u4e3a\u7236\u8fdb\u7a0b\uff0c\u65b0\u5efa\u8fdb\u7a0b\u79f0\u4e3a\u5b50\u8fdb\u7a0b\uff1b\u7236\u8fdb\u7a0b\u7684 pid \u79f0\u4e3a\u5b50\u8fdb\u7a0b\u7684 ppid (parent's pid)\u00a0\u3002\u8fd9\u6837\u8fdb\u7a0b\u4f1a\u6210\u4e3a\u4e00\u4e2a \u8fdb\u7a0b\u6811 (process tree)\uff1a</p> <p></p> <p>\u5f53\u5b50\u8fdb\u7a0b\u88ab\u521b\u5efa\u65f6\uff0c\u5b83\u4f1a\u9700\u8981\u4e00\u5b9a\u7684\u8d44\u6e90\uff08CPU \u65f6\u95f4\u3001\u5185\u5b58\u3001\u6587\u4ef6\u3001I/O \u8bbe\u5907\u7b49\uff09\u6765\u5b8c\u6210\u4efb\u52a1\u3002\u5b83\u53ef\u4ee5\u4ece\u64cd\u4f5c\u7cfb\u7edf\u90a3\u91cc\u76f4\u63a5\u83b7\u53d6\u8d44\u6e90\uff0c\u4e5f\u53ef\u4ee5\u4ece\u7236\u8fdb\u7a0b\u90a3\u91cc\u7ee7\u627f\uff08\u5171\u4eab\uff09\u4e00\u4e9b\u8d44\u6e90\u3002\u5efa\u7acb\u5b50\u8fdb\u7a0b\u65f6\uff0c\u7236\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u5411\u5b50\u8fdb\u7a0b\u4f20\u9012\u4e00\u4e9b\u521d\u59cb\u5316\u6570\u636e\uff0c\u4f8b\u5982\u7236\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u663e\u793a\u56fe\u7247\u7684\u5b50\u8fdb\u7a0b\u65f6\uff0c\u53ef\u4ee5\u5c06\u8be5\u56fe\u7247\u7684\u8def\u5f84\u6216\u6587\u4ef6\u540d\u7b49\u4f20\u9012\u7ed9\u5b50\u8fdb\u7a0b\u3002</p> <p>UNIX \u7cfb\u7edf\u4e2d\u53ef\u4ee5\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528 <code>fork()</code> \u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u8fdb\u7a0b\u3002\u8fd9\u4e2a\u65b0\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u4e00\u4efd\u62f7\u8d1d\uff0c\u5b83\u4eec\u53ea\u6709 pid \u548c ppid \u4e0d\u540c\uff0c\u53e6\u5916\u5b50\u8fdb\u7a0b\u5f53\u524d\u5185\u5b58\u4f7f\u7528\u8bb0\u5f55\u4e3a 0\uff0c\u9664\u6b64\u4ee5\u5916\u5168\u90e8\u76f8\u540c\u3002 <code>fork()</code> \u5bf9\u7236\u8fdb\u7a0b\u8fd4\u56de\u8be5\u5b50\u8fdb\u7a0b\u7684 pid\uff0c\u800c\u5bf9\u5b50\u8fdb\u7a0b\u8fd4\u56de 0\u3002</p> <p></p> <code>fork()</code> \u5982\u4f55\u5bf9\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u8fd4\u56de\u4e0d\u540c\u7684\u503c\uff1f <p>\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u662f\uff0c\u5728\u8fdb\u5165 <code>fork()</code> \u65f6\u5b58\u4e0b\u5f53\u524d\u7684 pid\uff0c\u5728\u5efa\u7acb\u65b0\u8fdb\u7a0b\u540e\uff08\u6b64\u65f6\u5b58\u4e0b\u5b50\u8fdb\u7a0b\u7684 pid\uff09\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u90fd\u5c06\u5206\u522b\u5b8c\u6210 <code>fork()</code> \u5269\u4f59\u4ee3\u7801\u7684\u6267\u884c\u3002\u5728\u8fdb\u884c\u8fd4\u56de\u65f6\uff0c <code>fork()</code> \u68c0\u67e5\u5f53\u524d\u7684 pid \u4e0e\u524d\u9762\u5b58\u4e0b\u7684\u662f\u5426\u4e00\u81f4\uff0c\u5982\u679c\u4e00\u81f4\u5219\u8bf4\u660e\u5f53\u524d\u662f\u7236\u8fdb\u7a0b\uff0c\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684 pid\uff1b\u4e0d\u4e00\u81f4\u5219\u8bf4\u660e\u662f\u5b50\u8fdb\u7a0b\uff0c\u8fd4\u56de 0\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u8fdb\u7a0b\u521b\u5efa\u65b0\u8fdb\u7a0b\u65f6\uff0c\u7236\u8fdb\u7a0b\u53ef\u4ee5</p> <ul> <li>\u7ee7\u7eed\u8fd0\u884c\uff08\u548c\u5b50\u8fdb\u7a0b\u5e76\u53d1\u6267\u884c\uff0c\u5373\u540c\u65f6\u6216\u8005\u4ea4\u66ff\u8fd0\u884c\uff09\uff0c\u6216\u8005</li> <li>\u7b49\u5f85\u5b50\u8fdb\u7a0b\u8fd0\u884c\u5b8c\u540e\u518d\u8fd0\u884c</li> </ul> <p>\u5b50\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u6709\u53ef\u80fd</p> <ul> <li>\u4f7f\u7528\u7236\u8fdb\u7a0b\u7684\u4e00\u4efd\u62f7\u8d1d\uff0c\u6216\u8005</li> <li>\u52a0\u8f7d\u53e6\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f</li> </ul> \u4e3a\u4ec0\u4e48\u8981\u62f7\u8d1d\u4e00\u4efd\u5462\uff1f <p>\u8003\u8651\u8fd9\u6837\u7684\u4ee3\u7801\uff1ahttps://godbolt.org/z/78a8sTKhP</p> <p></p> <p>\u5b50\u8fdb\u7a0b\u867d\u7136\u548c\u7236\u8fdb\u7a0b\u8dd1\u7684\u662f\u4e00\u6837\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u4e0d\u5e94\u5f53\u4f7f\u7528\u540c\u4e00\u4efd\u6570\u636e\u3002</p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u4f1a\u95ee\u4e86\uff0c\u4e0a\u9762\u8fd9\u79cd\u4ee3\u7801\uff0cchild \u5c06\u5f53\u524d\u5730\u5740\u7a7a\u95f4\u62f7\u8d1d\u4e00\u4efd\u5c82\u4e0d\u662f\u5f88\u6d6a\u8d39\u5417\uff1f\u56e0\u4e3a\u6839\u672c\u6ca1\u6709\u7528\u5230\u3002\u786e\u5b9e\u5982\u6b64\uff0c\u56e0\u6b64\u90e8\u5206 UNIX \u7684\u5b9e\u73b0\u5f15\u5165\u4e86 copy-on-write \u673a\u5236\uff0c\u5c06\u5730\u5740\u7a7a\u95f4\u7684\u590d\u5236\u63a8\u8fdf\u5230\u4efb\u4f55\u4e00\u4e2a\u8fdb\u7a0b\u9700\u8981\u5199\u5165\u7684\u65f6\u5019\u518d\u8fdb\u884c\u3002</p> <p>UNIX \u5bf9\u542f\u52a8\u65b0\u8fdb\u7a0b\u7684\u903b\u8f91\u662f\u7b80\u5355\u7684\u3002fork\u00a0\u7684\u610f\u4e49\u5c31\u662f\u5236\u9020\u5f53\u524d\u8fdb\u7a0b\u7684\u4e00\u4e2a\u526f\u672c\uff0c\u800c exec\u00a0\u7684\u610f\u4e49\u662f\u7528\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\u66ff\u4ee3\u5f53\u524d\u7684\u8fdb\u7a0b1\u3002</p> <p></p> <p>\u7cfb\u7edf\u8c03\u7528 <code>getpid()</code> \u548c <code>getppid()</code> \u53ef\u4ee5\u5206\u522b\u83b7\u53d6\u8fdb\u7a0b\u7684 pid \u548c ppid\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/3_process/#33-\u8fdb\u7a0b\u7684\u7ec8\u6b62","title":"3.3 \u8fdb\u7a0b\u7684\u7ec8\u6b62","text":"<p>\u7cfb\u7edf\u8c03\u7528 <code>exit()</code> \u4f1a\u4f7f\u5f97\u8fdb\u7a0b\u7ec8\u6b62\u3002C \u8bed\u8a00 main \u51fd\u6570\u8fd4\u56de\u65f6\u4e5f\u4f1a\u9690\u5f0f\u5730\u8c03\u7528 <code>exit()</code>\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fdb\u7a0b\u4e5f\u4f1a\u7531\u4e8e\u4e00\u4e9b\u4fe1\u53f7\u3001\u5f02\u5e38\u7b49\u7ec8\u6b62\u3002</p> <p>\u524d\u4e00\u8282\u4e2d\u7684\u4ee3\u7801\u4e2d\u5c55\u793a\u4e86 <code>wait()</code> \u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5b83\u4f7f\u5f97\u5f53\u524d\u8fdb\u7a0b\u8fdb\u5165 waiting \u72b6\u6001\uff0c\u5e76\u5728\u4efb\u4e00\u5b50\u8fdb\u7a0b\u7ec8\u6b62\uff0c\u6216\u88ab\u4fe1\u53f7\u505c\u6b62\uff0c\u6216\u88ab\u4fe1\u53f7\u6062\u590d\u65f6\u8fdb\u5165 ready \u72b6\u6001\uff0c\u540c\u65f6\u8fd4\u56de\u53d1\u751f\u8be5\u4e8b\u4ef6\u7684\u5b50\u8fdb\u7a0b\u7684 pid\u3002</p> <p>\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u7ec8\u6b62\u65f6\uff0c\u5b83\u8fdb\u5165 terminated \u72b6\u6001\uff0c\u5b83\u7684\u8d44\u6e90\u88ab\u64cd\u4f5c\u7cfb\u7edf\u56de\u6536\u3002\u4f46\u662f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ecd\u7136\u4f1a\u4fdd\u5b58\u4e00\u4e9b\u4fe1\u606f\uff08\u4f8b\u5982 PID\uff0c\u7ed3\u675f\u72b6\u6001\uff0c\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u7b492\uff09\uff0c\u56e0\u4e3a\u7236\u8fdb\u7a0b\u6709\u53ef\u80fd\u4f1a\u9700\u8981\u8c03\u7528 <code>wait()</code> \u6765\u83b7\u53d6\u5176\u4e00\u4e9b\u4fe1\u606f\u3002\u5f53\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u7ec8\u6b62\uff0c\u4f46\u7236\u8fdb\u7a0b\u5728\u5fd9\uff0c\u8fd8\u6ca1\u6709\u8c03\u7528 <code>wait()</code>\uff0c\u6211\u4eec\u79f0\u8fd9\u6837\u7684\u5b50\u8fdb\u7a0b\u4e3a \u50f5\u5c38\u8fdb\u7a0b (zombie processes)\uff0c\u56e0\u4e3a\u524d\u8ff0\u4fe1\u606f\u4ecd\u7136\u5360\u636e\u4e86\u8fdb\u7a0b\u8868\u4e2d\u7684\u4e00\u9879\uff1b\u5982\u679c\u8868\u6ee1\u4e86\uff0c\u5c31\u4e0d\u80fd\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\u4e86\u3002</p> <p>\u5f53\u5b50\u8fdb\u7a0b\u6ca1\u6709\u7ed3\u675f\uff0c\u6216\u8005\u7ec8\u6b62\u4e86\u4f46\u7236\u8fdb\u7a0b\u6ca1\u6709\u8c03\u7528 <code>wait()</code> \u7684\u60c5\u51b5\u4e0b\uff0c\u7236\u8fdb\u7a0b\u5c31\u7ed3\u675f\u4e86\uff0c\u5b50\u8fdb\u7a0b\u5c31\u4f1a\u6210\u4e3a \u5b64\u513f\u8fdb\u7a0b (orphan processes)\u3002\u4e00\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u5b64\u513f\u8fdb\u7a0b\u4e00\u540c\u7ec8\u6b62\u6389\uff0c\u4f46\u662f UNIX \u7684\u505a\u6cd5\u662f\u8ba9 init \u8fdb\u7a0b\u6536\u517b\u5b83\u4eec\uff0c\u5373 init \u8fdb\u7a0b\u6210\u4e3a\u5176\u7236\u8fdb\u7a0b\u3002init \u8fdb\u7a0b\u4f1a\u5b9a\u671f\u8c03\u7528 <code>wait()</code>\uff0c\u4ece\u800c\u6536\u96c6\u5b64\u513f\u8fdb\u7a0b\u7684\u9000\u51fa\u72b6\u6001\uff0c\u5e76\u91ca\u653e\u8fdb\u7a0b\u8868\u6761\u76ee\u3002</p> \u5b88\u62a4\u8fdb\u7a0b <p>\u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u60f3\u521b\u5efa\u4e00\u4e2a \u5b88\u62a4\u8fdb\u7a0b (daemon\uff0c\u5728\u540e\u53f0\u8fd0\u884c\u7684\u3001\u751f\u5b58\u671f\u957f\u7684\u8fdb\u7a0b\uff0c\u4f8b\u5982 host \u4e00\u9879\u670d\u52a1\u7b49 )\uff0c\u6211\u4eec\u53ef\u4ee5 fork \u4e24\u6b21\uff0c\u8ba9 grandchild \u6267\u884c\u5bf9\u5e94\u4efb\u52a1\uff0c\u800c child \u76f4\u63a5\u7ec8\u6b62\uff0c\u8fd9\u6837 grandchild \u5c31\u4f1a\u6210\u4e3a\u5b64\u513f\u4ece\u800c\u88ab init \u6536\u517b\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/3_process/#34-\u8fdb\u7a0b\u95f4\u901a\u4fe1","title":"3.4 \u8fdb\u7a0b\u95f4\u901a\u4fe1","text":"<p>\u8fdb\u7a0b\u95f4\u901a\u4fe1 (IPC, InterProcess Communication) \u662f\u4e3a\u4e86\u5728\u8fdb\u7a0b\u7684\u8d44\u6e90\u76f8\u4e92\u9694\u79bb\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba9\u4e0d\u540c\u7684\u8fdb\u7a0b\u80fd\u76f8\u4e92\u8bbf\u95ee\u8d44\u6e90\u4ece\u800c\u534f\u8c03\u5de5\u4f5c\u3002</p> <p>\u200b\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u5171\u4eab\u5185\u5b58 (shared memory) \u548c \u6d88\u606f\u4f20\u9012 (message passing)\u3002</p> <p></p> <ul> <li>\u4fe1\u53f7\u91cf (semaphores)\u00a0\u672c\u610f\u7528\u6765\u7ebf\u7a0b\u95f4\u540c\u6b65\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7 sem_open()\u00a0\u7cfb\u7edf\u8c03\u7528\u6765\u5efa\u7acb\u548c\u7ef4\u62a4\u8fdb\u7a0b\u95f4\u7684\u4fe1\u53f7\u91cf\uff1b\u8fd9\u6837\u7684\u4fe1\u53f7\u91cf\u5c5e\u4e8e OS \u8d44\u6e90\uff0c\u5b83\u4f1a\u5728\u76f8\u5173\u8fdb\u7a0b\u7ed3\u675f\u540e\u7531 OS \u91ca\u653e34\u3002</li> <li>\u5171\u4eab\u5185\u5b58 \u7684\u5b9e\u73b0\u662f\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u5404\u81ea\u6709\u4e00\u5757\u865a\u62df\u5185\u5b58\uff0c\u6620\u5c04\u5230\u540c\u4e00\u5757\u7269\u7406\u5185\u5b58\u3002\u5171\u4eab\u5185\u5b58\u4e5f\u9700\u8981\u4fe1\u53f7\u91cf\u7b49\u540c\u6b65\u624b\u6bb5\u4fdd\u62a4\u3002</li> <li>\u200b\u5171\u4eab\u6587\u4ef6\u3002</li> <li>\u200b\u7ba1\u9053 (pipe)\u3002\u7ba1\u9053\u7684\u5b9e\u73b0\u5176\u5b9e\u4e5f\u662f\u6587\u4ef6\uff0c\u521b\u5efa\u7ba1\u9053\u65f6\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u8fd4\u56de\u4e24\u7aef\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff1b\u903b\u8f91\u4e0a\u5b9e\u73b0\u7684\u662f\u4e00\u4e2a\u534a\u53cc\u5de5\u7684\u4fe1\u9053\u3002</li> <li>\u200b\u6d88\u606f\u961f\u5217 (message queue)\u3002\u4e3a\u4ec0\u4e48\u9700\u8981\u6d88\u606f\u961f\u5217\u5462\uff1f\u5171\u4eab\u6587\u4ef6\u663e\u7136\u5f88\u6162\uff0c\u800c\u5171\u4eab\u5185\u5b58\u6bd4\u8f83\u96be\u9002\u7528\u4fe1\u606f\u5927\u5c0f\u4e0d\u7b49\u3001\u4fe1\u606f\u8bfb\u4e00\u6b21\u5c31\u5931\u6548\u7b49\u573a\u666f\uff0c\u4e14\u5171\u4eab\u5185\u5b58\u9700\u8981\u540c\u6b65\u624b\u6bb5\u3002\u6d88\u606f\u961f\u5217\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002<ul> <li>\u6d88\u606f\u961f\u5217\uff0c\u5176\u5b9e\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ef4\u62a4\u7684\u4e00\u4e2a\u4e00\u4e2a\u7684\u94fe\u8868\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u65b0\u5efa\u6216\u8005\u8fde\u63a5\u5230\u4e00\u4e2a\u6d88\u606f\u961f\u5217\uff0c\u5e76\u5199\u5165\u6d88\u606f\uff0c\u6216\u8bfb\u53d6\u7b2c\u4e00\u6761\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u7684\u6d88\u606f56\u3002</li> </ul> </li> <li>\u200bSocket\u3002TCP / UDP\uff0c\u9002\u7528\u4e8e\u53cc\u65b9\u4e0d\u4e00\u5b9a\u5728\u540c\u4e00\u4e2a\u8ba1\u7b97\u673a\u4e0a\u7684\u60c5\u51b5\u3002</li> </ul> <ol> <li> <p>https://stackoverflow.com/questions/1653340/differences-between-fork-and-exec/1653415#1653415 \u21a9</p> </li> <li> <p>https://man7.org/linux/man-pages/man2/waitpid.2.html#NOTES \u21a9</p> </li> <li> <p>https://www.man7.org/linux/man-pages/man3/sem_open.3.html \u21a9</p> </li> <li> <p>https://stackoverflow.com/questions/65390563/does-sem-open-allocate-memory \u21a9</p> </li> <li> <p>https://www.tutorialspoint.com/inter_process_communication/inter_process_communication_message_queues.htm \u21a9</p> </li> <li> <p>http://www.science.unitn.it/~fiorella/guidelinux/tlk/node57.html \u21a9</p> </li> </ol>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/","title":"4 Scheduling","text":"<p> \u7ea6 1659 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>\u200b\u591a\u9053 (multiprogramming) \u73af\u5883\u4e0b\uff0c\u8fdb\u7a0b\u7684\u4e2a\u6570\u901a\u5e38\u5927\u4e8e CPU \u7684\u4e2a\u6570\u3002CPU \u8c03\u5ea6\u5c31\u662f OS \u5173\u4e8e\u54ea\u4e2a ready \u8fdb\u7a0b\u53ef\u4ee5\u8fd0\u884c\uff08\u4f7f\u7528 CPU\uff09\u4ee5\u53ca\u8fd0\u884c\u591a\u4e45\u7684\u51b3\u5b9a\u3002</p> <p>\u200b\u5176\u76ee\u6807\u662f\u59cb\u7ec8\u5141\u8bb8\u67d0\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u4ee5\u6700\u5927\u5316 CPU \u5229\u7528\u7387\uff0c\u540c\u65f6\u4fdd\u8bc1\u4e00\u5b9a\u7684\u516c\u5e73\u6027\u3002\u8fd9\u5728\u591a\u9053\u73af\u5883\u4e0b\u662f\u5fc5\u8981\u7684\uff0c\u5173\u7cfb\u5230\u7cfb\u7edf\u7684\u6574\u4f53\u6548\u7387\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#41-\u8c03\u5ea6\u7684\u65f6\u673a","title":"4.1 \u8c03\u5ea6\u7684\u65f6\u673a","text":"<p>\u200b\u200b\u200bCPU \u8c03\u5ea6\u53ef\u80fd\u51fa\u73b0\u5728\u67d0\u4e00\u4e2a\u8fdb\u7a0b\uff1a</p> <p>a. Running -&gt; Waiting\uff0c\u5982\u7b49\u5f85 I/O b. Running -&gt; Terminated c. Running -&gt; Ready\uff0c\u5f53\u53d1\u751f\u4e86 interrupt\uff0c\u5982\u8ba1\u65f6\u5668\u5230\u65f6\u95f4\u4e86 d. Waiting -&gt; Ready\uff0c\u5982 I/O \u5b8c\u6210\u4e86 e. New -&gt; Ready</p> <p></p> <p>\u200b\u975e\u62a2\u5360\u5f0f (nonpreemptive) \u8c03\u5ea6\u53ea\u4f1a\u5728 a, b \u5904\u8fdb\u884c\u8c03\u5ea6\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd9\u65f6\u5019\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e0d\u80fd\u518d\u8fd0\u884c\u4e86\uff1b\u62a2\u5360\u5f0f (preemptive) \u8c03\u5ea6\u4f1a\u53d1\u751f\u5728\u4e0a\u8ff0\u4efb\u4f55\u65f6\u673a\u3002\u56e0\u6b64\uff0c\u62a2\u5360\u5f0f\u8c03\u5ea6\u4f7f\u5f97 OS \u6709\u66f4\u5145\u5206\u7684\u63a7\u5236\uff0c\u4f46\u5b83\u4e5f\u66f4\u590d\u6742\u3002</p> <p>\u200b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e0a\u8ff0\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u8c03\u5ea6\u5668\u6765\u8fdb\u884c\u8c03\u5ea6\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#42-\u8c03\u5ea6\u7684\u8fc7\u7a0b","title":"4.2 \u8c03\u5ea6\u7684\u8fc7\u7a0b","text":"<p>\u200b\u8fd9\u4e2a\u8fc7\u7a0b\u53eb \u4e0a\u4e0b\u6587\u5207\u6362 (context switch)\uff0c\u8fd9\u91cc\u7684\u4e0a\u4e0b\u6587\u5176\u5b9e\u5c31\u7531 PCB \u6765\u8868\u793a\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#43-\u8c03\u5ea6\u7b97\u6cd5\u7684\u8bc4\u4ef7","title":"4.3 \u8c03\u5ea6\u7b97\u6cd5\u7684\u8bc4\u4ef7","text":"<p>\u5bf9\u4e8e\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\uff0c\u6211\u4eec\u5bf9 scheduling \u7684\u8981\u6c42\u4e5f\u6709\u6240\u4e0d\u540c\uff0c\u6709\u4e9b\u4e5f\u4f1a\u6709\u51b2\u7a81\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5145\u5206\u8003\u8651\u5404\u79cd\u7b97\u6cd5\u7684\u5c5e\u6027\u3002\u6211\u4eec\u53ef\u80fd\u9700\u8981\u7684\u8981\u6c42\u5305\u62ec\uff1a</p> <ul> <li>Maximize CPU Utilization\u00a0: CPU \u4f7f\u7528\u7387\uff0c\u5373 CPU \u975e\u7a7a\u95f2\u7684\u65f6\u95f4\u6bd4\u4f8b</li> <li>Maximize Throughput\u00a0: \u541e\u5410\u91cf\uff0c\u6bcf\u4e2a\u65f6\u95f4\u5355\u5143\u5185\u5b8c\u6210\u7684\u8fdb\u7a0b</li> <li>Minimize Turnaround Time\u00a0: \u5468\u8f6c\u65f6\u95f4\uff0c\u4ece\u8fdb\u7a0b\u521b\u7acb\u5230\u8fdb\u7a0b\u5b8c\u6210\u7684\u65f6\u95f4\uff0c\u5305\u62ec\u7b49\u5f85\u8fdb\u5165\u5185\u5b58\u3001\u5728 ready queue \u4e2d\u7b49\u5f85\u3001\u5728 CPU \u4e0a\u6267\u884c\u3001I/O \u6267\u884c\u7b49\u65f6\u95f4</li> <li>Minimize Waiting Time\u00a0: \u7b49\u5f85\u65f6\u95f4\uff0c\u5728 ready queue \u4e2d\uff08\u6216\u5728 Ready \u72b6\u6001\u4e0b\uff09\u7b49\u5f85\u6240\u82b1\u7684\u65f6\u95f4\u4e4b\u548c</li> <li>Minimize Response Time\u00a0: \u54cd\u5e94\u65f6\u95f4\uff0c\u4ea4\u4e92\u7cfb\u7edf\u4ece\u8fdb\u7a0b\u521b\u7acb\u5230\u7b2c\u4e00\u6b21\u4ea7\u751f\u76f8\u5e94\u7684\u65f6\u95f4</li> </ul> <p>\u8fd9\u4e9b\u8981\u6c42\u6709\u65f6\u751a\u81f3\u662f\u51b2\u7a81\u7684\u3002\u4f8b\u5982\uff0c\u8f83\u591a\u7684 context switch \u4f1a\u51cf\u5c11 throughput\uff0c\u56e0\u4e3a context switch \u8fc7\u7a0b\u4e2d\u5e76\u6ca1\u6709\u6709\u7528\u7684\u5de5\u4f5c\uff1b\u800c\u8f83\u5c11\u7684 context switch \u4f1a\u589e\u52a0 response time\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#44-\u8c03\u5ea6\u7b97\u6cd5","title":"4.4 \u8c03\u5ea6\u7b97\u6cd5","text":"<p>\u57fa\u4e8e\u4e0a\u8ff0\u4e0d\u540c\u76ee\u7684\uff0c\u591a\u79cd\u8c03\u5ea6\u7b97\u6cd5\u88ab\u8bbe\u8ba1\u51fa\u6765\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#441-first-come-first-served-fcfs--nonpreemptive","title":"4.4.1 \u200bFirst-Come First-Served (FCFS) | Nonpreemptive","text":"<p>\u200b\u5148\u7533\u8bf7 CPU \u7684\u8fdb\u7a0b\u9996\u5148\u83b7\u5f97 CPU\u3002\u53ef\u4ee5\u7528\u4e00\u4e2a FIFO \u961f\u5217\u7b80\u5355\u5b9e\u73b0\u3002</p> <p>\u200b\u200b</p> <p>\u200bConvoy effect - short process behind long process\uff0c\u200b\u5c24\u5176\u662f\u5f53\u6709\u8fdb\u7a0b\u8fdb\u5165 waiting \u540e\uff0c\u518d\u8fd4\u56de\u7684\u65f6\u5019\u53c8\u9700\u8981\u91cd\u65b0\u6392\u961f\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#442-shortest-job-first-sjf","title":"4.4.2 \u200bShortest-Job-First (SJF)","text":""},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#non-preemptive-shortest-next-cpu-burst","title":"\u200bNon-preemptive: Shortest-next-CPU-burst","text":"<p>\u200b\u6bcf\u5f53 CPU \u8c03\u5ea6\u65f6\uff0c\u5176\u9009\u53d6 ready queue \u4e2d\u4e0b\u6b21 CPU \u6267\u884c\u65f6\u95f4\u6700\u77ed\u7684\u8fdb\u7a0b\u3002\u8fd9\u6837\u4f1a\u4f7f\u5f97\u7ed9\u5b9a\u7684\u4e00\u7ec4\u8fdb\u7a0b\u5177\u6709 minimum average waiting time.</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#preemptive-shortest-remaining-time-first","title":"\u200bPreemptive: Shortest-remaining-time-first","text":"<p>\u200b\u6bcf\u5f53 CPU \u8c03\u5ea6\u65f6\uff08\u6ce8\u610f\u62a2\u5360\u5f0f\u8c03\u5ea6\u7684\u8c03\u5ea6\u65f6\u673a\uff09\uff0c\u9009\u62e9\u6700\u77ed\u5269\u4f59\u8fd0\u884c\u65f6\u95f4\u7684\u8fdb\u7a0b\u3002</p> <p></p> <p>\u200bSJF \u7684\u4e24\u4e2a\u7248\u672c\u90fd\u53ef\u4ee5\u83b7\u5f97\u6700\u5c0f\u7684\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\uff0c\u4f46\u6700\u5927\u7684\u95ee\u9898\u5728\u4e8e\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u5269\u4f59\u7684\u8fd0\u884c\u65f6\u95f4\u3002\u89e3\u51b3\u65b9\u6848\u662f\u9884\u6d4b\uff0c\u5c06\u4e0b\u6b21\u6267\u884c\u65f6\u95f4\u9884\u6d4b\u4e3a\u6b64\u524d CPU \u6267\u884c\u957f\u5ea6\u7684\u6307\u6570\u5e73\u5747\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#443-round-robin-rr--preemptive","title":"4.4.3 \u200bRound-Robin (RR) | Preemptive","text":"<p>\u200b\u5b9a\u4e49\u4e00\u4e2a \u65f6\u95f4\u7247 (time slice / time quantum) \uff0c\u5373\u4e00\u4e2a\u56fa\u5b9a\u7684\u8f83\u5c0f\u65f6\u95f4\u5355\u5143 (10-100ms)\u3002\u9664\u975e\u4e00\u4e2a process \u662f ready queue \u4e2d\u7684\u552f\u4e00\u8fdb\u7a0b\uff0c\u5b83\u4e0d\u4f1a\u8fde\u7eed\u8fd0\u884c\u8d85\u8fc7\u4e00\u4e2a\u65f6\u95f4\u7247\u7684\u65f6\u95f4\u3002Ready queue \u662f\u4e00\u4e2a FIFO \u7684\u5faa\u73af\u961f\u5217\u3002\u6bcf\u6b21\u8c03\u5ea6\u65f6\u53d6\u51fa ready queue \u4e2d\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u8ba1\u65f6\u5668\u4f7f\u5f97\u8fdb\u7a0b\u5728\u4e00\u4e2a\u65f6\u95f4\u7247\u540e\u53d1\u751f\u4e2d\u65ad\uff0c\u7136\u540e dispatch the process\u3002</p> <p></p> <p>\u200b\u76f8\u6bd4 SJF \u800c\u8a00\uff0c\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u66f4\u957f\uff0c\u4f46\u54cd\u5e94\u65f6\u95f4\u66f4\u77ed\u3002</p> <p>\u200bRR scheduling \u7684\u6027\u80fd\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u65f6\u95f4\u7247\u7684\u5927\u5c0f\u3002\u5982\u679c\u65f6\u95f4\u7247\u8f83\u5c0f\uff0c\u5219 response/interactivity \u4f1a\u5f88\u597d\uff0c\u4f46\u4f1a\u6709\u8f83\u5927\u7684 overhead\uff0c\u56e0\u4e3a\u6709\u8f83\u591a\u7684 context-switch\uff1b\u65f6\u95f4\u7247\u8f83\u5927\u5219\u54cd\u5e94\u8f83\u5dee\uff0c\u4f46 overhead \u4f1a\u8f83\u5c0f\u3002\u5982\u679c \u65f6\u95f4\u7247 \\(\\to \\inf\\)\uff0c\u5219 RR \\(\\to\\) FCFS\u3002</p> <p>\u200b\u5728\u5b9e\u8df5\u4e2d\uff0c\u65f6\u95f4\u7247\u5927\u7ea6 10~100ms\uff0c\u6bcf\u6b21 contest-switch \u7ea6 10\u03bcs\u3002\u5373 context-switch \u7684\u65f6\u95f4\u82b1\u8d39\u662f\u6bd4\u8f83\u5c0f\u7684\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#444-priority-scheduling","title":"4.4.4 \u200bPriority Scheduling","text":"<p>\u200b\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u4f18\u5148\u7ea7\uff0c\u6bcf\u6b21\u8c03\u5ea6\u65f6\u9009\u53d6\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u3002\uff08\u4e0b\u4f8b\u4e2d\u89c4\u5b9a\u4f18\u5148\u7ea7\u503c\u5c0f\u7684\u4f18\u5148\u7ea7\u9ad8\u3002\uff09</p> <p></p> <p>\u200b\u4f18\u5148\u7ea7\u53ef\u4ee5\u662f\u5185\u90e8\u7684\u6216\u8005\u5916\u90e8\u7684\uff1a</p> <ul> <li>internal: \u4e00\u4e9b\u6d4b\u91cf\u6570\u636e\uff0c\u4f8b\u5982 SJF \u662f Priority \u7684\u4e00\u4e2a\u7279\u4f8b\uff0c\u5373\u4f18\u5148\u7ea7\u7531\u9884\u6d4b CPU \u8fd0\u884c\u65f6\u95f4\u51b3\u5b9a\u3002</li> <li>external: \u7531\u7528\u6237\u6307\u5b9a\u8fdb\u7a0b\u7684\u91cd\u8981\u6027\u3002</li> </ul> <p>\u200bPriority Scheduling \u4e5f\u53ef\u4ee5\u4e0e Round-Robin \u7ed3\u5408\uff0c\u5982\uff1a</p> <p></p> <p>\u200b\u8981\u5b9e\u73b0 Priority Scheduling\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5c06 ready queue \u7528 priority queue \u5b9e\u73b0\uff1bpriority queue \u4e5f\u53ef\u4ee5\u662f\u62a2\u5360\u5f0f\u6216\u975e\u62a2\u5360\u5f0f\u7684\uff0c\u5982 SJF \u4e00\u6837\u3002</p> <p>\u200bPriority \u7684\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u662f indefinite blocking / starvation \uff0c\u5373\u4f4e\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u53ef\u80fd\u6c38\u8fdc\u6ca1\u6709\u673a\u4f1a\u88ab\u6267\u884c\u3002\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f Priority Aging \uff0c\u5373\u6839\u636e\u7b49\u5f85\u65f6\u95f4\u9010\u6e10\u589e\u52a0\u5728\u7cfb\u7edf\u4e2d\u7b49\u5f85\u7684\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#445-multilevel-queue-scheduling","title":"4.4.5 \u200bMultilevel Queue Scheduling","text":"<p>\u200b\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u8fdb\u7a0b\u901a\u5e38\u88ab\u5206\u4e3a\u4e0d\u540c\u7684\u7ec4\uff0c\u6bcf\u4e2a\u7ec4\u6709\u4e00\u4e2a\u81ea\u5df1\u7684 ready queue\uff0c\u4e14\u6bcf\u4e2a\u961f\u5217\u5185\u90e8\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u8c03\u5ea6\u7b97\u6cd5\u3002</p> <p>\u4f8b\u5982\uff0c\u524d\u53f0\u961f\u5217\u4f7f\u7528 RR \u8c03\u5ea6\u4ee5\u4fdd\u8bc1 response\uff0c\u540e\u53f0\u961f\u5217\u53ef\u4ee5\u4f7f\u7528 FCFS\u3002</p> <p>\u540c\u65f6\uff0c\u961f\u5217\u4e4b\u95f4\u4e5f\u5e94\u5f53\u6709\u8c03\u5ea6\u3002\u901a\u5e38\u4f7f\u7528 preemptive priority scheduling\uff0c\u5373\u5f53\u4e14\u4ec5\u5f53\u9ad8\u4f18\u5148\u7ea7\u7684\u961f\u5217\uff08\u5982\u524d\u53f0\u961f\u5217\uff09\u4e3a\u7a7a\u65f6\uff0c\u4f4e\u4f18\u5148\u7ea7\u7684\u961f\u5217\uff08\u5982\u540e\u53f0\u961f\u5217\uff09\u4e2d\u7684\u8fdb\u7a0b\u624d\u80fd\u83b7\u51c6\u8fd0\u884c\u3002</p> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u961f\u5217\u95f4\u7684 time-slicing\uff0c\u4f8b\u5982\u4e00\u4e2a\u961f\u5217\u4f7f\u7528 80% \u7684\u65f6\u95f4\u7247\u800c\u53e6\u4e00\u4e2a\u4f7f\u7528 20%\u3002</p> <p>\u4f8b\u5982\uff1a</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/4_sched/#446-multilevel-feedback-queue-scheduling","title":"4.4.6 \u200bMultilevel Feedback Queue Scheduling","text":"<p>\u200bMultilevel Feedback Queue Scheduling \u5141\u8bb8\u8fdb\u7a0b\u5728\u961f\u5217\u4e4b\u95f4\u8fc1\u79fb\u3002\u8fd9\u79cd\u7b97\u6cd5\u53ef\u4ee5\u6709\u5f88\u591a\u79cd\u5b9e\u73b0\uff0c\u56e0\u4e3a\u961f\u5217\u7684\u6570\u91cf\u3001\u6bcf\u4e2a\u961f\u5217\u4e2d\u7684\u8c03\u5ea6\u7b56\u7565\u3001\u961f\u5217\u4e4b\u95f4\u7684\u8c03\u5ea6\u7b97\u6cd5\u4ee5\u53ca\u5c06\u8fdb\u7a0b\u5347\u7ea7\u5230\u66f4\u9ad8\u4f18\u5148\u7ea7/\u964d\u7ea7\u5230\u66f4\u4f4e\u4f18\u5148\u7ea7\u7684\u961f\u5217\u7684\u6761\u4ef6\u90fd\u662f\u53ef\u53d8\u7684\u3002\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u7684\u6700\u4f18\u914d\u7f6e\u5728\u53e6\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u4e0d\u4e00\u5b9a\u5f88\u597d\u3002\u8fd9\u79cd\u7b97\u6cd5\u4e5f\u662f\u6700\u4e3a\u590d\u6742\u7684\u3002</p> <p>\u200b\u770b\u8fd9\u6837\u4e00\u4e2a\u4f8b\u5b50\uff1a\u6709\u4e09\u4e2a\u961f\u5217 0, 1, 2\uff0c\u4f18\u5148\u7ea7\u9010\u6b21\u964d\u4f4e\u3002\u5f53\u8fdb\u7a0b ready \u65f6\u88ab\u6dfb\u52a0\u5230 Q0 \u4e2d\uff0cQ0 \u5185\u90e8\u91c7\u7528 RR Scheduling\uff0c\u7684\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709 8ms \u7684\u65f6\u95f4\u5b8c\u6210\u5176\u8fd0\u884c\uff0c\u5982\u679c\u6ca1\u6709\u5b8c\u6210\u5219\u88ab\u6253\u65ad\u5e76\u8fdb\u5165 Q1\uff1b\u53ea\u6709\u5f53 Q0 \u4e3a\u7a7a\u65f6 Q1 \u624d\u53ef\u80fd\u88ab\u8fd0\u884c\u3002Q1 \u5185\u90e8\u4e5f\u4f7f\u7528 RR Scheduling\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709 16ms \u65f6\u95f4\u5b8c\u6210\u5176\u8fd0\u884c\uff0c\u5982\u679c\u6ca1\u6709\u5b8c\u6210\u5219\u88ab\u6253\u65ad\u5e76\u8fdb\u5165 Q2\uff1b\u53ea\u6709\u5f53 Q1 \u4e5f\u4e3a\u7a7a\u65f6 Q2 \u624d\u53ef\u80fd\u88ab\u8fd0\u884c\u3002Q2 \u5185\u90e8\u91c7\u7528 FCFS \u7b97\u6cd5\u3002</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/5_thread/","title":"5 Threads","text":"<p> \u7ea6 1630 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>\u5728\u8fdb\u7a0b\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e86\u8fdb\u7a0b\u5728 fork \u65f6\u6709\u8f83\u5927\u7684\u5f00\u9500\uff0c\u4e5f\u770b\u5230\u4e86 copy-on-write \u7b49\u6280\u672f\u80fd\u591f\u51cf\u5c11\u8fd9\u4e9b\u5f00\u9500\uff1b\u5728\u8c03\u5ea6\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u540c\u6837\u770b\u5230\u4e86\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\u4f1a\u5e26\u6765\u7684\u5f00\u9500\u3002\u6211\u4eec\u5bb9\u6613\u610f\u8bc6\u5230\uff0c\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u82e5\u5e72\u8fdb\u7a0b\u53ef\u80fd\u5171\u4eab\u4e00\u4e9b\u5185\u5bb9\uff0c\u800c\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u5982\u679c\u77e5\u9053\u8fd9\u4e9b\u5171\u4eab\uff0c\u5219\u53ef\u4ee5\u51cf\u7701\u65b0\u5efa\u8fdb\u7a0b\u7684\u5f00\u9500\u4ee5\u53ca\u8fdb\u7a0b\u95f4\u5207\u6362\u7684\u65f6\u5ef6\u3002\u56e0\u6b64\u64cd\u4f5c\u7cfb\u7edf\u5f15\u5165\u4e86 \u7ebf\u7a0b (threads)\u3002</p> <p>\u200b\u5728 Linux \u4e2d\uff0c\u7ebf\u7a0b\u4e5f\u88ab\u79f0\u4e3a \u8f7b\u91cf\u7ea7\u8fdb\u7a0b (LightWeight Process)\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u5bf9\u7ebf\u7a0b\u975e\u5e38\u6070\u5f53\u7684\u4e00\u4e2a\u63cf\u8ff0\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u5b83\u81ea\u5df1\u7684 thread ID, PC, register set \u548c runtime stack\u3002\u7ebf\u7a0b\u4e0e\u540c\u4e00\u8fdb\u7a0b\u7684\u5176\u4ed6\u7ebf\u7a0b\u5171\u4eab code section, data section, heap, open files \u4ee5\u53ca signals\u3002</p> <p></p> <p></p> <p>\u200b\u5bf9\u4e8e\u652f\u6301\u7ebf\u7a0b\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b9e\u9645\u8c03\u5ea6\u7684\u662f\u5185\u6838\u7ea7\u7ebf\u7a0b\u800c\u975e\u8fdb\u7a0b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7ebf\u7a0b\u662f\u8fd0\u884c\u4ee5\u53ca CPU \u8c03\u5ea6\u7684\u57fa\u672c\u5355\u5143\u3002\uff08\u800c\u8fdb\u7a0b\u662f\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u5143\u3002\uff09</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/5_thread/#51-\u591a\u7ebf\u7a0b\u7f16\u7a0b\u7684\u4f18\u7f3a\u70b9","title":"5.1 \u591a\u7ebf\u7a0b\u7f16\u7a0b\u7684\u4f18\u7f3a\u70b9","text":"<p>\u91c7\u7528 \u591a\u7ebf\u7a0b\u7f16\u7a0b (Multi-Threaded Programming) \u7684\u4f18\u70b9\u5305\u62ec\uff1a</p> <ul> <li>Economy:\u00a0\u5efa\u7acb\u7ebf\u7a0b\u76f8\u6bd4\u8fdb\u7a0b\u662f\u5f88\u7ecf\u6d4e\u7684\uff0c\u56e0\u4e3a code, data &amp; heap \u5df2\u7ecf\u5728\u5185\u5b58\u4e2d\u4e86\uff1b\u53e6\u5916\u5728\u540c\u4e00\u8fdb\u7a0b\u7684\u7ebf\u7a0b\u95f4\u8fdb\u884c context switch \u65f6\u4e5f\u4f1a\u66f4\u5feb\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u9700\u8981 cache flush\u3002</li> <li>Resource Sharing:\u00a0\u540c\u4e00\u8fdb\u7a0b\u7684\u7ebf\u7a0b\u4e4b\u95f4\u5929\u7136\u5171\u4eab\u5185\u5b58\uff0c\u56e0\u6b64\u6211\u4eec\u65e0\u9700\u4e3a\u5b83\u4eec\u7f16\u5199 IPC\uff1b\u8fd9\u4e5f\u5141\u8bb8\u6211\u4eec\u5bf9\u540c\u4e00\u5757\u5185\u5b58\u505a\u5e76\u884c\u7684\u5904\u7406\u3002\u4f46\u8fd9\u4e5f\u4f1a\u5f15\u5165\u98ce\u9669\u3002</li> <li>Responsiveness:\u00a0\u591a\u7ebf\u7a0b\u7684\u8fdb\u7a0b\u4f1a\u6709\u66f4\u597d\u7684\u54cd\u5e94\u6027\uff0c\u5373\u5f53\u4e00\u4e2a\u7ebf\u7a0b blocked \u6216\u8005\u5728\u505a\u4e00\u4e9b\u957f\u65f6\u95f4\u7684\u64cd\u4f5c\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4ecd\u7136\u80fd\u5b8c\u6210\u5de5\u4f5c\uff0c\u5305\u62ec\u5bf9\u7528\u6237\u7684\u54cd\u5e94\u3002<ul> <li>\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a client-server \u7ed3\u6784\u4e2d\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u7ebf\u7a0b\u6765\u54cd\u5e94\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff1a </li> </ul> </li> <li>Scalability:\u00a0\u5728\u591a\u5904\u7406\u5668\u7684\u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u591a\u7ebf\u7a0b\u8fdb\u7a0b\u53ef\u4ee5\u66f4\u597d\u5730\u53d1\u6325\u4f5c\u7528\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u5728\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\u8fd0\u884c\uff1b\u800c\u5355\u7ebf\u7a0b\u8fdb\u7a0b\u53ea\u80fd\u5728\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\u8fd0\u884c\u3002</li> </ul> <p>\u5b9e\u9645\u4e0a\uff0c\u540e\u4e24\u70b9\u5bf9\u591a\u4e2a\u5355\u7ebf\u7a0b\u8fdb\u7a0b\u4e5f\u662f\u9002\u7528\u7684\u3002\u4f46\u591a\u7ebf\u7a0b\u8fdb\u7a0b\u76f8\u8f83\u800c\u8a00\u66f4\u52a0\u7ecf\u6d4e\u548c\u81ea\u7136\u3002</p> <p>\u591a\u7ebf\u7a0b\u4e5f\u6709\u4e00\u4e9b\u7f3a\u70b9\uff1a</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u51fa\u73b0\u9519\u8bef\uff0c\u90a3\u4e48\u6574\u4e2a\u8fdb\u7a0b\u90fd\u4f1a\u53bb\u4e16\uff08\u6bd4\u5982\u6d4f\u89c8\u5668\u7684\u4e00\u4e2a\u7f51\u9875\u6302\u4e86\uff0c\u90a3\u4e48\u53ef\u80fd\u6574\u4e2a\u6d4f\u89c8\u5668\u90fd\u4f1a\u6302\uff09\u3002</li> <li>\u7531\u4e8e OS \u5bf9\u6bcf\u4e2a\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u7684\u5927\u5c0f\u9650\u5236\uff0c\u591a\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u4f7f\u5f97\u8fdb\u7a0b\u7684\u5185\u5b58\u9650\u5236\u66f4\u52a0\u7d27\u7f29\uff08\u8fd9\u5728 64 \u4f4d\u4f53\u7cfb\u7ed3\u6784\u4e2d\u4e0d\u518d\u662f\u95ee\u9898\uff09\u3002</li> <li>\u7531\u4e8e\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u90e8\u5206\u5185\u5b58\uff0c\u56e0\u6b64\u5185\u5b58\u4fdd\u62a4\u4f1a\u6bd4\u8f83\u56f0\u96be\u3002</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/5_thread/#52-\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f","title":"5.2 \u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u200b\u7ebf\u7a0b\u5b9e\u73b0\u7684\u91cd\u70b9\u662f\u5171\u4eab\u4e00\u4e9b\u8d44\u6e90\uff1b\u800c\u5177\u4f53\u7684\u5b9e\u73b0\u5206\u4e3a \u7528\u6237\u7ea7\u7ebf\u7a0b (User-Level Thread) \u548c \u5185\u6838\u7ea7\u7ebf\u7a0b (Kernel-Level Thread)\u00a0\u4e24\u7c7b\u3002</p> <p>\u7528\u6237\u7ea7\u7ebf\u7a0b\u7684\u7279\u70b9\u662f\uff0c\u5b83\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ea\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u8fd9\u4e2a\u8fdb\u7a0b\u5305\u542b \u7ebf\u7a0b\u5e93 (Thread Library) \u7684\u90e8\u5206\uff0c\u200b\u8fd9\u90e8\u5206\u4ee3\u7801\u8d1f\u8d23\u5b8c\u6210\u7ebf\u7a0b\u7684\u521b\u5efa\u3001\u5207\u6362\u7b49\u64cd\u4f5c\uff1b\u800c\u5185\u6838\u7ea7\u7ebf\u7a0b\u5219\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\u3002</p> <p>\u200b\u7528\u6237\u7ea7\u7ebf\u7a0b\u7684\u4f18\u70b9\u5305\u62ec\uff1a</p> <ul> <li>\u200b\u5b83\u5e76\u4e0d\u5b9e\u9645\u5360\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684 TID (Thread ID) \u7b49\u8d44\u6e90\uff0c\u56e0\u6b64\u7406\u8bba\u4e0a\u6765\u8bf4\u53ef\u4ee5\u652f\u6301\u6bd4\u5185\u6838\u7ea7\u7ebf\u7a0b\u66f4\u591a\u7684\u7ebf\u7a0b\u6570\uff1b</li> <li>\u200b\u5b83\u7684\u8c03\u5ea6\u7b49\u64cd\u4f5c\u4ee3\u7801\u5747\u5728\u7528\u6237\u6001\uff0c\u4e0d\u9700\u8981\u8fdb\u5165\u5185\u6838\u6001\uff1b</li> <li>\u200b\u6bd4\u8f83\u5bb9\u6613\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u8c03\u5ea6\u7b97\u6cd5\u3002</li> </ul> <p>\u200b\u7528\u6237\u7ea7\u7ebf\u7a0b\u7684\u7f3a\u70b9\u5305\u62ec\uff1a</p> <ul> <li>\u4e00\u65e6\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u963b\u585e\uff0c\u90a3\u4e48\u5728\u64cd\u4f5c\u7cfb\u7edf\u770b\u6765\u5c31\u662f\u6574\u4e2a\u8fdb\u7a0b\u88ab\u963b\u585e\u4e86\uff0c\u90a3\u4e48\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u5176\u4ed6\u7ebf\u7a0b\u4e5f\u540c\u6837\u4f1a\u88ab\u963b\u585e\uff1b\u800c\u5982\u679c\u662f\u5185\u6838\u7ea7\u7ebf\u7a0b\u7684\u8bdd\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u963b\u585e\u4e86\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4ecd\u7136\u80fd\u6b63\u5e38\u8fd0\u884c\u3002</li> <li>\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7528\u6237\u7ea7\u7ebf\u7a0b\u65e0\u6cd5\u5728\u591a\u6838\u4e0a\u5206\u522b\u8fd0\u884c\u3002</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/5_thread/#\u591a\u7ebf\u7a0b\u6a21\u578b","title":"\u591a\u7ebf\u7a0b\u6a21\u578b","text":"<p>\u200b\u5728\u540c\u65f6\u652f\u6301\u7528\u6237\u7ea7\u7ebf\u7a0b\u548c\u5185\u6838\u7ea7\u7ebf\u7a0b\u7684\u7cfb\u7edf\u4e2d\uff0c\u7528\u6237\u7ea7\u7ebf\u7a0b\u5230\u5185\u6838\u7ea7\u7ebf\u7a0b\u7684\u6620\u5c04\u65b9\u5f0f\u6709\u591a\u79cd\u9009\u62e9\u3002</p> <p>\u200b\u200b\u8fd9\u79cd\u65b9\u5f0f\u5176\u5b9e\u548c\u53ea\u652f\u6301\u7528\u6237\u7ea7\u7ebf\u7a0b\u6ca1\u5565\u533a\u522b\uff1a</p> <p></p> <p>\u200b\u8fd9\u79cd\u65b9\u5f0f\u548c\u53ea\u652f\u6301\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e5f\u6ca1\u5565\u533a\u522b\uff1a</p> <p></p> <p>\u200b\u200b\u200b\u524d\u9762\u4e24\u79cd\u7684\u7ec4\u5408\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\\(n\\) \u4e2a\u7528\u6237\u7ea7\u7ebf\u7a0b\u53ef\u4ee5\u6620\u5c04\u5230 \\(m (\\le n)\\) \u4e2a\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e0a\uff1a</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/II_process_management/5_thread/#53-linux-\u7ebf\u7a0b","title":"5.3 \u200bLinux \u7ebf\u7a0b","text":"<p>\u200bLinux \u4e2d\u6ca1\u6709\u7279\u522b\u533a\u5206\u8fdb\u7a0b\u548c\u7ebf\u7a0b\uff0c\u5b83\u4eec\u90fd\u88ab\u79f0\u4e3a tasks\uff0c\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a <code>task_struct</code>\u3002\uff08\u867d\u7136\u4ece\u6982\u5ff5\u4e0a\u8bf4\uff0c\u7ebf\u7a0b\u5e94\u8be5\u90fd\u4f7f\u7528\u5176\u6240\u5c5e\u8fdb\u7a0b\u7684 PCB\uff0c\u4f46\u662f Linux \u4e0d\u662f\u8fd9\u4e48\u5b9e\u73b0\u7684\uff01\uff09</p> <p>\u200bLinux \u4e2d\u53ef\u4ee5\u901a\u8fc7 <code>clone()</code> \u65b0\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff1b\u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\u5305\u542b\u4e86\u4e00\u5927\u5806\u9009\u9879\uff0c\u5305\u62ec\u65b0\u5efa\u7684\u662f\u4e00\u4e2a\u7ebf\u7a0b\u8fd8\u662f\u8fdb\u7a0b\uff0c\u4ee5\u53ca\u7ee7\u627f / \u65b0\u5efa\u54ea\u4e9b\u8d44\u6e90\u7b49\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u5f88\u591a\u5b9e\u73b0\u4e2d\uff0c<code>fork()</code> \u7684\u5185\u90e8\u5c31\u662f\u8c03\u7528 <code>clone()</code> \u5b9e\u73b0\u7684\u3002</p> <p>\u200b\u4ece\u7528\u6237\u89c6\u89d2\u800c\u8a00\uff0cLinux \u4e2d\u7684\u7ebf\u7a0b\u901a\u8fc7 TID (Thread ID) \u6807\u8bc6\uff0c\u800c\u6765\u81ea\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u591a\u4e2a\u7ebf\u7a0b\u5e94\u5f53\u5177\u6709\u540c\u6837\u7684 PID (Process ID)\uff1b\u7cfb\u7edf\u8c03\u7528 <code>gettid()</code> \u548c <code>getpid()</code> \u7684\u5b9e\u73b0\u548c\u8fd9\u4e2a\u7406\u89e3\u662f\u4e00\u6837\u7684\u3002</p> <p>\u200b\u4f46\u662f\u4e8b\u5b9e\u4e0a\uff0c<code>task_struct</code> \u91cc\u9762\u5e76\u6ca1\u6709 <code>tid</code> \u8fd9\u4e2a\u5b57\u6bb5\uff0c\u800c\u662f\u6709 <code>pid</code> \u548c <code>tgid</code> (Thread Group ID) \u8fd9\u4e24\u4e2a\u5b57\u6bb5\u3002\u5176\u5b9e\uff0c\u8fd9\u91cc\u7684 <code>pid</code> \u548c\u6211\u4eec\u524d\u8ff0\u7684 TID \u542b\u4e49\u4e00\u81f4\uff0c\u800c\u8fd9\u91cc\u7684 <code>tgid</code> \u548c\u524d\u8ff0 PID \u542b\u4e49\u4e00\u81f4\u3002\u8fd9\u4e3b\u8981\u662f\u5386\u53f2\u539f\u56e0\uff0c\u5728\u8fd8\u4e0d\u652f\u6301\u7ebf\u7a0b\u7684\u5e74\u4ee3\uff0c<code>pid</code> \u4f5c\u4e3a\u8c03\u5ea6\u7684\u4f9d\u636e\u88ab\u4f7f\u7528\uff1b\u5728\u652f\u6301\u591a\u7ebf\u7a0b\u540e\uff0c\u8c03\u5ea6\u7684\u5355\u5143\u4ece\u8fdb\u7a0b\u53d8\u4e3a\u4e86\u7ebf\u7a0b\uff0c\u5982\u679c\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u5b57\u6bb5 <code>tid</code>\uff0c\u5219\u9700\u8981\u4fee\u6539\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u56e0\u6b64 <code>pid</code> \u88ab\u4fdd\u7559\uff0c\u4f46\u53d1\u6325 <code>tid</code> \u7684\u4f5c\u7528\uff1b\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u5b57\u6bb5 <code>tgid</code>\uff0c\u8868\u793a\u8fd9\u4e00\u7ec4\u7ebf\u7a0b\u7684\u6807\u8bc6\u7b26\uff0c\u4e5f\u5c31\u662f\u5176\u6240\u5c5e\u8fdb\u7a0b\u7684\u6807\u8bc6\u7b26\u3002</p> <p>1</p> <p>\u200b\u6b63\u56e0\u5982\u6b64\uff0c\u4ece Linux 2.4 \u5f00\u59cb\uff0cgetpid() \u8fd4\u56de\u7684\u5c31\u4e0d\u518d\u662f pid \u4e86\uff0c\u800c\u662f tgid\u30022</p> <p>\u200b\u4f7f\u7528 ps \u6307\u4ee4\uff0c\u8fd8\u80fd\u770b\u5230\u4e00\u4e2a\u540d\u53eb LWP (LightWeight Process) \u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u59cb\u7ec8\u548c TID \u7684\u503c\u76f8\u540c\uff1bLWP \u901a\u5e38\u88ab\u7528\u4f5c\u7ed9\u7528\u6237\u5448\u73b0\uff0c\u800c TID \u66f4\u7ecf\u5e38\u88ab\u7528\u4f5c gettid() \u4e4b\u7c7b\u7684\u7cfb\u7edf\u8c03\u7528\u3002\u8fd8\u6709\u4e00\u4e2a\u5b57\u6bb5\u53eb NLWP\uff0c\u8868\u793a\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u4e2a\u6570\u30023</p> <ol> <li> <p>https://stackoverflow.com/a/9306150/14430730 \u21a9</p> </li> <li> <p>\u53c2\u89c1 CLONE_THREAD \u4e00\u8282\uff1ahttps://man7.org/linux/man-pages/man2/clone.2.html \u21a9</p> </li> <li> <p>https://www.baeldung.com/linux/pid-tid-ppid#2-tid-thread-identifier \u21a9</p> </li> </ol>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/","title":"10 Virtual Memory","text":"<p> \u7ea6 3498 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#101-\u5f15\u5165","title":"10.1 \u5f15\u5165","text":"<p>\u6211\u4eec\u8bf4\uff0c\u300c\u8fdb\u7a0b\u7684\u4ee3\u7801\u7b49\u6570\u636e\u5fc5\u987b\u5728\u5185\u5b58\u4e2d\u300d\uff0c\u8fd9\u662f\u56e0\u4e3a CPU \u53ea\u6709\u80fd\u529b\u8bbf\u95ee\u5185\u5b58\uff0c\u800c\u5e76\u4e0d\u80fd\u8bbf\u95ee\u78c1\u76d8\u3002\u4f46\u662f\uff0c\u5728\u4e0a\u4e00\u8282\u7684\u672b\u5c3e\u6211\u4eec\u63d0\u51fa\u4e86 swapping \u673a\u5236\uff0c\u8fd9\u4e00\u673a\u5236\u5141\u8bb8\u6211\u4eec\u628a\u90a3\u4e9b\u5728 main memory \u91cc\u653e\u4e0d\u4e0b\u7684\u5185\u5bb9\u4ea4\u6362\u5230 disk \u91cc\u3002\u8fd9\u4e00\u673a\u5236\u5176\u5b9e\u6269\u5c55\u4e86\u300c\u5185\u5b58\u300d\u7684\u6982\u5ff5\uff1a\u5728\u8fd9\u79cd\u673a\u5236\u7684\u652f\u6301\u4e0b\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u987e\u8651\u5185\u5b58\u7684\u5b9e\u9645\u5927\u5c0f\uff1b\u7269\u7406\u5185\u5b58\u548c\u7528\u4e8e\u4ea4\u6362\u7684\u78c1\u76d8\u7a7a\u95f4\u4e00\u5e76\u88ab\u7528\u6765\u63d0\u4f9b\u300c\u5185\u5b58\u300d\u7684\u4f5c\u7528\uff0c\u4e5f\u5c31\u662f\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u6309\u7167\u5730\u5740\u8bbf\u95ee\u5185\u5b58\u5355\u5143\u4e2d\u6570\u636e\u7684\u80fd\u529b\u3002</p> <p>\u6211\u4eec\u5728\u7b2c 9 \u8282\u82e5\u5e72\u6b21\u63d0\u5230\u8fc7 \u5730\u5740\u7a7a\u95f4 (address space) \u8fd9\u4e2a\u8bcd\u6c47\uff0c\u5b83\u6307\u7684\u662f\u5730\u5740\u53d6\u503c\u7684\u5168\u96c6\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u4e2a 32 \u4f4d\u5bfb\u5740\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u5176 \u7269\u7406\u5730\u5740\u7a7a\u95f4\uff08\u7269\u7406\u5730\u5740\u7684\u96c6\u5408\uff09\u5c31\u662f \\(0 \\sim 2^{32} - 1\\)\uff0c\u4ea6\u5373 <code>0x00000000 ~ 0xffffffff</code>\u3002\u5728\u5f15\u5165\u5206\u6bb5 / \u5206\u9875\u6280\u672f\u4e4b\u524d\uff0c\u5404\u4e2a\u8fdb\u7a0b\u548c\u64cd\u4f5c\u7cfb\u7edf\u5171\u540c\u4f7f\u7528\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u4e0a\u8ff0\u7684\u7269\u7406\u5730\u5740\u7a7a\u95f4\u3002\u8fd9\u6837\u7684\u5185\u5b58\u6a21\u578b\u79f0\u4e3a flat memory\uff0c\u5b83\u4f1a\u5e26\u6765\u6bd4\u8f83\u5927\u7684\u788e\u7247\uff0c\u540c\u65f6\u9694\u79bb\u6027\u8f83\u5dee\uff0c\u5185\u5b58\u7684\u4fdd\u62a4\u8f83\u5f31\u3002\u800c\u5728\u5f15\u5165\u4e86\u5206\u6bb5 / \u5206\u9875\u6280\u672f\u4e4b\u540e\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e86\u81ea\u5df1\u7684\u4e00\u5957 logical memory (a.k.a. virtual memory) \uff0c\u5176\u5bf9\u5e94\u7684\u7684\u5730\u5740\u7a7a\u95f4\u5c31\u53eb\u505a \u903b\u8f91\u5730\u5740\u7a7a\u95f4 (logical address space) \u6216\u8005 \u865a\u62df\u5730\u5740\u7a7a\u95f4 (virtual address space)\uff1b\u800c\u5bf9\u5e94\u7684\u6bb5\u8868 / \u9875\u8868\u7684\u4f5c\u7528\u5c31\u662f\u63d0\u4f9b\u4ece\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5230\u7269\u7406\u5730\u5740\u7a7a\u95f4\u7684\u6620\u5c04\uff08\u6620\u5c04\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e swapping \u673a\u5236\u7684\u5b58\u5728\uff0c\u4e5f\u6709\u53ef\u80fd\u51fa\u73b0 swap \u7684\u8fc7\u7a0b\uff09\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u4e0a\u8ff0\u7684\u6620\u5c04\u8fc7\u7a0b\u7531 OS \u548c MMU \u5171\u540c\u5b9e\u73b0\uff0c\u56e0\u6b64\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u662f\u88ab\u9694\u79bb\u7684\uff1b\u53ea\u8981 MMU \u4e0d\u51fa\u73b0\u95ee\u9898\u4ee5\u53ca\u9875\u8868\u4e0d\u88ab\u7be1\u6539\uff08\u8fd9\u901a\u5e38\u6bd4\u8f83\u56f0\u96be\uff09\uff0c\u5176\u4ed6\u8fdb\u7a0b\u5c31\u6ca1\u6709\u529e\u6cd5\u8bbf\u95ee\u5230\u8fd9\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u865a\u62df\u5185\u5b58\u4f9b\u8f6f\u4ef6\u4f7f\u7528\uff0c\u800c CPU \u5728\u8bbf\u95ee\u5bf9\u5e94\u7684\u5185\u5b58\u5730\u5740\u65f6\u4f1a\u7531 MMU \u81ea\u52a8\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\uff1b\u5982\u679c\u5bf9\u5e94\u7684 page \u4e0d\u5728\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u5c31\u4f1a\u89e6\u53d1\u4e00\u6b21 page fault\uff0c\u8fd9\u662f\u4e00\u4e2a exception\u3002\u6709 3 \u79cd\u53ef\u80fd\u7684\u60c5\u51b5\uff1a</p> <ol> <li>\u5f53\u524d\u7684\u8fdb\u7a0b\u7684\u9875\u8868\u4e2d\u5e76\u6ca1\u6709\u8fd9\u4e2a\u865a\u62df\u5730\u5740\u5bf9\u5e94\u7684 page\uff1b</li> <li>\u6743\u9650\u4e0d\u7b26\uff0c\u4f8b\u5982\u8bd5\u56fe\u8fd0\u884c\u67d0\u4e2a\u6743\u9650\u4f4d\u662f <code>RW-</code> \u7684 page \u4e2d\u7684\u4ee3\u7801\uff0c\u6216\u8005\u8bd5\u56fe\u5199\u5165\u67d0\u4e2a\u6743\u9650\u4f4d\u662f <code>R-X</code> \u6216 <code>R--</code> \u7684 page \u4e2d\u7684\u67d0\u4e2a\u5185\u5b58\u5355\u5143\uff1b</li> <li>\u5f53\u524d\u865a\u62df\u5730\u5740\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u662f\u5bf9\u5e94\u7684 page \u88ab swapped out \u4e86\u3002</li> </ol> <p>\u6211\u4eec\u77e5\u9053\uff0cexception \u4f1a\u4ea4\u7531\u64cd\u4f5c\u7cfb\u7edf\u5904\u7406\uff1b\u5982\u679c\u662f\u524d\u4e24\u79cd\u60c5\u51b5\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5e94\u5f53\u62a5\u9519\u5e76\u505a\u76f8\u5173\u5904\u7406\uff08\u4f8b\u5982\u6740\u6389\u5bf9\u5e94\u8fdb\u7a0b\uff09\uff1b\u800c\u5982\u679c\u662f\u540e\u4e00\u79cd\u60c5\u51b5\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5e94\u5f53\u5c06\u8fdb\u7a0b\u963b\u585e\uff0c\u5e76\u5c06\u5bf9\u5e94\u7684 page \u4ea4\u6362\u56de\u6765\uff0c\u8c03\u9875\u5b8c\u6210\u540e\u5524\u9192\u8fdb\u7a0b\u3002</p> <p>\u5728\u4e00\u6761\u6307\u4ee4\u6267\u884c\u671f\u95f4\uff0c\u53ef\u80fd\u89e6\u53d1\u591a\u6b21 page fault\uff08\u6307\u4ee4\u672c\u8eab\u548c\u8bbf\u95ee\u7684\u5730\u5740\u53ef\u80fd\u90fd\u4e0d\u5728\u7269\u7406\u5185\u5b58\u4e2d\uff09\u3002\u5f53 page fault \u88ab\u89e3\u51b3\u540e\uff0c\u6307\u4ee4\u88ab\u91cd\u65b0\u8fd0\u884c\uff1b\u56e0\u6b64\u4e00\u6761\u6307\u4ee4\u5728\u771f\u6b63\u6210\u529f\u8fd0\u884c\u4e4b\u524d\u53ef\u80fd\u4f1a\u88ab\u5c1d\u8bd5\u8fd0\u884c\u591a\u6b21\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#kernel-addresses--userspace-addresses","title":"Kernel Addresses &amp; Userspace Addresses","text":"<p>\u6211\u4eec\u5728 Overview \u4e2d\u63d0\u5230\u8fc7\uff0c\u6307\u4ee4\u88ab\u5206\u4e3a privileged \u548c non-privileged\uff0c\u524d\u8005\u53ea\u6709 kernel mode \u4e0b\u53ef\u4ee5\u6267\u884c\uff0c\u800c\u540e\u8005\u5728 kernel \u548c user mode \u4e0b\u90fd\u80fd\u6267\u884c\uff1b\u5730\u5740\u7a7a\u95f4\u4e5f\u4e00\u6837\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff08\u4e0b\u7b80\u79f0\u5730\u5740\u7a7a\u95f4\u3001AS\uff09\u88ab\u5206\u4e3a\u4e86 Kernel Portion \u548c User Portion\uff1bkernel \u4ee3\u7801\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e24\u5757\u7a7a\u95f4\uff0c\u800c user \u4ee3\u7801\u53ea\u80fd\u8bbf\u95ee User Portion\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u7684 AS \u7684 kernel portion \u90fd\u6620\u5c04\u5230\u4e86\u540c\u4e00\u5757\u7269\u7406\u5185\u5b581\u3002\u539f\u56e0\u662f\u663e\u7136\u7684\uff1a\u6240\u6709\u8fdb\u7a0b\u7528\u5230\u7684\u90fd\u662f\u540c\u4e00\u5957 kernel\uff0c\u56e0\u6b64\u6ca1\u5fc5\u8981\u628a kernel \u7528\u7684\u5185\u5b58\uff08\u5b58\u4f8b\u5982\u5404\u4e2a\u8fdb\u7a0b\u7684\u9875\u8868\u3001\u5404\u79cd\u961f\u5217\u4e4b\u7c7b\u7684\u4e1c\u897f\uff09\u590d\u5236\u597d\u51e0\u4efd\u3002</p> \u5b9e\u73b0 <p>\u4f8b\u5982\uff0c\u5728 32 \u4f4d\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u8bbe\u8ba1\u91cc\uff0ckernel \u9ed8\u8ba4\u4f7f\u7528\u9ad8 1GB\uff0c\u5404\u4e2a\u8fdb\u7a0b\u7684 user portion \u4f7f\u7528\u4f4e 3GB \u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff1b\u901a\u8fc7\u5728 build kernel \u4e4b\u524d\u66f4\u6539 <code>CONFIG_PAGE_OFFSET</code> \u53ef\u4ee5\u66f4\u6539\u8fd9\u4e00\u5206\u914d\uff1a</p> <p></p> <p>\u800c\u5bf9\u4e8e 64 \u4f4d\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u8bbe\u8ba1\uff0c\u7531\u4e8e\u6839\u672c\u7528\u4e0d\u4e86\u8fd9\u4e48\u591a\uff0c\u56e0\u6b64 kernel space \u548c user space \u88ab\u81ea\u7136\u5206\u9694\u5f00\uff1a</p> <p></p> <p>\u5176\u4e2d TTBR (Translation Table Base Register) \u4fdd\u5b58\u9875\u8868\u7684\u57fa\u5730\u5740\uff0cTTBR0 \u662f\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u9875\u8868\u5bf9\u5e94\u7684 TTBR\uff0c\u800c TTBR1 \u662f kernel portion \u7684\u9875\u8868\u5bf9\u5e94\u7684 TTBR\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#102-lazy-allocation--demand-paging","title":"10.2 Lazy Allocation / Demand Paging","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5728\u5206\u914d user space \u7684\u5185\u5b58\u65f6\uff0c\u4f1a\u4f7f\u7528 lazy allocation\uff1a\u5f53\u7528\u6237\u7a0b\u5e8f\u7533\u8bf7\u4e00\u5757\u5185\u5b58\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u771f\u7684\u7acb\u5373\u5728\u7269\u7406\u5185\u5b58\u4e2d\u5206\u914d\u5bf9\u5e94\u7684\u5185\u5b58\uff1b\u76f4\u5230\u8fd9\u5757\u5185\u5b58\u88ab\u771f\u6b63\u8bbf\u95ee\u3002</p> <p>\u8fd9\u79cd\u4f18\u5316\u7684\u539f\u7406\u662f\uff0c\u5f88\u591a\u7528\u6237\u7a0b\u5e8f\u7533\u8bf7\u7684\u5185\u5b58\u5927\u5c0f\u6bd4\u771f\u6b63\u9700\u8981\u4f7f\u7528\u7684\u901a\u5e38\u8981\u5927\uff0c\u4f8b\u5982 buffer \u7b49\u3002</p> <p></p> <p>\u5176\u4e2d RSS (Resident Set Size) \u63cf\u8ff0\u8fdb\u7a0b\u5728\u5185\u5b58\u4e2d\u5360\u7528\u7684\u7a7a\u95f4\u5927\u5c0f\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#103-copy-on-write","title":"10.3 Copy-on-Write","text":"<p>\u6211\u4eec\u5728\u7b2c 3 \u8282\u8ba8\u8bba <code>fork()</code> \u7684\u65f6\u5019\u63d0\u5230\u4e86 copy-on-write \u673a\u5236\u3002\u5f88\u591a\u5b50\u8fdb\u7a0b\u5728 <code>fork()</code> \u4e4b\u540e\u7acb\u523b\u8c03\u7528 <code>exec()</code>\uff0c\u56e0\u6b64\u5c06\u7236\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u6574\u4e2a\u590d\u5236\u4e00\u4efd\u662f\u6bd4\u8f83\u6d6a\u8d39\u7684\u3002\u8fd9\u79cd\u673a\u5236\u5141\u8bb8\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u6700\u521d\u4f7f\u7528\u540c\u4e00\u4efd\u7269\u7406\u9875\u6765\u8fdb\u884c\u5de5\u4f5c\uff0c\u5728\u4efb\u4f55\u4e00\u4e2a\u8fdb\u7a0b\u9700\u8981\u5199\u5165\u67d0\u4e2a\u5171\u4eab frame \u65f6\u518d\u8fdb\u884c\u590d\u5236\u3002</p> <p></p> <p></p> <p>\u8fdb\u4e00\u6b65\u5730\uff0cLinux \u7b49\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e86 <code>vfork()</code>\uff0c\u8fdb\u4e00\u6b65\u4f18\u5316\u5b50\u8fdb\u7a0b\u5728 <code>fork()</code> \u4e4b\u540e\u7acb\u523b\u8c03\u7528 <code>exec()</code> \u7684\u60c5\u5f62\u3002<code>vfork()</code> \u5e76\u4e0d\u4f7f\u7528 copy-on-write\uff1b\u8c03\u7528 <code>vfork()</code> \u4e4b\u540e\uff0c\u7236\u8fdb\u7a0b\u4f1a\u88ab\u6302\u8d77\uff0c\u5b50\u8fdb\u7a0b\u4f7f\u7528\u7236\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u3002\u5982\u679c\u5b50\u8fdb\u7a0b\u6b64\u65f6\u4fee\u6539\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u4efb\u4f55\u9875\u9762\uff0c\u8fd9\u4e9b\u4fee\u6539\u5bf9\u7236\u8fdb\u7a0b\u90fd\u662f\u53ef\u89c1\u7684\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#104-page-replacement","title":"10.4 Page Replacement","text":"<p>\u5f53\u6211\u4eec\u5728 10.2 \u6216\u8005 10.3 \u8ba8\u8bba\u7684\u60c5\u51b5\u4e0b\uff0c\u6216\u8005\u5728 kernel\u3001I/O buffer \u4e4b\u7c7b\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u7269\u7406\u5e27\uff0c\u4f46\u662f\u6ca1\u6709\u7a7a\u95f2\u7684\u7269\u7406\u5e27\u65f6\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4ea4\u6362\u51fa\u53bb\u4e00\u6574\u4e2a\u8fdb\u7a0b\u4ece\u800c\u91ca\u653e\u5b83\u7684\u6240\u6709\u5e27\uff1b\u66f4\u5e38\u89c1\u5730\uff0c\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u5f53\u524d\u4e0d\u5728\u4f7f\u7528\u7684\u5e27\uff0c\u5e76\u91ca\u653e\u5b83\u3002</p> <p>\u57fa\u672c\u6b65\u9aa4\u662f\uff1a</p> <ol> <li>\u627e\u5230\u8fd9\u4e2a victim frame\uff1b</li> <li>\u5c06\u5176\u5185\u5bb9\u5199\u5230\u4ea4\u6362\u7a7a\u95f4\uff1b</li> <li>\u4fee\u6539\u9875\u8868\uff08\u548c TLB \u7b49\uff09\u4ee5\u8868\u793a\u5b83\u4e0d\u5728\u5185\u5b58\u4e2d\u4e86\u3002</li> </ol> <p>\u7528 dirty bit (a.k.a. modify bit) \u53ef\u4ee5\u8282\u7701\u5176\u5f00\u9500\uff1a\u8be5\u4f4d\u4fdd\u5b58\u5bf9\u5e94 frame \u662f\u5426\u88ab\u4fee\u6539\u8fc7\uff1b\u5982\u679c\u6ca1\u6709\u88ab\u4fee\u6539\u8fc7\uff0c\u5219\u4e0a\u8ff0\u7b2c 2 \u6b65\u53ef\u4ee5\u88ab\u7701\u7565\u3002</p> <p>\u90a3\u4e48\u5728\u4e0a\u8ff0\u7b2c 1 \u6b65\u4e2d\uff0c\u6211\u4eec\u5982\u4f55\u786e\u5b9a\u54ea\u4e2a frame \u5e94\u5f53\u7528\u6765\u4f5c\u4e3a victim frame \u5462\uff1f\u6211\u4eec\u7684\u6838\u5fc3\u76ee\u6807\u662f\uff0c\u964d\u4f4e page fault \u7684\u9891\u7387\u3002\u4e0b\u9762\u8ba8\u8bba\u82e5\u5e72\u79cd \u9875\u9762\u7f6e\u6362\u7b97\u6cd5 (page replacement algorithms)\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#1041-optimal","title":"10.4.1 Optimal","text":"<p>\u8fd9\u79cd\u7b97\u6cd5\u9009\u62e9 \u6700\u957f\u65f6\u95f4\u5185\u4e0d\u518d\u88ab\u8bbf\u95ee\u7684\u9875\u9762 \u6362\u51fa\u3002\u5bb9\u6613\u8bc1\u660e\uff0c\u8fd9\u79cd\u65b9\u6848\u7684 page-fault rate \u662f\u6700\u4f4e\u7684\u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e\u5b9e\u9645\u5b9e\u73b0\u4e2d\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u9884\u6d4b\u7ed3\u679c\uff0c\u56e0\u6b64\u5b83\u53ea\u4f5c\u4e3a\u7406\u8bba\u6700\u4f18\u89e3\u7528\u6765\u5224\u5b9a\u5176\u4ed6\u7b97\u6cd5\u7684\u4f18\u52a3\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#1042-fifo-first-in-first-out","title":"10.4.2 FIFO (First In First Out)","text":"<p>\u8fd9\u79cd\u7b97\u6cd5\u6362\u51fa \u6700\u5148\u8fdb\u5165\u5185\u5b58\u7684\u9875\u9762\u3002\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u4f7f\u7528\u4e00\u4e2a\u961f\u5217\u4fdd\u5b58\u8c03\u5165\u5185\u5b58\u7684\u987a\u5e8f\u5373\u53ef\u3002</p> <p>\u8fd9\u79cd\u7b97\u6cd5\u7684\u95ee\u9898\u662f\uff0c\u5176\u903b\u8f91\u548c\u5b9e\u9645\u4e0d\u7b26\uff1b\u5b9e\u9645\u60c5\u51b5\u4e0b\u6709\u5f88\u591a\u9875\u9762\u4f1a\u7ecf\u5e38\u88ab\u8bbf\u95ee\u3002</p> <p>\u53e6\u5916\uff0c\u8fd9\u79cd\u7b97\u6cd5\u53ef\u80fd\u4f1a\u9047\u5230\u7269\u7406\u5e27\u589e\u52a0\u7684\u65f6\u5019 page-fault \u53cd\u800c\u66f4\u591a\u7684\u5f02\u5e38\u60c5\u51b5\u3002\u8fd9\u88ab\u79f0\u4e3a Belady's Anomaly\uff1a</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#1043-lru-least-recently-used","title":"10.4.3 LRU (Least Recently Used)","text":"<p>\u8fd9\u79cd\u7b97\u6cd5\u6362\u51fa \u6700\u4e45\u6ca1\u6709\u88ab\u8bbf\u95ee\u7684\u9875\u9762\u3002</p> <p>\u5b9e\u73b0\u7684\u4e00\u79cd\u7b56\u7565\u662f\u7ed9\u6bcf\u4e2a\u9875\u8868\u9879\u4e00\u4e2a counter\uff0c\u6bcf\u6b21\u8bbf\u95ee\u67d0\u4e2a page \u65f6\uff0c\u5c06 counter \u66f4\u65b0\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u3002\u6bcf\u6b21\u9700\u8981\u7f6e\u6362\u65f6\uff0c\u641c\u7d22 counter \u6700\u5c0f\u7684\u9875\u3002\u4e5f\u53ef\u4ee5\u7528 heap \u6765\u4f18\u5316\u3002</p> <p>\u53e6\u4e00\u79cd\u7b56\u7565\u662f\u7528\u4e00\u4e2a\u6808\u4fdd\u5b58 page numbers\uff0c\u6bcf\u6b21\u8bbf\u95ee\u65f6\u627e\u5230\u5b83\u7136\u540e\u628a\u5b83\u632a\u5230\u6808\u9876\u3002</p> <p>\u8fd9\u4e24\u79cd\u5b9e\u73b0\u5f00\u9500\u90fd\u6bd4\u8f83\u5927\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#1044-lru-approximation","title":"10.4.4 LRU-Approximation","text":"<p>\u56e0\u6b64\uff0c\u6211\u4eec\u5728 LRU \u548c\u6027\u80fd\u4e4b\u95f4\u505a\u4e00\u4e2a\u6298\u4e2d\uff1b\u5f15\u5165\u4e00\u4e2a reference bit\uff0c\u6765\u8fd1\u4f3c\u5730\u5b9e\u73b0 LRU\u3002\u5f53\u4e00\u4e2a page \u88ab\u8bbf\u95ee\u65f6\u8fd9\u4e2a bit \u88ab\u7f6e\u4e3a 1\uff1b\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u671f\u5c06 reference bit \u6e05\u96f6\u3002\u56e0\u6b64\uff0c\u5728\u9700\u8981\u4ea4\u6362\u65f6\uff0c\u53ea\u9700\u8981\u627e\u4e00\u4e2a reference bit \u4e3a 0 \u7684\u5c31\u53ef\u4ee5\u8bf4\u660e\u5b83\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u3002</p> <p>Warning</p> <p>\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7b97\u6cd5\uff0c\u53ef\u4ee5\u81ea\u5df1\u770b\u4e00\u4e0b\u3002</p> Example <p>10.24 Apply the (1) FIFO, (2) LRU, and (3) optimal (OPT) replacement algorithms for the following page-reference strings: </p> <p>a. <code>2, 6, 9, 2, 4, 2, 1, 7, 3, 0, 5, 2, 1, 2, 9, 5, 7, 3, 8, 5</code></p> <p>b. <code>0, 6, 3, 0, 2, 6, 3, 5, 2, 4, 1, 3, 0, 6, 1, 4, 2, 3, 5, 7</code> </p> <p>c. <code>3, 1, 4, 2, 5, 4, 1, 3, 5, 2, 0, 1, 1, 0, 2, 3, 4, 5, 0, 1</code> </p> <p>d. <code>4, 2, 1, 7, 9, 8, 3, 5, 2, 6, 8, 1, 0, 7, 2, 4, 1, 3, 5, 8</code> </p> <p>e. <code>0, 1, 2, 3, 4, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 4, 3, 2, 1, 0</code> </p> <p>Indicate the number of page faults for each algorithm assuming demand paging with three frames.</p> answer <p>(1) FIFO</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>(2) LRU</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>(3) OPT</p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#105-allocation-of-frames","title":"10.5 Allocation of Frames","text":"<p>\u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u914d\u591a\u5c11\u4e2a frame \u5462\uff1f\u663e\u7136\uff0c\u8fd9\u4e2a\u6700\u5927\u503c\u4e0d\u53ef\u80fd\u8d85\u8fc7\u7269\u7406\u5185\u5b58\u5305\u542b\u7684 frame \u603b\u6570\uff1b\u90a3\u4e48\u6700\u5c0f\u503c\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u6700\u5c0f\u503c\u662f\u7531\u5177\u4f53\u7684\u8ba1\u7b97\u673a\u67b6\u6784\u51b3\u5b9a\u7684\u3002\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u6307\u4ee4\u5728\u89e3\u51b3\u5176\u6d89\u53ca\u7684\u5168\u90e8 page fault \u4e4b\u540e\u624d\u80fd\u771f\u6b63\u88ab\u8fd0\u884c\uff1b\u56e0\u6b64\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u914d\u7684 frame \u7684\u6700\u5c0f\u503c\u4e0d\u5e94\u5c0f\u4e8e\u5355\u4e2a\u6307\u4ee4\u53ef\u80fd\u4f7f\u7528\u5230\u7684 frame \u603b\u6570\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u53ef\u80fd\u4f7f\u7528\u7684 frame \u6570\u6700\u5927\u7684\u8fd9\u4e2a\u6307\u4ee4\uff0c\u5176\u672c\u8eab\u4e0d\u4f1a\u8de8\u8d8a 2 \u4e2a page\uff1b\u4f46\u5176\u5305\u542b\u4e24\u4e2a\u8bbf\u95ee\u5185\u5b58\u7684\u64cd\u4f5c\u6570\uff0c\u5176\u4e2d\u6bcf\u4e2a\u64cd\u4f5c\u6570\u8bbf\u95ee\u7684\u5185\u5b58\u53ef\u80fd\u8de8\u8d8a 2 \u4e2a page\uff08\u5373\uff0c\u8fd9\u5757\u6570\u636e\u5728\u4e00\u4e2a page \u7684\u672b\u5c3e\u548c\u4e0b\u4e00\u4e2a page \u7684\u5f00\u5934\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u67b6\u6784\u4e0a\u8fd0\u884c\u7684\u8fdb\u7a0b\u7684 minimum frame number \u662f 5\u3002</p> <p>\u5982\u679c\u6211\u4eec\u91c7\u53d6 \u5168\u5c40\u7f6e\u6362 (global replacement)\uff0c\u5373\u6bcf\u6b21\u7f6e\u6362\u65f6\u4ece\u6240\u6709\u5e27\u4e2d\u9009\u53d6\u4e00\u4e2a\u5e27\u6765\u8ba1\u7b97\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u4e00\u5b9a\u6709\u5fc5\u8981\u63d0\u524d\u89c4\u5b9a\u6bcf\u4e2a\u8fdb\u7a0b\u6700\u591a\u80fd\u591f\u4f7f\u7528\u591a\u5c11\u4e2a frame\uff1b\u800c\u5982\u679c\u6211\u4eec\u91c7\u53d6 \u5c40\u90e8\u66ff\u6362 (local replacement)\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u63d0\u524d\u628a\u7269\u7406 frame \u7684\u8d44\u6e90\u5206\u914d\u7ed9\u5404\u4e2a\u8fdb\u7a0b\u3002</p> <p>\u663e\u7136\uff0c\u524d\u8005\u80fd\u591f\u63d0\u4f9b\u66f4\u597d\u7684\u7cfb\u7edf\u541e\u5410\u91cf\uff0c\u56e0\u6b64\u4e5f\u66f4\u5e38\u7528\u3002\u5f53\u7136\uff0c\u524d\u8005\u4e5f\u5b58\u5728\u5f0a\u7aef\uff0c\u56e0\u4e3a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u7684 page-fault rate \u5c31\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u5b83\u81ea\u5df1\uff0c\u8fd8\u53d6\u51b3\u4e8e\u5176\u4ed6\u8fdb\u7a0b\u7684\u8fd0\u884c\u72b6\u51b5\u3002</p> <p>\u5f53\u6211\u4eec\u9700\u8981\u51b3\u5b9a\u4e00\u4e2a\u8fdb\u7a0b\u80fd\u591f\u4f7f\u7528\u7684\u9875\u9762\u603b\u6570\u65f6\uff0c\u6211\u4eec\u5728\u4e0a\u8ff0\u6700\u5c0f\u548c\u6700\u5927\u7684\u533a\u95f4\u5185\u6709\u975e\u5e38\u591a\u7684\u9009\u62e9\uff0c\u8fd9\u5c31\u5f15\u5165\u4e86\u5206\u914d\u7b97\u6cd5\u3002\u5e38\u89c1\u7684\u5206\u914d\u7b97\u6cd5\u5305\u62ec\u5e73\u5747\u5206\u914d\uff0c\u6216\u8005\u6309\u8fdb\u7a0b\u5bf9\u5185\u5b58\u7684\u5b9e\u9645\u9700\u6c42\u6309\u6bd4\u4f8b\u5206\u914d\uff1b\u4e5f\u53ef\u4ee5\u53c2\u8003\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\uff0c\u9ad8\u4f18\u5148\u7ea7\u76f8\u5bf9\u5206\u914d\u5230\u7684\u66f4\u591a\uff0c\u6216\u8005\u66f4\u80fd\u6ee1\u8db3\u5176\u5b9e\u9645\u9700\u6c42\u3002</p> <p>\u73b0\u5728\u7684\u5f88\u591a\u8ba1\u7b97\u673a\u90fd\u6709\u591a\u4e2a CPU\uff0c\u800c\u6bcf\u4e2a CPU \u90fd\u53ef\u4ee5\u6bd4\u5176\u4ed6 CPU \u66f4\u5feb\u5730\u8bbf\u95ee\u5185\u5b58\u7684\u67d0\u4e9b\u90e8\u5206\u3002\u5982\u679c\u8fd9\u79cd\u5dee\u5f02\u6bd4\u8f83\u660e\u663e\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u7cfb\u7edf\u4e3a \u975e\u5747\u5300\u5185\u5b58\u8bbf\u95ee (NUMA, Non-Uniform Memory Access) \u7cfb\u7edf\u3002\u5728\u8fd9\u79cd\u7cfb\u7edf\u4e0b\uff0c\u4e3a\u4e86\u66f4\u597d\u7684\u6027\u80fd\u8868\u73b0\uff0c\u524d\u8ff0\u7684\u5206\u914d\u548c\u8c03\u9875\u7b97\u6cd5\u53ef\u80fd\u66f4\u52a0\u590d\u6742\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#106-thrashing","title":"10.6 Thrashing","text":"<p>\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u7528\u7684\u5e27\u6570\u91cf\u6bd4\u8f83\u5c11\uff08\u5c11\u4e8e\u5176\u9891\u7e41\u8bbf\u95ee\u7684\u9875\u9762\u6570\u76ee\uff09\uff0c\u90a3\u4e48\u5b83\u4f1a\u9891\u7e41\u51fa\u73b0 page fault\uff1b\u540c\u4e00\u4e2a page \u53ef\u80fd\u4f1a\u88ab\u9891\u7e41\u5730\u6362\u5165\u6362\u51fa\uff0c\u4ee5\u6ee1\u8db3\u8fd0\u884c\u7684\u8981\u6c42\u3002\u8fd9\u79cd\u9ad8\u5ea6\u7684\u9875\u9762\u8c03\u5ea6\u6d3b\u52a8\u6210\u4e3a\u79f0\u4e3a \u6296\u52a8 (thrashing)\uff1b\u5176\u8c03\u9875\u65f6\u95f4\u751a\u81f3\u4f1a\u5927\u4e8e\u6267\u884c\u65f6\u95f4\u3002</p> <p>\u5de5\u4f5c\u96c6\u6a21\u578b (working set model) \u7528\u6765\u786e\u5b9a\u4e00\u4e2a\u8fdb\u7a0b\u9891\u7e41\u8bbf\u95ee\u7684\u9875\u9762\uff0c\u4fdd\u8bc1\u8fd9\u4e9b\u9875\u9762\u4e0d\u88ab\u6362\u51fa\uff1b\u9700\u8981\u8c03\u9875\u65f6\u4ece\u5269\u4f59\u7684\u9875\u9762\u8fdb\u884c\u4ea4\u6362\u3002\u5982\u679c\u9891\u7e41\u8bbf\u95ee\u7684\u9875\u9762\u6570\u5df2\u7ecf\u5927\u4e8e\u4e86\u5f53\u524d\u8fdb\u7a0b\u53ef\u7528\u7684\u9875\u9762\u6570\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c31\u5e94\u5f53\u628a\u6574\u4e2a\u8fdb\u7a0b\u6362\u51fa\uff0c\u4ee5\u9632\u6b62\u51fa\u73b0\u6296\u52a8\u73b0\u8c61\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#107-kernel-memory-allocation","title":"10.7 Kernel Memory Allocation","text":"<p>Kernel \u4e2d\u7684\u5f88\u591a\u6570\u636e\u7ed3\u6784\u5927\u5c0f\u533a\u5206\u6bd4\u8f83\u5927\uff0c\u5176\u4e2d\u5f88\u591a\u5c0f\u4e8e\u751a\u81f3\u8fdc\u5c0f\u4e8e\u4e00\u4e2a page\u3002\u56e0\u6b64\uff0ckernel \u7684\u8bbe\u8ba1\u5e94\u5f53\u5c3d\u53ef\u80fd\u8282\u7701\u5185\u5b58\uff0c\u52aa\u529b\u51cf\u5c11\u788e\u7247\u3002</p> <p>\u5c3d\u53ef\u80fd\u51cf\u5c0f kernel \u5185\u5b58\u5f00\u9500\u7684\u8003\u8651\u662f\uff1a\u4e00\u65b9\u9762\uff0ckernel \u6709\u53ef\u80fd\u6709\u4e00\u90e8\u5206\u5e38\u9a7b\u5728\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u4e0d\u53d7\u8c03\u9875\u7cfb\u7edf\u7684\u63a7\u5236\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u6709\u7684\u786c\u4ef6\u8bbe\u5907\u53ef\u80fd\u548c\u7269\u7406\u5185\u5b58\u76f4\u63a5\u4ea4\u4e92\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u9700\u8981\u8fde\u7eed\u7684\u7269\u7406\u5185\u5b58\u3002\u8fd9\u4e24\u8005\u5bf9\u7269\u7406\u5185\u5b58\u7684\u8981\u6c42\u90fd\u6bd4\u8f83\u4e25\u683c\uff0c\u56e0\u6b64\u6211\u4eec\u5e94\u5f53\u5c3d\u53ef\u80fd\u51cf\u5c0f\u8fd9\u4e9b\u5f00\u9500\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#1071-buddy-system","title":"10.7.1 Buddy System","text":"<p>Buddy system \u4ece\u7269\u7406\u8fde\u7eed\u7684\u6bb5\u4e0a\u5206\u914d\u5185\u5b58\uff1b\u6bcf\u6b21\u5206\u914d\u5185\u5b58\u5927\u5c0f\u662f 2 \u7684\u5e42\u6b21\u65b9\uff0c\u4f8b\u5982\u8bf7\u6c42\u662f 11KB\uff0c\u5219\u5206\u914d 16KB\u3002</p> <p>\u5f53\u5206\u914d\u65f6\uff0c\u4ece\u7269\u7406\u6bb5\u4e0a\u5207\u5206\u51fa\u5bf9\u5e94\u7684\u5927\u5c0f\uff0c\u4f8b\u5982\u4e0b\u56fe\u4f53\u73b0\u4e86\u5206\u914d 21KB \u65f6\u7684\u60c5\u51b5\uff0c\\(C_L\\) \u4f1a\u88ab\u5206\u914d\u3002</p> <p></p> <p>\u5f53\u5b83\u88ab\u91ca\u653e\u65f6\uff0c\u4f1a \u5408\u5e76 (coalesce) \u76f8\u90bb\u7684\u5757\u5f62\u6210\u66f4\u5927\u7684\u5757\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/10_virtual_memory/#1072-slab-allocation","title":"10.7.2 Slab Allocation","text":"<p>\u6838\u5fc3\u7684\u539f\u7406\u662f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5f88\u591a object \u7684\u5927\u5c0f\u662f\u5df2\u77e5\u4e14\u56fa\u5b9a\u7684\u3002\u5185\u5b58\u88ab\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u5757\uff0c\u6bcf\u4e2a\u5757\u90fd\u88ab\u5206\u914d\u7ed9\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\u578b\u3002\u5f53\u8fdb\u7a0b\u9700\u8981\u5206\u914d\u5185\u5b58\u65f6\uff0c\u5b83\u4f1a\u67e5\u8be2\u7f13\u5b58\uff0c\u5982\u679c\u627e\u5230\u4e00\u4e2a\u7a7a\u95f2\u7684\u5757\uff0c\u5c31\u76f4\u63a5\u4f7f\u7528\u8be5\u5757\uff1b\u5982\u679c\u7f13\u5b58\u4e2d\u6ca1\u6709\u7a7a\u95f2\u7684\u5757\uff0c\u5c31\u4f1a\u4ece\u7cfb\u7edf\u5185\u5b58\u4e2d\u7533\u8bf7\u4e00\u4e2a\u65b0\u7684\u5757\uff1a</p> <p></p> <ol> <li> <p>https://unix.stackexchange.com/questions/487052/where-is-page-table-stored-in-linux#comment893427_487056 \u21a9</p> </li> </ol>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/","title":"9 Main Memory | \u4e3b\u5b58","text":"<p> \u7ea6 5990 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 20 \u5206\u949f</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#91-background","title":"9.1 Background","text":""},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#911-memory","title":"9.1.1 Memory","text":"<p>\u5185\u5b58\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u5b57\u8282\u6570\u7ec4\uff0cCPU \u6839\u636e PC (Program Counter) \u7684\u503c\u4ece\u5185\u5b58\u4e2d\u63d0\u53d6\u6307\u4ee4\u3002\u7a0b\u5e8f\u9700\u8981\u8fd0\u884c\uff0c\u81f3\u5c11\u90e8\u5206\u7a0b\u5e8f\u53ca\u5176\u8bbf\u95ee\u7684\u6570\u636e\u5e94\u5728\u5185\u5b58\u4e2d\uff08\u6216\u8005\u66f4\u660e\u786e\u5730\uff0c\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u8fdb\u7a0b\u91cc\uff09\u3002</p> <p>CPU \u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7684\u901a\u7528\u5b58\u50a8\u53ea\u6709 main memory \u548c registers\u3002\u5bf9 registers \u7684\u8bbf\u95ee\u901a\u5e38\u53ef\u4ee5\u5728\u4e00\u4e2a CPU \u65f6\u949f\u5468\u671f\u4e2d\u5b8c\u6210\uff0c\u800c\u5b8c\u6210\u5185\u5b58\u7684\u8bbf\u95ee\u53ef\u80fd\u9700\u8981\u591a\u4e2a\u65f6\u949f\u5468\u671f\u3002\u5728\u8fd9\u4e9b\u65f6\u949f\u5468\u671f\u91cc\uff0c\u7531\u4e8e\u6ca1\u6709\u7528\u6765\u5b8c\u6210\u6307\u4ee4\u7684\u6570\u636e\uff0c\u8fd9\u4f1a\u5f15\u8d77 stall\uff08\u6682\u505c\uff0c\u629b\u951a\uff09\u3002\u4e3a\u4e86\u8865\u6551\uff0c\u6211\u4eec\u5728 CPU \u82af\u7247\u4e0a\u589e\u8bbe\u66f4\u5feb\u7684\u5185\u5b58\uff0c\u79f0\u4e3a cache\u00a0\u3002</p> <p>\u540c\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u62a4\u5185\u5b58\u7a7a\u95f4\uff0c\u9632\u6b62\u7528\u6237\u7a0b\u5e8f\u4fee\u6539\u64cd\u4f5c\u7cfb\u7edf\u6216\u5176\u4ed6\u7528\u6237\u7a0b\u5e8f\u7684\u4ee3\u7801\u6216\u8005\u6570\u636e\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#912-address-binding","title":"9.1.2 Address Binding","text":"<p>\u5982\u6211\u4eec\u524d\u9762\u6240\u8bf4\uff0c\u6267\u884c\u7a0b\u5e8f\u5fc5\u987b\u5c06\u5176\u8c03\u5165\u5185\u5b58\u4ee5\u4f9b\u8fdb\u7a0b\u4f7f\u7528\u3002\u6e90\u7a0b\u5e8f\u4e2d\u7684\u5730\u5740\u901a\u5e38\u662f\u7528\u7b26\u53f7\u8868\u793a\uff08symbolic, \u4f8b\u5982\u5404\u79cd\u53d8\u91cf\u3001\u51fd\u6570\u540d\uff1b\u6c47\u7f16\u4e2d\u7684 label \u7b49\uff09\uff1b\u7f16\u8bd1\u5668\u4f1a\u5c06\u5176\u7ed1\u5b9a\u5230 relocatable addresses\uff0c\u5373\u76f8\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u6bb5/\u6a21\u5757\u7b49\u7684\u504f\u79fb\uff0c\u4f8b\u5982 <code>sp - 8</code>, <code>ds:[0]</code>\uff1b\u94fe\u63a5\u5668\u6216\u52a0\u8f7d\u5668\uff08linker / loader\uff09\u4f1a\u5c06 relocatable addresses\u00a0\u7ed1\u5b9a\u5230 absolute addresses\u3002\u5f53\u7136\uff0c\u5982\u679c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u5c31\u77e5\u9053\u7a0b\u5e8f\u6240\u5904\u7684\u5185\u5b58\u5730\u5740\uff0c\u5219\u4f1a\u751f\u6210 absolute code\u3002</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#92-contiguous-memory-allocation---partitioning-strategies","title":"9.2 Contiguous Memory Allocation - Partitioning Strategies","text":"<p>\u5728 Batch \u7cfb\u7edf\u4e2d\uff0c\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u7a0b\u5e8f\u88ab\u52a0\u8f7d\u5165\u7269\u7406\u5185\u5b58\uff0c\u5e76\u88ab\u8fd0\u884c\u81f3\u7ed3\u675f\u3002\u5982\u679c\u7a0b\u5e8f\u6240\u9700\u7684\u5b58\u50a8\u7a7a\u95f4\u6bd4\u7269\u7406\u5185\u5b58\u5927\uff0c\u5219\u5c06\u7a0b\u5e8f\u5206\u5f00\u4e3a\u53ef\u4ee5\u8fd0\u884c\u81f3\u4ea7\u751f\u67d0\u4e2a\u7ed3\u679c\u4e14\u5927\u5c0f\u53ef\u4ee5\u653e\u5165\u7a7a\u4f59\u5185\u5b58\u7684\u90e8\u5206\uff0c\u9010\u4e2a\u8fd0\u884c\uff0c\u5c06\u8fd0\u884c\u7ed3\u679c\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u90e8\u5206\u3002</p> <p>\u4e0e\u8fd9\u79cd \"prehistroy\"\u7cfb\u7edf\u4e0d\u540c\u7684\u662f\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u628a\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u4e14\u652f\u6301\u5176\u5f7c\u6b64\u4e4b\u95f4\u7684\u5feb\u901f\u5207\u6362\u3002\u6700\u7b80\u5355\u7684\u5185\u5b58\u5206\u914d\u65b9\u6cd5\u4e4b\u4e00\uff0c\u5c31\u662f\u5c06\u5185\u5b58\u5206\u6210\u8bb8\u591a\u7684 partition\uff0c\u6bcf\u4e2a partition \u5305\u542b\u4e00\u4e2a\u8fdb\u7a0b\u3002\u5176\u8981\u6c42\u6709\uff1a</p> <ul> <li>Protection:\u00a0\u4fdd\u8bc1\u8fdb\u7a0b\u4e4b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u95ef\u5165\u5bf9\u65b9\u7684\u5b58\u50a8\u3002</li> <li>Fast execution:\u00a0\u4e0d\u80fd\u7531\u4e8e protection \u964d\u4f4e\u8bbf\u95ee\u5185\u5b58\u7684\u6548\u7387\u3002</li> <li>Fast context switch:\u00a0\u6bcf\u5f53\u8fdb\u884c context switch \u65f6\uff0c\u53ef\u4ee5\u6bd4\u8f83\u5feb\u5730\u627e\u5230\u5e76\u8bbf\u95ee\u5f53\u524d\u8fdb\u7a0b\u7684\u5185\u5b58\u3002</li> </ul> <p>\u5f53\u8fdb\u7a0b\u8fdb\u5165\u7cfb\u7edf\uff0c\u64cd\u4f5c\u7cfb\u7edf\u6839\u636e\u5404\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u9700\u8981\u4ee5\u53ca\u5f53\u524d\u7684\u7a7a\u95f2\u5185\u5b58\u7a7a\u95f4\u6765\u51b3\u5b9a\u4e3a\u54ea\u4e9b\u8fdb\u7a0b\u5206\u914d\u5185\u5b58\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u88ab\u5206\u914d\u5230\u4e86\u7a7a\u95f4\uff0c\u4ed6\u5c06\u88ab\u8f7d\u5165\u5230\u5185\u5b58\u4e2d\uff0c\u5e76\u4e0e\u5176\u4ed6\u8fdb\u7a0b\u7ade\u4e89 CPU \u65f6\u95f4\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u65f6\uff0c\u5b83\u91ca\u653e\u5b83\u7684\u7a7a\u95f4\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u8bf7\u6c42\u7a7a\u95f4\u6765\u8fd0\u884c\uff0c\u4f46\u8fd9\u91cc\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u6765\u6ee1\u8db3\u5176\u8981\u6c42\uff0c\u6709\u4e24\u79cd\u53ef\u9009\u7684\u89e3\u51b3\u529e\u6cd5\u3002\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u62d2\u7edd\u5176\u8bf7\u6c42\u5e76\u7ed9\u51fa\u4e00\u4e2a\u9519\u8bef\u4fe1\u606f\uff1b\u53e6\u4e00\u79cd\u662f\u5c06\u5176\u52a0\u5165 waiting queue \u4e2d\uff0c\u5f53\u6709\u5185\u5b58\u88ab\u91ca\u653e\u65f6 CPU \u6765\u68c0\u67e5\u662f\u5426\u4e3a\u5176\u5206\u914d\u5185\u5b58\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#921-fixed-partition","title":"9.2.1 Fixed Partition","text":"<p>\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u56fa\u5b9a partition \u7684\u5927\u5c0f\uff08\u9664\u4e86 OS \u4f7f\u7528\u7684\u5185\u5b58\uff09\u3002\u8fd9\u79cd\u65b9\u5f0f\u975e\u5e38\u5bb9\u6613\u5b9e\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a partition \u662f\u5426\u88ab\u5360\u7528\u5373\u53ef\u3002\u4f46\u663e\u7136\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u5185\u5b58\u6d6a\u8d39\u3002\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u5982\u56fe Process 1 \u4f7f\u7528\u4e86 Partition 1\uff0c\u4f46\u5176\u6240\u9700\u7a7a\u95f4\u5c0f\u4e8e Partition 1 \u7684\u5927\u5c0f\uff0c\u56e0\u6b64\u4f1a\u5bfc\u81f4\u7ea2\u8272\u90e8\u5206\u7684\u5185\u5b58\u6ca1\u6709\u88ab\u4f7f\u7528\u4e14\u4e0d\u80fd\u88ab\u522b\u7684\u8fdb\u7a0b\u4f7f\u7528\uff08\u56e0\u4e3a\u6bcf\u4e2a partition \u53ea\u80fd\u88ab\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528\uff09\u3002\u7531\u4e8e\u8fd9\u662f partition \u5185\u90e8\u7684\u4e0d\u53ef\u7528\u5185\u5b58\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a Internal Fragmentation\u3002\u8fd9\u4f1a\u5e26\u6765\u6781\u5927\u7684\u5185\u5b58\u635f\u5931\uff0c\u5c24\u5176\u662f\u5728\u8fdb\u7a0b\u4e4b\u95f4\u6240\u9700\u5b58\u50a8\u7a7a\u95f4\u5927\u5c0f\u5dee\u8ddd\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\uff08\u56e0\u4e3a\u6211\u4eec\u603b\u662f\u9700\u8981\u6839\u636e\u6240\u9700\u7a7a\u95f4\u6700\u5927\u7684\u8fdb\u7a0b\u5207\u5206\u5185\u5b58\uff09\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#922-variable-partition","title":"9.2.2 Variable Partition","text":"<p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u8003\u8651\u4e0d\u56fa\u5b9a partition \u7684\u5927\u5c0f\u3002\u5728\u8fd9\u79cd\u65b9\u6848\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7ef4\u62a4\u4e00\u4e2a\u8868\uff0c\u8bb0\u5f55\u53ef\u7528\u548c\u5df2\u7528\u7684\u5185\u5b58\u3002\u6700\u5f00\u59cb\u65f6\u6574\u4e2a\u5185\u5b58\u5c31\u662f\u4e00\u5927\u5757\u53ef\u7528\u7684\u5185\u5b58\u5757\uff08\u5c06\u53ef\u7528\u5185\u5b58\u5757\u79f0\u4e3a hole\uff09\uff1b\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u8fd0\u884c\u540e\uff0c\u5185\u5b58\u53ef\u80fd\u4f1a\u5305\u542b\u4e00\u7cfb\u5217\u4e0d\u540c\u5927\u5c0f\u7684\u5b54\u3002\u4e0b\u56fe\u662f\u4e00\u4e2a\u793a\u4f8b\u3002</p> <p></p> <p>\u5f88\u53ef\u80fd\u5728\u8fdb\u884c\u4e00\u6bb5\u65f6\u95f4\u7684\u8fd0\u884c\u540e\uff0c\u7a7a\u95f2\u5185\u5b58\u7a7a\u95f4\u88ab\u5206\u4e3a\u5927\u91cf\u7684 hole\uff0c\u5b83\u4eec\u603b\u4f53\u52a0\u8d77\u6765\u53ef\u4ee5\u6ee1\u8db3\u8fdb\u7a0b\u8981\u6c42\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u8fde\u7eed\uff0c\u6bcf\u4e00\u4e2a\u5c0f\u7684 hole \u90fd\u4e0d\u53ef\u4ee5\u88ab\u5229\u7528\u3002\u6211\u4eec\u79f0\u8fd9\u79cd\u95ee\u9898\u4e3a External Fragmentation\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u4e0d\u53ef\u7528\u5185\u5b58\u662f\u5206\u5e03\u5728 partition \u4e4b\u5916\u7684\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#923-dynamic-storage-allocation-problem","title":"9.2.3 Dynamic Storage-Allocation Problem","text":"<p>\u6839\u636e\u4e00\u7ec4 hole \u6765\u5206\u914d\u5927\u5c0f\u4e3a n \u7684\u8bf7\u6c42\uff0c\u79f0\u4e3a dynamic storage-allocation problem\u3002\u8fd9\u4e2a\u95ee\u9898\u6700\u5e38\u7528\u7684\u89e3\u51b3\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ul> <li>first-fit\u00a0- \u5206\u914d\u9996\u4e2a\u8db3\u591f\u5927\u7684 hole\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u4f7f\u5f97\u5206\u914d\u96c6\u4e2d\u5728\u4f4e\u5730\u5740\u533a\uff0c\u5e76\u5728\u6b64\u5904\u4ea7\u751f\u5927\u91cf\u7684\u788e\u7247\uff0c\u5728\u6bcf\u6b21\u5c1d\u8bd5\u5206\u914d\u7684\u65f6\u5019\u90fd\u4f1a\u904d\u5386\u5230\uff0c\u589e\u5927\u67e5\u627e\u7684\u5f00\u9500\u3002</li> <li>best-fit\u00a0- \u5206\u914d\u6700\u5c0f\u7684\u8db3\u591f\u5927\u7684 hole\u3002\u9664\u975e\u7a7a\u95f2\u5217\u8868\u6309\u5927\u5c0f\u6392\u5e8f\uff0c\u5426\u5219\u8fd9\u79cd\u65b9\u6cd5\u9700\u8981\u5bf9\u6574\u4e2a\u5217\u8868\u8fdb\u884c\u904d\u5386\u3002\u8fd9\u79cd\u65b9\u6cd5\u540c\u6837\u4f1a\u7559\u4e0b\u8bb8\u591a\u788e\u7247\u3002</li> <li>worst-fit\u00a0- \u5206\u914d\u6700\u5927\u7684 hole\u3002\u540c\u6837\uff0c\u9664\u975e\u5217\u8868\u6709\u5e8f\uff0c\u5426\u5219\u6211\u4eec\u9700\u8981\u904d\u5386\u6574\u4e2a\u5217\u8868\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u597d\u5904\u662f\u6bcf\u6b21\u5206\u914d\u540e\u901a\u5e38\u4e0d\u4f1a\u4f7f\u5269\u4e0b\u7684\u7a7a\u95f2\u5757\u592a\u5c0f\uff0c\u8fd9\u5728\u4e2d\u5c0f\u8fdb\u7a0b\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\u6027\u80fd\u8f83\u597d\uff0c\u5e76\u4e14\u4ea7\u751f\u788e\u7247\u7684\u51e0\u7387\u66f4\u5c0f\u3002</li> </ul> <p>Simulations have shown that both first fit and best fit are better than worst fit in terms of decreasing time and storage utilization. Neither first fit nor best fit is clearly better than the other in terms of storage utilization, but first fit is generally faster.</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#924-protection","title":"9.2.4 Protection","text":"<p>\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u4e00\u4e2a\u8fdb\u7a0b\u80fd\u4e14\u4ec5\u80fd\u8bbf\u95ee\u81ea\u5df1\u7a7a\u95f4\u4e2d\u7684\u5730\u5740\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u5957 base\u00a0\u548c limit\u00a0\u5bc4\u5b58\u5668\u6765\u786e\u5b9a\u4e00\u4e2a\u7a0b\u5e8f\u7684\u7a7a\u95f4\uff1a</p> <p></p> <p>\u6bcf\u5f53 context switch \u5230\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u65f6\uff0cCPU \u4f1a load \u8fd9\u4e24\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u3002\u6bcf\u5f53 user mode \u60f3\u8981\u8fdb\u884c\u4e00\u6b21\u5185\u5b58\u8bbf\u95ee\u65f6\uff0cCPU \u90fd\u8981\u68c0\u67e5\u5176\u662f\u5426\u8bd5\u56fe\u8bbf\u95ee\u975e\u6cd5\u5730\u5740\uff1b\u5982\u679c\u662f\uff0c\u5219\u4f1a\u5f15\u53d1\u4e00\u4e2a trap \u5e76\u88ab\u5f53\u505a\u81f4\u547d\u9519\u8bef\u5904\u7406\uff08\u901a\u5e38\u4f1a terminate \u6389\u8fdb\u7a0b\uff09\uff1a</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#93-segmentation","title":"9.3 Segmentation","text":""},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#931-basic-method","title":"9.3.1 Basic Method","text":"<p>\u867d\u7136\u6211\u4eec\u7a0b\u5e8f\u4e2d\u7684\u4e3b\u51fd\u6570\u3001\u6570\u7ec4\u3001\u7b26\u53f7\u8868\u3001\u5b50\u51fd\u6570\u7b49\u7b49\u5185\u90e8\u9700\u8981\u6709\u4e00\u5b9a\u7684\u987a\u5e8f\uff0c\u4f46\u662f\u8fd9\u4e9b\u6a21\u5757\u4e4b\u95f4\u7684\u5148\u540e\u987a\u5e8f\u662f\u65e0\u5173\u7d27\u8981\u7684\u3002\u56e0\u6b64\uff0c\u867d\u7136\u5b9e\u9645\u4e0a\u5185\u5b58\u662f\u4e00\u4e2a\u7ebf\u6027\u7684\u5b57\u8282\u6570\u7ec4\uff0c\u4f46\u662f\u5728\u7528\u6237\u770b\u6765\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u957f\u6210\u8fd9\u4e2a\u6837\u5b50\uff1a</p> <p></p> <p>\u5373\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u662f\u7531\u4e00\u7ec4 segment\u00a0\uff08\u6bb5\uff09\u6784\u6210\u7684\uff0c\u6bcf\u4e2a segment \u90fd\u6709\u5176\u540d\u79f0\u548c\u957f\u5ea6\u3002\u6211\u4eec\u53ea\u8981\u77e5\u9053 segment \u5728\u7269\u7406\u5185\u5b58\u4e2d\u7684\u57fa\u5730\u5740 (base) \u548c\u6bb5\u5185\u504f\u79fb\u5730\u5740 (offset) \u5c31\u53ef\u4ee5\u5bf9\u5e94\u5230\u7269\u7406\u5730\u5740\u4e2d\u4e86\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a segment\uff0c\u6211\u4eec\u7ed9\u5176\u4e00\u4e2a\u7f16\u53f7\u3002\u5373\uff0c\u6211\u4eec\u901a\u8fc7\u4e8c\u5143\u6709\u5e8f\u7ec4  \u8868\u793a\u4e86\u4e00\u4e2a\u5730\u5740\u3002\u8fd9\u79cd\u8868\u793a\u79f0\u4e3a logical address\uff08\u903b\u8f91\u5730\u5740\uff09\u6216 virtual address\uff08\u865a\u62df\u5730\u5740\uff09\u3002 <p>\u901a\u5e38\uff0c\u5728\u7f16\u8bd1\u7528\u6237\u7a0b\u5e8f\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u6784\u9020\u6bb5\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#932-logical-address--mmu","title":"9.3.2 Logical Address &amp; MMU","text":"<p>\u8981\u5c06\u903b\u8f91\u5730\u5740\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u627e\u5230\u6bb5\u7684\u57fa\u5730\u5740\u3002\u6211\u4eec\u6709\u4e00\u4e2a segment table\uff0c\u5176\u4e2d\u6bcf\u4e2a\u6761\u76ee\u4ee5 segment-number \u7d22\u5f15\uff0c\u5b58\u50a8\u5176 \u6bb5\u57fa\u5730\u5740 segment-base \u548c \u6bb5\u754c\u9650 segment-limit\uff08\u53ef\u80fd\u8fd8\u5305\u542b\u6743\u9650\u4f4d\uff09\u3002\u56e0\u6b64\u903b\u8f91\u5730\u5740\u7684\u6620\u5c04\u65b9\u5f0f\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u8fd9\u4e00\u8fc7\u7a0b\u662f\u7531\u786c\u4ef6\u8bbe\u5907 MMU (Memory-Management Unit, \u5185\u5b58\u7ba1\u7406\u5355\u5143)\u00a0\u5b8c\u6210\u7684\u3002CPU \u4f7f\u7528\u7684\u662f\u903b\u8f91\u5730\u5740\uff0c\u800c\u5185\u5b58\u5bfb\u5740\u4f7f\u7528\u7684\u662f\u7269\u7406\u5730\u5740\uff0cMMU \u5b8c\u6210\u7684\u662f\u7ffb\u8bd1\uff08\u6620\u5c04\uff09\u548c\u4fdd\u62a4\u5de5\u4f5c\uff1a</p> <p></p> <p>\u8fd9\u91cc\u7684 relocation register\u00a0\u5373\u4e3a base register\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#933-problems","title":"9.3.3 Problems","text":"<p>\u5206\u6bb5\u5c06\u4e00\u4e2a\u7a0b\u5e8f\u5206\u4e3a\u6570\u4e2a\u90e8\u5206\uff0c\u4f46\u662f\u5176\u5185\u5b58\u5206\u914d\u7684\u7b56\u7565\u4e0e\u7b80\u5355\u7684 partition \u662f\u4e00\u81f4\u7684\u3002\u56e0\u6b64\uff0c\u5206\u6bb5\u4ecd\u7136\u4f1a\u5b58\u5728 external fragmentation \u7684\u95ee\u9898\u3002\u518d\u6b21\u56de\u987e\u8fd9\u4e2a\u95ee\u9898\uff1a\u5176\u8868\u5f81\u662f\u603b\u7a7a\u4f59\u5185\u5b58\u662f\u8db3\u591f\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u5b83\u4e0d\u8fde\u7eed\u5bfc\u81f4\u5176\u65e0\u6cd5\u4f7f\u7528\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u95ee\u9898\u7684\u6838\u5fc3\u70b9\u5728\u4e8e not contiguous\u3002\u6211\u4eec\u6709\u4e24\u79cd\u601d\u8def\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff1a\u5c06\u5185\u5b58\u91cd\u6392\u4f7f\u5f97 holes \u8fde\u6210\u4e00\u5757\uff1b\u6216\u8005\u8bbe\u8ba1\u65b9\u6848\u8ba9\u7a0b\u5e8f\u4e0d\u518d\u9700\u8981\u8fde\u7eed\u7684\u5730\u5740\u3002</p> <p>Compaction\u00a0\u5c31\u662f\u5c06\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u91cd\u6392\u4f7f\u5f97\u6240\u6709\u7a7a\u95f2\u7a7a\u95f4\u8fde\u7eed\u3002\u8fd9\u4e00\u64cd\u4f5c\u8981\u6c42\u5185\u5b58\u4e2d\u7684\u7a0b\u5e8f\u662f relocatable\u00a0 \u7684\uff0c\u5373\u5176\u5730\u5740\u662f\u76f8\u5bf9 base \u7684\u504f\u79fb\uff1b\u8fd9\u4e00\u8981\u6c42\u5728\u524d\u9762\u4e24\u79cd\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u4e2d\u662f\u6ee1\u8db3\u7684\u3002\u4f46\u662f\u8fd9\u4e00\u64cd\u4f5c\u9700\u8981\u5c06\u5185\u5b58\u9010\u4e00\u590d\u5236\uff0c\u8fd9\u5c06\u6d88\u8017\u5f88\u591a\u65f6\u95f4\u3002</p> <p>\u8003\u8651\u300c\u8ba9\u7a0b\u5e8f\u4e0d\u518d\u9700\u8981\u8fde\u7eed\u7684\u5730\u5740\u300d\u3002\u5b9e\u9645\u4e0a\uff0c\u5206\u6bb5\u5df2\u7ecf\u662f\u8fd9\u4e2a\u65b9\u5411\u4e0a\u505a\u51fa\u7684\u4e00\u79cd\u5c1d\u8bd5\u4e86\uff0c\u56e0\u4e3a\u5b83\u5c06\u7a0b\u5e8f\u5206\u4e3a\u4e86\u51e0\u5757\uff0c\u76f8\u6bd4\u4e8e\u7b80\u5355\u7684 partition\uff0c\u5206\u6bb5\u6709\u52a9\u4e8e\u51cf\u5c0f external fragmentation\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u63d0\u51fa paging\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#94-paging","title":"9.4 Paging","text":"<p>Paging \uff08\u5206\u9875\uff09\u662f\u4e00\u79cd\u5141\u8bb8\u8fdb\u7a0b\u7684\u7269\u7406\u5730\u5740\u7a7a\u95f4\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u7ba1\u7406\u65b9\u6848\u3002\u5b83\u907f\u514d\u4e86 external fragmentation \u548c Compaction\u3002\u5404\u79cd\u5f62\u5f0f\u7684 paging \u88ab\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u91c7\u7528\uff1b\u5b9e\u73b0 paging \u9700\u8981 OS \u548c\u786c\u4ef6\u7684\u534f\u4f5c\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#941-basic-method","title":"9.4.1 Basic Method","text":"<p>\u6211\u4eec\u5c06 physical memory \u5207\u5206\u6210\u7b49\u5927\u5c0f\u7684\u5757\uff082 \u7684\u5e42\uff0c\u901a\u5e38\u4e3a 4KB = 212B\uff09\uff0c\u79f0\u4e3a frames\uff08\u5e27\uff09\uff1b\u5c06 logical memory \u5207\u5206\u6210\u540c\u6837\u5927\u5c0f\u7684\u5757\uff0c\u79f0\u4e3a pages\uff08\u9875\uff09\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u8981\u6267\u884c\u65f6\uff0c\u5176\u5185\u5bb9\u586b\u5230\u4e00\u4e9b\u53ef\u7528\u7684 frame \u4e2d\uff0c\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5730\u5740\u53ef\u4ee5\u7528\u8fd9\u4e2a frame \u7684 base \u6216 number\uff08\u7531\u4e8e frame \u662f\u88ab\u7b49\u5927\u5207\u5206\u51fa\u6765\u7684\uff0c\u56e0\u6b64\u6bcf\u4e2a frame \u7684 base \u4e5f\u552f\u4e00\u5bf9\u5e94\u4e00\u4e2a frame number\uff09\u4ee5\u53ca\u76f8\u5bf9\u8fd9\u4e2a base \u7684 offset \u8868\u793a\uff1b\u540c\u65f6 CPU \u751f\u6210\u903b\u8f91\u5730\u5740\uff0c\u903b\u8f91\u5730\u5740\u5305\u542b\u4e00\u4e2a page number \u548c\u4e00\u4e2a page offset\uff1b\u53e6\u6709\u4e00\u4e2a page table\uff0c\u5b83\u4ee5 page number \u7d22\u5f15\uff0c\u5176\u4e2d\u7684\u7b2c i\u00a0\u9879\u5b58\u50a8\u7684\u662f page number \u4e3a i\u00a0\u7684 page \u6240\u5728\u7269\u7406\u5185\u5b58\u7684 frame \u7684 base\u3002\u8fd9\u6837\uff0c\u6bcf\u4e00\u4e2a page \u5c06\u901a\u8fc7\u5176 page number \u6620\u5c04\u5230\u4e00\u4e2a frame \u4e0a\uff1b\u8fdb\u800c page \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5730\u5740\u4e5f\u901a\u8fc7 offset \u4e0e\u5bf9\u5e94\u7684 frame \u5efa\u7acb\u6620\u5c04\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53 MMU \u9700\u8981\u5c06\u4e00\u4e2a logical address \u7ffb\u8bd1\u4e3a physical address \u65f6\uff0c\u5b83\u9700\u8981\u83b7\u53d6 page number p\uff0c\u5728 page table \u4e2d\u627e\u5230\u7b2c p\u00a0\u4e2a page \u5bf9\u5e94\u7684\u7684 frame number\uff08\u4e5f\u5c31\u662f frame base\uff09 f\u00a0\uff0c\u5728 f\u00a0\u540e\u9762\u8fde\u63a5\u4e0a offset d\u00a0\u5c31\u5f97\u5230\u4e86\u5bf9\u5e94\u7684 physical address\u3002\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0clogical address \u548c physical address \u7684 offset \u5e94\u662f\u4e00\u81f4\u7684\u3002</p> <p></p> <p>\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u9700\u8981\u6267\u884c\u65f6\uff0c\u5176\u6bcf\u4e00\u9875\u90fd\u9700\u8981\u4e00\u5e27\u3002\u56e0\u6b64\uff0c\u5982\u679c\u8fdb\u7a0b\u9700\u8981 n \u9875\uff0c\u5219\u5185\u5b58\u4e2d\u9700\u8981\u6709 n \u4e2a\u5e27\u3002\u5982\u679c\u6709\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5206\u914d\u7ed9\u65b0\u8fdb\u7a0b\uff1a\u8fdb\u7a0b\u7684\u6bcf\u4e00\u9875\u88c5\u5165\u4e00\u4e2a\u5e27\uff0cframe number \u653e\u5165\u8fdb\u7a0b\u7684 page table \u4e2d\u3002</p> <p></p> <p>\u7531\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u7269\u7406\u5185\u5b58\uff0c\u5b83\u5e94\u8be5\u77e5\u9053\u7269\u7406\u5185\u5b58\u7684\u5206\u914d\u7ec6\u8282\uff0c\u5373\u5171\u6709\u591a\u5c11\u5e27\u3001\u5e27\u662f\u5426\u7a7a\u95f2\u7b49\u3002\u8fd9\u4e9b\u4fe1\u606f\u4fdd\u5b58\u5728 frame table\u00a0\u4e2d\uff0c\u6bcf\u4e2a\u6761\u76ee\u5bf9\u5e94\u4e00\u4e2a\u5e27\uff0c\u4fdd\u5b58\u5176\u662f\u5426\u88ab\u5360\u7528\uff1b\u5982\u679c\u88ab\u5360\u7528\uff0c\u662f\u88ab\u54ea\u4e2a\u8fdb\u7a0b\u7684\u54ea\u4e2a\u9875\u5360\u7528\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#942-why-not-contiguous","title":"9.4.2 Why \"Not Contiguous\"","text":"<p>\u8003\u8651\u8fd9\u79cd\u65b9\u5f0f\u4e3a\u4ec0\u4e48\u80fd\u591f\u6ee1\u8db3\u300cnot contiguous\u300d\uff1a\u5728\u524d\u9762\u4e24\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u9700\u8981 contiguous \u662f\u56e0\u4e3a\u5728\u8fd0\u884c\u6bcf\u6761\u6307\u4ee4\u8fc7\u540e PC \u4f1a +1\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u4fdd\u8bc1 contiguous\uff0c\u4ece\u800c\u8ba9 PC+1 \u786e\u5b9e\u6307\u5411\u4e0b\u4e00\u6761\u6307\u4ee4\u3002\u800c\u5728 paging \u4e2d\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u4ecd\u7136\u4fdd\u8bc1\u4e86 PC+1 \u540e\u786e\u5b9e\u6307\u5411\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u53ea\u662f paging \u59cb\u7ec8\u4fdd\u5b58\u7684\u90fd\u662f logical address\u3002Logical address \u7684\u683c\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u53ef\u89c1\uff0c\u5f53 d\u00a0\u662f\u00a0\\(2^n - 1\\)\u00a0\u65f6\uff0c \\(&lt;p, d&gt;\u00a0+ 1\\) \u5373\u4e3a \\(&lt;p+1, 0&gt;\\)\uff08\u5c31\u662f\u4e8c\u8fdb\u5236\u8fdb\u4e86\u4f4d\uff09\u3002\u8fd9\u65f6\u867d\u7136\u4e00\u4e2a page \u5df2\u7ecf\u7ed3\u675f\uff0c\u8fdb\u5165\u5230\u4e86\u4e0b\u4e00\u4e2a page\uff0c\u8fd9\u4e24\u4e2a page \u5bf9\u5e94\u7684 frame \u4e0d\u4e00\u5b9a\u8fde\u7eed\uff0c\u4f46 logical address \u662f\u8fde\u7eed\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7528 logical address \u7684\u8fde\u7eed\u4ee3\u66ff\u4e86 physical address \u7684\u8fde\u7eed\u3002</p> <p>\u4e0b\u56fe\u662f\u4e00\u4e2a\u66f4\u4e3a\u5177\u4f53\u7684\u4f8b\u5b50\uff1a\u5047\u5982\u6bcf\u4e2a\u903b\u8f91\u5730\u5740\u6709 4 \u4f4d\uff0c\u5176\u4e2d p\u00a0\u548c d\u00a0\u5404\u5360 2 \u4f4d\u3002\u4f8b\u5982 MMU \u9700\u8981\u5bfb\u627e\u903b\u8f91\u5730\u5740 1101[13] \u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u4ece\u800c\u83b7\u5f97\u5176\u4e2d\u7684\u5185\u5bb9\uff0c\u5b83\u9996\u5148\u53d6 1101[13] \u7684\u524d 2 \u4f4d 11[3]\uff0c\u8bfb\u53d6 page table \u7684\u7b2c 3 \u9879\uff0c\u7ed3\u679c\u4e3a 010[2]\uff08frame number \u4e0d\u6b62 2 \u4f4d\uff0c\u56e0\u4e3a frame \u4e0d\u6b62 4 \u4e2a\uff09\uff0c\u7136\u540e\u5c06 frame number 10 \u4e0e offset 01 \u8fde\u8d77\u6765\uff0c\u5373 01001[9]\uff0c\u56e0\u6b64 logical address 1101[13] \u5bf9\u5e94\u7684\u662f physical address 01001[9]\uff0c\u5185\u5bb9\u4e3a n\u00a0\u3002</p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u867d\u7136\u5728 logical memory \u7684\u89c6\u89d2\u91cc\uff0ch \u548c i \u662f\u76f8\u8fde\u7684\uff1b\u4f46\u5b9e\u9645\u4e0a\uff0clogical address 0111[7] \u5bf9\u5e94\u7684 physical address \u4e3a 11011[27]\uff0clogical address 1000[8] \u5bf9\u5e94\u7684 physical address \u4e3a 00100[4]\uff0c\u5728 physical memory \u4e2d\u662f\u4e0d\u8fde\u7eed\u7684\u3002</p> <p></p> <p>Every logical address is bound by the paging hardware to some physical address. Using paging is similar to using a table of base (or relocation) registers, one for each frame of memory.</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#943-hardware-support","title":"9.4.3 Hardware Support","text":"<p>Page table \u662f\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4efd\u7684\u7ed3\u6784\uff0c\u5176\u786c\u4ef6\u5b9e\u73b0\u6709\u591a\u79cd\u65b9\u6cd5\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#9431-simplest-method","title":"9.4.3.1 Simplest method","text":"<p>\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u7528\u4e00\u7ec4\u4e13\u7528\u7684\u5bc4\u5b58\u5668\u6765\u5b9e\u73b0\u3002\u8fd9\u4e00\u5b9e\u73b0\u65b9\u6cd5\u7684\u4f18\u70b9\u662f\u4f7f\u7528\u65f6\u975e\u5e38\u8fc5\u901f\uff0c\u56e0\u4e3a\u5bf9\u5bc4\u5b58\u5668\u7684\u8bbf\u95ee\u662f\u5341\u5206\u9ad8\u6548\u7684\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u6210\u672c\u7b49\u539f\u56e0\uff0c\u5bc4\u5b58\u5668\u7684\u6570\u91cf\u6709\u9650\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u6cd5\u8981\u6c42 page table \u7684\u5927\u5c0f\u5f88\u5c0f\uff1b\u540c\u65f6\uff0c\u7531\u4e8e\u4e13\u7528\u5bc4\u5b58\u5668\u53ea\u6709\u4e00\u7ec4\uff0c\u56e0\u6b64 context switch \u65f6\u9700\u8981\u5b58\u50a8\u5e76\u91cd\u65b0\u52a0\u8f7d\u8fd9\u4e9b\u5bc4\u5b58\u5668\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#9432-page-table-in-memory--ptbr","title":"9.4.3.2 Page table in memory &amp; PTBR","text":"<p>\u5927\u591a\u6570\u73b0\u4ee3\u8ba1\u7b97\u673a\u5141\u8bb8\u9875\u8868\u975e\u5e38\u5927\uff0c\u56e0\u6b64\u5bf9\u4e8e\u8fd9\u4e9b\u673a\u5668\uff0c\u91c7\u7528\u5feb\u901f\u5bc4\u5b58\u5668\u5b9e\u73b0\u9875\u8868\u5c31\u4e0d\u53ef\u884c\u4e86\u3002\u6211\u4eec\u5c06\u9875\u8868\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u7528 Page-Table Base Register (PTBR)\u00a0\u6307\u5411\u9875\u8868\u3002\u5728 context switch \u65f6\u53ea\u9700\u8981\u4fee\u6539 PTBR\u3002</p> <p>\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u7684\u6548\u7387\u5b58\u5728\u95ee\u9898\u3002\u8981\u8bbf\u95ee logical address \u5bf9\u5e94\u7684 physical address\uff0c\u6211\u4eec\u9996\u5148\u8981\u6839\u636e PTBR \u548c page number \u6765\u627e\u5230\u9875\u8868\u5728\u5185\u5b58\u7684\u4f4d\u7f6e\uff0c\u5e76\u5728\u5176\u4e2d\u5f97\u5230 page \u5bf9\u5e94\u7684 frame number\uff0c\u8fd9\u9700\u8981\u4e00\u6b21\u5185\u5b58\u8bbf\u95ee\uff1b\u7136\u540e\u6211\u4eec\u6839\u636e frame number \u548c page offset \u7b97\u51fa\u771f\u5b9e\u7684 physical address\uff0c\u5e76\u8bbf\u95ee\u5bf9\u5e94\u7684\u5b57\u8282\u5185\u5bb9\u3002\u5373\uff0c\u8bbf\u95ee\u4e00\u4e2a\u5b57\u8282\u9700\u8981\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\uff0c\u8fd9\u4f1a\u52a0\u500d\u539f\u672c\u7684\u5185\u5b58\u8bbf\u95ee\u7684\u65f6\u95f4\uff0c\u8fd9\u662f\u96be\u4ee5\u63a5\u53d7\u7684\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#9433-tlb","title":"9.4.3.3 TLB","text":"<p>\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u7528\u5230\u4e00\u4e2a\u4e13\u7528\u7684\u9ad8\u901f\u67e5\u627e\u786c\u4ef6 cache (associative memory\uff0c\u652f\u6301 parallel search)\uff0c\u8fd9\u91cc\u79f0\u5b83\u4e3a translation look-aside buffer (TLB)\u3002TLB \u7684\u6bcf\u4e2a\u6761\u76ee\u7531 key &amp; value \u7ec4\u6210\uff0c\u5206\u522b\u8868\u793a page number \u548c frame number\uff0c\u901a\u5e38\u6709 64~1024 \u4e2a\u6761\u76ee\uff08PPT \u4e0a\u8bf4 64~1024\uff0c\u8bfe\u672c\u4e0a\u8bf4 32~1024\uff0c\u533a\u522b\u4e0d\u5927\uff09\u3002\u5f53\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a page number \u5bf9\u5e94\u7684 frame number \u65f6\uff0cTLB \u4f1a \u540c\u65f6\u00a0\u4e0e\u5176\u4e2d\u6240\u6709\u7684 key \u8fdb\u884c\u6bd4\u8f83\uff1a\u5982\u679c\u627e\u5230\u5bf9\u5e94\u6761\u76ee\uff0c\u5c31\u4e0d\u5fc5\u8bbf\u95ee\u5185\u5b58\uff1b\u5982\u679c\u6ca1\u6709\u627e\u5230\uff08\u79f0\u4e3a TLB miss\uff09\uff0c\u5219\u8bbf\u95ee\u5185\u5b58\u5e76\u5c06\u65b0\u7684 key &amp; value \u5b58\u5165 TLB \u4e2d\uff0c\u8fd9\u4f1a\u66ff\u6362\u6389 TLB \u539f\u6709\u7684\u4e00\u4e2a\u6761\u76ee\u3002\u66ff\u6362\u7684\u7b56\u7565\u5305\u62ec least recently used (LRU), round-robin, random \u7b49\u3002\u6709\u4e9b TLB \u652f\u6301\u5c06\u67d0\u4e9b\u6761\u76ee wired down\uff0c\u5373\u4ed6\u4eec\u4e0d\u4f1a\u4ece TLB \u4e2d\u88ab\u66ff\u6362\u3002\u91cd\u8981\u7684\u5185\u6838\u4ee3\u7801\u4e00\u822c\u4f1a\u88ab wired down\u3002\u5728 MIPS \u67b6\u6784\u4e2d\uff0cTLB miss \u4f5c\u4e3a exception \u7531\u64cd\u4f5c\u7cfb\u7edf\u5904\u7406\uff1b\u5728 X86 \u67b6\u6784\u4e2d\uff0cTLB miss \u7531\u786c\u4ef6\u5904\u7406\u3002</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#9434-tlb-with-asid","title":"9.4.3.4 TLB with ASID","text":"<p>\u5982\u540c\u6211\u4eec\u63d0\u5230\u8fc7\u7684\uff0c\u6bcf\u4e2a process \u90fd\u6709\u5176\u81ea\u5df1\u7684 page table\u3002\u56e0\u6b64\u5207\u6362\u8fdb\u7a0b\u65f6\u4e5f\u9700\u8981\u5207\u6362 page table\u3002\u4ea6\u5373\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u8bc1 TLB \u4e0e\u5f53\u524d\u8fdb\u7a0b\u7684 page table \u662f\u4e00\u81f4\u7684\u3002\u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u4e00\u8981\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u6b21\u5207\u6362\u65f6 flush TLB\u3002\u6216\u8005\uff0c\u6709\u4e9b TLB \u8fd8\u5728\u6bcf\u4e2a\u6761\u76ee\u4e2d\u4fdd\u5b58 Address-Space Identifier (ASID)\uff0c\u6bcf\u4e2a ASID \u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u8fdb\u7a0b\u3002\u5f53 TLB \u8fdb\u884c\u5339\u914d\u65f6\uff0c\u9664\u4e86 page number \u5916\u4e5f\u5bf9 ASID \u8fdb\u884c\u5339\u914d\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#9435-effective-memory-access-time","title":"9.4.3.5 Effective memory-access time","text":"<p>\u6211\u4eec\u79f0\u6ca1\u6709\u53d1\u751f TLB miss \u7684\u6b21\u6570\u7684\u767e\u5206\u6bd4\u4e3a hit ratio\uff0c\u8fd9\u91cc\u8bb0\u4e3a \\(r\\)\u3002\u8bbe\u6bcf\u4e00\u6b21\u5185\u5b58\u8bbf\u95ee\u7684\u7528\u65f6\u4e3a \\(t\\)\uff0c\u90a3\u4e48 TLB hit \u7684\u60c5\u51b5\u4e0b\u8bbf\u95ee\u5b57\u8282\u603b\u5171\u7528\u65f6 \\(t\\)\uff1b\u800c TLB miss \u7684\u60c5\u51b5\u4e0b\u7528\u65f6 \\(2t\\)\u3002\u56e0\u6b64\u6709\u6548\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4\uff08effective memory-access time\uff09\\(\\text{EAT} = t\\cdot r + 2t(1-r) = t(2-r)\\)\uff0c\u76f8\u6bd4\u5c06 page table \u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\u7684\u65b9\u5f0f\uff0c\u5e73\u5747\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4\u591a\u4e86 \\(\\cfrac{t(2-r)-t}{t} = 1 - r\\)\u3002\u5373\uff0c\u5982\u679c hit ratio \u4e3a 99%\uff0c\u90a3\u4e48\u5e73\u5747\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4\u53ea\u591a\u4e86 1%\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#944-memory-protection","title":"9.4.4 Memory Protection","text":"<p>\u5206\u9875\u73af\u5883\u4e0b\u7684\u5185\u5b58\u4fdd\u62a4\u7531\u4e0e\u6bcf\u4e2a frame \u5173\u8054\u7684 protection bits \u5b9e\u73b0\u3002\u8fd9\u4e9b bits \u901a\u5e38\u4fdd\u5b58\u5728\u9875\u8868\u4e2d\u3002\u4f8b\u5982 valid-invalid bit\uff1a</p> <p></p> <p>\u5982\u56fe\u6240\u793a\uff0cin a system with a 14-bit address space (0 to 16383), we have a program that should use only addresses 0 to 10468. Given a page size of 2 KB, we have the situation shown in Figure 9.13. Addresses in pages 0, 1, 2, 3, 4, and 5 are mapped normally through the page table. Any attempt to generate an address in pages 6 or 7, however, will find that the valid\u2013invalid bit is set to invalid, and the computer will trap to the operating system (invalid page reference).</p> <p>Notice that this scheme has created a problem. Because the program extends only to address 10468, any reference beyond that address is illegal. However, references to page 5 are classified as valid, so accesses to addresses up to 12287 are valid. Only the addresses from 12288 to 16383 are invalid. This problem is a result of the 2-KB page size and reflects the internal fragmentation of paging.</p> <p>Some systems provide hardware, in the form of a page-table length register (PTLR)\u00a0, to indicate the size of the page table. This value is checked against every logical address to verify that the address is in the valid range for the process. Failure of this test causes an error trap to the operating system.</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#945-shared-pages","title":"9.4.5 Shared Pages","text":"<p>\u5206\u9875\u53ef\u4ee5\u5141\u8bb8\u8fdb\u7a0b\u95f4\u5171\u4eab\u4ee3\u7801\uff0c\u4f8b\u5982\u540c\u4e00\u7a0b\u5e8f\u7684\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4efd\u4ee3\u7801\uff0c\u53ea\u8981\u8fd9\u4efd\u4ee3\u7801\u662f reentrant code\u00a0\uff08or non-self-modifying code\u00a0: never changes between execution\uff09\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u56fe\u4e2d\u6240\u8ff0\u7684\u662f\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u4e00\u4efd\u5e93\u4ee3\u7801\u7684\u60c5\u51b5\uff1b\u5171\u4eab\u8fd8\u53ef\u4ee5\u7528\u4e8e\u8fdb\u7a0b\u4e4b\u95f4\u7684\u4ea4\u6d41\u3002\u5f53\u7136\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u6709\u5176\u81ea\u5df1\u7684\u4ee3\u7801\u548c\u6570\u636e\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#946-problems","title":"9.4.6 Problems","text":"<p>Paging \u4f1a\u5bfc\u81f4\u5185\u90e8\u788e\u7247\u3002\u5373\uff0c\u5206\u914d\u662f\u4ee5 frame \u4e3a\u5355\u4f4d\u6267\u884c\u7684\uff0c\u5982\u679c\u8fdb\u7a0b\u8981\u6c42\u7684\u5185\u5b58\u4e0d\u662f frame \u5927\u5c0f\u7684\u6574\u6570\u500d\uff0c\u90a3\u4e48\u6700\u540e\u4e00\u4e2a frame \u5c31\u4f1a\u7528\u4e0d\u5b8c\uff0c\u4ea7\u751f\u5185\u90e8\u788e\u7247\u3002\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u9700\u8981 n pages + 1 byte \u7684\u8fdb\u7a0b\u9700\u8981\u5206\u914d n+1 \u4e2a frame\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f FrameSize - 1 \u90a3\u4e48\u5927\u7684 Internal Fragmentation\u3002</p> <p>\u5982\u679c\u8fdb\u7a0b\u7684\u5927\u5c0f\u4e0e\u9875\u5927\u5c0f\u65e0\u5173\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u5185\u90e8\u788e\u7247\u7684\u5747\u503c\u4e3a \u00bd FrameSize\u3002\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u5e73\u5747\u503c\u6bd4\u8fd9\u5c0f\u5f88\u591a\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e0d\u80fd\u4e3a\u4e86\u51cf\u5c0f\u5185\u90e8\u788e\u7247\u800c\u5c06 frame \u7684\u5927\u5c0f\u65e0\u9650\u51cf\u5c0f\uff0c\u56e0\u4e3a\u66f4\u5c0f\u7684 frame size \u9700\u8981\u66f4\u591a\u7684\u9875\u8868\u9879\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#95-structure-of-page-table","title":"9.5 Structure of Page Table","text":""},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#951-hierarchical-paging","title":"9.5.1 Hierarchical Paging","text":"<p>\u5982\u6211\u4eec\u5728 9.4.1 \u4e2d\u6240\u8ff0\uff0c\u9875\u8868\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c <code>page_table[i]</code> \u4e2d\u5b58\u50a8\u7684\u662f page number \u4e3a i \u7684 page \u6240\u5bf9\u5e94\u7684 frame number\u3002\u8003\u8651\u6211\u4eec\u7684\u903b\u8f91\u5730\u5740\u7ed3\u6784\uff1a</p> <p></p> <p>\u8fd9\u6837\u7684\u903b\u8f91\u5730\u5740\u7ed3\u6784\u9700\u8981\u4e00\u4e2a\u5b58\u50a8 2p\u00a0\u4e2a\u5143\u7d20\u7684 page table\uff0c\u5373\u9700\u8981\u8fd9\u4e48\u5927\u7684\u8fde\u7eed\u5185\u5b58\uff0c\u8fd9\u662f\u975e\u5e38\u5927\u7684\u6d88\u8017\u3002\u6211\u4eec\u8003\u8651\u5c06 p \u518d\u5206\u4e3a p1\u00a0\u548c p2\u00a0\uff1a</p> <p></p> <p></p> <p>\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4e24\u7ea7\u9875\u8868\uff0c <code>outer_page_table[i]</code>\u00a0\u4e2d\u5b58\u50a8\u7684\u662f p1\u00a0\u4e3a i \u7684 inner page table\uff0c\u5373<code>inner_page_table[i][]</code> \u7684\u57fa\u5730\u5740\uff1b\u800c <code>inner_page_table[i][j]</code> \u4e2d\u5b58\u50a8\u7684\u5c31\u662f p1\u00a0\u4e3a i\uff0cp2\u00a0\u4e3a j \u7684 page \u5bf9\u5e94\u7684 frame number\uff0c\u5373 page number \u4e3a p1p2\u00a0\uff08\u6ca1\u6709\u5206\u5272\u65f6\u7684 p\uff09\u5bf9\u5e94\u7684 frame number\u3002</p> <p>\u8fd9\u91cc\uff0c\u6211\u4eec\u79f0 p1\u00a0\u4e3a page directory number\u00a0\uff0cp2\u00a0\u4e3a page table number\uff0cd \u4e3a page offset\u3002</p> <p></p> <p>\u56de\u987e\u6211\u4eec\u5728 9.4.2 \u4e2d\u7684\u5206\u6790\uff1a\u903b\u8f91\u5730\u5740 \u4ee3\u66ff\u00a0\u7269\u7406\u5730\u5740\u6ee1\u8db3\u4e86\u7a0b\u5e8f\u7684 contiguous \u8981\u6c42\u3002\u8003\u8651\u8fd9\u4e2d\u5206\u4e24\u9875\u7684 page table \u7ed3\u6784\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u53ea\u662f\u5c06 p \u5206\u6210\u4e86\u4e24\u90e8\u5206\uff1b\u5bf9\u4e8e\u7a0b\u5e8f\u6765\u8bf4\uff0cp+d \u6784\u6210\u7684\u6574\u4f53\uff08\u5373\u903b\u8f91\u5730\u5740\uff09\u4ecd\u7136\u662f contiguous \u7684\uff0c\u800c\u4e14\u7a0b\u5e8f\u5e76\u4e0d\u4f1a\u610f\u8bc6\u5230\u6211\u4eec\u5c06 p \u5206\u6210\u4e86 p1\u00a0\u548c p2\u00a0\u4e24\u90e8\u5206\uff0c\u5c31\u50cf\u66fe\u7ecf\u5b83\u6ca1\u6709\u610f\u8bc6\u5230\u6211\u4eec\u5c06 address \u5206\u4e3a\u4e86 p \u548c d \u4e24\u90e8\u5206\u4e00\u6837\u3002\u8fd9\u4e9b\u5212\u5206\u53ea\u662f\u6211\u4eec\u4e3a\u4e86\u66f4\u597d\u5730\u5206\u914d\u5185\u5b58\u6240\u505a\u7684\u3001Operating-System-Level \u7684\u4e8b\u60c5\u800c\u5df2\u3002</p> <p>\u8003\u8651\u8fd9\u6837\u505a\u7684\u597d\u5904\uff1ahierarchical paging \u5176\u5b9e\u5c31\u662f\u5bf9\u9875\u8868\u7684\u5206\u9875\uff08page the page table\uff09\u3002\u56e0\u6b64\uff0c\u5b83\u907f\u514d\u4e86 page table \u5fc5\u987b\u5904\u5728\u8fde\u7eed\u5185\u5b58\u7684\u95ee\u9898\uff0c\u8fd9\u4e00\u95ee\u9898\u5728 p\u00a0\u6bd4\u8f83\u5927\u65f6\u5c24\u5176\u4e25\u91cd\u3002</p> <p>\u53e6\u5916\uff0c\u8fd9\u6837\u505a\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8282\u7701\u7a7a\u95f4\u3002\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u9875\u8868\u4e0d\u4e00\u5b9a\u4f1a\u5168\u90e8\u4f7f\u7528\uff1b\u5e76\u4e14\u7531\u4e8e\u903b\u8f91\u5730\u5740\u662f\u8fde\u7eed\u7684\uff0c\u56e0\u6b64\u7528\u5230\u7684\u9875\u8868\u9879\u4e5f\u662f\u8fde\u7eed\u7684\uff0c\u90fd\u6392\u5728\u9875\u8868\u7684\u5934\u90e8\u3002\u56e0\u6b64\u5982\u679c\u6211\u4eec\u91c7\u7528\u4e86\u4e8c\u7ea7\u9875\u8868\uff0c\u90a3\u4e48\u8bb8\u591a\u6392\u5728\u540e\u9762\u7684 inner page table \u5c06\u5b8c\u5168\u4e3a\u7a7a\uff1b\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0d\u7ed9\u8fd9\u4e9b inner page table \u5206\u914d\u7a7a\u95f4\uff0c\u5373\u6211\u4eec\u53ea\u5206\u914d\u6700\u5927\u7684 p1\u00a0\u90a3\u4e48\u591a\u4e2a inner page table\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u8282\u7701\u5f88\u591a\u7a7a\u95f4\u3002\u5373\u4f7f\u5728\u6700\u5dee\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u9875\u8868\u90fd\u88ab\u4f7f\u7528\u4e86\uff0c\u6211\u4eec\u7684\u9875\u8868\u6240\u7528\u7684\u603b\u6761\u76ee\u6570\u4e5f\u53ea\u6709 \\(2^{p_1}+2^{p_1}\\cdot 2^{p_2} = 2^{p_1} + 2^{p_1 + p_2}\\)\u00a0\u4e2a\uff0c\u53ea\u6bd4\u5355\u7ea7\u9875\u8868\u7ed3\u6784\u591a\u4e86 \\(2^{p_1}\\)\uff0c\u662f\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\u7684\u3002</p> <p></p> <p></p> <p>\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u66f4\u591a\u7ea7\u7684\u9875\u8868\u3002\u4f8b\u5982\uff0c64 \u4f4d\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u4f7f\u7528\u4e8c\u7ea7\u9875\u8868\u5c31\u662f\u4e0d\u591f\u7684\uff0c\u5426\u5219\u5b83\u7684\u9875\u8868\u5c31\u4f1a\u957f\u6210\u8fd9\u6837\uff1a</p> <p></p> <p>\u8fd9\u6837 outer page \u5c31\u4f1a\u8d85\u7ea7\u5927\u3002\u6211\u4eec\u53ef\u4ee5 page the outer page\uff1a</p> <p></p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5efa\u7acb\u4e86\u4e00\u4e2a\u4e09\u7ea7\u9875\u8868\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u4e0d\u5fc5\u4f7f\u7528\u5168\u90e8\u7684 64 \u4f4d\uff0c\u5373\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u4e2a 64 \u4f4d\u90a3\u4e48\u5de8\u5927\u7684 virtual address space\u3002AMD-64 \u652f\u6301 48-bit \u7684\u865a\u62df\u5730\u5740\uff0cARM64 \u652f\u6301 39-bit \u548c 48-bit \u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff1a</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#952-hashed-page-tables","title":"9.5.2 Hashed Page Tables","text":"<p>\u524d\u9762\u4ecb\u7ecd\u7684\u9875\u8868\u662f\u4f7f\u7528\u4e00\u4e2a table \u4fdd\u5b58 page# \u5bf9\u5e94\u7684 frame#\uff0c\u8fd9\u79cd\u89e3\u51b3\u65b9\u6848\u9762\u4e34\u7684\u95ee\u9898\u662f\u7a7a\u95f4\u9700\u6c42\u662f \\(\\Theta(\\text{Possible Page#})\\) \u4e14\u8fde\u7eed\u7684\uff1b\u6211\u4eec\u901a\u8fc7\u591a\u7ea7\u9875\u8868\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u800c\u54c8\u5e0c\u9875\u8868\u7ed9 page# \u5206\u914d frame# \u5e76\u4e0d\u662f\u968f\u610f\u5206\u914d\uff0c\u800c\u662f\u901a\u8fc7\u54c8\u5e0c\u8ba1\u7b97\u5f97\u5230\u3002\u8fd9\u6837\u7684\u65b9\u5f0f\u5c06\u7a7a\u95f4\u9700\u6c42\u964d\u4f4e\u5230 \\(\\Theta(\\text{Bucket#} + \\text{Used Page#})\\) \u4e14\u6bcf\u4e2a page \u5bf9\u5e94\u7684\u8868\u9879\u5728\u5185\u5b58\u4e2d\u5e76\u4e0d\u9700\u8981\u8fde\u7eed\uff0c\u4ece\u800c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u54c8\u5e0c\u9875\u8868\u7684\u6bcf\u4e00\u4e2a\u6761\u76ee\u9664\u4e86 page number \u548c frame number \u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u6307\u5411\u6709\u540c\u4e00\u54c8\u5e0c\u503c\u7684\u4e0b\u4e00\u4e2a\u9875\u8868\u9879\u7684\u6307\u9488\u3002\u8fd9\u4e2a\u7ed3\u6784\u4e0e\u4e00\u822c\u7684\u54c8\u5e0c\u8868\u662f\u4e00\u81f4\u7684\u3002</p> <p></p> <p>\u8fd9\u662f 32-bit address spaces \u9875\u8868\u7684\u4e00\u4e2a\u5e38\u7528\u65b9\u6848\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#953-inverted-page-tables","title":"9.5.3 Inverted Page Tables","text":"<p>\u5728\u4e4b\u524d\u7684\u5206\u9875\u65b9\u6cd5\u65f6\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u9875\u8868\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u8fd9\u4e9b\u8868\u53ef\u80fd\u4f7f\u7528\u5927\u91cf\u7684\u7269\u7406\u5185\u5b58\u3002</p> <p>Inverted page tables \u7d22\u5f15 physical address \u800c\u4e0d\u662f logical address\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6574\u4e2a\u7cfb\u7edf\u53ea\u6709\u4e00\u4e2a\u9875\u8868\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7269\u7406\u5185\u5b58\u7684 frame \u53ea\u6709\u4e00\u6761\u76f8\u5e94\u7684\u6761\u76ee\u3002\u5bfb\u5740\u65f6\uff0cCPU \u904d\u5386\u9875\u8868\uff0c\u627e\u5230\u5bf9\u5e94\u7684 pid \u548c page number\uff0c\u5176\u5728\u9875\u8868\u4e2d\u6240\u5904\u7684\u4f4d\u7f6e\u5373\u4e3a frame number\uff1a</p> <p></p> <p>\u8fd9\u79cd\u505a\u6cd5\u7684\u7f3a\u70b9\u662f\uff0c\u5bfb\u5740\u8fc7\u7a0b\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 TLB \u6216\u8005 hashed table \u6765\u52a0\u901f\u3002</p> <p>\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u80fd\u591f\u5171\u4eab\u5185\u5b58\uff0c\u56e0\u4e3a page table \u7684\u6bcf\u4e00\u4e2a\u6761\u76ee\uff08\u4e0e frame number \u4e00\u4e00\u5bf9\u5e94\uff09\u53ea\u80fd\u5b58\u50a8\u4e00\u4e2a page number\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/IV_memory_management/9_main_memory/#96-swapping","title":"9.6 Swapping","text":"<p>\u8fdb\u7a0b\u7684\u6307\u4ee4\u548c\u6570\u636e\u5fc5\u987b\u5728\u5185\u5b58\u4e2d\u4ee5\u6267\u884c\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u8fdb\u7a0b\u6216\u8fdb\u7a0b\u7684\u4e00\u90e8\u5206\u6682\u65f6\u4ece\u5185\u5b58 swap\u00a0\u5230 backing store\u00a0\uff08\u5907\u4efd\u5b58\u50a8\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u6bd4\u8f83\u5feb\u7684\u78c1\u76d8\uff09\u4e2d\uff0c\u7ee7\u7eed\u8fd0\u884c\u65f6\u4ece\u4e2d\u91cd\u65b0\u62ff\u56de\u5230\u5185\u5b58\u3002Swapping \u4f7f\u5f97\u6240\u6709\u8fdb\u7a0b\u603b\u7684\u7269\u7406\u5730\u5740\u7a7a\u95f4\u603b\u548c\u8d85\u8fc7\u7cfb\u7edf\u4e2d\u771f\u5b9e\u7684\u7269\u7406\u5730\u5740\u7a7a\u95f4\u79f0\u4e3a\u53ef\u80fd\uff0c\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684 degree of multiprogramming\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u5728\u5185\u5b58\u6bd4\u8f83\u5145\u8db3\u7684\u60c5\u51b5\u4e0b\uff0cswapping \u5e76\u4e0d\u5fc5\u4f7f\u7528\u3002Swapping \u53ef\u80fd\u4f1a\u5bfc\u81f4\u5f88\u957f\u7684 context switch \u7528\u65f6\uff0c\u56e0\u4e3a\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u80fd\u5e76\u4e0d\u5728\u5185\u5b58\u4e2d\uff0c\u800c\u7531\u4e8e\u78c1\u76d8\u7684 I/O \u5f88\u6162\uff0cswapping \u5230\u5185\u5b58\u4f1a\u82b1\u8d39\u5f88\u957f\u65f6\u95f4\u3002</p> <p>\u5728\u5206\u9875\u7684\u673a\u5236\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea swap out \u4e00\u4e9b pages\uff0c\u800c\u4e0d\u5fc5 swap out \u4e00\u6574\u4e2a\u8fdb\u7a0b\uff1a</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/I_overview/1_intro/","title":"1 \u5199\u5728\u524d\u9762","text":"<p> \u7ea6 354 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/I_overview/1_intro/#\u670b\u8f88\u8f85\u5b66\u5f55\u64ad\u4e0a\u4f20\u5230\u4e86-bilibili\u53ef\u4ee5\u70b9\u51fb-\u8fd9\u91cc-\u89c2\u770b","title":"\u670b\u8f88\u8f85\u5b66\u5f55\u64ad\u4e0a\u4f20\u5230\u4e86 Bilibili\uff0c\u53ef\u4ee5\u70b9\u51fb \u8fd9\u91cc \u89c2\u770b\u3002","text":"<p>\u6211\u7684\u7b14\u8bb0\u6240\u8ffd\u6c42\u7684\u76ee\u6807\u662f\u6709\u903b\u8f91\u3001\u901a\u7545\u5730\u603b\u7ed3\u77e5\u8bc6\uff1b\u56e0\u6b64\u5982\u679c\u60a8\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u5728\u4efb\u4f55\u5730\u65b9\u53d1\u73b0\u4e86\u4e0d\u5bb9\u6613\u8bfb\u61c2\u7684\u90e8\u5206\uff0c\u8bf7\u52a1\u5fc5\u5728\u8bc4\u8bba\u533a\u6216\u8005\u901a\u8fc7\u5176\u5b83\u65b9\u5f0f\u544a\u77e5\u6211QWQ\uff01\u975e\u5e38\u611f\u8c22\uff01</p> <p>\u8fd9\u662f\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7684\u5b66\u4e60\u8bb0\u5f55\u3002</p> <p>\u8bfe\u7a0b\u4f7f\u7528\u7684\u8bfe\u672c\u662f Operating System Concepts (10th edition)\uff1a</p> <p></p> <p>\u540c\u65f6\u53c2\u8003\u4e86 2020-2021 \u5b66\u5e74\u79cb\u51ac\u5b66\u671f\u6d59\u6c5f\u5927\u5b66\u7533\u6587\u535a\u8001\u5e08\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7684 PPT \u548c\u8bb2\u89e3\u3002</p> <p>\u5982\u65e0\u7279\u6b8a\u8bf4\u660e\uff0c\u672c\u6587\uff08\u6307\u300c\u64cd\u4f5c\u7cfb\u7edf\u300d\u5bfc\u822a\u4e0b\u6240\u6709\u6587\u7ae0\uff0c\u540e\u540c\uff09\u4e2d\u7684\u56fe\u7247\u7b49\u8d44\u6599\u5747\u6765\u6e90\u4e8e\u8bfe\u672c\u548c\u7533\u6587\u535a\u8001\u5e08\u7684 PPT\u3002</p> <p>Danger</p> <p>\u672c\u6587\u7684\u5185\u5bb9\u5e76\u6ca1\u6709\u6db5\u76d6\u8bfe\u672c\u6216\u8005\u8bfe\u7a0b\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u4e5f\u6709\u5728\u4e0a\u8ff0\u5185\u5bb9\u4e4b\u5916\u7684\u8865\u5145\u3002\u53ea\u53c2\u8003\u672c\u6587\u8fdb\u884c\u5b66\u4e60\uff0c\u4e0d\u4e00\u5b9a\u80fd\u591f\u8fbe\u5230\u8bfe\u7a0b\u9700\u8981\u7684\u6240\u6709\u8981\u6c42\u3002</p> <p>\u672c\u6587\u518d\u6b21\u6574\u7406\u4e3b\u8981\u662f\u4e3a\u6d59\u6c5f\u5927\u5b66\u8ba1\u7b97\u673a\u5b66\u9662\u670b\u8f88\u8f85\u5b66\uff082022-2023 \u79cb\u51ac\uff09\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7684\u5907\u8bfe\u5de5\u4f5c\uff0c\u56e0\u6b64\u90e8\u5206\u5185\u5bb9\u53ef\u80fd\u8f83\u4e3a\u7b80\u7565\u3002</p> <p>Warning</p> <p>\u672c\u6587\u8ffd\u6c42\u6709\u903b\u8f91\u5730\u5f15\u5165\u548c\u5b66\u4e60\u5404\u90e8\u5206\u77e5\u8bc6\uff0c\u56e0\u6b64\u672c\u6587\u7684\u7ae0\u8282\u5b89\u6392\u3001\u987a\u5e8f\u548c\u903b\u8f91\u76f8\u8f83\u4e8e\u8bfe\u672c\u6216\u8005\u8bfe\u7a0b\u53ef\u80fd\u5b58\u5728\u4e0d\u540c\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/I_overview/2_overview/","title":"2 Overview","text":"<p> \u7ea6 1601 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/I_overview/2_overview/#21-\u64cd\u4f5c\u7cfb\u7edf\u662f\u5565","title":"2.1 \u64cd\u4f5c\u7cfb\u7edf\u662f\u5565","text":"<p>\u6211\u4eec\u5728\u8ba1\u7ec4\u8bfe\u4e0a\u641e\u597d\u4e86\u4e00\u4e2a CPU\uff0c\u8fd8\u6709\u914d\u5957\u7684\u5185\u5b58\u4e4b\u7c7b\u7684\u8bbe\u5907\uff0c\u73b0\u5728\u8981\u7528\u5b83\u3002\u53ef\u4ee5\u76f4\u63a5\u628a\u6c47\u7f16\u5199\u5230\u5185\u5b58\u91cc\u8fd0\u884c\u3002</p> <p></p> <p>\u8ba1\u7b97\u673a\u6700\u5f00\u59cb\u662f\u4e3a\u4e86\u7814\u7a76\u53ef\u8ba1\u7b97\u6027\u7406\u8bba\u7684\uff0c\u4f46\u5f88\u5feb\u5c31\u88ab\u7528\u4e8e\u4e00\u4e9b\u4e13\u7528\u7684\u8ba1\u7b97\uff0c\u4f8b\u5982\u7834\u8bd1\u5bc6\u7801\u7b49\uff1b\u968f\u540e\u6f14\u5316\u51fa\u4e86 general-purpose, multifunction mainframes</p> <p>\u5982\u679c\u6709\u5f88\u591a\u7a0b\u5e8f\u8981\u4e00\u4e2a\u4e00\u4e2a\u8fd0\u884c\uff0c\u600e\u4e48\u529e\u5462\uff1f\u5199\u4e00\u4e2a\u4e00\u76f4\u8fd0\u884c\u7684\u7a0b\u5e8f (kernel)\uff0c\u8d1f\u8d23\u5176\u4ed6\u7a0b\u5e8f\u7684\u8fd0\u884c\u3002</p> <ul> <li>\u6279\u5904\u7406\u7cfb\u7edf, Batch Processing Systems\u3002Jobs \u5728\u5185\u5b58\u6216\u8005\u5916\u5b58\u91cc\uff0c\u5185\u5b58\u59cb\u7ec8\u6709\u4e00\u4e2a job \u5728\u8fd0\u884c\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u5728\u7ed3\u675f\u540e\u52a0\u8f7d\u4e0b\u4e00\u4e2a\u5f00\u59cb\u8fd0\u884c\uff08\u6211\u4eec\u5c06\u52a0\u8f7d\u5230\u5185\u5b58\u5e76\u8fd0\u884c\u7684\u7a0b\u5e8f\u4e3a \u8fdb\u7a0b, process\uff09\u3002\u95ee\u9898\u5728\u4e8e\u5982\u679c\u8fd0\u884c\u65f6\u53d1\u751f I/O\uff0cCPU \u5c31\u4f1a\u505c\u4e0b\u6765\u7b49 I/O \u5b8c\u6210\u3002</li> <li>\u591a\u9053\u6279\u5904\u7406\u7cfb\u7edf, Multiprogramming Batch Systems\u3002\u5728\u6279\u5904\u7406\u7cfb\u7edf\u57fa\u7840\u4e0a\uff0c\u5f53\u5f53\u524d job \u53d1\u751f I/O \u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u8ba9 CPU \u8f6c\u800c\u8fd0\u884c\u53e6\u4e00\u4e2a job\u3002\u95ee\u9898\u5728\u4e8e\uff0c\u6ca1\u6709\u8003\u8651\u548c\u7528\u6237\u7684\u4ea4\u4e92\uff0c\u54cd\u5e94\u65f6\u95f4\u8f83\u957f\u3002</li> <li>\u5206\u65f6\u7cfb\u7edf, Time Sharing Systems\u3002\u5c06 CPU \u65f6\u95f4\u5212\u5206\u4e3a\u5f88\u5c0f\u7684\u65f6\u95f4\u7247\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u5b89\u6392\u5404\u4e2a job \u8f6e\u6d41\u8fd0\u884c\u3002\u7531\u4e8e\u5207\u6362\u9891\u7387\u5f88\u9ad8\uff0c\u4ece\u800c\u7528\u6237\u901a\u8fc7\u8f93\u5165\u8bbe\u5907\u5411\u8ba1\u7b97\u673a\u53d1\u51fa\u6307\u4ee4\u65f6\u53ef\u4ee5\u6536\u5230\u5b9e\u65f6\u7684\u56de\u590d\u3002   \u5206\u65f6\u7cfb\u7edf\u672c\u8eab\u4e5f\u662f\u4e00\u79cd\u591a\u9053 (multiprogramming) \u7cfb\u7edf\uff0c\u5373\u5141\u8bb8\u591a\u4e2a job \u5e76\u53d1 (concurrently) \u6267\u884c\u3002\u4f46\u662f\u4e0d\u662f\u6279\u5904\u7406 (batch) \u7cfb\u7edf\u3002</li> </ul> <p>\u9664\u4e86 kernel \u5916\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u5305\u542b\u4e00\u4e9b system programs\uff0c\u8f85\u52a9 kernel \u5de5\u4f5c\u3002\u5176\u4ed6\u7a0b\u5e8f\u4e0d\u5c5e\u4e8e\u64cd\u4f5c\u7cfb\u7edf\uff0c\u79f0\u4e3a application programs\u3002</p> <p>\u603b\u7ed3\u6765\u8bf4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u662f\u201c\u8f6f\u4ef6\u4e2d\u6700\u57fa\u7840\u7684\u90e8\u5206\u201d\uff0c\u7528\u4ee5\u63a7\u5236\u548c\u7ba1\u7406\u7cfb\u7edf\u8d44\u6e90\u3001\u65b9\u4fbf\u7528\u6237\u4f7f\u7528\u8ba1\u7b97\u673a\u3002</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/I_overview/2_overview/#22-\u4e2d\u65ad","title":"2.2 \u4e2d\u65ad","text":"<p>\u6279\u5904\u7406\u7cfb\u7edf\u7684\u5b9e\u73b0\u662f\u5bb9\u6613\u7406\u89e3\u7684\uff1b\u6bcf\u4e2a\u7a0b\u5e8f\u5c31\u50cf\u662f\u4e00\u4e2a\u51fd\u6570\u4e00\u6837\u88ab\u64cd\u4f5c\u7cfb\u7edf\u8c03\u7528\u3002\u90a3\u4e48\u5176\u4ed6\u7c7b\u578b\u7684\u64cd\u4f5c\u7cfb\u7edf\u662f\u5982\u4f55\u5b9e\u73b0\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u80fd\u591f\u6536\u56de\u63a7\u5236\u6743\u5462\uff1f\u8fd9\u5c31\u9700\u8981\u4f7f\u7528\u5230 \u4e2d\u65ad (interrupt)\u3002\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u90fd\u662f \u4e2d\u65ad\u9a71\u52a8 (interrupt driven) \u7684\u3002</p> <p>\u4e8b\u4ef6\u53d1\u751f\u901a\u5e38\u901a\u8fc7\u786c\u4ef6\u6216\u8f6f\u4ef6\u7684\u4e2d\u65ad\u901a\u77e5\u3002CPU \u786c\u4ef6\u6709\u4e00\u6761\u79f0\u4e3a interrupt-request line \u7684\u7ebf\u8def\uff0cCPU \u5728\u6267\u884c\u6bcf\u4e00\u6761\u6307\u4ee4\u540e\u90fd\u8981\u68c0\u6d4b\u5b83\u4e00\u6b21\u3002\u5f53 CPU \u4fa6\u6d4b\u5230\u4e00\u4e2a\u8bbe\u5907\u63a7\u5236\u5668\u5728\u8fd9\u6761\u7ebf\u8def\u4e0a\u53d1\u51fa\u7684\u4fe1\u53f7\u65f6\uff0c\u4f1a\u8bfb\u53d6 interrupt number \u5e76\u4e14\u4ee5\u6b64\u4f5c\u4e3a interrupt vector \u4e2d\u7684 index \u6765\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684 interrupt-handler routine\u3002</p> <p>\u4e2d\u65ad\u5411\u91cf\u8868 (interrupt vector) \u7528\u6765\u51cf\u5c11\u786e\u5b9a\u4e2d\u65ad\u670d\u52a1\u65f6\u7684\u67e5\u627e\u6b21\u6570\uff0c\u5373\u901a\u8fc7\u968f\u673a\u8bbf\u95ee\u800c\u4e0d\u662f\u904d\u5386\u7684\u65b9\u5f0f\u627e\u5230\u5904\u7406\u7a0b\u5e8f\u3002</p> <p>\u5728\u73b0\u5728\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e9b\u66f4\u590d\u6742\u7684\u4e2d\u65ad\u5904\u7406\u529f\u80fd\uff1a</p> <ol> <li>\u6211\u4eec\u9700\u8981\u80fd\u591f\u5728\u5173\u952e\u7a0b\u5e8f\u5904\u7406\u671f\u95f4\u5ef6\u8fdf\u4e2d\u65ad\u7684\u5904\u7406\uff1b</li> <li>\u6211\u4eec\u9700\u8981\u4e00\u79cd\u9ad8\u6548\u7684\u65b9\u6cd5\u6765\u5c06\u8bbe\u5907\u4e2d\u65ad\u53d1\u7ed9\u6b63\u786e\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff1b</li> <li>\u6211\u4eec\u9700\u8981\u591a\u7ea7\u4e2d\u65ad\uff0c\u4ece\u800c\u4f7f\u5f97\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u533a\u5206\u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u5e76\u6839\u636e\u9002\u5f53\u7684\u7d27\u6025\u7a0b\u5ea6\u8fdb\u884c\u54cd\u5e94\u3002</li> </ol> <p>\u5728\u73b0\u4ee3\u7684\u8ba1\u7b97\u673a\u786c\u4ef6\u4e2d\uff0c\u8fd9\u4e9b\u7279\u6027\u7531 CPU \u548c interrupt-controller hardware \u5b9e\u73b0\u3002</p> <p>\u5927\u591a\u6570 CPU \u6709\u4e24\u6761 interrupt-request line\uff0c\u4e00\u6761\u7528\u4e8e nonmaskable interrupt\uff0c\u4e3a\u4e00\u4e9b\u4e0d\u53ef\u6062\u590d\u7684\u5185\u5b58\u9519\u8bef\u7b49\u4e8b\u4ef6\u4fdd\u7559\uff1b\u53e6\u4e00\u6761\u662f maskable \u7684\uff0c\u5b83\u53ef\u4ee5\u5728\u6267\u884c\u4e0d\u53ef\u4e2d\u65ad\u7684\u5173\u952e\u7a0b\u5e8f\u4e4b\u524d\u88ab CPU \u5173\u95ed\uff0c\u7528\u4e8e\u4f20\u9001\u4e00\u4e9b\u8bbe\u5907\u63a7\u5236\u5668\u7684\u4e2d\u65ad\u8bf7\u6c42\u3002</p> <p>\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u9700\u8981\u4fdd\u5b58 PC \u7b49\u73b0\u573a\u72b6\u6001\uff1b\u6267\u884c\u4e2d\u65ad\u65f6\u4e5f\u9700\u8981\u4fdd\u5b58\u3002\u4f46\u662f\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136\u4f4e\u7ea7\u7684\u4e2d\u65ad\u53ef\u4ee5\u88ab\u9ad8\u7ea7\u7684\u4e2d\u65ad\u6253\u65ad\uff0c\u4f46\u662f\u4fdd\u5b58\u548c\u6062\u590d\u73b0\u573a\u72b6\u6001\u7684\u8fc7\u7a0b\u662f\u4e0d\u5e94\u5f53\u88ab\u6253\u65ad\u7684\u3002</p> <p></p> <p>\u8ba1\u65f6\u5668\u4e0e\u5206\u65f6\u7cfb\u7edf\u7684\u5b9e\u73b0</p> <p>\u5f53\u64cd\u4f5c\u7cfb\u7edf\u5c06 CPU \u7684\u63a7\u5236\u6743\u4ea4\u7ed9\u4e00\u4e2a\u7a0b\u5e8f\u524d\uff0c\u4f1a\u8bbe\u5b9a\u597d\u4e00\u4e2a \u8ba1\u65f6\u5668 (timer)\u3002\u8ba1\u65f6\u5668\u901a\u8fc7\u4e00\u4e2a\u65f6\u949f\u548c\u4e00\u4e2a\u8ba1\u6570\u5668\u5b9e\u73b0\u3002\u5f53\u8ba1\u6570\u5668\u7684\u503c\u4e3a 0 \u65f6\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\uff0c\u8fd9\u65f6\u63a7\u5236\u6743\u5c31\u4ea4\u7ed9\u4e86\u64cd\u4f5c\u7cfb\u7edf\u3002\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u9632\u6b62\u7a0b\u5e8f\u6267\u884c\u65f6\u95f4\u8fc7\u957f\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u5206\u65f6\u7cfb\u7edf\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/I_overview/2_overview/#23-dual-mode--multimode","title":"2.3 Dual-mode &amp; Multimode","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u548c\u7528\u6237\u5171\u4eab\u8ba1\u7b97\u673a\u7684\u8f6f\u4ef6\u548c\u786c\u4ef6\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u9519\u8bef\u7684\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u5d29\u6e83\uff0c\u6216\u8005\u4f7f\u5f97\u5176\u4ed6\u7528\u6237\u7684\u6570\u636e\u751a\u81f3\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u88ab\u4fee\u6539\u3002\u56e0\u6b64\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u8ba1\u8981\u4fdd\u8bc1\u4e00\u4e2a\u9519\u8bef\u7684\u7a0b\u5e8f\u4e0d\u4f1a\u9020\u6210\u5176\u4ed6\u7a0b\u5e8f\u7684\u9519\u8bef\u8fd0\u884c\u3002</p> <p>\u6211\u4eec\u5c06\u64cd\u4f5c\u7cfb\u7edf\u4ee3\u7801\u548c\u7528\u6237\u4ee3\u7801\u533a\u5206\u6267\u884c\u3002\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u7528\u6237\u4ee3\u7801\u4e0d\u80fd\u76f4\u63a5\u6267\u884c\u90e8\u5206\u53ef\u80fd\u5f15\u8d77\u635f\u5bb3\u7684\u6307\u4ee4\uff1b\u6211\u4eec\u79f0\u8fd9\u4e9b\u6307\u4ee4\u4e3a privileged instructions\u3002CPU \u786c\u4ef6\u6709\u4e00\u4e2a mode bit\uff0c\u503c\u4e3a 0 \u8868\u793a\u5f53\u524d\u5904\u4e8e kernel mode (\u6216\u79f0\u4e3a supervisor mode, system mode, privileged mode)\uff1b\u503c\u4e3a 1 \u8868\u793a\u5f53\u524d\u5904\u4e8e user mode\uff0c\u6b64\u65f6 CPU \u5c06\u4f1a\u628a\u6240\u6709 privileged inst. \u89c6\u4e3a\u975e\u6cd5\u6307\u4ee4\u3002</p> <p>\u6240\u6709\u7684 interrupt handler \u90fd\u8fd0\u884c\u5728 kernel mode\u3002\u539f\u56e0\u4e4b\u4e00\u662f\uff0cinterrupt handler \u9700\u8981\u5173\u95ed\uff08\u90e8\u5206\uff09\u4e2d\u65ad\u54cd\u5e94\uff0c\u800c\u7528\u6237\u4e0d\u5e94\u5f53\u80fd\u81ea\u7531\u5730\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\u3002</p> <p>\u90a3\u5982\u679c\u7528\u6237\u7a0b\u5e8f\u786e\u5b9e\u60f3\u4f7f\u7528\u7279\u6743\u6307\u4ee4\u63d0\u4f9b\u7684\u529f\u80fd\u600e\u4e48\u529e\u5462\uff1f\u5b83\u4eec\u53ef\u4ee5\u901a\u8fc7 system call \u7684\u65b9\u5f0f\u5411\u64cd\u4f5c\u7cfb\u7edf\u63d0\u51fa\u8bf7\u6c42\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u4ee3\u4e3a\u5b8c\u6210\u3002</p> <p></p> System Calls <p>\u7cfb\u7edf\u8c03\u7528\u53ef\u80fd\u9700\u8981\u4f20\u9012\u53c2\u6570\u3002\u53c2\u6570\u53ef\u4ee5\u653e\u5728\u5bc4\u5b58\u5668\u91cc\u76f4\u63a5\u4f20\u9012\uff1b\u4e5f\u53ef\u4ee5\u653e\u5728\u4e00\u5757\u5185\u5b58\u4e2d\uff0c\u7528\u5bc4\u5b58\u5668\u4f20\u9012\u5730\u5740\uff1b\u4e5f\u53ef\u4ee5\u7528\u6808\u4f20\u9012\u3002</p> <p>\u7cfb\u7edf\u8c03\u7528\u63d0\u4f9b\u7684\u529f\u80fd\uff08\u4e5f\u5c31\u662f\u6211\u4eec\u4e0d\u5141\u8bb8\u7528\u6237\u7a0b\u5e8f\u81ea\u7531\u5b8c\u6210\u7684\u529f\u80fd\uff09\u5305\u62ec\uff1a</p> <p></p> <p></p> <p>\u8bfe\u672c\u4e0a\u7ed9\u51fa\u4e86\u4e00\u4e9b\u4f8b\u5b50\uff1a</p> <p></p> <p>Multimode</p> <p>\u7cfb\u7edf\u8bbe\u8ba1\u4e5f\u53ef\u80fd\u5f15\u5165\u66f4\u591a mode\uff0c\u6216\u8005\u53eb privilege level\u3002\u4f8b\u5982\u5728\u865a\u62df\u5316\u7684\u60c5\u5883\u4e0b\uff0c\u53ef\u80fd\u4f1a\u652f\u6301\u591a\u4e8e user mode \u4f46\u662f\u5c11\u4e8e kernel mode \u7684\u6307\u4ee4\u7b49\u3002</p> <p>\u56e0\u6b64\uff0c\u5f53\u53d1\u751f\u4e2d\u65ad\u3001system call\u3001\u9519\u8bef\uff08\u4f8b\u5982\u9664\u4ee5 0\uff0c\u6216\u8005\u8bbf\u95ee\u672a\u77e5\u6307\u4ee4\uff09\u7b49\u60c5\u51b5\u65f6\uff0c\u4f1a\u53d1\u751f user mode \u5230 kernel mode \u7684\u8f6c\u6362\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/","title":"13 File System Interface | \u6587\u4ef6\u7cfb\u7edf\u63a5\u53e3","text":"<p> \u7ea6 3416 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>\u5728 V \u5b58\u50a8\u7ba1\u7406 \u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u5927\u5bb9\u91cf\u5b58\u50a8\u548c I/O\uff1b\u8fd9\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u5b58\u50a8\u3002</p> <p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u7684\u529f\u80fd\uff1b\u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5177\u4f53\u8ba8\u8bba\u6587\u4ef6\u7cfb\u7edf\u7684\u5b9e\u73b0\u3002</p> <p>\u6587\u4ef6\u7cfb\u7edf (file system) \u63d0\u4f9b\u4e86 disk \u7684\u62bd\u8c61\uff0c\u7ed9\u7528\u6237\u63d0\u4f9b\u5b58\u50a8\u7684\u903b\u8f91\u89c6\u56fe\u3002\u6587\u4ef6\u7cfb\u7edf\u7531\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a\u6587\u4ef6 (file) \u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5b58\u50a8\u4e00\u4e9b\u6570\u636e\uff0c\u662f\u5b58\u50a8\u7684\u903b\u8f91\u5355\u4f4d\uff1b\u4ee5\u53ca \u76ee\u5f55\u7ed3\u6784 (directory structure)\uff0c\u7528\u4e8e\u7ec4\u7ec7\u7cfb\u7edf\u5185\u7684\u6587\u4ef6\u5e76\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\uff0c\u4f8b\u5982\u63d0\u4f9b\u6743\u9650\u4fe1\u606f\u4ee5\u5b9e\u73b0\u4e00\u4e9b\u4fdd\u62a4\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#131-files--\u6587\u4ef6","title":"13.1 Files | \u6587\u4ef6","text":"<p>\u6587\u4ef6\u7531\u64cd\u4f5c\u7cfb\u7edf\u6620\u5c04\u5230\u7269\u7406\u5b58\u50a8\u8bbe\u5907\u4e0a\uff1b\u5728 Unix \u4e2d\u5c31\u662f\u4e00\u5757\u8fde\u7eed\u7684\u5b57\u8282\u3002\u7531\u4e8e\u524d\u8ff0\u5b58\u50a8\u8bbe\u5907\u901a\u5e38\u662f\u975e\u6613\u5931\u6027\u7684\uff0c\u56e0\u6b64\u6587\u4ef6\u5185\u5bb9\u5728\u65ad\u7535\u540e\u4e5f\u80fd\u4fdd\u6301\u3002</p> <p>\u6587\u4ef6\u662f\u7528\u6237\u548c\u7a0b\u5e8f\u7528\u6765\u5b58\u50a8\u548c\u83b7\u53d6\u4fe1\u606f\u7684\u9014\u5f84\u3002\u4ece\u7528\u6237\u89d2\u5ea6\u6765\u770b\uff0c\u6587\u4ef6\u662f\u903b\u8f91\u5916\u5b58\u7684\u6700\u5c0f\u5206\u914d\u5355\u5143\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u6570\u636e\u53ea\u6709\u901a\u8fc7\u6587\u4ef6\u624d\u80fd\u5199\u5230\u5916\u5b58\u3002</p> <p>\u6587\u4ef6\u6709\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\u6570\u636e\u6587\u4ef6\u3001\u53ef\u6267\u884c\u6587\u4ef6\u7b49\u3002\u6570\u636e\u6587\u4ef6\u53c8\u53ef\u80fd\u662f numeric, alphabetic, alphanumeric, binary \u7684\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#1311-\u6587\u4ef6\u5c5e\u6027","title":"13.1.1 \u6587\u4ef6\u5c5e\u6027","text":"<p>\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u4fdd\u5b58\u4e0d\u540c\u7684\u6587\u4ef6\u5c5e\u6027 (attributes)\uff0c\u4f46\u662f\u901a\u5e38\u5305\u62ec\uff1a</p> <ul> <li>Name\u3002\u8fd9\u662f\u552f\u4e00\u7684\u4ee5 human-readable \u5f62\u5f0f\u4fdd\u5b58\u7684\u4fe1\u606f\u3002</li> <li>Identifier\u3002\u4e00\u4e2a\u5728\u5f53\u524d\u6587\u4ef6\u7cfb\u7edf\u4e2d\u552f\u4e00\u7684 tag\uff08\u901a\u5e38\u4e3a number\uff09\uff0c\u6587\u4ef6\u7cfb\u7edf\u7528\u5b83\u6765\u6807\u8bc6\u6587\u4ef6\u3002</li> <li>Type\u3002\u4e00\u4e9b\u6587\u4ef6\u7cfb\u7edf\u652f\u6301\u4e0d\u540c\u7684\u6587\u4ef6\u7c7b\u578b\u3002</li> <li>Location\u3002\u6807\u8bc6\u6587\u4ef6\u5728\u54ea\u4e2a\u8bbe\u5907\u7684\u54ea\u4e2a\u4f4d\u7f6e\u3002</li> <li>Size\u3002\u5f53\u524d\u6587\u4ef6\u5927\u5c0f\uff0c\u4e5f\u53ef\u80fd\u5305\u542b\u6587\u4ef6\u5141\u8bb8\u7684\u6700\u5927\u5927\u5c0f\u3002</li> <li>Protection\u3002Access-control information\u3002</li> <li>Timestamp\u3002\u4fdd\u5b58\u521b\u5efa\u65f6\u95f4\u3001\u4e0a\u6b21\u4fee\u6539\u65f6\u95f4\u3001\u4e0a\u6b21\u4f7f\u7528\u65f6\u95f4\u7b49\u3002</li> <li>User indentification\u3002\u521b\u5efa\u8005\u3001\u4e0a\u6b21\u4fee\u6539\u8005\u3001\u4e0a\u6b21\u8bbf\u95ee\u8005\u7b49\u3002</li> </ul> <p>\u4e00\u4e9b\u6587\u4ef6\u7cfb\u7edf\u8fd8\u652f\u6301 extended file attribute\uff0c\u4f8b\u5982 file checksum\u3002</p> <p>\u8fd9\u4e9b\u4fe1\u606f\u662f\u524d\u8ff0 \u76ee\u5f55\u7ed3\u6784 (directory structure) \u7684\u4e00\u90e8\u5206\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#1312-\u6587\u4ef6\u64cd\u4f5c","title":"13.1.2 \u6587\u4ef6\u64cd\u4f5c","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u63d0\u4f9b\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u6765\u5b8c\u6210\u4e00\u4e9b\u57fa\u672c\u7684\u6587\u4ef6\u64cd\u4f5c\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>Create\u3002\u5728 FS \u4e2d\u4e3a\u6587\u4ef6\u627e\u5230\u7a7a\u95f4\uff0c\u7136\u540e\u5728 directory \u4e2d\u521b\u5efa\u6761\u76ee\u3002</li> <li>Read / Write\u3002\u7ef4\u62a4\u4e00\u4e2a current-file-position pointer \u8868\u793a\u5f53\u524d\u8bfb\u5199\u7684\u4f4d\u7f6e\uff0c\u5728\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u505a\u8bfb\u5199\u64cd\u4f5c\uff08\u4ece\u78c1\u76d8\u8bfb\u5230\u5185\u5b58\u6216\u8005\u76f8\u53cd\uff09\u3002</li> <li>Repositioning within a file (a.k.a. Seek)\u3002\u5c06 current-file-position pointer \u7684\u4f4d\u7f6e\u91cd\u65b0\u5b9a\u4f4d\u5230\u7ed9\u5b9a\u503c\uff0c\u4f8b\u5982\u6587\u4ef6\u5f00\u5934\u6216\u7ed3\u5c3e\u3002</li> <li>Delete\u3002\u5728 directory \u4e2d\u627e\u5230\u5bf9\u5e94\u6761\u76ee\uff0c\u91ca\u653e\u6587\u4ef6\u7a7a\u95f4\uff0c\u5220\u9664\u5bf9\u5e94\u6761\u76ee\u3002</li> <li>Truncate\u3002\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9\uff0c\u4f46\u4fdd\u7559\u6587\u4ef6\u5c5e\u6027\u3002</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#\u6587\u4ef6\u6253\u5f00","title":"\u6587\u4ef6\u6253\u5f00","text":"<p>Open\u3002\u8fd4\u56de\u4e00\u4e2a handler \u7528\u6765\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u3002</p> <p>\u53ef\u80fd\u4f1a\u628a\u6587\u4ef6\u653e\u5728 \u6253\u5f00\u6587\u4ef6\u8868 (open-file table) \u4e2d\u4ee5\u4fbf\u7d22\u5f15\uff0c\u76f4\u5230 Close\u3002</p> <p>\u53ef\u80fd\u5141\u8bb8\u4e00\u4e2a\u6587\u4ef6\u88ab\u6253\u5f00\u591a\u6b21\uff0c\u56e0\u6b64\u5728\u6253\u5f00\u6587\u4ef6\u8868\u4e2d\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a file-open count\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#\u6587\u4ef6\u9501","title":"\u6587\u4ef6\u9501","text":"<p>\u4e00\u4e9b FS \u4e5f\u4f1a\u63d0\u4f9b \u6587\u4ef6\u9501 (file lock) \u6765\u534f\u8c03\u6587\u4ef6\u8bbf\u95ee\uff0c\u4f8b\u5982\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u9501\u5b9a\u6587\u4ef6\u6765\u907f\u514d\u5176\u4ed6\u6587\u4ef6\u8bbf\u95ee\u5b83\u3002</p> <p>\u6587\u4ef6\u9501\u7c7b\u4f3c\u4e8e\u7b2c 7 \u8282\u4e2d\u8ba8\u8bba\u7684 reader-writer lock\u3002\u6709\u7684 FS \u63d0\u4f9b\u4e24\u79cd\u9501\uff1a\u5171\u4eab\u9501 (shared lock) \u7c7b\u4f3c\u4e8e reader lock\uff0c\u72ec\u5360\u9501 (exclusive lock) \u7c7b\u4f3c\u4e8e writer lock\u3002\u6709\u7684 FS \u53ea\u63d0\u4f9b\u72ec\u5360\u9501\u3002</p> <p>\u540c\u65f6\uff0c\u6587\u4ef6\u9501\u4e5f\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u673a\u5236\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\u3002\u4e00\u79cd\u662f \u5f3a\u5236\u9501\u5b9a (mandatory lock)\uff0c\u5373\u4e00\u65e6\u8fdb\u7a0b\u83b7\u53d6\u4e86\u72ec\u5360\u9501\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c31\u963b\u6b62\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u8bbf\u95ee\u5bf9\u5e94\u6587\u4ef6\uff0c\u5373\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u786e\u4fdd\u4e86\u5b8c\u6574\u6027\uff1b\u53e6\u4e00\u79cd\u662f \u5efa\u8bae\u9501\u5b9a (advisory lock)\uff0c\u5373\u8fdb\u7a0b\u53ef\u4ee5\u81ea\u5df1\u5f97\u77e5\u9501\u7684\u72b6\u6001\u7136\u540e\u51b3\u5b9a\u8981\u4e0d\u8981\u575a\u6301\u8bbf\u95ee\u3002Windows \u4f7f\u7528\u524d\u8005\uff0c\u800c UNIX \u4f7f\u7528\u540e\u8005\u3002</p> <p>\u4e5f\u5e94\u5f53\u91c7\u53d6\u63aa\u65bd\uff0c\u6765\u786e\u4fdd\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u9501\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#1313-\u6587\u4ef6\u7c7b\u578b","title":"13.1.3 \u6587\u4ef6\u7c7b\u578b","text":"<p>\u6587\u4ef6\u6709\u4e0d\u540c\u7684\u7c7b\u578b\u3002\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u9700\u8981\u8bc6\u522b\u4e0d\u540c\u7684\u6587\u4ef6\u7c7b\u578b\u3002</p> <p>\u8bc6\u522b\u4e0d\u540c\u6587\u4ef6\u7c7b\u578b\u7684\u65b9\u5f0f\u4e4b\u4e00\u662f \u6587\u4ef6\u6269\u5c55\u540d (file extension)\uff1b\u4f8b\u5982\u89c4\u5b9a\u53ea\u6709\u6269\u5c55\u540d\u662f <code>.com</code>, <code>.exe</code>, <code>.sh</code> \u7684\u6587\u4ef6\u624d\u80fd\u6267\u884c\u3002</p> <p>\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u6587\u4ef6\u5f00\u59cb\u90e8\u5206\u653e\u4e00\u4e9b magic number \u6765\u8868\u660e\u6587\u4ef6\u7c7b\u578b\uff1b\u4f46\u662f\u7531\u4e8e\u4e0d\u662f\u6240\u6709\u6587\u4ef6\u90fd\u6709 magic number\uff0c\u56e0\u6b64\u7cfb\u7edf\u4e0d\u80fd\u53ea\u57fa\u4e8e\u8fd9\u79cd\u65b9\u5f0f\u5224\u65ad\u6587\u4ef6\u7684\u7c7b\u578b\u3002</p> <p>\u4e5f\u53ef\u4ee5\u91c7\u7528\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u8bd5\u56fe\u8bc6\u522b\u6587\u4ef6\u7684\u7c7b\u578b\uff1b\u5f53\u7528\u6237\u5c1d\u8bd5\u8fd0\u884c\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u6216\u8005\u8bd5\u56fe\u7528\u6587\u672c\u7f16\u8f91\u5668\u6253\u5f00\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u65f6\uff0c\u4f1a\u7167\u5e38\u6309\u7167\u9884\u671f\u7684\u7f16\u7801\u65b9\u5f0f\u89e3\u6790\uff1b\u4f46\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u53ca\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u7684\u5b89\u5168\u8bbe\u8ba1\u4f7f\u5f97\u8fd9\u6837\u7684\u64cd\u4f5c\u4e0d\u4f1a\u5e26\u6765\u592a\u574f\u7684\u540e\u679c\u3002</p> <p>UNIX \u5141\u8bb8\u6587\u4ef6\u6269\u5c55\u540d\u7684\u63d0\u793a\uff0c\u4f46\u662f\u6269\u5c55\u540d\u4e3b\u8981\u662f\u5e2e\u52a9\u7528\u6237\u6765\u786e\u5b9a\u5185\u5bb9\u7c7b\u578b\uff1b\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u5e76\u4e0d\u5f3a\u5236\u6587\u4ef6\u6269\u5c55\u540d\uff0c\u4e5f\u5e76\u4e0d\u4f9d\u8d56\u8fd9\u4e9b\u6269\u5c55\u540d\u3002\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u8005\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u5ffd\u7565\u6587\u4ef6\u6269\u5c55\u540d\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#1314-\u6587\u4ef6\u7ed3\u6784","title":"13.1.4 \u6587\u4ef6\u7ed3\u6784","text":"<p>\u6587\u4ef6\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u7ed3\u6784\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u6216\u8005\u7528\u6237\u7a0b\u5e8f\u5b9a\u4e49\u3002</p> <p>\u6700\u7b80\u5355\u7684\u662f \u65e0\u7ed3\u6784 (no structure) \u6587\u4ef6\uff0c\u5b83\u53ea\u662f a stream of bytes or words\u3002\u4f8b\u5982 UNIX operating system defines all files to be simply streams of bytes\u3002</p> <p>\u53e6\u5916\u4e5f\u6709 simple record structure \u6587\u4ef6\uff0c\u4ee5 record \u4e3a\u5355\u4f4d\uff0c\u6bcf\u4e2a record \u53ef\u4ee5\u662f\u5b9a\u957f\u6216\u8005\u53d8\u957f\u7684\uff0c\u4f8b\u5982\u6570\u636e\u5e93\u3002</p> <p>\u8fd8\u6709 complex structures \u6587\u4ef6\u3002\u4f8b\u5982 Microsoft Word \u6587\u6863\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#132-access-methods--\u8bbf\u95ee\u65b9\u5f0f","title":"13.2 Access Methods | \u8bbf\u95ee\u65b9\u5f0f","text":"<p>\u6211\u4eec\u8ba8\u8bba\u6709\u54ea\u4e9b\u8bbf\u95ee\u6587\u4ef6\u4fe1\u606f\u7684\u65b9\u5f0f\u3002</p> <p>\u6700\u7b80\u5355\u4e5f\u6700\u5e38\u89c1\u7684\u8bbf\u95ee\u65b9\u5f0f\u662f \u987a\u5e8f\u8bbf\u95ee (sequential access)\u3002\u5c31\u50cf\u78c1\u5e26\u90a3\u6837\uff0c\u9010\u5b57\u8282\u6216\u8005\u9010 record \u5730\u8bbf\u95ee\u3002</p> <p>\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f \u76f4\u63a5\u8bbf\u95ee (direct access) \u6216\u79f0 \u76f8\u5bf9\u8bbf\u95ee (relative access) \u6216\u79f0 \u968f\u673a\u8bbf\u95ee (random access)\u3002\u5373\u652f\u6301\u4ee5\u51e0\u4e4e\u76f8\u540c\u7684\u65f6\u95f4\u8bbf\u95ee\u4efb\u610f\u4f4d\u7f6e\u3002</p> <p>\u5728\u76f4\u63a5\u8bbf\u95ee\u7684\u65b9\u6cd5\u4e4b\u4e0a\uff0c\u8fd8\u6709\u53ef\u80fd\u63d0\u4f9b\u7d22\u5f15\uff0c\u5373\u5148\u5728\u7d22\u5f15\u4e2d\u5f97\u77e5\u6240\u9700\u8bbf\u95ee\u7684\u5185\u5bb9\u5728\u54ea\u91cc\uff0c\u7136\u540e\u53bb\u8bbf\u95ee\u3002\u4e5f\u6709\u53ef\u80fd\u4f7f\u7528\u591a\u5c42\u7d22\u5f15\u8868\u3002</p> <p>\u4e3a\u4e86\u9632\u6b62\u7d22\u5f15\u8868\u8fc7\u5927\uff0c\u4e5f\u53ef\u80fd\u5f15\u5165 \u7d22\u5f15\u987a\u5e8f\u8bbf\u95ee (Indexed Sequential-Access)\uff0c\u5373\u50cf\u5b57\u5178\u90a3\u6837\u786e\u5b9a\u6240\u9700\u8bbf\u95ee\u7684\u5185\u5bb9\u5728\u54ea\u4e00\u5757\uff0c\u518d\u5728\u5bf9\u5e94\u5757\u4e2d\u987a\u5e8f\u5bfb\u627e\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#133-directory-structure--\u76ee\u5f55\u7ed3\u6784","title":"13.3 Directory Structure | \u76ee\u5f55\u7ed3\u6784","text":"<p>\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0cdirectory \u4e2d\u5305\u542b\u4e86\u6587\u4ef6\u7684\u5f88\u591a\u4fe1\u606f\uff1bdirectory structure \u5e94\u5f53\u5b9e\u73b0\u65b0\u5efa\u3001\u5220\u9664\u3001\u67e5\u627e\u3001\u904d\u5386\u3001\u5217\u51fa\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u7b49\u57fa\u672c\u64cd\u4f5c\u3002\u540c\u65f6\uff0c\u8bbe\u8ba1\u4e5f\u5e94\u5f53\u517c\u987e\u6548\u7387\u3001\u4fbf\u4e8e\u4f7f\u7528\u3001\u4fbf\u4e8e\u6309\u4e00\u4e9b\u5c5e\u6027\u805a\u5408\u7b49\u8981\u6c42\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#1331-\u5355\u7ea7\u76ee\u5f55","title":"13.3.1 \u5355\u7ea7\u76ee\u5f55","text":"<p>\u6700\u7b80\u5355\u7684\u76ee\u5f55\u7ed3\u6784\u662f single-level directory\uff0c\u5373\u5c06\u6240\u6709\u6587\u4ef6\u90fd\u5305\u542b\u5728\u540c\u4e00\u76ee\u5f55\u4e2d\uff1a</p> <p></p> <p>\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u7684\u95ee\u9898\u662f\uff0c\u5f53\u6587\u4ef6\u6570\u91cf\u589e\u52a0\u65f6\uff0c\u5e76\u6ca1\u6709\u6709\u6548\u7684\u65b9\u6cd5\u6765\u67e5\u627e\u6216\u8005\u7ed9\u6587\u4ef6\u5206\u7ec4\uff08\u4f8b\u5982\u627e\u51fa\u6240\u6709\u7684 Java \u7a0b\u5e8f\uff09\u3002</p> <p>\u540c\u65f6\uff0c\u7531\u4e8e\u6240\u6709\u6587\u4ef6\u4f4d\u4e8e\u540c\u4e00\u76ee\u5f55\u4e0b\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u540d\u79f0\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002\u5728\u6709\u591a\u4e2a\u7528\u6237\u65f6\uff0c\u8fd9\u79cd\u9700\u6c42\u662f\u4e0d\u592a\u5408\u7406\u7684\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#1332-\u4e24\u7ea7\u76ee\u5f55","title":"13.3.2 \u4e24\u7ea7\u76ee\u5f55","text":"<p>Two-level directory \u4e3a\u6bcf\u4e2a\u7528\u6237\u521b\u5efa\u81ea\u5df1\u7684 \u7528\u6237\u6587\u4ef6\u76ee\u5f55 (User File Directory, UFD)\uff1b\u8fd9\u4e9b UFD \u805a\u5408\u6210\u4e3a \u4e3b\u6587\u4ef6\u76ee\u5f55 (Master File Directory, MFD)\uff0c\u5f53\u7528\u6237\u767b\u5f55\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ece MFD \u4e2d\u627e\u5230\u7528\u6237\u7684 UFD\u3002</p> <p>\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u4e86\u6587\u4ef6\u6570\u91cf\u591a\u7684\u95ee\u9898\uff0c\u540c\u65f6\u4e0d\u540c\u7528\u6237\u4e5f\u53ef\u4ee5\u5206\u522b\u521b\u5efa\u540c\u540d\u7684\u6587\u4ef6\u4e86\u3002\u4f46\u662f\u5206\u7ec4\u4ecd\u7136\u6ca1\u6709\u652f\u6301\u3002</p> <p></p> <p>\u7528\u6237 1 \u8bbf\u95ee\u81ea\u5df1\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 <code>test</code> \u7684\u65b9\u5f0f\u8bbf\u95ee\uff1b\u4e3a\u4e86\u8bbf\u95ee\u5176\u4ed6\u7528\u6237\u7684\u6587\u4ef6\uff0c\u9700\u8981\u901a\u8fc7 <code>user2/data</code> \u7684\u65b9\u5f0f\u8bbf\u95ee\u3002\u8fd9\u6837\u7684\u5b9e\u73b0\u65b9\u6cd5\u5176\u5b9e\u662f\u628a\u4e8c\u7ea7\u76ee\u5f55\u89c6\u4f5c\u4e00\u68f5\u9ad8\u5ea6\u4e3a 2 \u7684\u6811\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#1333-\u6811\u5f62\u76ee\u5f55","title":"13.3.3 \u6811\u5f62\u76ee\u5f55","text":"<p>Tree-Structured Directories \u662f\u4e0a\u9762\u65b9\u6848\u7684\u81ea\u7136\u63a8\u5e7f\u3002\u5728\u8fd9\u79cd\u5b9e\u73b0\u65b9\u6848\u4e2d\uff0c\u76ee\u5f55\u672c\u8eab\u4e5f\u88ab\u653e\u5728\u7236\u76ee\u5f55\u7684\u4e00\u4e2a\u6761\u76ee\u4e2d\uff1b\u6bcf\u4e2a\u6761\u76ee\u6709\u4e00\u4e2a bit \u6765\u8868\u793a\u8fd9\u4e2a\u6761\u76ee\u8868\u793a\u7684\u662f\u4e00\u4e2a\u6587\u4ef6\u8fd8\u662f\u4e00\u4e2a\u5b50\u76ee\u5f55\u3002\u76ee\u5f55\u4e5f\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6587\u4ef6\u3002</p> <p></p> <p>\u5728\u6b63\u5e38\u4f7f\u7528\u65f6\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u4e00\u4e2a \u5f53\u524d\u76ee\u5f55 (current directory)\uff1b\u5f53\u7528\u6237\u6307\u5b9a\u4e00\u4e2a\u6587\u4ef6\u540d\u65f6\uff0c\u5c31\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u5bfb\u627e\u3002\u7528\u6237\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528 <code>change_directory()</code> \u6765\u66f4\u6539\u5f53\u524d\u76ee\u5f55\u3002</p> <p>\u5982\u679c\u6240\u9700\u76ee\u5f55\u4e0d\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u90a3\u4e48\u7528\u6237\u5c31\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a \u8def\u5f84\u540d (path name)\uff0c\u8868\u793a\u5728\u8fd9\u68f5\u6811\u4e0a\u5982\u4f55\u8d70\u53ef\u4ee5\u627e\u5230\u6240\u9700\u7684\u6587\u4ef6\u3002\u8def\u5f84\u540d\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li>\u7edd\u5bf9\u8def\u5f84\u540d (absolute path name)\uff0c\u8868\u793a\u4ece\u6839\u5f00\u59cb\u5230\u6307\u5b9a\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f8b\u5982 <code>/bin/count</code>, <code>programs/p/list</code>\uff1b</li> <li>\u76f8\u5bf9\u8def\u5f84\u540d (relative path name)\uff0c\u8868\u793a\u4ece\u5f53\u524d\u76ee\u5f55\u5f00\u59cb\u7684\u8def\u5f84\u3002</li> </ul> <p>\u5f53\u5220\u9664\u4e00\u4e2a\u76ee\u5f55\u65f6\uff0c\u4e00\u79cd\u8bbe\u8ba1\u601d\u8def\u662f\u4e0d\u5141\u8bb8\u5220\u9664\u975e\u7a7a\u7684\u76ee\u5f55\uff1b\u53e6\u4e00\u79cd\u662f\uff0c\u5220\u9664\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff08\u5305\u62ec\u5b50\u76ee\u5f55\uff09\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#1334-\u65e0\u73af\u56fe\u76ee\u5f55","title":"13.3.4 \u65e0\u73af\u56fe\u76ee\u5f55","text":"<p>Acyclic Graph Directories \u5728\u4e0a\u9762\u7684\u65b9\u6848\u7684\u57fa\u7840\u4e0a\u652f\u6301\u4e86\u76ee\u5f55\u5171\u4eab\u5b50\u76ee\u5f55\u6216\u8005\u6587\u4ef6\uff1a</p> <p></p> <p>\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u662f\uff0c\u5f15\u5165\u4e00\u4e2a\u540d\u4e3a \u94fe\u63a5 (link) \u7684\u65b0\u7684\u76ee\u5f55\u6761\u76ee\u7c7b\u578b\uff0c\u8868\u793a\u53e6\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u5b50\u76ee\u5f55\u7684\u6307\u9488\u3002\u5728\u904d\u5386\u76ee\u5f55\u6811\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5ffd\u7565\u94fe\u63a5\u4ee5\u7ef4\u62a4\u7cfb\u7edf\u7684\u65e0\u73af\u7ed3\u6784\u3002</p> <p>\u8fd9\u4e2a\u6307\u9488\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e4b\u4e00\u662f\u7528\u94fe\u63a5\u6587\u4ef6\u6765\u8bb0\u5f55\u6307\u5411\u6587\u4ef6\u7684\u7edd\u5bf9\u6216\u76f8\u5bf9\u8def\u5f84\uff0c\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a \u7b26\u53f7\u94fe\u63a5 (symbolic link) \u6216\u8005 \u8f6f\u94fe\u63a5 (soft link)\u3002\u5f53\u8bbf\u95ee\u8fd9\u79cd\u6587\u4ef6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u8be5\u8def\u5f84\u540d\u6765 resolve \u94fe\u63a5\uff0c\u4ece\u800c\u5b9a\u4f4d\u771f\u5b9e\u6587\u4ef6\u3002</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u5b58\u5728\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u679c\u5220\u9664\u4e00\u4e2a\u88ab\u67d0\u4e2a soft link \u6240\u5f15\u7528\u7684\u6587\u4ef6\uff0c\u5219\u4f1a\u7559\u4e0b dangling pointer\uff0c\u5373\u90a3\u4e9b link \u73b0\u5728\u6307\u5411\u5e76\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u3002UNIX \u548c Windows \u91c7\u7528\u7684\u65b9\u5f0f\u662f\uff0c\u5f53\u771f\u5b9e\u6587\u4ef6\u88ab\u5220\u9664\u65f6\uff0c\u5e76\u4e0d\u8bd5\u56fe\u5904\u7406\u8fd9\u4e9b link\uff1b\u7528\u6237\u5728\u8bd5\u56fe\u8bbf\u95ee\u8fd9\u4e9b link \u65f6\u4f1a\u53d1\u73b0\u771f\u5b9e\u6587\u4ef6\u5df2\u7ecf\u88ab\u5220\u9664\u3002</p> <p>\u53e6\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u662f\u590d\u5236\u88ab\u5f15\u7528\u6587\u4ef6\u7684\u6240\u6709\u4fe1\u606f\uff0c\u653e\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u3002\u7531\u4e8e\u8fd9\u91cc\u7684\u300c\u4fe1\u606f\u300d\u4e2d\u4e5f\u5305\u542b\u6587\u4ef6\u5b58\u50a8\u5728\u5916\u5b58\u4e2d\u7684\u54ea\u4e2a\u90e8\u5206\uff0c\u56e0\u6b64\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u65b0\u7684\u6761\u76ee\u548c\u88ab\u5f15\u7528\u7684\u6761\u76ee\u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u6587\u4ef6\u3002\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a \u786c\u94fe\u63a5 (hard link)\u3002\u8fd9\u4e2a\u94fe\u63a5\u548c\u539f\u6587\u4ef6\u672c\u8eab\u76f8\u540c\u4e14\u76f8\u7b49\uff0c\u56e0\u6b64\u53ef\u80fd\u6ca1\u6709\u529e\u6cd5\u533a\u5206\u5b83\u4eec\u3002\u8fd9\u79cd\u5b9e\u73b0\u7684\u4e3b\u8981\u95ee\u9898\u662f\uff0c\u5728\u4fee\u6539\u6587\u4ef6\u65f6\u8981\u7ef4\u62a4\u4e00\u81f4\u6027\uff0c\u5373\u9700\u8981\u5728\u6240\u6709\u5305\u542b\u8fd9\u4e2a\u6587\u4ef6\u7684\u76ee\u5f55\u4e2d\u66f4\u65b0\u5bf9\u5e94\u7684\u4fe1\u606f\u3002</p> <p>\u8fd9\u79cd\u5b9e\u73b0\u7ed9\u6bcf\u4e2a\u6587\u4ef6\u5f15\u5165\u4e86\u4e00\u4e2a \u5f15\u7528\u8ba1\u6570 (reference counter)\uff1b\u5728\u6bcf\u4e2a\u6587\u4ef6\u88ab\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u786c\u94fe\u63a5\u65f6\uff0c\u8be5\u8ba1\u6570 +1\uff1b\u800c\u5220\u9664\u4e00\u4e2a\u786c\u94fe\u63a5\u6216\u539f\u6587\u4ef6\u672c\u8eab\u65f6\uff0c\u8be5\u8ba1\u6570 -1\u3002\u5f53\u8ba1\u6570\u4e3a 0 \u65f6\uff0c\u6587\u4ef6\u53ef\u4ee5\u5220\u9664\u3002</p> <p>UNIX \u540c\u65f6\u652f\u6301\u4e0a\u8ff0\u4e24\u79cd\u94fe\u63a5\u3002\u4e3a\u4e86\u7ef4\u62a4\u65e0\u73af\u56fe\u7ed3\u6784\uff0chard link \u4e0d\u5141\u8bb8\u5f15\u7528\u76ee\u5f55\uff0c\u800c soft link \u53ef\u4ee5\u3002</p> <p>Hard link &amp; soft link</p> <p>Hard link \u662f\u4e00\u4e2a directory entry\uff0c\u800c soft link \u662f\u4e00\u4e2a file\u3002</p> <p>Hard link \u4e0d\u80fd\u5f15\u7528 directory\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u5e26\u6765\u5f88\u591a\u95ee\u98981\uff0c\u4f46\u662f soft link \u53ef\u4ee5\u3002</p> <p>\u4e00\u4e2a\u4f8b\u5916\u662f\uff0c\u6bcf\u4e2a\u76ee\u5f55\u4e2d\u7684 file name <code>.</code> \u662f\u6307\u5411\u81ea\u5df1\u7684 hard link\uff0c\u800c <code>..</code> \u662f\u6307\u5411\u7236\u76ee\u5f55\u7684 hard link\u3002</p> <p>Hard link \u4e0d\u80fd\u8de8\u8d8a file-system boundaries\uff0c\u4f46\u662f soft link \u53ef\u4ee5\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u5728\u591a\u4e2a file-system \u4e4b\u95f4\uff0cFCB \u7684\u6807\u8bc6\u53f7\u4e0d\u518d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#1335-\u901a\u7528\u56fe\u76ee\u5f55","title":"13.3.5 \u901a\u7528\u56fe\u76ee\u5f55","text":"<p>General Graph Directory \u5141\u8bb8\u76ee\u5f55\u4e2d\u6709\u73af\u3002\u8fd9\u4f1a\u4f7f\u5f97\u904d\u5386\u56fe\u7684\u7b97\u6cd5\u66f4\u52a0\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u907f\u514d\u91cd\u590d\u904d\u5386\u4e00\u4e9b\u90e8\u5206\u3002\u540c\u65f6\u4e5f\u4f1a\u7ed9\u786e\u5b9a\u4f55\u65f6\u53ef\u4ee5\u5220\u9664\u67d0\u4e2a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u5e26\u6765\u9ebb\u70e6\uff0c\u56e0\u4e3a\u53ef\u80fd\u5b58\u5728\u7684\u76f8\u4e92\u5f15\u7528\u6216\u8005\u81ea\u6211\u5f15\u7528\u4f1a\u4f7f\u5f97\u5728\u6ca1\u6709\u53ef\u80fd\u5f15\u7528\u4e00\u4e2a\u76ee\u5f55\u6216\u6587\u4ef6\u65f6\u5f15\u7528\u8ba1\u6570\u4e5f\u4e0d\u4e3a 0\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\uff0c\u901a\u5e38\u9700\u8981\u4f7f\u7528 \u5783\u573e\u56de\u6536 (garbage collection) \u65b9\u6848\u6765\u786e\u5b9a\u54ea\u4e9b\u6587\u4ef6\u53ef\u4ee5\u5220\u9664\u3002\u8fd9\u662f\u975e\u5e38\u8d39\u65f6\u7684\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#134-fs-mounting--\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d","title":"13.4 FS Mounting | \u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d","text":"<p>Directory Structure \u53ef\u4ee5\u6784\u5efa\u5728\u591a\u4e2a volume \u4e0a\uff0c\u8fd9\u4e9b volume \u5fc5\u987b\u5148 \u6302\u8f7d (mount) \u5230\u6587\u4ef6\u7cfb\u7edf\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u79f0\u4e3a \u6302\u8f7d\u70b9 (mount point)\u3002</p> <p>\u4f8b\u5982\uff0c\u4e0b\u9762\u53f3\u56fe\u5c55\u793a\u4e86\u5de6\u56fe\u7684 volume \u88ab\u6302\u8f7d\u5230 <code>/users</code> \u4e0b\u7684\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/13_fs_interface/#135-protection","title":"13.5 Protection","text":"<p>\u6587\u4ef6\u7684\u6240\u6709\u8005\u6216\u8005\u521b\u5efa\u8005\u5e94\u8be5\u6709\u6743\u9650\u51b3\u5b9a\u54ea\u4e9b\u7528\u6237\u6709\u6743\u9650\u505a\u54ea\u4e9b\u4e8b\u60c5\u3002</p> <p>\u7ed9\u6bcf\u4e2a\u6587\u4ef6\u548c\u76ee\u5f55\u7ef4\u62a4\u4e00\u4e2a Access Control List (ACL)\uff0c\u6307\u5b9a\u6bcf\u4e2a\u7528\u6237\u53ca\u5176\u5141\u8bb8\u7684\u8bbf\u95ee\u7c7b\u578b\u3002\u4e3a\u4e86\u7cbe\u7b80 ACL\uff0c\u53ef\u4ee5\u5c06\u7528\u6237\u5206\u4e3a\u4e0d\u540c\u7684\u7c7b\u578b\u3002</p> <p>UNIX \u5c06\u7528\u6237\u5206\u4e3a\u4e86\u4e09\u7c7b\uff08owner, group, others)\uff0c\u5e76\u5c06\u6587\u4ef6\u8bbf\u95ee\u4e5f\u5206\u4e3a\u4e86\u4e09\u7c7b (read, write, execute)\uff1a</p> <p></p> root \u7684\u6743\u9650 <p>\u5f53\u4e00\u4e2a\u6587\u4ef6\u7684 read \u6216 write bit not set \u65f6\uff0croot \u7528\u6237\u4ecd\u7136\u80fd\u591f\u8bfb\u6216\u5199\u5b83\u3002</p> <p>\u5f53\u4e00\u4e2a\u76ee\u5f55\u7684 execute bit \u5bf9\u4e8e\u4e00\u4e2a\u7528\u6237\u6240\u5728\u7684\u5206\u7c7b not set \u65f6\uff0c\u8be5\u7528\u6237\u4e0d\u80fd\u8fdb\u5165\u8be5\u76ee\u5f55\uff1b\u4f46\u662f root \u7528\u6237\u53ef\u4ee5\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u5bf9\u4e09\u7c7b\u7528\u6237\u7684 execute bit \u5747 not set \u65f6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u88ab\u8ba4\u4e3a\u4e0d\u662f\u53ef\u6267\u884c\u7684\uff0c\u56e0\u6b64 root \u7528\u6237\u4e5f\u4e0d\u80fd\u6267\u884c\u8fd9\u4e2a\u6587\u4ef6\u30022</p> <ol> <li> <p>https://askubuntu.com/a/525129/1639684 \u21a9</p> </li> <li> <p>https://unix.stackexchange.com/questions/43263/why-cant-root-execute-when-executable-bits-are-not-set \u21a9</p> </li> </ol>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/","title":"14 File System Implementation | \u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0","text":"<p> \u7ea6 2957 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>\u5982\u6211\u4eec\u6240\u8bf4\uff0c\u6587\u4ef6\u7cfb\u7edf\u5229\u7528\u78c1\u76d8\u9a71\u52a8\u5668\u6240\u63d0\u4f9b\u7684\u8bfb\u5199\u78c1\u76d8 blocks \u7684\u63a5\u53e3\u6765\u5b9e\u73b0\uff1b\u5176\u53d1\u6325\u7684\u529f\u80fd\u662f\u7ed9\u7528\u6237\u548c\u7a0b\u5e8f\u63d0\u4f9b\u5b58\u50a8\u529f\u80fd\uff0c\u63d0\u4f9b\u9ad8\u6548\u548c\u4fbf\u6377\u7684\u78c1\u76d8\u8bbf\u95ee\uff0c\u5e76\u5c06\u8fd9\u79cd\u903b\u8f91\u7ed3\u6784\u6620\u5c04\u5230\u7269\u7406\u7684\u5916\u5b58\u8bbe\u5907\u4e0a\u3002</p> <p>\u73b0\u5b58\u7684\u6587\u4ef6\u7cfb\u7edf\u7531\u5f88\u591a\u79cd\uff0c\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u652f\u6301\u591a\u79cd\u6587\u4ef6\u7cfb\u7edf\u3002</p> <ul> <li>Unix \u4f7f\u7528 Unix FS (UFS)\uff0c\u5b83\u57fa\u4e8e BFFS (Berkeley Fast FS)\uff1b</li> <li>Windows \u652f\u6301 File Allocation Table(FAT), FAT32 \u548c Windows NT File System (NTFS)\uff1b</li> <li>Linux \u7684\u6807\u51c6\u6587\u4ef6\u7cfb\u7edf\u662f extended file system\uff0c\u6700\u5e38\u89c1\u7684\u662f ext3 \u548c ext4\u3002\u4e0d\u8fc7 Linux \u652f\u6301 40+ \u79cd FS\u3002</li> </ul> <p>\u6587\u4ef6\u7cfb\u7edf\u7684\u7814\u7a76\u4ecd\u7136\u662f\u4e00\u4e2a\u6d3b\u8dc3\u7684\u9886\u57df\u3002Google \u521b\u5efa\u4e86\u81ea\u5df1\u7684 FS \u4ee5\u6ee1\u8db3\u5177\u4f53\u7684\u5b58\u50a8\u548c\u68c0\u7d22\u9700\u6c42\uff1bDistributed File Systems \u4e5f\u6709\u5f88\u591a\u7814\u7a76\u3001\u5e94\u7528\u548c\u53d1\u5c55\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#141-file-system-structure--\u6587\u4ef6\u7cfb\u7edf\u7ed3\u6784","title":"14.1 File System Structure | \u6587\u4ef6\u7cfb\u7edf\u7ed3\u6784","text":"<p>\u6587\u4ef6\u7cfb\u7edf\u672c\u8eab\u901a\u5e38\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u5c42\u7ec4\u6210\uff0c\u4e00\u4e2a\u4f8b\u5b50\u662f\uff1a</p> <p></p> <p>Application programs \u7ed9\u51fa read / write / open \u67d0\u4e2a file path \u7684\u6307\u4ee4\uff0c\u8fd9\u4e2a\u6307\u4ee4\u88ab\u4f20\u9012\u7ed9 logical file system\u2014\u2014</p> <p>Logical file system \u7ba1\u7406\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u6240\u9700\u7684 metadata\uff08\u5373\u9664\u4e86\u6587\u4ef6\u5185\u5bb9\u4e4b\u5916\u7684\u6240\u6709\u4e1c\u897f\uff09\uff0c\u4f8b\u5982 directory structure\u3002\u5b83\u901a\u8fc7\u4e00\u4e2a\u53eb\u505a File Control Block (FCB) \u7684\u6570\u636e\u7ed3\u6784\u4fdd\u5b58\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5373\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\u7684 name, ownership, permissions, ref count, timestamps, pointers to data blocks on disk \u7b49\u3002</p> <p>Logical file system \u5c06\u4e0a\u5c42\u7ed9\u51fa\u7684 read / write / open \u67d0\u4e2a file path \u7684\u6307\u4ee4\u89e3\u6790\u4e3a read / write \u67d0\u4e9b logical blocks \u7684\u6307\u4ee4\uff0c\u5e76\u4f20\u9012\u7ed9 file-organization module\u2014\u2014</p> <p>File-organization module \u8d1f\u8d23 logical file blocks \u5230 physical file blocks \u7684\u8f6c\u6362\u3002\u540c\u65f6\uff0c\u5b83\u8fd8\u8d1f\u8d23\u7ba1\u7406 free space\uff0c\u5373\u8ddf\u8e2a\u672a\u88ab\u4f7f\u7528\u7684 blocks \u5e76\u5728\u9700\u8981\u65f6\u8fdb\u884c\u5206\u914d\u3002</p> <p>File-organization module \u5c06 logical file system \u7ed9\u51fa\u7684\u5bf9 logical blocks \u7684\u6307\u4ee4\u8f6c\u6362\u4e3a\u5bf9 physical file blocks \u7684\u8f6c\u6362\uff0c\u5e76\u4f20\u9012\u7ed9 basic file system\u2014\u2014</p> <p>Basic file system \u7ba1\u7406\u5305\u542b file-system, directory \u548c data blocks \u7684\u7f13\u5b58\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002</p> <p>\u5982\u679c\u4e0a\u5c42\u7684\u8bfb\u53d6\u6216\u5199\u5165 miss \u4e86\uff0c\u90a3\u4e48 basic file system \u5c06\u5bf9\u5e94\u7684\u6307\u4ee4\u4f20\u9012\u7ed9 I/O control\u2014\u2014</p> <p>I/O control \u5305\u62ec\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u548c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u4ee5\u5728\u4e3b\u5b58\u548c\u78c1\u76d8\u7cfb\u7edf\u4e4b\u95f4\u4f20\u9012\u4fe1\u606f\u3002\u8fd9\u5e94\u7528\u5230 12 \u7ae0 I/O System \u7684\u76f8\u5173\u5b9e\u73b0\u3002</p> <p>I/O control \u5c06\u4e0a\u5c42\u7684\u6307\u4ee4\u8f6c\u6362\u4e3a low-level, hardware-specific \u7684\u6307\u4ee4\u6765\u5b9e\u73b0\u76f8\u5173\u64cd\u4f5c\u3002</p> <p>\u5206\u5c42\u7684\u6587\u4ef6\u7cfb\u7edf\u8bbe\u8ba1\u53ef\u4ee5\u964d\u4f4e\u6587\u4ef6\u7cfb\u7edf\u672c\u8eab\u7684\u590d\u6742\u6027\u548c\u5197\u4f59\u6027\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u5f71\u54cd\u6027\u80fd\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#142-fs-data-structures","title":"14.2 FS Data Structures","text":"<p>\u6587\u4ef6\u7cfb\u7edf\u4f1a\u4f7f\u7528\u591a\u79cd\u6570\u636e\u7ed3\u6784\uff1b\u6709\u7684\u6570\u636e\u7ed3\u6784\u4f1a\u653e\u5728\u78c1\u76d8\u4e0a\uff0c\u800c\u6709\u7684\u4f1a\u653e\u5728\u5185\u5b58\u91cc\u3002</p> <p>On-disk structures:</p> <ul> <li>File control block(FCB) (per file)\u3002\u4fdd\u5b58 name, ownership, permissions, ref count, timestamps, pointers to data blocks on disk \u7b49\u4fe1\u606f\uff1b\u6bcf\u4e2a FCB \u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6807\u8bc6\u53f7\u4ee5\u4e0e\u76ee\u5f55\u6761\u76ee\u76f8\u5173\u8054\u3002\u5728 UNIX \u4e2d\uff0cFCB \u88ab\u79f0\u4e3a <code>inode</code>\uff1b\u5728 NTFS \u4e2d\uff0c\u6bcf\u4e2a FCB \u662f\u4e00\u4e2a\u53eb master file table \u7684\u7ed3\u6784\u7684\u4e00\u884c\u3002 </li> <li>Boot control block (per volume)\u3002\u5982\u679c\u4e00\u4e2a volume \u662f boot partition\uff0c\u90a3\u4e48\u8fd9\u91cc\u4fdd\u5b58\u4ece\u8be5 volume \u5f15\u5bfc\u64cd\u4f5c\u7cfb\u7edf\u6240\u9700\u7684\u4fe1\u606f\uff1b\u5426\u5219\u5185\u5bb9\u4e3a\u7a7a\u3002\u5b83\u901a\u5e38\u662f volume \u7684\u7b2c\u4e00\u4e2a block\u3002UFS \u79f0\u4e4b\u4e3a boot block\uff0cNTFS \u79f0\u4e4b\u4e3a partition boot sector\u3002</li> <li>Volume control block (per volume)\u3002\u5305\u542b\u5f53\u524d volume \u7684 block #, block size, free-block #, free-block ptrs, free-FCB #, free FCB ptrs \u7b49\u3002UFS \u79f0\u4e4b\u4e3a superblock\uff0cNTFS \u5c06\u5176\u5b58\u5728 master file table \u4e2d\u3002</li> <li>Directory (per FS)\u3002\u7528\u6765\u7ec4\u7ec7\u6587\u4ef6\uff0c\u5305\u542b\u6587\u4ef6\u540d\u548c\u5bf9\u5e94 FCB \u7684\u6807\u8bc6\u53f7\u3002\u5728 NTFS \u4e2d\uff0c\u5b83\u4e5f\u88ab\u5b58\u5728 master file table \u4e2d\u3002</li> </ul> <p>In-memory structures:</p> <ul> <li>Mount table\u3002\u6bcf\u4e2a\u6302\u8f7d\u7684 volume \u5360\u4e00\u884c\uff0c\u4fdd\u5b58\u76f8\u5173\u4fe1\u606f\u3002</li> <li>Directory cache\u3002</li> <li>Global (a.k.a. system-wide) open-file table\u3002</li> <li>Per-process open-file table\u3002</li> <li>\u7528\u4e8e\u8bfb\u5199\u78c1\u76d8\u7684 buffer\u3002</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#file-creation","title":"File Creation","text":"<p>\u5f53\u521b\u5efa\u65b0\u6587\u4ef6\u65f6\uff0capplication programs \u8c03\u7528 logical file system\uff1b\u540e\u8005\u5206\u914d\u4e00\u4e2a FCB\u3002\u7cfb\u7edf\u968f\u540e\u5c06\u5bf9\u5e94\u7684 directory \u8bfb\u5230\u5185\u5b58\uff0c\u5e76\u7528 filename \u548c FCB \u66f4\u65b0 directory\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#file-open--close","title":"File Open &amp; Close","text":"<p>\u7cfb\u7edf\u8c03\u7528 <code>open()</code> \u5c06\u6587\u4ef6\u540d\u4f20\u7ed9 logical file system\uff0c\u540e\u8005\u641c\u7d22 system-wide open-file table \u4ee5\u786e\u5b9a\u8be5\u6587\u4ef6\u662f\u5426\u6b63\u5728\u88ab\u5176\u4ed6\u8fdb\u7a0b\u4f7f\u7528\uff1a</p> <ul> <li>\u5982\u679c\u4e0d\u662f\uff0c\u5219\u9700\u8981\u5728 directory \u4e2d\u627e\u5230\u8fd9\u4e2a file name\uff0c\u5e76\u5c06\u5176 FCB \u4ece\u78c1\u76d8\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5e76\u5c06\u5176\u653e\u5728 system-wide open-file table \u4e2d\u3002\u7136\u540e\uff0c\u5728\u5f53\u524d\u8fdb\u7a0b\u7684 per-process open-file table \u4e2d\u65b0\u5efa\u4e00\u4e2a entry\uff0c\u6307\u5411 system-wide open-file table \u4e2d\u7684\u5bf9\u5e94\u9879\u3002</li> <li>\u5982\u679c\u662f\uff0c\u5219\u76f4\u63a5\u5728\u5f53\u524d\u8fdb\u7a0b\u7684 per-process open-file table \u4e2d\u65b0\u5efa\u4e00\u4e2a entry\uff0c\u6307\u5411 system-wide open-file table \u4e2d\u7684\u5bf9\u5e94\u9879\u5373\u53ef\u3002\u8fd9\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u5f00\u9500\u3002</li> </ul> <p>Info</p> <p>System-wide open-file table \u9664\u4e86\u5b58\u50a8 FCB \u5916\uff0c\u8fd8\u4f1a\u5b58\u50a8\u6253\u5f00\u8be5\u6587\u4ef6\u7684\u8fdb\u7a0b\u7684\u6570\u91cf\u3002</p> <p>Per-process open-file table \u9664\u4e86\u4fdd\u5b58\u6307\u5411 system-wide open-file table \u4e2d\u4e00\u4e2a entry \u7684\u6307\u9488\u5916\uff0c\u8fd8\u4f1a\u4fdd\u5b58\u4e00\u4e9b\u5176\u4ed6\u4fe1\u606f\uff0c\u4f8b\u5982 current-file-position pointer \u4ee5\u53ca\u6253\u5f00\u6587\u4ef6\u7684\u8bbf\u95ee\u6a21\u5f0f\u7b49\u3002</p> <p>\u7136\u540e\uff0c<code>open()</code> \u8fd4\u56de\u6307\u5411 per-process open-file table \u4e2d\u5bf9\u5e94 entry \u7684\u6307\u9488\uff1b\u63a5\u4e0b\u6765\u7684\u6587\u4ef6\u64cd\u4f5c\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u6267\u884c\u3002\u8fd9\u4e2a entry \u5728 UNIX \u4e2d\u88ab\u79f0\u4e3a file descriptor\uff0c\u5728 Windows \u4e2d\u88ab\u79f0\u4e3a file handle\u3002</p> <p>Info</p> <p>\u6587\u4ef6\u540d\u4e0d\u5fc5\u662f open-file table \u7684\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u540e\u7eed\u7684\u64cd\u4f5c\u5e76\u4e0d\u9700\u8981\u6587\u4ef6\u540d\u3002\u4f46\u662f\uff0c\u5982\u524d\u9762\u6240\u8ff0\uff0c\u7f13\u5b58\u6587\u4ef6\u540d\u6709\u52a9\u4e8e\u51cf\u7701\u6253\u5f00\u540c\u4e00\u6587\u4ef6\u7684\u65f6\u95f4\u3002</p> <p>\u5f53\u8fdb\u7a0b\u5173\u95ed\u6587\u4ef6\u65f6\uff0cper-process open-file table \u4e2d\u5bf9\u5e94 entry \u5c06\u88ab\u5220\u9664\uff0csystem-wide open-file table \u4e2d\u7684 counter \u5c06\u88ab -1\uff1b\u5982\u679c\u8be5 counter \u6e05\u96f6\uff0c\u5219\u66f4\u65b0\u7684 metadata \u5c06\u88ab\u5199\u4f1a\u78c1\u76d8\u4e0a\u7684 directory structure \u4e2d\uff0csystem-wide open-file table \u7684\u5bf9\u5e94 entry \u5c06\u88ab\u5220\u9664\u3002</p> <p>Unix \u7b49\u7cfb\u7edf\u5c06 devices \u548c network connections \u7b49\u4e5f\u7528\u6587\u4ef6\u7cfb\u7edf\u6765\u7ba1\u7406\uff0c\u56e0\u6b64\u9664\u4e86 files \u548c directories \u6709 inode \u4e4b\u5916\uff0c\u4e0a\u8ff0\u5185\u5bb9\u4e5f\u6709 inode \u5e76\u5b58\u5728\u4e8e open-file table \u4e2d\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#143-virtual-fs","title":"14.3 Virtual FS","text":"<p>\u6211\u4eec\u4e4b\u524d\u63d0\u5230\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u540c\u65f6\u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u8fd9\u4e00\u7279\u6027\u7684\u5b9e\u73b0\u4f9d\u8d56\u4e8e \u865a\u62df\u6587\u4ef6\u7cfb\u7edf (Virtual FS, VFS) \u673a\u5236\u3002</p> <p></p> <p>\u8fd9\u79cd\u673a\u5236\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u6587\u4ef6\u7cfb\u7edf\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u4e49\u4e86\u4e00\u5957\u901a\u7528\u7684\u6587\u4ef6\u7cfb\u7edf\u8bbf\u95ee\u63a5\u53e3\uff0c\u5373 <code>open(), read(), write(), close()</code> \u548c file descriptors\uff1b\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u90fd\u9700\u8981\u5b9e\u73b0\u5b83\u4eec\uff0c\u5e76\u628a\u5b83\u4eec\u6309\u7167\u7ea6\u5b9a\u6392\u5e03\u5728\u51fd\u6570\u8868\u4e2d\u3002VFS \u5c06\u4e0a\u8ff0\u901a\u7528\u64cd\u4f5c\u548c\u5b9e\u73b0\u5206\u5f00\uff0c\u5373\u5728\u9700\u8981\u8c03\u7528\u67d0\u4e2a\u51fd\u6570\u65f6\uff0c\u53bb\u5bf9\u5e94 FS \u7684\u51fd\u6570\u8868\u7684\u7ea6\u5b9a\u4f4d\u7f6e\u627e\u5230\u51fd\u6570\u6307\u9488\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86\u3002\u8fd9\u548c C++ \u4e2d\u591a\u6001\u7684\u865a\u51fd\u6570\u8868\u662f\u7c7b\u4f3c\u7684\u3002</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#144-directory-implementation","title":"14.4 Directory Implementation","text":"<p>\u76ee\u5f55\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6587\u4ef6\uff0c\u5b83\u4fdd\u5b58 file name \u5230 FCB \u7684\u6620\u5c04\u5173\u7cfb\u3002</p> <p></p> <p>\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f linear list\uff0c\u5373\u7ef4\u62a4 <code>dir_entry[]</code>\u3002\u8fd9\u79cd\u65b9\u6848\u7684\u7f3a\u70b9\u662f\u67e5\u627e\u6587\u4ef6\u5f88\u8d39\u65f6\u3002</p> <p>\u4f7f\u7528\u6709\u5e8f\u6570\u636e\u7ed3\u6784\uff08\u6709\u5e8f\u8868\u3001\u5e73\u8861\u6811\u3001B+ \u6811\u7b49\uff09\u80fd\u591f\u4f18\u5316\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>\u4f7f\u7528 hash table \u4e5f\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#145-disk-block-allocation","title":"14.5 Disk Block Allocation","text":"<p>\u6587\u4ef6\u9700\u8981\u88ab\u4fdd\u5b58\u5230\u5177\u4f53\u7684 disk blocks \u4e0a\uff0c\u6211\u4eec\u8ba8\u8bba\u5206\u914d\u7684\u7b56\u7565\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#1451-contiguous-allocation","title":"14.5.1 Contiguous Allocation","text":"<p>\u8fd9\u79cd\u65b9\u6cd5\u4e0b\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5728\u78c1\u76d8\u4e0a\u5360\u6709\u7684 blocks \u662f\u8fde\u7eed\u7684\u3002\u8fd9\u79cd\u65b9\u6848\u5728\u8bbf\u95ee\u78c1\u76d8\u65f6\u6bd4\u8f83\u53cb\u597d\uff0c\u80fd\u591f\u663e\u8457\u964d\u4f4e seek time\u3002\u540c\u65f6\uff0c\u76ee\u5f55\u4e5f\u53ea\u9700\u8981\u7ef4\u62a4\u6587\u4ef6\u7684\u8d77\u59cb block \u53ca\u5176\u957f\u5ea6\uff1a</p> <p></p> <p>\u5177\u4f53\u7684\u5206\u914d\u65b9\u6848\u4e5f\u53ef\u4ee5\u53c2\u8003 Dynamic Storage-Allocation Problem \u7684 first-fit, best-fit \u7b49\u3002</p> <p>\u8fd9\u4e5f\u4f1a\u5e26\u6765\u5916\u90e8\u788e\u7247\uff0c\u4f46\u662f disk \u901a\u5e38\u591f\u5927\uff0c\u6211\u4eec\u53ef\u80fd\u5e76\u4e0d\u5728\u610f\u8fd9\u4e9b\u788e\u7247\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528\u538b\u7f29 (compaction) \u6216\u8005\u8bf4\u662f\u6e05\u9664\u788e\u7247 (defrag) \u64cd\u4f5c\uff0c\u867d\u7136\u5b83\u4eec\u5f00\u9500\u8f83\u5927\u3002</p> <p>\u8fd9\u79cd\u65b9\u6848\u7684\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u662f\uff0c\u5982\u4f55\u786e\u5b9a\u4e00\u4e2a\u6587\u4ef6\u9700\u8981\u591a\u5c11\u7a7a\u95f4\uff1b\u8fd9\u4e2a\u95ee\u9898\u7684\u6838\u5fc3\u5728\u4e8e\uff0c\u6587\u4ef6\u672c\u8eab\u53ef\u80fd\u662f\u4f1a\u6269\u5c55\u7684\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\u662f\uff0c\u5f53\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u65f6\u5c06\u6587\u4ef6\u590d\u5236\u5230\u4e00\u4e2a\u65b0\u7684\u8db3\u591f\u5927\u7684\u7a7a\u95f2\u7a7a\u95f4\u91cc\u53bb\u3002\u8fd9\u79cd\u65b9\u6848\u4f1a\u5e26\u6765\u6bd4\u8f83\u5927\u7684 overhead\uff0c\u5c24\u5176\u662f\u6587\u4ef6\u53ef\u80fd\u5f88\u5927\u3002</p> <p>\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u8ba9\u7528\u6237\u786e\u5b9a\u6bcf\u4e2a\u6587\u4ef6\u7684\u6700\u5927\u5927\u5c0f\u3002\u8fd9\u79cd\u65b9\u6848\u4f1a\u5e26\u6765\u6bd4\u8f83\u5927\u7684\u4e0d\u4fbf\uff0c\u800c\u4e14\u7528\u6237\u53ef\u80fd\u9ad8\u4f30\u6240\u9700\u7a7a\u95f4\uff0c\u5bfc\u81f4\u8f83\u5927\u7684\u5185\u90e8\u788e\u7247\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u521b\u5efa\u4e86\u8fde\u7eed\u7a7a\u95f4\u7684\u94fe\u8868\u6765\u4fdd\u5b58\u4e00\u4e2a\u6587\u4ef6\u3002\u5f53\u7a7a\u95f4\u4e0d\u591f\u65f6\uff0c\u6dfb\u52a0\u4e00\u5757\u8fde\u7eed\u7a7a\u95f4\uff08\u79f0\u4e3a extent\uff09\u3002FCB \u8bb0\u5f55\u7684\u4fe1\u606f\u9664\u4e86\u8d77\u59cb\u548c\u957f\u5ea6\u5916\uff0c\u8fd8\u989d\u5916\u7ef4\u62a4\u4e0b\u4e00\u4e2a extent \u7684\u4fe1\u606f\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#1452-linked-allocation","title":"14.5.2 Linked Allocation","text":"<p>\u8fd9\u79cd\u65b9\u6cd5\u4e0b\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u662f block \u7ec4\u6210\u7684\u94fe\u8868\uff1b\u6bcf\u4e2a block \u4e2d\u6709\u82e5\u5e72\u5b57\u8282\u88ab\u7528\u6765\u4fdd\u5b58\u4e0b\u4e00\u5757\u7684\u5730\u5740\u3002\u76ee\u5f55\u53ea\u9700\u8981\u8bb0\u5f55\u8d77\u59cb\u5730\u5740\u548c\u7ed3\u675f\u5730\u5740\u5373\u53ef\uff1a</p> <p></p> <p>\u8fd9\u79cd\u65b9\u5f0f\u6ca1\u6709\u5916\u90e8\u788e\u7247\u3002\u4f46\u662f\u4e5f\u6709\u82e5\u5e72\u95ee\u9898\uff1a</p> <ul> <li>\u83b7\u53d6\u4e00\u4e2a\u6587\u4ef6\u53ef\u80fd\u9700\u8981\u6bd4\u8f83\u591a\u7684 I/O \u548c disk seek\uff1b</li> <li>\u6bcf\u4e2a\u5757\u4e2d\u90fd\u6709\u82e5\u5e72\u5b57\u8282\u4f5c\u4e3a overhead\u3002</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\u662f\uff0c\u5c06\u591a\u4e2a\u5757\u7ec4\u6210 cluster\u3002\u8fd9\u79cd\u65b9\u6848\u4f1a\u589e\u52a0\u5185\u90e8\u788e\u7247\u3002</p> <p>\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u5982\u679c pointer \u635f\u574f\uff0c\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5197\u4f59\u4fe1\u606f\uff08\u5982\u53cc\u5411\u94fe\u8868\uff09\u51cf\u5c11\u51fa\u73b0\u95ee\u9898\u7684\u6982\u7387\uff0c\u4f46\u4f1a\u5e26\u6765\u989d\u5916\u5f00\u9500\u3002</p> <p>\u800c\u4e14\uff0c\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u652f\u6301 random access\u3002</p> <p>File-Allocation Table (FAT) \u4f7f\u7528\u7684\u5c31\u662f Linked Allocation</p> <p>\u8fd9\u79cd\u7b80\u5355\u7684\u78c1\u76d8\u7a7a\u95f4\u5206\u914d\u65b9\u6cd5\u7528\u4e8e MS-DOS \u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#1453-indexed-allocation","title":"14.5.3 Indexed Allocation","text":"<p>\u8fd9\u79cd\u65b9\u5f0f\u7ed9\u6bcf\u4e2a\u6587\u4ef6\u8bb0\u5f55\u4e00\u4e2a \u7d22\u5f15\u5757 (index block)\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u6587\u4ef6\u7684\u7b2c i \u4e2a\u5757\u5728\u78c1\u76d8\u4e2d\u7684\u54ea\u4e2a\u5757\u3002\u76ee\u5f55\u53ea\u9700\u8981\u4fdd\u5b58\u7d22\u5f15\u5757\u653e\u5728\u54ea\u91cc\u5373\u53ef\uff1a</p> <p></p> <p>\u8fd9\u79cd\u65b9\u6848\u652f\u6301 random access\uff0c\u4e5f\u4e0d\u4f1a\u6709\u5916\u90e8\u788e\u7247\u3002\u4f46\u662f\u7d22\u5f15\u5757\u672c\u8eab\u662f\u989d\u5916\u7684\u5f00\u9500\uff0c\u8fd9\u5bf9\u5c0f\u6587\u4ef6\u6765\u8bf4\u662f\u66f4\u5927\u7684 overhead\u3002\u8fd9\u79cd\u65b9\u6848\u8fd8\u80fd\u5141\u8bb8\u6587\u4ef6\u4e2d\u5b58\u5728 holes\u3002</p> <p>\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u7d22\u5f15\u5757\u5e94\u5f53\u6709\u591a\u5927\uff1b\u5373\uff0c\u6211\u4eec\u5e0c\u671b overhead \u4e0d\u8981\u592a\u5927\uff0c\u4f46\u662f\u4e5f\u8981\u80fd\u652f\u6301\u5927\u6587\u4ef6\u3002\u6709\u82e5\u5e72\u79cd\u53ef\u9009\u7684\u5b9e\u73b0\u601d\u8def\uff1a</p> <ul> <li>linked index blocks\u3002\u6bcf\u4e2a index block \u5360\u7528\u4e00\u4e2a disk block\uff0c\u5f62\u6210\u4e00\u4e2a disk block \u7684\u94fe\u8868\u3002</li> <li>multiple-level index blocks\u3002\u4f8b\u5982\uff0c\u6bcf\u4e2a disk block \u4e3a 4KiB\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u7ea7\u7684\u7d22\u5f15\u7ed3\u6784\uff0c\u4e00\u7ea7\u7d22\u5f15\u5c31\u53ef\u4ee5\u6709 1024 \u4e2a 4B \u7684\u6307\u9488\u6307\u5411\u4e8c\u7ea7\u7d22\u5f15\uff0c\u6bcf\u4e2a\u4e8c\u7ea7\u7d22\u5f15\u4e5f\u80fd\u6709 1024 \u4e2a 4B \u7684\u6307\u9488\u6307\u5411\u6587\u4ef6\u5757\uff0c\u56e0\u6b64\u5c31\u80fd\u591f\u6709 \\(2^20\\) \u5757\uff0c\u5373\u652f\u6301 4GiB \u7684\u6700\u5927\u6587\u4ef6\u3002</li> <li>comblined scheme\u3002UNIX \u7684\u6587\u4ef6\u7cfb\u7edf\u91c7\u53d6\u8fd9\u79cd\u65b9\u6848\u3002\u5728 inode \u4e2d\u6709 15 \u4e2a\u6307\u9488\uff08\u4e0b\u9762\u5047\u8bbe <code>block size = 512B, ptr = 4B</code>\uff09\uff1a<ul> <li>\u524d 12 \u4e2a\u6307\u5411 direct block\uff0c\u5373\u6587\u4ef6\u7684\u524d 12 \u4e2a block\u3002\u5982\u679c\u6587\u4ef6\u5c0f\u4e8e\u8fd9\u4e2a\u5927\u5c0f (12 * 512B = 6KiB)\uff0c\u5219\u4e0d\u9700\u8981 index block\uff1b</li> <li>\u7b2c 13 \u4e2a\u6307\u5411 single indirect block\uff0c\u6307\u5411\u4e00\u4e2a\u4e00\u7ea7\u7684\u7d22\u5f15\u5757\uff0c\u53ef\u4ee5\u7d22\u5f15 128 * 512B = 64KiB \u6570\u636e\uff1b</li> <li>\u7b2c 14 \u4e2a\u6307\u5411 double indirect block\uff0c\u6307\u5411\u4e00\u4e2a\u4e8c\u7ea7\u7684\u7d22\u5f15\u5757\uff0c\u53ef\u4ee5\u7d22\u5f15 128 * 128 * 512B = 8MiB \u6570\u636e\uff1b</li> <li>\u7b2c 15 \u4e2a\u6307\u5411 triple indirect block\uff0c\u6307\u5411\u4e00\u4e2a\u4e09\u7ea7\u7684\u7d22\u5f15\u5757\uff0c\u53ef\u4ee5\u7d22\u5f15 128 * 128 * 128 * 512B = 1GiB \u6570\u636e\u3002</li> </ul> </li> </ul> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/VI_file_system/14_fs_impl/#146-free-space-management","title":"14.6 Free-Space Management","text":"<p>\u6587\u4ef6\u7cfb\u7edf\u9700\u8981\u7ef4\u62a4 free-space list \u4ee5\u5f97\u77e5\u7a7a\u95f2\u7684\u5757\u6216 clusters\u3002\u8fd9\u4e2a\u5217\u8868\u5728\u5206\u914d\u7a7a\u95f4\u6216\u8005\u6587\u4ef6\u88ab\u5220\u9664\u65f6\u4f1a\u4fee\u6539\u3002\u6211\u4eec\u8ba8\u8bba\u5176\u5b9e\u73b0\u65b9\u6848\u3002</p> <p>\u5b9e\u73b0\u65b9\u6848\u4e4b\u4e00\u662f\u7528 bitmap\uff1a\u6bcf\u4e2a block \u7528 1 bit \u8868\u793a\uff1a1 \u8868\u793a\u7a7a\u95f2\uff0c0 \u8868\u793a\u5360\u7528\u3002\u4e3a\u4e86\u51cf\u5c11 bitmap \u5360\u7528\u7684\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4ee5 cluster \u4e3a\u5355\u4f4d\u5206\u914d\u548c\u8868\u793a\u3002</p> <p>\u53e6\u5916\u4e5f\u53ef\u4ee5\u628a\u6240\u6709\u7684 free space \u7528 \u94fe\u8868 \u8fde\u63a5\u3002\u8fd9\u79cd\u65b9\u6848\u5728\u9700\u8981\u591a\u4e2a\u7a7a\u95f4\u5757\u65f6\u9700\u8981\u6bd4\u8f83\u591a\u7684 I/O\uff0c\u6548\u7387\u8f83\u4f4e\u3002</p> <p></p> <p>\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u5f15\u5165 grouping \u7684\u65b9\u6848\u3002\u7ef4\u62a4\u82e5\u5e72\u4e2a block \u5f62\u6210\u7684\u94fe\u8868\uff0c\u6bcf\u4e2a block \u4fdd\u5b58\u82e5\u5e72\u7a7a\u95f2\u5757\u7684\u5730\u5740\u3002\u8fd9\u79cd\u65b9\u6848\u53ef\u4ee5\u51cf\u5c11\u9700\u8981\u7684 I/O\u3002</p> <p>\u53e6\u5916\u4e5f\u53ef\u4ee5\u4f7f\u7528 counting \u7684\u65b9\u6848\u3002\u4e4b\u524d\u94fe\u8868\u7684\u65b9\u6848\u7ef4\u62a4\u7684\u662f\u7a7a\u95f2\u5757\u7684\u94fe\u8868\uff0c\u800c\u73b0\u5728\u7ef4\u62a4\u7684\u662f \u8fde\u7eed\u7684\u7a7a\u95f2\u5757 \u7684\u94fe\u8868\uff0c\u5373\u94fe\u8868\u7684\u6bcf\u4e2a\u7ed3\u70b9\u662f\u8fde\u7eed\u7684\u7a7a\u95f2\u5757\u7684\u9996\u5757\u6307\u9488\u548c\u8fde\u7eed\u7684\u957f\u5ea6\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/","title":"11 \u5927\u5bb9\u91cf\u5b58\u50a8\u7ed3\u6784","text":"<p> \u7ea6 1749 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#111-overview","title":"11.1 Overview","text":"<p>\u73b0\u4ee3\u8ba1\u7b97\u673a\u7684\u5927\u90e8\u5206\u4e8c\u7ea7\u5b58\u50a8\u7531 hard disk drives (HDDs)\u00a0\u548c nonvolatile memory (NVM) devices\u00a0\u63d0\u4f9b\u3002</p> <p>HDD \u5c31\u662f\u786c\u76d8\u9a71\u52a8\u5668\u3002NVM \u8bbe\u5907\u6839\u636e\u5b9a\u4e49\u662f\u65ad\u7535\u540e\u5b58\u50a8\u7684\u6570\u636e\u8fd8\u80fd\u4fdd\u6301\u7684\u8bbe\u5907\uff0c\u6309\u5b9a\u4e49\u6765\u8bf4\u786c\u76d8\u4e5f\u662f NVM\uff0c\u4f46\u662f\u8bfe\u672c\u91cc\u7684 NVM \u4e3b\u8981\u6307\u7684\u662f electrical \u7684\u800c\u975e mechanical \u7684\uff1b\u56e0\u6b64\u8bfe\u672c\u91cc NVM \u5e76\u4e0d\u5305\u542b HDD\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#hdds","title":"HDDs","text":"<p>HDD \u7684\u7ed3\u6784\u76f8\u5bf9\u7b80\u5355\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\uff0c\u6bcf\u4e2a disk platter\uff08\u76d8\u7247\uff09\u957f\u5f97\u50cf CD\uff0c\u76f4\u5f84\u4e00\u822c 1.8~3.5 inches\u3002Disk platter \u7684\u4e24\u9762\u9644\u7740\u6709\u78c1\u6027\u6750\u6599\uff0c\u6211\u4eec\u901a\u8fc7\u78c1\u6027\u8bb0\u5f55\u5728\u5176\u4e0a\u4fdd\u5b58\u4fe1\u606f\uff0c\u5e76\u901a\u8fc7\u68c0\u6d4b\u5176\u4e0a\u7684\u78c1\u6027\u6a21\u5f0f\u6765\u8bfb\u53d6\u4fe1\u606f\u3002</p> <p>\u6bcf\u4e2a platter \u9644\u8fd1\u6709\u4e00\u4e2a read-write head\uff0cread-write head \u9644\u7740\u5728 disk arm \u4e0a\uff0carm \u4f1a\u4f7f\u6240\u6709 head \u5f62\u6210\u6574\u4f53\u5171\u540c\u79fb\u52a8\u3002</p> <p>Platter \u8868\u9762\u88ab\u5206\u6210\u4e86\u5f88\u591a\u73af\u5f62 track\uff08\u78c1\u9053\uff09\uff0c\u518d\u7ec6\u5206\u4e3a sector\uff08\u6247\u533a\uff09\u3002\u5728\u4e00\u4e2a arm position \u4e0b\u7684 track \u7ec4\u6210\u4e00\u4e2a cylinder\uff08\u67f1\u9762\uff09\u3002</p> <p></p> <p>Sector \u88ab\u7f16\u53f7\uff0c\u662f logical block address \u5728 disk drive \u4e0a\u7684\u6620\u5c04\u3002\u7f16\u53f7\u7684\u539f\u5219\u5982\u4e0b\uff1a\u4ee5\u6700\u5916 cylinder \u7684\u7b2c\u4e00\u4e2a track \u7684\u7b2c\u4e00\u4e2a sector \u4e3a 0\uff0c\u7136\u540e\u8be5 track \u4e0a\u7684 sector \u4f9d\u6b21\u7f16\u53f7\uff0c\u7136\u540e\u662f cylinder \u4e2d\u7684\u5176\u4ed6 track\uff0c\u7136\u540e\u662f\u5185\u90e8\u7684 cylinder\u3002</p> <p>\u4f7f\u7528\u78c1\u76d8\u65f6\uff0c\u7535\u673a\u9ad8\u901f\u65cb\u8f6c\u78c1\u76d8\u3002\u53c2\u6570 Rotation Per Minute (RPM)\u00a0\u662f\u6bcf\u5206\u949f\u65cb\u8f6c\u7684\u6b21\u6570\uff0c\u666e\u901a\u7684 HDD \u901a\u5e38\u4e3a 5400, 7200, 10000, 15000RPM\u3002</p> <p>Transfer Rate\uff1a\u5728 HDD \u548c\u8ba1\u7b97\u673a\u4e4b\u95f4\u6570\u636e\u6d41\u7684\u901f\u7387\uff08\u7406\u8bba 6Gb/sec\uff0c\u5b9e\u9645 1Gb/sec\uff09</p> <p>Positioning Time\u00a0(a.k.a random-access time)\uff1a\u5c06 disk arm \u79fb\u52a8\u5230\u6240\u9700\u8981\u7684 sector \u6240\u7528\u7684\u65f6\u95f4\u3002\u5305\u542b\u4e24\u90e8\u5206\uff1a</p> <ul> <li>Seek time\u00a0- \u5c06 arm \u79fb\u52a8\u5230\u6240\u9700 cylinder \u6240\u7528\u65f6\u95f4\uff083ms - 12ms\uff09</li> <li>Rotational latency\u00a0- \u65cb\u8f6c\u5230 head \u5728\u6240\u9700 sector \u4e0a\u6240\u7528\u65f6\u95f4\uff08\u4e0e\u8f6c\u901f\u6709\u5173\uff09</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#nvm-devices","title":"NVM Devices","text":"<p>\u5305\u62ec\u56fa\u6001\u786c\u76d8 (Solid-state disks, SSD), USB drives (thumb drive, flash drive), DRAM disk replacements \u7b49\u3002</p> <p>NVM devices \u6bd4 HDD \u66f4\u53ef\u9760\uff0c\u4e5f\u66f4\u8d35\uff0c\u53ef\u80fd\u5bff\u547d\u66f4\u77ed\uff0c\u5bb9\u91cf\u66f4\u5c0f\uff0c\u4f46\u662f\u5feb\u5f88\u591a\u3002\u6807\u51c6\u603b\u7ebf\u53ef\u80fd\u4f1a\u592a\u6162\uff0c\u6240\u4ee5\u6709\u7684 SSD \u8bbe\u8ba1\u6210\u76f4\u63a5\u8fde\u63a5\u5230\u7cfb\u7edf\u603b\u7ebf\uff0c\u5982 PCI\u3002</p> <p>\u6ca1\u6709\u9700\u8981\u300c\u79fb\u52a8\u300d\u7684\u90e8\u5206\uff0c\u56e0\u6b64\u6ca1\u6709 seek time or rotational latency\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#magnetic-tape","title":"Magnetic Tape","text":"<p>\u78c1\u5e26\u662f\u65e9\u671f\u7684\u4e8c\u7ea7\u5185\u5b58\u3002\u73b0\u5728\u4e3b\u8981\u7528\u6765\u5907\u4efd\u4e0d\u5e38\u7528\u7684\u4fe1\u606f\u3002</p> <p>\u7a7a\u95f4\u5f88\u5927\uff08200GB ~ 1.5TB\uff09\uff0c\u8bbf\u95ee\u5f88\u6162\uff0c\u968f\u673a\u8bbf\u95ee\u7279\u522b\u6162\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#112-hdd-scheduling","title":"11.2 HDD Scheduling","text":"<p>OS \u9700\u8981\u8d1f\u8d23\u786c\u4ef6\u4f7f\u7528\u7684\u9ad8\u6548\u6027\u3002\u5bf9\u4e8e disk drives \u6765\u8bf4\uff0cOS \u9700\u8981\u63d0\u4f9b\u4e00\u4e2a fast access time \u548c high disk bandwidth\u3002\u6211\u4eec\u8ba8\u8bba HDD\u3002</p> <ul> <li>access time\u00a0: seek time (roughly linear to seek distance) + rotational latency</li> <li>disk bandwidth\u00a0: the speed of data transfer (data bytes / time from request to completion)</li> </ul> <p>\u6bcf\u5f53\u8fdb\u7a0b\u9700\u8981\u8fdb\u884c\u78c1\u76d8 I/O \u65f6\uff0c\u5b83\u5411 OS \u53d1\u51fa\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u5305\u62ec\u4fe1\u606f\uff1a\u8f93\u5165/\u8f93\u51fa\uff0c\u78c1\u76d8\u5730\u5740\uff0c\u5185\u5b58\u5730\u5740\uff0c\u6247\u533a\u6570\u3002\u5982\u679c\u76ee\u6807\u78c1\u76d8\u7684\u9a71\u52a8\u5668\u548c\u63a7\u5236\u5668\u6b63\u5fd9\uff0c\u5219\u52a0\u5165\u8bf7\u6c42\u961f\u5217\uff08\u6bcf\u4e2a disk \u6216 device \u6709\u4e00\u4e2a\u961f\u5217\uff09\u3002</p> <p>Disk scheduling \u9700\u8981\u9009\u62e9\u961f\u5217\u4e2d\u7684\u4e00\u4e2a\u8bf7\u6c42\u6765\u4f7f\u5176\u4e0b\u4e00\u4e2a\u4f7f\u7528\u76ee\u6807\u78c1\u76d8\u3002</p> <p>\u901a\u5e38\u4e3b\u8981\u76ee\u6807\u662f minimize seek time\u3002\u5bf9\u8ba1\u7b97\u673a\u6765\u8bf4\uff0crotational latency \u5f88\u96be\u7b97\u3002</p> <p>\u4e0b\u9762\u7684\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5747\u4f7f\u7528 request queue of cylinders <code>98, 183, 37, 122, 14, 124, 65, 67</code> ([0, 199]), and initial head position <code>53</code> as the example\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#1121-first-come-first-served-fcfs","title":"11.2.1 First-Come First-Served (FCFS)","text":"<p>Advantages: </p> <ul> <li>Every request gets a fair chance </li> <li>No indefinite postponement</li> </ul> <p>Disadvantages: </p> <ul> <li>Does not try to optimize seek time </li> <li>May not provide the best possible service</li> </ul> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#1122-shortest-seek-time-first-sstf","title":"11.2.2 Shortest Seek Time First (SSTF)","text":"<p>\u7c7b\u4f3c SJF\uff0c\u9009\u62e9\u79bb\u73b0\u5728 head position \u6700\u8fd1\u7684 request\u3002\u4f46\u662f SSTF \u4e0d\u4e00\u5b9a\u6700\u597d\u3002  Advantages: </p> <ul> <li>Average Response Time decreases</li> <li>Throughput increases</li> </ul> <p>Disadvantages: </p> <ul> <li>Overhead to calculate seek time in advance</li> <li>Starvation may exist</li> <li>High variance : favors only some requests</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#1123-scan--elevator-algorithm","title":"11.2.3 SCAN / Elevator algorithm","text":"<p>\u4ece\u4e00\u8fb9\u5f80\u53e6\u4e00\u8fb9\u8d70\uff0c\u9009\u62e9\u8def\u4e0a\u7684 request \u4e0d\u56de\u5934\uff0c\u76f4\u5230\u5230\u8fbe\u53e6\u4e00\u7aef\u53cd\u5411\u3002  Advantages: </p> <ul> <li>Average Response Time</li> <li>High Throughput</li> <li>Low variance of response time</li> </ul> <p>Disadvantages: </p> <ul> <li>Long waiting time for requests for locations just visited by disk arm</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#1124-c-scan","title":"11.2.4 C-SCAN","text":"<p>Circular-Scan\uff1a\u5230\u8fbe\u4e00\u7aef\u65f6\u7acb\u523b\u56de\u5230\u5f00\u5934\u3002  Advantage:</p> <ul> <li>Provides more uniform wait time compared to SCAN</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#1125-look--c-look","title":"11.2.5 LOOK / C-LOOK","text":"<p>\u5728 SCAN / C-SCAN \u7684\u57fa\u7840\u4e0a\uff0c\u53ea\u8d70\u5230\u4e00\u7aef\u6700\u540e\u4e00\u4e2a\u4efb\u52a1\uff08look \u662f\u5426\u6709\u8bf7\u6c42\uff09\u800c\u4e0d\u8d70\u5230\u5934\u3002  Advantage:</p> <ul> <li>Prevents the extra delay which occurred due to unnecessary traversal to the end of the disk.</li> </ul>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#1126-selecting-disk-scheduling-algorithm","title":"11.2.6 Selecting Disk-Scheduling Algorithm","text":"<p>\u53d6\u51b3\u4e8e\u8bf7\u6c42\u7684\u6570\u76ee\u548c\u7c7b\u578b\u3002SSTF \u6700\u5e38\u89c1\uff0c\u4f46\u662f\u5f53 I/O \u8d1f\u8377\u8f83\u5927\u65f6\uff0c\u4f7f\u7528 LOOK / C-LOOK \u4ee5\u907f\u514d starvation\u3002</p> <p>\u8868\u73b0\u672c\u8eab\u4f9d\u8d56\u4e8e\u8bf7\u6c42\u7684\u6a21\u5f0f\uff0c\u800c\u8bf7\u6c42\u672c\u8eab\u53c8\u4f9d\u8d56\u4e8e\u6587\u4ef6\u5206\u914d\u7b56\u7565\u3002\u6587\u4ef6\u7cfb\u7edf\u5982\u679c\u6ce8\u91cd\u7a7a\u95f4\u5c40\u90e8\u6027\uff0c\u80fd\u591f\u63d0\u4f9b\u5f88\u597d\u7684\u8868\u73b0\u63d0\u5347\u3002</p> <p>NVM Scheduling</p> <p>NVM devices do not contain moving disk heads and commonly use a simple FCFS policy.</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#113-disk-management","title":"11.3 Disk Management","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u8d1f\u8d23\u78c1\u76d8\u7ba1\u7406\u7684\u5176\u4ed6\u51e0\u4e2a\u65b9\u9762\uff0c\u4f8b\u5982\u78c1\u76d8\u521d\u59cb\u5316\u3001\u5f15\u5bfc\u3001\u574f\u5757\u6062\u590d\u7b49\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#disk-formatting--\u78c1\u76d8\u683c\u5f0f\u5316","title":"Disk Formatting | \u78c1\u76d8\u683c\u5f0f\u5316","text":"<p>\u4e00\u4e2a\u65b0\u7684\u78c1\u76d8\u662f\u4e00\u4e2a\u7a7a\u767d\u76d8\uff0c\u5b83\u9700\u8981\u7ecf\u8fc7 \u4f4e\u7ea7\u683c\u5f0f\u5316 (low-level formatting, a.k.a \u7269\u7406\u683c\u5f0f\u5316, physical formatting) \u6765\u5206\u6210\u6247\u533a\u4ee5\u4fbf\u78c1\u76d8\u63a7\u5236\u5668\u8bfb\u5199\u3002</p> <p>\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e2a\u6247\u533a\u90fd\u4f1a\u653e\u4e00\u4e9b\u7279\u6b8a\u7684\u6570\u636e\u4f9b\u78c1\u76d8\u63a7\u5236\u5668\u4f7f\u7528\uff0c\u4f8b\u5982 header information, ECC (Error-Correcting Code) \u7b49\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5728\u78c1\u76d8\u4e0a\u8bb0\u5f55\u4e00\u4e9b\u81ea\u5df1\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f8b\u5982\u5c06\u78c1\u76d8\u5206\u4e3a\u82e5\u5e72\u4e2a \u5206\u533a (partition)\uff0c\u6bcf\u4e2a\u5206\u533a\u7531\u82e5\u5e72\u4e2a cylinders \u7ec4\u6210\uff0c\u6bcf\u4e2a\u88ab\u89c6\u4e3a\u4e00\u4e2a logical disk\u3002</p> <p>\u7136\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u521d\u59cb\u7684\u6587\u4ef6\u7cfb\u7edf\u6570\u636e\u7ed3\u6784\u5b58\u50a8\u5230\u78c1\u76d8\u4e0a\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u3002\u8fd9\u4e00\u6b65\u79f0\u4e3a \u903b\u8f91\u683c\u5f0f\u5316 (logical formatting)\u3002\u4f8b\u5982\uff0c\u4e00\u4e9b\u6587\u4ef6\u7cfb\u7edf\u53ef\u80fd\u9884\u7559\u51fa\u4e00\u4e9b blocks \u7528\u6765 handle bad blocks\uff1b\u4e00\u4e9b\u6587\u4ef6\u7cfb\u7edf\u4e5f\u53ef\u80fd\u5c06\u82e5\u5e72 blocks \u805a\u5408\u6210\u4e00\u4e2a cluster\uff0c\u8ba9\u78c1\u76d8 I/O \u4ee5 block \u4e3a\u5355\u4f4d\u5b8c\u6210\uff0c\u6587\u4ef6\u7cfb\u7edf I/O \u4ee5 cluster \u4e3a\u5355\u4f4d\u5b8c\u6210\uff0c\u4ee5\u51cf\u5c11 random access \u4ece\u800c\u63d0\u9ad8\u8868\u73b0\u3002</p> <p>\u5305\u542b\u6587\u4ef6\u7cfb\u7edf\u7684\u5206\u533a\u901a\u5e38\u79f0\u4e3a \u5377 (volume)\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#boot-block","title":"Boot Block","text":"<p>\u5728\u521a\u6253\u5f00\u7535\u6e90\u6216\u8005\u91cd\u542f\u65f6\uff0c\u8ba1\u7b97\u673a\u9700\u8981\u6709\u4e00\u4e2a\u521d\u59cb\u7a0b\u5e8f\u6765\u8fd0\u884c\uff1b\u8fd9\u4e2a\u7a0b\u5e8f\u79f0\u4e3a \u81ea\u4e3e (bootstrap) \u7a0b\u5e8f\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u521d\u59cb\u5316\u7cfb\u7edf\u7684\u5404\u4e2a\u90e8\u5206\uff0c\u4f8b\u5982 CPU \u5bc4\u5b58\u5668\u3001\u8bbe\u5907\u63a7\u5236\u5668\u3001\u5185\u5b58\uff0c\u7136\u540e\u5728\u78c1\u76d8\u4e0a\u627e\u5230\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u52a0\u8f7d\u5230\u5185\u5b58\uff0c\u8f6c\u5230\u8d77\u59cb\u5730\u5740\u4ece\u800c\u8fd0\u884c\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p>\u5bf9\u4e8e\u5927\u591a\u6570\u8ba1\u7b97\u673a\uff0cbootstrap \u7a0b\u5e8f\u5b58\u5728 ROM (Read-Only Memory) \u4e2d\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u521d\u59cb\u5316\u800c\u4e14\u5904\u4e8e\u56fa\u5b9a\u4f4d\u7f6e\u3002ROM \u662f\u53ea\u8bfb\u7684\uff0c\u56e0\u6b64\u4e0d\u4f1a\u53d7\u5230\u75c5\u6bd2\u7684\u5f71\u54cd\u3002</p> <p>\u4f46\u540c\u65f6\uff0c\u8fd9\u6837\u7684\u8bbe\u8ba1\u4f7f\u5f97\u8981\u66f4\u6539 bootstrap \u4ee3\u7801\u5c31\u5fc5\u987b\u66f4\u6539 ROM \u786c\u4ef6\u82af\u7247\u3002\u56e0\u6b64\u5927\u591a\u6570\u7cfb\u7edf\u5728 ROM \u4e2d\u5b58\u50a8\u4e00\u4e2a tiny bootstrap loader program\uff0c\u5b83\u7528\u6765\u4ece\u78c1\u76d8\u4e0a\u8c03\u5165\u5b8c\u6574\u7684 bootstrap \u7a0b\u5e8f\u3002\u5305\u542b\u8fd9\u4e2a\u5b8c\u6574\u7684 bootstrap \u7a0b\u5e8f\u7684 partition \u79f0\u4e3a boot partition\uff0c\u5305\u542b\u8fd9\u4e2a\u5206\u533a\u7684\u78c1\u76d8\u79f0\u4e3a boot disk \u6216\u8005 system disk\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/11_mass_storage/#114-raid","title":"11.4 RAID","text":"<p>HDDs \u8d8a\u6765\u8d8a\u5c0f\u548c\u4fbf\u5b9c\uff0c\u56e0\u6b64\u5982\u679c\u4e00\u4e2a\u7cfb\u7edf\u53ef\u4ee5\u62e5\u6709\u5927\u91cf\u78c1\u76d8\uff0c\u90a3\u4e48\u5c31\u80fd\u6539\u5584\u6570\u636e\u7684\u8bfb\u5199\u901f\u7387\uff08\u56e0\u4e3a\u53ef\u4ee5\u5e76\u884c\uff09\u548c\u53ef\u9760\u6027\uff08\u4f7f\u7528\u5197\u4f59\u6765\u964d\u4f4e\u51fa\u73b0\u9519\u8bef\u7684\u671f\u671b\uff09\u3002\u8fd9\u6837\u7684\u78c1\u76d8\u7ec4\u7ec7\u6280\u672f\u79f0\u4e3a \u78c1\u76d8\u5197\u4f59\u9635\u5217 (Redundant Arrays of Independent Disk, RAID) \u6280\u672f\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/12_io_systems/","title":"12 I/O Systems","text":"<p> \u7ea6 526 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p></p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/12_io_systems/#121-io-\u65b9\u5f0f","title":"12.1 I/O \u65b9\u5f0f","text":"<p>I/O \u5b9e\u73b0\u7684\u4e00\u79cd\u65b9\u6848\u662f \u8f6e\u8be2 (polling)\uff1a\u5f53 PC \u9700\u8981\u548c\u67d0\u4e2a I/O \u8bbe\u5907\u4ea4\u4e92\u65f6\uff0c\u5b83\u67e5\u8be2\u8be5\u8bbe\u5907\u5bf9\u5e94\u7684 I/O \u63a7\u5236\u5668 (controller) \u4e2d\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u76f8\u5173\u4f4d\uff0c\u5f53\u8be5\u4f4d\u8868\u793a\u4e8b\u4ef6\uff08\u5982\u5199\u5165\u6216\u8bfb\u53d6\uff09\u53ef\u4ee5\u8fdb\u884c\u65f6 PC \u8fdb\u884c\u76f8\u5173\u64cd\u4f5c\u5e76\u901a\u8fc7\u72b6\u6001\u5bc4\u5b58\u5668\u901a\u77e5\u63a7\u5236\u5668\u3002</p> <p>\u53e6\u5916\uff0c\u4e2d\u65ad \u662f\u66f4\u9ad8\u6548\u548c\u5e38\u7528\u7684 I/O \u624b\u6bb5\uff0c\u5b83\u901a\u8fc7\u5728 interrupt-request line \u4e0a\u53d1\u51fa\u4fe1\u53f7\u6765\u901a\u77e5 CPU \u54cd\u5e94\u8bbe\u5907\u7684 I/O \u4e8b\u4ef6\u3002</p> <p>\u5bf9\u4e8e\u9700\u8981\u5927\u91cf\u4f20\u8f93\u7684\u8bbe\u5907\uff0c\u4e0a\u9762\u4e24\u79cd\u64cd\u4f5c\u4f1a\u8fc7\u591a\u5360\u7528 CPU \u8d44\u6e90\uff0c\u56e0\u6b64\u5f88\u591a\u8ba1\u7b97\u673a\u63d0\u51fa\u4e86 \u76f4\u63a5\u5185\u5b58\u8bbf\u95ee (DMA, Direct Memory Access)\u3002\u8fd9\u4e00\u6280\u672f\u5c06\u76f8\u5173\u7684 I/O \u4efb\u52a1\u4ea4\u7ed9\u4e00\u4e2a\u4e13\u7528\u7684\u5904\u7406\u5668\uff08DMA \u63a7\u5236\u5668\uff09\u6765\u5b8c\u6210\uff0c\u8bbe\u5907\u76f4\u63a5\u4e0e\u5185\u5b58\u4ea4\u4e92\u3002</p> <p>\u6709\u7684\u8ba1\u7b97\u673a\u67b6\u6784\u7684 DMA \u91c7\u7528\u7269\u7406\u5730\u5740\uff0c\u4e5f\u6709\u91c7\u7528\u865a\u62df\u5730\u5740\u7684\u6280\u672f\uff0c\u79f0\u4e3a DVMA, Direct Virtual-Memory Access)\u3002</p>"},{"location":"%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86/os/V_storage_management/12_io_systems/#122-application-io-interface--\u5e94\u7528\u7a0b\u5e8f-io-\u63a5\u53e3","title":"12.2 Application I/O Interface | \u5e94\u7528\u7a0b\u5e8f I/O \u63a5\u53e3","text":"<p>I/O \u7cfb\u7edf\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u5c06\u4e0d\u540c\u7684 I/O \u8bbe\u5907\u7684\u5de5\u4f5c\u65b9\u5f0f\u5c01\u88c5\u5230\u4e00\u4e9b\u7c7b\u4e2d\uff0c\u4ece\u800c\u5f62\u6210\u8f83\u5c11\u7684\u901a\u7528\u7c7b\u578b\uff0c\u4ece\u800c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u9690\u85cf\u786c\u4ef6\u7684\u5177\u4f53\u5dee\u5f02\u3002</p> <ul> <li>Data transfer mode<ul> <li>character\uff1a\u9010\u4e2a\u5b57\u8282\u4f20\u8f93\uff08\u5982 terminal\uff09</li> <li>block\uff1a\u4ee5\u5757\u4e3a\u5355\u4f4d\u4f20\u8f93\uff08\u5982 disk\uff09</li> </ul> </li> <li>Access method<ul> <li>sequential\uff08\u5982 modem\uff09</li> <li>random\uff08\u5982 CD-ROM\uff09</li> </ul> </li> <li>Transfer method<ul> <li>synchronous\uff1a\u9700\u8981\u6309\u9884\u8ba1\u7684\u54cd\u5e94\u65f6\u95f4\u8fdb\u884c\u4f20\u8f93\u5e76\u548c\u7cfb\u7edf\u7684\u5176\u4ed6\u65b9\u9762\u76f8\u534f\u8c03\uff08\u5982 keyboard\uff09</li> <li>asynchronous\uff1a\u54cd\u5e94\u65f6\u95f4\u4e0d\u9700\u8981\u89c4\u5219\u6216\u8005\u53ef\u9884\u6d4b\uff0c\u4e0d\u9700\u8981\u4e0e\u5176\u4ed6\u8ba1\u7b97\u673a\u4e8b\u4ef6\u534f\u8c03\uff08\u5982\u7f51\u7edc I/O\uff09</li> </ul> </li> <li>Sharing<ul> <li>sharable\uff1a\u53ef\u4ee5\u88ab\u591a\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u5e76\u53d1\u4f7f\u7528\uff08\u5982 keyboard\uff09</li> <li>dedicated\uff1a\u4e0d\u80fd\uff08\u5982 tape\uff09</li> </ul> </li> <li>Device speed</li> <li>I/O direction\uff1aR- (CD-ROM) / -W (graphics controller) / RW (disk)</li> </ul> <p>\u540c\u65f6\uff0c\u5927\u591a\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u652f\u6301\u5e94\u7528\u7a0b\u5e8f\u900f\u660e\u5730\u5411\u4e00\u4e2a\u8bbe\u5907\u9a71\u52a8\u5668\u4f20\u8f93\u4efb\u610f\u6570\u636e\u3002\u5728 UNIX \u4e2d\uff0c<code>ioctl()</code> \u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002\u8fd9\u4e00\u7cfb\u7edf\u8c03\u7528\u901a\u8fc7 \u6587\u4ef6\u63cf\u8ff0\u7b26 (file descriptor) \u6765\u786e\u5b9a\u4e00\u4e2a\u8bbe\u5907\uff0c\u56e0\u4e3a UNIX \u4e2d\u8bbe\u5907\u53ef\u4ee5\u901a\u8fc7\u6587\u4ef6\u7684\u65b9\u5f0f\u8bbf\u95ee\u3002</p>"},{"location":"%E6%A1%8C%E6%B8%B8/","title":"\u684c\u6e38\u6e38\u73a9\u8bb0\u5f55\uff01","text":"<p> \u7ea6 2357 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>\u5173\u4e8e\u300c\u8bc4\u4ef7\u300d</p> <p>\u8fd9\u91cc\u7684\u300c\u8bc4\u4ef7\u300d\u57fa\u4e8e\u4e2a\u4eba\u7684\u4f53\u9a8c\uff01</p> <p>4 ~ 5 \u5206\u662f\u975e\u5e38\u559c\u6b22\u7684\uff0c2.5 ~ 3.5 \u5206\u662f\u613f\u610f\u518d\u73a9\u7684\uff0c1 ~ 2 \u5206\u662f\u8fd8\u4e0d\u9519\u4f46\u662f\u4e0d\u60f3\u518d\u73a9\u7684\uff0c1 \u5206\u4ee5\u4e0b\u662f\u540e\u6094\u73a9\u8fc7\u7684QWQ </p> <p>\u53e6\u5916 <code>-</code> \u662f\u8868\u793a\u56e0\u4e3a\u5404\u79cd\u539f\u56e0\u6682\u65f6\u65e0\u6cd5\u6216\u8005\u4e0d\u8db3\u4ee5\u7ed9\u51fa\u8bc4\u4ef7\u7684</p> \u540d\u79f0 \u8bc4\u4ef7 \u4eba\u6570 / \u65f6\u957f\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u70b9\u8bc4 2023-2-2 \u65e0\u5fe7 3 \u4eba\u5c40 \u2060 \u2060 \u2060 \u4e09\u5343\u4e16\u754c\u9e26\u6740\u5c3d 2.5 2~4/\u8f83\u77ed \u4e92\u5751\u6e38\u620f\uff0c\u975e\u5e38\u770b\u724c\u8fd0\uff0c\u6ca1\u4ec0\u4e48\u7b56\u7565\u53ef\u8a00\u3002 \u82b1\u7816\u7269\u8bed AZUL 3.5 2~4/\u8f83\u77ed \u7b56\u7565\u535a\u5f08\uff0c\u89c4\u5219\u7b80\u5355\uff0c\u53ef\u4ee5\u4e92\u5361\u3002 \u5c0f\u4f20\u8bf4 3 2~5/\u8f83\u77ed \u753b\u98ce\u4e0d\u9519\uff0c\u666e\u901a\u7684\u5361\u724c\u6e38\u620f\uff0c\u6ca1\u6709\u4ec0\u4e48\u4eae\u70b9\u3002 Cubitos 2.5 2~4/\u4e2d\u7b49 \u8d4c\u72d7\u7ade\u901f\u6e38\u620f\uff0c\u8bbe\u8ba1\u4e0d\u9519\uff0c\u4f46\u662f\u91cd\u590d\u6027\u6bd4\u8f83\u5927\u6240\u4ee5\u4e50\u8da3\u4e0d\u591a\u3002 Vita Mors 4 3~6/\u77ed \u535a\u5f08\u6e38\u620f\u5e26\u70b9\u5634\u70ae\uff0c\u4f46\u662f\u4eba\u6570\u9650\u5236\u5bfc\u81f4\u9690\u85cf\u8eab\u4efd\u56f0\u96be\u3002\u611f\u89c9\u53ea\u6709 5 \u4e2a\u4eba\u73a9\u7684\u65f6\u5019\u80fd\u597d\u70b9\u3002 \u4ed9\u5883\u5e7d\u8c37 2.5 1~4/\u8f83\u957f \u786e\u5b9e\u6ca1\u73a9\u5230\u8fc7\u4ec0\u4e48\u597d\u73a9\u7684\u5de5\u653e\u6e38\u620f\uff0c\u8fd9\u4e2a\u4e5f\u4e0d\u4f8b\u5916\u3002\u7b49\u522b\u4eba\u64cd\u4f5c\u65f6\u95f4\u4e5f\u957f\uff0c\u5185\u5bb9\u91cd\u590d\u6027\u5927\uff0c\u6bd4\u8f83\u770b\u8fd0\u6c14\u3002 \u5e7b\u60f3\u56fd\u5ea6 3.5 2~6/\u8f83\u77ed \u624b\u724c\u7ba1\u7406\u51d1\u7f81\u7eca\uff0c\u53d8\u5316\u6bd4\u8f83\u591a\uff1b\u4f46\u662f\u4e92\u52a8\u6027\u5dee\uff0c\u6bd4\u8f83\u770b\u8fd0\u6c14\u3002 \u5723\u5149\u4e4b\u57ce 4 2~4/\u4e2d\u7b49 \u597d\u590d\u523b \u535a\u5f08\u6e38\u620f\uff0c\u53ef\u4ee5\u5751\u4eba\uff0c\u6709\u4e00\u4e9b\u8fd0\u6c14\u6210\u5206\u3002 Shear Panic 4 2~4/\u4e2d\u7b49 \u914d\u4ef6\u4e0d\u9519\u3002\u535a\u5f08\u7c7b\u7684\u6e38\u620f\uff0c\u89c4\u5219\u6bd4\u8f83\u7b80\u5355\uff0c\u4f53\u9a8c\u8fd8\u53ef\u4ee5\u3002 2023-1-25 \u65e0\u5fe7 4 \u4eba\u5c40 \u2060 \u2060 \u2060 \u90c1\u91d1\u9999\u6ce1\u6cab 1.5 3~5/\u4e2d\u7b49 \u535a\u5f08\u6e38\u620f\uff0c\u4f46\u662f\u968f\u673a\u6027\u6bd4\u8f83\u5927\uff0c\u9664\u4e86\u8282\u76ee\u6548\u679c\u4ee5\u5916\u6ca1\u89c9\u5f97\u54ea\u91cc\u6709\u8da3\u3002 \u7a7a\u4e2d\u4e4b\u57ce 4.5 2~6/\u8f83\u77ed \u89c4\u5219\u7b80\u5355\uff0c\u8981\u9a97\u4eba\u3001\u4e92\u5751\uff0c\u6709\u8d4c\u72d7\u6210\u5206\uff1b\u6f14\u6280\u548c\u8282\u76ee\u6548\u679c\u5e76\u5b58\u3002 \u8be1\u5f71\u5bfb\u8e2a 5 2~5/\u8f83\u77ed \u9ad8\u7ea7\u7248\u7684\u903b\u8f91\u5bf9\u51b3\uff0c\u63a8\u7406\u7684\u5185\u5bb9\u4e5f\u66f4\u591a\uff1b\u590d\u6742\u6a21\u5f0f\u80fd\u8fdb\u4e00\u6b65\u63d0\u9ad8\u63a8\u7406\u96be\u5ea6\u3002 \u73b0\u4ee3\u827a\u672f 3.5 3~5/\u8f83\u77ed \u62cd\u5356\u6e38\u620f\uff0c\u60f3\u529e\u6cd5\u63d0\u9ad8\u81ea\u5df1\u624b\u91cc\u548c\u4e70\u8fc7\u7684\u753b\u7684\u4ef7\u683c\u3002\u673a\u5236\u975e\u5e38\u7b80\u5355\u3002 \u5c71\u4e2d\u5c0f\u5c4b 2 3~6/\u957f \u5192\u9669\u5f00\u56fe\u6e38\u620f\uff1b\u65f6\u95f4\u6781\u957f\u3001\u9605\u8bfb\u91cf\u4e0d\u5c0f\u7684\u540c\u65f6\u5176\u4ed6\u4eba\u5f97\u7b49\u7740\uff0c\u5bf9\u684c\u9762\u5927\u5c0f\u4e5f\u6709\u8981\u6c42\u3002\u4f18\u70b9\u662f\u786e\u5b9e\u6709\u63a2\u7d22\u7684\u8da3\u5473\uff0c\u5982\u679c\u505a\u6210\u7535\u8111\u6e38\u620f\u4f1a\u597d\u4e00\u4e9b\uff0c\u5728\u684c\u6e38\u5427\u73a9\u6211\u53ea\u80fd\u8bf4\u540e\u6094\u5f00\u4e86\u8fd9\u4e00\u5c40\uff0c\u4e24\u4e2a\u5c0f\u65f6\u90fd\u6ca1\u73a9\u5b8c\u3002 \u5c55\u7fc5\u7ff1\u7fd4 1.5 1~5/\u4e2d\u7b49 \u4ece\u591a\u4eba\u89d2\u5ea6\u6765\u8bf4\u7f3a\u4e4f\u4e92\u52a8\u6027\u3001\u7b49\u5176\u4ed6\u4eba\u7684\u65f6\u95f4\u957f\u3002\u4ece\u5355\u4eba\u89d2\u5ea6\u6765\u8bf4\u968f\u673a\u6027\u5927\u3001combo \u4e5f\u4e0d\u591f\u723d\u3002\u9664\u4e86\u597d\u770b\u70b9\u6ca1\u627e\u5230\u4f18\u70b9\u3002 \u5e73\u9065\uff1a\u6c47\u901a\u5929\u4e0b 3 1~4/\u8f83\u77ed \u914d\u4ef6\u5f88\u597d\u770b\u3002\u6e38\u620f\u8fc7\u7a0b\u4e2d\u89c4\u4e2d\u77e9\uff0c\u4e92\u52a8\u6709\u4f46\u4e0d\u591a\uff1b\u6c47\u5151\u6536\u5165 +3 \u7684\u5361\u6709\u70b9\u592a\u4e0d\u5e73\u8861\u4e86\uff1f 2023-1-20 \u65e0\u5fe7 4 \u4eba\u5c40 \u2060 \u2060 \u2060 \u9634\u8c0b\u5927\u4e71\u6597 3.5 2~6/\u8f83\u77ed \u7528\u5404\u79cd\u4eba\u7269\u724c\u593a\u53d6\u8363\u8000\u503c\uff0c\u5bf9\u6297\u6027\u5f3a\u3002\u4f5c\u4e3a\u4e00\u4e2a\u7b56\u7565\u6e38\u620f\uff0c\u624b\u724c\u5c11\u5bfc\u81f4\u968f\u673a\u6027\u6709\u70b9\u5927\uff0c\u7b56\u7565\u7684\u7a7a\u95f4\u5c31\u53d8\u5c0f\u4e86\u3002\u6709\u8282\u76ee\u6548\u679c\u3002 \u53e4\u73a9\u8857 3 3~5/\u8f83\u77ed \u4e70\u53e4\u8463\u529e\u5c55\u4f1a\u3002\u597d\u4e0a\u624b\uff0c\u4f46\u662f\u4ea4\u6613\u548c\u9274\u5b9a\u7684\u8bbe\u5b9a\u7528\u5904\u4e0d\u5927\u3002\u7ed3\u679c\u6bd4\u8f83\u770b\u8138\u3002 \u7f57\u751f\u95e8 4 2~4/\u8f83\u77ed \u597d\u590d\u523b 8 \u4e2a\u4eba\uff0c\u6709 1 \u4e2a\u6b7b\u8005\uff0c3 \u4e2a\u5acc\u72af\uff0c4 \u4e2a\u65e0\u8f9c\u8005\u3002\u6bcf\u4e2a\u4eba\u80fd\u5f97\u5230 4 \u4e2a\u4eba\u7684\u4fe1\u606f\uff0c\u7ed3\u5408\u524d\u9762\u7684\u4eba\u7684\u9009\u62e9\u505a\u51fa\u81ea\u5df1\u7684\u5224\u65ad\u3002\u6709\u63a8\u7406\uff0c\u4f1a\u70e7\u8111\uff0c\u4f46\u662f\u4e0d\u5c11\u65f6\u5019\u4e5f\u662f\u5728\u8d4c\u3002 \u761f\u75ab\u5371\u673a 1.5 1~4/\u4e2d\u7b49 \u7b56\u7565\u6bd4\u8f83\u56fa\u5b9a\uff0c\u5168\u516c\u5f00\u5408\u4f5c\u5f0f\u6e38\u620f\uff0c\u73a9\u4e00\u6b21\u8fd8\u884c\u3002 2022-7-11 \u65e0\u5fe7 3 \u4eba\u5c40 \u2060 \u2060 \u2060 \u7ae5\u8bdd\u821e\u4f1a 2 2~5/\u8f83\u77ed \u731c\u8eab\u4efd\u7ed9\u724c\uff0c\u63a8\u7406\u522b\u4eba\u884c\u4e3a\u903b\u8f91\u3002\u4f53\u9a8c\u603b\u4f53\u8fd8\u53ef\u4ee5\u3002 \u62c9\u5bc6 4.5 2~4/\u4e2d\u7b49 \u4e70\u4e86\uff01 \u6570\u5b66\u6e38\u620f\uff0c\u5230\u540e\u9762\u5bb9\u6613\u53d8\u6210\u5408\u4f5c\u3002\u6211\u81f3\u4eca\u8fd8\u597d\u5947\u6709\u6ca1\u6709\u6570\u5b66\u89e3\u3002 \u5929\u4e0b\u9e23\u52a8 3.5 2~4/\u8f83\u77ed \u573a\u9762\u4e0a\u6709\u82e5\u5e72\u5730\u76d8\uff0c\u6bcf\u4e2a\u5730\u76d8\u6709\u4e2a\u4ef7\u503c\uff0c\u6bcf\u6b21\u6839\u636e\u9ab0\u5b50\u70b9\u6570\u786e\u5b9a\u5730\u76d8\u548c\u589e\u5175\u6570\u91cf\u3002\u6bcf\u4eba\u5175\u6570\u6709\u9650\u3002\u7ed3\u7b97\u6309\u4ef7\u503c\u7531\u4f4e\u5230\u9ad8\uff0c\u7ade\u4e89\u5230\u7684\u5730\u76d8\u80fd\u7ed9\u5468\u8fb9\u6269\u5175\u3002\u968f\u673a\u4e0d\u5931\u6218\u7565\u6027\u3002 \u56db\u5b63\u7269\u8bed 3 2~4/\u8f83\u957f \u548c\u8bf8\u795e\u4e4b\u6218\u5dee\u4e0d\u591a\u91cd\u7684\u6e38\u620f\uff0c\u5143\u7d20\u6bd4\u8f83\u591a\uff0c\u611f\u89c9\u603b\u4f53\u8fd8\u53ef\u4ee5\u4f46\u662f\u4e0d\u7ba1\u662f\u7b56\u7565\u8fd8\u662f\u8fde\u62db\u90fd\u6ca1\u6709\u5f88\u60ca\u8273\u3002 \u903b\u8f91\u5bf9\u51b3 4.5 2~4/\u77ed \u4e70\u4e86\uff01 \u95ee\u7b54\u5f62\u5f0f\u7684\u8fbe\u82ac\u5947\u5bc6\u7801\uff0c\u8f7b\u91cf\u7684\u7b56\u7565\uff0c\u540c\u65f6\u6709\u968f\u673a\u6027\u7684\u6210\u5206\u3002\u4e0a\u9650\u6709\u9650\u3002 \u5df4\u9ece\u5723\u6bcd\u9662 3 2~5/\u4e2d\u7b49 \u5e26\u6d41\u6d3e\u7684\u7b56\u7565\u6e38\u620f\uff0c\u590d\u6742\u5ea6\u662f\u6070\u597d\u7684\u3002\u591a\u73a9\u51e0\u6b21\u53ef\u80fd\u66f4\u8212\u670d\u4e00\u4e9b\u3002\u5e97\u91cc\u751a\u81f3\u53ea\u6709\u6d0b\u6587\u8bf4\u660e\u4e66 XD \u7fa4\u661f 0.5 2~4/\u4e2d\u7b49 \u5f88\u597d\u770b\uff0c\u4e0d\u597d\u73a9\u3002 \u5723\u80e1\u5b89 2 2~4/\u4e2d\u7b49 \u5728\u80fd\u6253\u8fde\u62db\u7684\u5361\u724c\u91cc\u6ca1\u6709\u5f88\u591a\u4eae\u70b9\uff0c\u4f46\u662f\u4e5f\u4e0d\u660e\u663e\u6bd4\u5176\u4ed6\u7684\u5dee\u3002\u542c\u8bf4\u662f\u7b80\u5316\u7248\u7684\u524d\u4f5c\u6ce2\u591a\u9ece\u5404\uff0c\u8bc4\u4ef7\u4e0d\u5982\u524d\u4f5c\u9ad8\u3002 2022-2-15 \u65e0\u5fe7 3 \u4eba\u5c40 \u2060 \u2060 \u2060 \u77f3\u5668\u65f6\u4ee3 2 2~4/\u4e2d\u7b49 \u5b89\u6392\u4eba\u5de5\u8d70\u8def\u7ebf\u7684\u7b56\u7565\u6e38\u620f\uff0c\u6ca1\u6709\u611f\u89c9\u5f88\u60ca\u8273\u3002 \u5361\u5766\u5c9b 1.5 3~4/\u4e2d\u7b49 \u6295\u9ab0\u5b50\u8fd0\u6c14\u5f71\u54cd\u6bd4\u8f83\u5927\uff0c\u5230\u540e\u9762\u4f1a\u6709\u5f88\u96be\u53d1\u5c55\u7684\u611f\u89c9\uff0c\u4f1a\u4e92\u5751\u3002 \u82b1\u89c1\u5c0f\u8def 3 2/\u8f83\u77ed \u6e38\u620f\u7b80\u5355\uff0c\u6709\u70b9\u5c0f\u7b56\u7565\uff0c\u4e5f\u6709\u70b9\u9760\u8fd0\u6c14\u3002 \u5927\u641c\u67e5 - 1~6/\u4e2d\u7b49 \u62ff\u624b\u673a APP \u73a9\u7684\u5408\u4f5c\u89e3\u8c1c\u6e38\u620f\uff0c\u6709\u53c2\u4e0e\u611f\u5730\u770b\u6545\u4e8b\u3002\u4e2a\u4eba\u65e0\u611f\u3002 2022-2-10 \u65e0\u5fe7 4 \u4eba\u5c40\uff08\u8fd9\u573a\u73a9\u7684\u57fa\u672c\u90fd\u662f\u73a9\u8fc7\u7684\uff09 \u2060 \u2060 \u2060 Jenga - \u62bd\u79ef\u6728\u653e\u4e0a\u53bb\u7684\u90a3\u79cd\u6e38\u620f\u3002\uff08\u771f\u7684\u7b97\u684c\u6e38\u5417 XD\uff1f\uff09 2020-7-18 \u65e0\u5fe7 5 \u4eba\u5c40 \u2060 \u2060 \u2060 \u7206\u73e0\u53d1\u660e 4 2~4/\u4e2d\u7b49 \u4e70\u4e86\uff01 \u7565\u5e26\u7b56\u7565\u7684\u6253 combo \u5361\u724c\u6e38\u620f\uff0c\u597d\u4e0a\u624b\uff0c\u5f88\u723d\uff0c\u4e92\u52a8\u6027\u4e0d\u90a3\u4e48\u5f3a\u3002 \u5e9e\u6c0f\u9a97\u5c40 4 3~5/\u4e2d\u7b49 \u4e70\u4e86\uff01 \u6bd4\u8f83\u70e7\u8111\uff0c\u4ea4\u6613\u9636\u6bb5\u7684\u4e92\u5751\u6bd4\u8f83\u591a\uff0c\u81f3\u4eca\u6ca1\u627e\u5230\u6838\u5fc3\u7b56\u7565\u6240\u5728\u3002 2020-7-4 \u65e0\u5fe7 4 \u4eba\u5c40 \u2060 \u2060 \u2060 \u51fa\u5305\u9b54\u6cd5\u5e08 4.5 2~5/\u4e2d\u7b49 \u5347\u7ea7\u7248\u8fbe\u82ac\u5947\u5bc6\u7801\uff0c\u8fd0\u6c14\u6210\u5206\u4e0d\u5c0f\uff0c\u63a8\u7406\u6210\u5206\u4e5f\u6709\uff0c\u751a\u81f3\u770b\u573a\u5916\u3002\u8282\u76ee\u6548\u679c\u6bd4\u8f83\u591a\u3002 \u9003\u79bb\u4e9a\u7279\u5170\u8482\u65af 1.5 2~4/\u8f83\u77ed \u4e92\u5751\u662f\u6838\u5fc3\u73a9\u6cd5\u3002 \u96ea\u4e4b\u65f6 3.5 3~5/\u8f83\u77ed \u535a\u5f08\uff0c\u6709\u4e92\u5751\uff0c\u89c4\u5219\u7b80\u5355\uff0c\u6709\u8282\u76ee\u6548\u679c\u3002 2020-5-5 \u65e0\u5fe7 10 \u4eba\u5c40 \u2060 \u2060 \u2060 \u730e\u5deb\u9547 1 4~12/\u4e2d\u7b49 \u4f53\u9a8c\u7a0d\u5fae\u5e73\u8861\u4e00\u70b9\u7684\u72fc\u4eba\u6740\uff0c\u4f46\u662f\u6b7b\u4e86\u7684\u4eba\u540c\u6837\u8981\u7b49\u597d\u4e45\u3002 \u9c9c\u8840\u76df\u7ea6 3.5 6~12/\u8f83\u77ed \u597d\u590d\u523b \u4e70\u4e86\uff01 \u8eab\u4efd\u63a8\u7406\uff0c\u4e24\u4e2a\u9635\u8425\uff0c\u53c2\u4e0e\u5ea6\u9ad8\uff0c\u597d\u4e0a\u624b\u3002\u4f46\u662f\u64cd\u4f5c\u4e0a\u9650\u6709\u9650\uff0c\u8282\u76ee\u6548\u679c\u5c11\u3002 \u5e76\u8d2d 3.5 3~6/\u4e2d\u7b49 \u89c4\u5219\u7b80\u6d01\uff0c\u53d8\u5316\u4e0d\u5c11\uff0c\u7b56\u7565\u6e38\u620f\uff0c\u4f46\u662f\u968f\u673a\u6027\u4e5f\u4e0d\u5c0f\u3002 2020-3-29 \u65e0\u5fe7 5 \u4eba\u5c40 \u2060 \u2060 \u2060 \u65ed\u65e5\u6218\u9b42\u5f55 - 3~5/\u8f83\u957f \u89c4\u5219\u548c\u8ba1\u7b97\u6bd4\u8f83\u590d\u6742\uff0c\u5185\u5bb9\u7e41\u591a\uff0c\u611f\u89c9\u80fd\u534a\u81ea\u52a8\u5316\u53ef\u80fd\u597d\u4e00\u70b9XD 2019-10-11 \u706b\u661f\u5de5\u5382 4 \u4eba\u5c40 \u2060 \u2060 \u2060 \u6211\u662f\u5927\u8001\u677f 3.5 3~6/\u4e2d\u7b49 \u4e70\u4e86\uff01 \u8c08\u5224\u6e38\u620f\uff0c\u89c4\u5219\u81ea\u7531\uff0c\u4e0d\u540c\u7684\u4eba\u73a9\u7684\u6d41\u6d3e\u4f1a\u5f88\u4e0d\u4e00\u6837\uff0c\u4e0d\u8fc7\u6253\u51fa\u9ad8\u5149\u5f88\u96be\u3002 \u60c5\u4e66 2 2~4/\u8f83\u77ed \u89c4\u5219\u7b80\u5355\uff0c\u6709\u70b9\u535a\u5f08\u4f46\u4e0d\u591a\uff0c\u4e5f\u56e0\u6b64\u4e0a\u9650\u6709\u9650\u3002 \u9a86\u9a7c\u5927\u8d5b 2 2~8/\u4e2d\u7b49 \u8fd0\u6c14\u6e38\u620f\uff0c\u80fd\u7b97\u4f46\u662f\u8fd8\u662f\u770b\u8138\u3002\u4f1a\u6709\u8282\u76ee\u6548\u679c\uff0c\u7b56\u7565\u6027\u6bd4\u8f83\u5f31\u3002 \u9a6c\u5c3c\u62c9 1.5 3~5/\u4e2d\u7b49 \u673a\u5236\u6bd4\u8f83\u4e30\u5bcc\u4e5f\u4e0d\u96be\u61c2\uff0c\u4f46\u662f\u8fd0\u6c14\u8fdc\u5927\u4e8e\u7b56\u7565\u3002\u8282\u76ee\u6548\u679c\u4e5f\u4e0d\u591a\u3002 2019-10-4 \u706b\u661f\u5de5\u5382 2 \u4eba\u5c40 \u2060 \u2060 \u2060 \u9aa8\u7c73\u8bfa 0.5 1~8/\u8f83\u77ed \u6ca1\u4ec0\u4e48\u7b56\u7565\u53ef\u8a00\uff0c\u4e5f\u6ca1\u4ec0\u4e48\u4e50\u8da3\uff0c\u9002\u5408\u5f53\u5e7c\u513f\u6e38\u620f\u3002 \u5931\u843d\u7684\u57ce\u5e02 1.5 2/\u8f83\u77ed \u89c4\u5219\u7b80\u5355\uff0c\u6709\u70b9\u535a\u5f08\u6210\u5206\uff0c\u8fd0\u6c14\u6210\u5206\u53ef\u80fd\u66f4\u5927\u3002 \u658b\u666e\u5c14 2 2/\u8f83\u77ed \u89c4\u5219\u4e5f\u7b80\u5355\uff0c\u535a\u5f08\u6210\u5206\u6bd4\u5931\u843d\u7684\u57ce\u5e02\u5927\u4e00\u70b9\uff0c\u8fd0\u6c14\u8fd8\u662f\u6bd4\u8f83\u91cd\u8981\u3002 Patchwork 2.5 2/\u8f83\u77ed \u89c4\u5219\u7b80\u5355\uff0c\u81ea\u5df1\u7ecf\u8425\u4e0d\u5361\u5bf9\u65b9\u7684\u8bdd\u5c31\u4f1a\u6bd4\u8f83\u65e0\u804a\uff0c\u8981\u5361\u7684\u8bdd\u611f\u89c9\u53c8\u4e0a\u4e0d\u5c01\u9876\u4e86XD 2019-8-14 \u65e0\u5fe7 4 \u4eba\u5c40 &amp; 2019-7-30 \u65e0\u5fe7 4 \u4eba\u5c40 \u2060 \u2060 \u2060 \u8bf8\u795e\u4e4b\u6218 4 2~5/\u8f83\u957f \u4e70\u4e86\uff01 \u597d\u770b\uff0c\u89c4\u5219\u76f8\u5bf9\u7b80\u5355\uff0c\u590d\u6742\u6027\u548c\u968f\u673a\u6027\u8bbe\u7f6e\u5408\u7406\u3002\u95ee\u9898\u5728\u4e8e\u5355\u6c42\u53d1\u5c55\u8282\u594f\u8f83\u6162\uff0c\u540c\u65f6\u53d6\u80dc\u901a\u5e38\u9700\u8981\u4f9d\u9760\u51fa\u5176\u4e0d\u610f\u3002 \u6b65\u6b65\u4e3a\u8425 2 2~4/\u8f83\u77ed \u89c4\u5219\u7b80\u5355\u7684\u68cb\u7c7b\u6e38\u620f\uff0c\u9700\u8981\u5f88\u591a\u63a8\u7406\u3002\u6ca1\u6709\u4ec0\u4e48\u8282\u76ee\u6548\u679c\u3002 Tiki Topple 3.5 2~4/\u8f83\u77ed \u597d\u590d\u523b \u89c4\u5219\u7b80\u5355\uff0c\u535a\u5f08\u6027\u5f3a\uff0c\u4e92\u5751\u4e0d\u5c11\u3002 \u4f8d 2.5 2~4/\u4e2d\u7b49 \u89c4\u5219\u6bd4\u8f83\u7b80\u5355\uff0c\u7c7b\u4f3c\u62cd\u5356\u7684\u535a\u5f08\uff0c\u6709\u52fe\u5fc3\u6597\u89d2\u3002 \u9ab0\u5b50\u9547 3 2~5/\u4e2d\u7b49 \u9ab0\u5b50\u6e38\u620f\uff0c\u8fd0\u6c14\u5e26\u6765\u5f88\u591a\u8282\u76ee\u6548\u679c\uff0c\u540c\u65f6\u4e5f\u6709\u4e00\u70b9\u70b9\u7b56\u7565\u3002 \u9ab0\u5b50\u8857 4 2~4/\u4e2d\u7b49 \u9ab0\u5b50\u6e38\u620f\uff0c\u89c4\u5219\u7b80\u5355\uff0c\u6253\u8fde\u62db\uff0c\u4f1a\u5f88\u723d\uff1b\u7b56\u7565\u601d\u8003\u91cf\u4e0d\u5927\uff0c\u6709\u8282\u76ee\u6548\u679c\u3002 \u8fbe\u82ac\u5947\u5bc6\u7801 3.5 2~4/\u77ed \u597d\u590d\u523b \u89c4\u5219\u7b80\u5355\uff0c\u73a9\u8d77\u6765\u5f88\u5feb\uff0c\u63a8\u7406\u6e38\u620f\uff0c\u8fd0\u6c14\u6210\u5206\u4e5f\u4e0d\u5c0f\u3002 \u7480\u74a8\u5b9d\u77f3 5 2~4/\u8f83\u77ed \u4e70\u4e86\uff01 \u89c4\u5219\u7b80\u5355\uff0c\u6709\u4e00\u70b9\u7b56\u7565\u6027\uff0c\u73a9\u8d77\u6765\u5f88\u5f00\u5fc3\u3002 \u9999\u6599\u4e4b\u8def 4.5 2~5/\u8f83\u77ed \u4e70\u4e86\uff01 \u89c4\u5219\u7b80\u5355\uff0c\u51d1\u5361\u7ec4\u6253\u8fde\u62db\uff0c\u53ef\u4ee5\u5361\u522b\u4eba\uff0c\u7b56\u7565\u7b97\u662f\u6709\u4e00\u70b9\u3002\u611f\u89c9\u6ca1\u6709\u7480\u74a8\u5b9d\u77f3\u723d\u5f97\u7eaf\u7cb9\u3002"},{"location":"%E6%A1%8C%E6%B8%B8/components/","title":"\u914d\u4ef6\u76f8\u5173","text":"<p> \u7ea6 295 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> \u540d\u79f0 \u53ef\u5171\u7528 / \u590d\u523b \u72ec\u6709(\u5c0f) \u72ec\u6709(\u5927) \u4e70\u4e86\uff01 \u2060 \u2060 \u2060 \u8bf8\u795e\u4e4b\u6218 \u91d1\u5e01\u3001\u58eb\u5175\u3001\u9ab0\u5b50 \u5361\u724c\u3001tokens \u7248\u56fe\u3001\u602a\u7269\u6a21\u578b \u62c9\u5bc6 \u724c\u3001\u724c\u67b6 - - \u5e9e\u6c0f\u9a97\u5c40 \u7eb8\u5e01 (1,5,10,20)\u3001\u4fe1\u5c01\u3001\u5c4f\u98ce \u5efa\u7b51\u3001\u5962\u4f88\u54c1\u3001\u8d44\u91d1\u5361 \u65f6\u95f4\u8f6e\u3001\u4ea4\u6613\u7248\u3001\u8d77\u59cb\u73a9\u5bb6\u6807\u8bb0 \u7206\u73e0\u53d1\u660e \u7206\u73e0 (4*13)\u3001\u5206\u6570 \u53d1\u660e\u724c \u73a9\u5bb6\u677f\u3001\u80fd\u91cf\u5e93\u3001\u80fd\u91cf\u73af \u9999\u6599\u4e4b\u8def \u9999\u6599\u3001\u91d1\u5e01\u3001\u94f6\u5e01 \u5361\u724c\u3001\u677f\u5757 (\u6269)\u3001tokens \u73a9\u5bb6\u677f \u6211\u662f\u5927\u8001\u677f \u9ab0\u5b50\u3001\u7eb8\u5e01 \u5361\u724c \u7248\u56fe \u903b\u8f91\u5bf9\u51b3 \u5c4f\u98ce \u95ee\u9898\u5361\u3001\u6570\u5b57\u5757 - \u7480\u74a8\u5b9d\u77f3 \u5b9d\u77f3 \u5361\u724c\u3001\u8d35\u65cf - \u9ab0\u5b50\u8857 \u94b1\u5e01\u3001\u9ab0\u5b50 \u5361\u724c - \u8be1\u5f71\u5bfb\u8e2a token \u4efb\u52a1\u724c \u5730\u56fe\u677f\u3001\u7ebf\u7d22\u518c\u3001\u8bb0\u5f55\u672c \u590d\u523b \u2060 \u2060 \u2060 \u5723\u5149\u4e4b\u57ce \u5361\u724c\u3001\u91d1\u5e01 - - \u7f57\u751f\u95e8 \u5361\u724c - - \u540d\u79f0 \u5361\u724c\u5c3a\u5bf8 (mm) \u5361\u724c\u6570\u76ee \u8bf8\u795e\u4e4b\u6218 57.5*88 81 \u5e9e\u6c0f\u9a97\u5c40 45*68 82 \u7206\u73e0\u53d1\u660e 66*66 112 \u9999\u6599\u4e4b\u8def 70*120 94 \u6211\u662f\u5927\u8001\u677f 59*92 220 \u9ab0\u5b50\u8857 58*89 108 \u8be1\u5f71\u5bfb\u8e2a 63.5*88 54 <ul> <li>\u5723\u5149\u4e4b\u57ce\uff1a72 profession (18 each color: 2, 3, 4, 5, 6 \u5404 3, 4, 4, 4, 3 \u5f20); 4 capital; 4 modifier (+4, +2, -3, -1); 8 golds</li> <li>\u7f57\u751f\u95e8\uff1aA ~ 8</li> </ul>"},{"location":"%E7%94%9F%E6%B4%BB/","title":"\u751f\u6d3b","text":"<p> \u7ea6 13 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u4e00\u4e9b\u603b\u7ed3\u3001\u89c4\u5212\u548c\u788e\u788e\u5ff5</p>"},{"location":"%E7%94%9F%E6%B4%BB/2022/","title":"2022 \u5e74\u7ec8\u603b\u7ed3","text":"<p> \u7ea6 932 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>2022 \u7adf\u7136\u5c31\u8981\u8fc7\u53bb\u4e86\uff01</p> <p>\u5e74\u521d\u7ed9\u81ea\u5df1\u7684\u5173\u952e\u8bcd\u662f\u300c\u987a\u5176\u81ea\u7136\u300d\u3002\u7b97\u662f\u6446\u8131\u4e86\u4e00\u76f4\u8ba9\u6211\u5185\u8017\u7684\u5173\u7cfb\uff0c\u4f46\u662f\u53c8\u56de\u5230\u4e86\u53e6\u4e00\u79cd\u5185\u8017\u91cc\u53bb\u3002\u597d\u5728\u5b66\u4e1a\u548c\u4e8b\u4e1a\u7b97\u662f\u627e\u5230\u4e86\u4e2a\u65b9\u5411\uff1b\u867d\u7136\u4e0d\u77e5\u9053\u8fd9\u4e2a\u65b9\u5411\u4ee5\u540e\u4f1a\u5982\u4f55\uff0c\u4f46\u662f\u5927\u6982\u5dee\u4e0d\u5230\u54ea\u91cc\u53bb\u5427\u3002</p> <p>\u5e74\u521d\uff0c\u5728\u676d\u5dde\u5403\u4e86\u4e00\u4e2a\u4eba\u7684\u706b\u9505\uff0c\u8fc7\u4e86\u4e00\u4e2a\u4eba\u7684\u6625\u8282\uff1b\u4e5f\u5c1d\u8bd5\u653e\u4e0b\u4e4b\u524d\u7684\u4e00\u5207\uff0c\u53d8\u56de\u81ea\u5df1\u4e00\u4eba\u3002\u300c\u800c\u6070\u9022\u4f73\u8282\uff0c\u6bcf\u9022\u4f73\u8282\u3002\u300d\u5728\u5e74\u521d\u4e94\u7684\u751f\u65e5\u5f53\u5929\u5750\u4e0a\u4e86\u56de\u5bb6\u7684\u706b\u8f66\uff0c\u8865\u8fc7\u4e86\u6625\u8282\u3002\u5728\u5bb6\u5446\u4e86\u4e0d\u5230\u4e24\u5468\u5c31\u8981\u5f00\u5b66\u4e86\u3002\u300c\u5728\u4e0a\u4e2a\u6625\u5929\uff0c\u6211\u4ee5\u4e3a\u6211\u81ea\u5df1\u77e5\u9053\u4e86\u548c\u4ec0\u4e48\u6837\u7684\u4eba\u80fd\u8d70\u4e0b\u53bb\u3002\u300d\u8f6c\u773c\u53c8\u5230\u4e86\u8de8\u5e74\uff1b\u867d\u7136\u6709\u6240\u9884\u6599\uff0c\u4f46\u662f\u5927\u5b66\u56db\u5e74\u7684\u8de8\u5e74\u8fc7\u5f97\u90fd\u8fd8\u633a\u5b64\u72ec\u548c\u51c4\u51c9\u7684\u3002</p> <p>\u3010\u5b66\u4e1a\u3011\u5927\u4e09\u4e0b\u5b66\u671f\uff0c\u6211\u5f53\u65f6\u4ecd\u7136\u62b1\u7740\u5bf9\u4fdd\u7814\u7684\u8ffd\u6c42\uff0c\u9009\u4e86\u5c3d\u53ef\u80fd\u5c11\u7684\u8bfe\uff0c\u62ff\u4e86\u5c3d\u53ef\u80fd\u9ad8\u7684\u5206\u3002\u88ab\u8f6f\u5b89\u6298\u78e8\u5f97\u591f\u545b\uff0c\u597d\u5728\u8fd8\u6709\u70b9\u610f\u601d\u3002\u62ff\u5230\u7684\u7ee9\u70b9\u4e5f\u5e76\u975e\u5b8c\u5168\u6ca1\u7528\uff0c\u53ea\u662f\u6ca1\u53bb\u8bfb\u7814\u786e\u5b9e\u6709\u70b9\u6d6a\u8d39\u4e86\u3002\u9009\u8bfe\u5c11\uff0c\u6240\u4ee5\u4e5f\u6ca1\u62ff\u4e0a\u4ec0\u4e48\u5956\u5b66\u91d1\u3002</p> <p>\u3010\u6253\u5de5\u3011\u6691\u5047\u53bb\u4e86\u601d\u52f0\u5b9e\u4e60\uff0c\u7b97\u662f\u5c1d\u5230\u4e86\u70b9\u751c\u5934\u3002\u4e0a\u73ed\u7684\u751f\u6d3b\u8fd8\u7b97\u7f8e\u597d\uff0c\u6709\u5468\u672b\u7684\u8bdd\u751f\u6d3b\u8fd8\u7b97\u4e0d\u9519\uff0c\u53ea\u662f\u6bcf\u5929\u4e0a\u73ed\u516d\u5c0f\u65f6\u4ee5\u4e0a\u5c31\u8111\u888b\u7a7a\u7a7a\u3002\u4f46\u60f3\u6765\u8bfb\u7814\u4e0d\u786e\u5b9a\u6027\u4e5f\u5927\uff0c\u4e07\u4e00\u8bfb\u4e86\u51e0\u5e74\u4e0d\u5f97\u4e0d\u53bb\u4f20\u7edf\u4e92\u8054\u7f51\u4e5f\u8bb8\u66f4\u52a0\u51c4\u60e8\u3002\u4e8e\u662f\u653e\u5f03\u4e86\u4fdd\u7814\uff0c\u5012\u4e5f\u53ef\u60dc\u6d6a\u8d39\u4e86\u4e00\u5e74\u65f6\u95f4\u5377\u7ee9\u70b9\u3002\u79cb\u62db\u6700\u540e\u4e5f\u9009\u62e9\u4e86\u4e7e\u8c61\uff0c\u8d5e\u7f8e\u4e7e\u8c61\u3002\u671f\u5f85\u660e\u5e74\u5165\u804c\uff0c\u4e0d\u8fc7\u4e5f\u6709\u4e00\u70b9\u5c0f\u5c0f\u7684\u62c5\u5fc3\u3002</p> <p>\u3010\u7b14\u8bb0\u3011\u4e94\u6708\u4efd\u8bed\u96c0\u6709\u4e86 40 \u4e07\u5b57\uff0c\u5341\u4e00\u6708\u4efd\u6709\u4e86 50 \u4e07\u5b57\u3002\u4e94\u6708\u4efd\u548c\u817e\u58eb\u3001xy \u6512\u4e86\u54b8\u9c7c\u8086\uff0c\u575a\u6301\u4e86 24 \u671f\u5468\u62a5\u4e4b\u540e\u6682\u505c\u4e86\uff1b\u9c7c\u8086\u5012\u662f\u6765\u4e86\u4e0d\u5c11\u4eba\u6c34\u7fa4\u3002\u603b\u4f53\u6765\u8bf4\u68a6\u60f3\u8fd8\u662f\u5f88\u8fdc\u5927\uff0c\u4f46\u662f\u5b64\u638c\u96be\u9e23\uff0c\u9010\u6e10\u4e5f\u61d2\u5f97\u548c\u61d2\u60f0\u4f5c\u6597\u4e89\u3002\u7531\u4e8e\u5bf9\u8bed\u96c0\u53d1\u5c55\u65b9\u5411\u7684\u4e0d\u4fe1\u4efb\uff0c\u6211\u5728\u5341\u6708\u5e95\u642d\u4e86\u81ea\u5df1\u7684\u535a\u5ba2\uff1b\u64cd\u4f5c\u7cfb\u7edf\u670b\u8f88\u8f85\u5b66\u540e\u7eed\u7684\u5907\u8bfe\u4e5f\u90fd\u653e\u5728\u8fd9\u91cc\u4e86\u3002\u4e4b\u540e\u4f1a\u628a\u4e1c\u897f\u90fd\u642c\u5230\u8fd9\u91cc\u6765\u5427QWQ</p> <p>\u3010\u610f\u4e49\u3011\u4e0d\u7ba1\u662f\u9c7c\u8086\u8fd8\u662f\u670b\u8f88\u8f85\u5b66\u8fd8\u662f\u6211\u7684\u7b14\u8bb0\uff0c\u6211\u627f\u8ba4\u4e00\u4e2a\u91cd\u8981\u52a8\u529b\u662f\u865a\u8363\u5fc3\u3002\u7ef4\u62a4\u8fd9\u4e9b\u4e1c\u897f\u5bf9\u4e2a\u4eba\u53d1\u5c55\u800c\u8a00\u7684\u6536\u83b7\u5927\u6982\u662f\u8fdc\u591f\u4e0d\u4e0a\u6210\u672c\u7684\u3002\u4f46\u662f\u5f53\u6211\u5ba1\u89c6\u8fd9\u4e9b\u4e1c\u897f\u5230\u5e95\u80fd\u7ed9\u54ea\u4e9b\u4eba\u5e26\u6765\u4ec0\u4e48\u7684\u65f6\u5019\uff0c\u53c8\u9677\u5165\u4e86\u8ff7\u832b\u3002\u6211\u5f88\u96be\u5b9a\u4e49\u6216\u8005\u5b9a\u4f4d\u6211\u5e0c\u671b\u505a\u7684\u8fd9\u4e9b\u4e8b\uff0c\u56e0\u4e3a\u770b\u8d77\u6765\u5f88\u5bb9\u6613\u627e\u5230\u66ff\u4ee3\u54c1\u3002</p> <p>\u3010\u793e\u4ea4\u3011\u6700\u4ee4\u4eba\u60f6\u6050\u7684\u662f\uff0c\u518d\u8fc7\u534a\u5e74\uff0c\u6211\u5c31\u4e0d\u5f97\u4e0d\u79bb\u5f00\u5f53\u524d\u6700\u5927\u7684\u793e\u4ea4\u5708\u4e86\u3002\u6570\u8d77\u5e38\u8054\u7cfb\u7684\u670b\u53cb\uff0c\u5c0f\u5b66\u7684\u4e0d\u5230\u5341\u4e2a\uff0c\u4e2d\u5b66\u4e5f\u4e0d\u5230\u5341\u4e2a\uff1b\u5927\u5b66\u7684\u7f81\u7eca\u672c\u5c31\u6bd4\u4e4b\u524d\u7684\u5c11\uff0c\u7b49\u6211\u53bb\u4e86\u5317\u4eac\u8fd8\u80fd\u5269\u4e0b\u51e0\u4e2a\u5462\uff09\uff09\u5728\u5317\u4eac\u4e00\u4e2a\u4eba\u6253\u62fc\uff0c\u4eff\u4f5b\u76f8\u5173\u7684\u4e00\u5207\u90fd\u8fd8\u6ca1\u505a\u597d\u51c6\u5907\u3002\uff08\u5f88\u96be\u60f3\u8c61\uff0c\u6545\u5730\u6545\u4eba\u90fd\u5728\uff0c\u6211\u5374\u8dd1\u8def\u4e86\u3001\u3001</p> <p>\u6240\u4ee5\uff0c\u5bf9\u4e8e\u5373\u5c06\u5230\u6765\u7684 2023\uff0c\u53ef\u80fd\u91cd\u5efa\u548c\u7ef4\u62a4\u7cbe\u795e\u4e16\u754c\u7684\u5b89\u5b81\u662f\u66f4\u52a0\u91cd\u8981\u7684\u76ee\u6807\u5427qwq \u5e0c\u671b\u5b66\u4e1a\u548c\u4e8b\u4e1a\u987a\u5176\u81ea\u7136\uff0c\u6bd5\u4e1a\u548c\u5de5\u4f5c\u80fd\u591f\u5e73\u7a33\u53d1\u5c55\uff1b\u5173\u4e8e\u6211\u60f3\u505a\u7684\u4e8b\uff0c\u80fd\u591f\u627e\u5230\u300c\u610f\u4e49\u300d\uff1b\u66f4\u5e0c\u671b\u80fd\u627e\u5230\u4e92\u76f8\u6ee1\u8db3\uff08\u81f3\u5c11\u90e8\u5206\uff09\u7cbe\u795e\u9700\u6c42\u7684\u670b\u53cb\u3002</p> <p>\u795d\u5927\u5bb6\u65b0\u5e74\u5feb\u4e50\u54c7\uff01</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/","title":"\u5173\u4e8e\u4eb2\u5bc6\u5173\u7cfb\u7684\u788e\u788e\u5ff5","text":"<p> \u7ea6 2796 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u6211\u5728 20 \u5c81\u751f\u65e5\u7684\u65f6\u5019\u6574\u7406\u4e86\u4e00\u756a\u5bf9\u4e8e\u793e\u4ea4\u5173\u7cfb\u7684\u601d\u8003\uff0c\u524d\u51e0\u5929\u9655\u7fa4\u96c6\u4f53 emo \u7684\u65f6\u5019\u53c8\u62ff\u51fa\u6765\u8ba8\u8bba\u4e86\u3002\u5728\u4e4b\u524d\u7684\u601d\u8003\u4e4b\u540e\uff0c\u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u96f6\u788e\u7684\u60f3\u6cd5\u548c\u8ba8\u8bba\u3002\u6211\u5bf9\u8fd9\u65b9\u9762\u7684\u9700\u6c42\u548c\u60f3\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u6240\u4ee5\u62ff\u51fa\u6765\u518d\u6574\u7406\u4e00\u4e0b\u2014\u2014</p> <p>Warning</p> <p>\u8fd9\u7bc7\u6587\u7ae0\u53ea\u662f\u5bf9\u6211\u81ea\u5df1\u601d\u8003\u7684\u4e00\u4e2a\u603b\u7ed3\u3002\u6211\u4e0d\u61c2\u5fc3\u7406\u5b66\uff0c\u4e0d\u61c2\u60c5\u611f\uff0c\u6240\u4ee5\u53ea\u80fd\u629b\u51fa\u5404\u79cd\u81ea\u5df1\u770b\u5230\u7684\u95ee\u9898\uff0c\u4f46\u5f88\u96be\u7ed9\u51fa\u4ec0\u4e48\u5408\u7406\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6211\u4f1a\u5c3d\u91cf\u63d0\u9192\u81ea\u5df1\u53bb\u6ce8\u610f\u90a3\u4e9b\u9677\u9631\u2014\u2014\u4f46\u662f\u597d\u50cf\u5f88\u96beQWQ</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#1-\u5bf9\u793e\u4ea4\u5173\u7cfb\u7684\u5206\u7ea7","title":"1 \u5bf9\u793e\u4ea4\u5173\u7cfb\u7684\u5206\u7ea7","text":"<p>\u8ba8\u8bba\u8303\u56f4</p> <p>\u4ee5\u4e0b\u5bf9\u4e8e\u793e\u4ea4\u5173\u7cfb\u548c\u4eb2\u5bc6\u5173\u7cfb\u7684\u8ba8\u8bba\uff0c\u5747\u4e0d\u5305\u542b\u8840\u4eb2\u4e4b\u7c7b\u5148\u5929\u81ea\u5e26\u7684\u5173\u7cfb\u3002\u56e0\u4e3a\u5728\u6211\u770b\u6765\uff0c\u8fd9\u4e9b\u4eba\u90fd\u5df2\u7ecf\u6210\u4e3a\u4e86\u6211\u7684\u4e16\u754c\u4e2d\u7684\u300c\u516c\u7406\u300d\uff0c\u662f\u6211\u7684\u4ef7\u503c\u89c2\u7684\u5f88\u5927\u4e00\u90e8\u5206\uff0c\u8fdb\u800c\u662f\u300c\u6211\u81ea\u5df1\u300d\u7684\u4e00\u90e8\u5206\u3002\u6211\u5e76\u4e0d\u5c1d\u8bd5\u53bb\u8bc4\u4ef7\u300c\u81ea\u5df1\u300d\u3002</p> <p>\u6211\u4eec\u628a\u4e0a\u8ff0\u8ba8\u8bba\u8303\u56f4\u5185\u7684\u793e\u4ea4\u5bf9\u8c61\u7edf\u79f0\u4e3a\u300c\u719f\u4eba\u300d\u3002\u4ed6\u4eec\u5b58\u5728\u7684\u610f\u4e49\u53ef\u80fd\u5305\u62ec\uff1a</p> <ol> <li> <p>\u57fa\u672c\u7684\u7269\u8d28\u6216\u8005\u53d1\u5c55\u4ef7\u503c\uff0c\u4f8b\u5982\u4e92\u76f8\u5e2e\u52a9\u3001\u63d0\u4f9b\u5efa\u8bae\u7b49\uff1b</p> <ul> <li>\u8fdb\u4e00\u6b65\u5730\uff0c\u80fd\u591f\u81ea\u53d1\u5408\u4f5c\u6216\u8005\u63a2\u8ba8\u5b66\u4e1a\u3001\u5de5\u4f5c\u76f8\u5173\u7684\u95ee\u9898\uff1b</li> </ul> </li> <li> <p>\u57fa\u672c\u7684\u7cbe\u795e\u4ef7\u503c\uff0c\u4f8b\u5982\u548c\u4ed6\u4eec\u4ea4\u5f80\u80fd\u591f\u6ee1\u8db3\u81ea\u5df1\u7684\u7cbe\u795e\u9700\u6c42\uff0c\u4f8b\u5982\u5206\u4eab\u6b32\u6216\u6210\u5c31\u611f\uff1b</p> <ul> <li>\u8fdb\u4e00\u6b65\u5730\uff0c\u80fd\u591f\u5c31\u4e00\u4e9b\u95ee\u9898\u4ea4\u6362\u60f3\u6cd5\uff0c\u8f83\u4e3a\u6df1\u5165\u5730\u8c08\u5fc3\u7b49\uff1b</li> </ul> </li> <li> <p>\u300c\u53ef\u4f9d\u8d56\u300d</p> </li> </ol> <p>\u6211\u4f1a\u5728\u540e\u9762\u5206\u4eab\u6211\u5bf9\u300c\u53ef\u4f9d\u8d56\u300d\u7684\u5b9a\u4e49\uff0c\u90a3\u662f\u6211\u5bf9\u793e\u4ea4\u5173\u7cfb\u7684\u6700\u9ad8\u8ffd\u6c42\u3002</p> <p></p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#2-\u53ef\u4f9d\u8d56","title":"2 \u300c\u53ef\u4f9d\u8d56\u300d","text":"<p>\u9996\u5148\u63d0\u51fa\u4e00\u4e2a\u95ee\u9898\uff01</p> <p>\u5982\u679c\uff0c\u5916\u661f\u4eba\u964d\u4e34\uff01\u5b83\u4eec \u6307\u5b9a \u4e86\u4e00\u4e2a\u6b63\u6574\u6570 \\(k\\)\uff0c\u8981\u6c42\u6211\u4eec\u6bcf\u4e00\u4e2a\u4eba\u9700\u8981\u5728 \u4e0d\u548c\u5176\u4ed6\u4eba\u6c9f\u901a \u7684\u60c5\u51b5\u4e0b\u9009\u5b9a\u5176\u4ed6 \\(k\\) \u4e2a\u4eba\uff0c\u4e0d\u5305\u542b\u8840\u4eb2\u3002\u5982\u679c\u4f60\u9009\u51fa\u7684\u8fd9 \\(k\\) \u4e2a\u4eba\u4e2d\u6709\u4efb\u4f55\u4e00\u4e2a\u4eba\u9009\u62e9\u4e86\u4f60\uff0c\u4f60\u5c31\u80fd\u6d3b\u4e0b\u6765\uff0c\u5426\u5219\u4f60\u5c31\u4f1a\u88ab\u5f04\u6b7b\ud83d\ude08\u3002\u4f60\u7684\u9009\u62e9\u9700\u8981\u5c3d\u53ef\u80fd\u8ba9\u4f60\u6d3b\u4e0b\u6765\uff0c\u8bf7\u95ee\uff1a</p> <ol> <li>\u5f53 \\(k = 1, 3, 5\\) \u7684\u65f6\u5019\uff0c\u4f60\u662f\u5426\u5206\u522b\u6709\u5bf9\u5e94\u7684\u4eba\u9009\uff1f</li> <li>\u5728 \\(k\\) \u4e0d\u5c0f\u4e8e\u591a\u5c11\u7684\u65f6\u5019\uff0c\u4f60\u6562\u7b03\u5b9a\u5730\u9009\u62e9\u67d0\u4e2a\u4eba\uff1f</li> <li>\u5728 \\(k\\) \u4e0d\u5145\u5206\u5927\u7684\u524d\u63d0\u4e0b\uff0c\u4f60\u6709\u591a\u5c11\u4eba\u9009\uff1f</li> </ol> <p></p> <p>\u663e\u7136\uff0c\u8fd9\u4e2a\u95ee\u9898\u7684\u5173\u952e\u70b9\u5728\u4e8e\uff0c\u5728\u7406\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u5982\u679c\u67d0\u4e2a\u4eba\u4e0d\u4f1a\u9009\u4f60\uff0c\u90a3\u4e48\u4f60\u9009\u4ed6\u5c31\u6beb\u65e0\u610f\u4e49\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6562\u9009\u62e9\u67d0\u4e2a\u4eba\u7684\u524d\u63d0\u662f\uff1a</p> <ol> <li>\u5bf9\u65b9\u7684\u8a00\u884c\u8db3\u4ee5\u8ba9\u6211\u76f8\u4fe1\uff0c\u6211\u5728\u5bf9\u65b9\u7684\u5fc3\u91cc\u8db3\u591f\u91cd\u8981\uff1b</li> <li>\u6211\u786e\u4fe1 \u6211\u7684\u8a00\u884c\u8db3\u4ee5\u8ba9\u5bf9\u65b9\u76f8\u4fe1\uff0c\u5bf9\u65b9\u5728\u6211\u7684\u5fc3\u91cc\u8db3\u591f\u91cd\u8981\u3002</li> </ol> <p>\u6211\u79f0\u8fd9\u6837\u7684\u5173\u7cfb\u4e3a\u300c\u53ef\u4f9d\u8d56\u300d\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u826f\u6027\u7684\u4eb2\u5bc6\u5173\u7cfb\u9700\u8981\u8ba9\u53cc\u65b9\u90fd\u5bf9\u8fd9\u6bb5\u5173\u7cfb\u6709\u5145\u5206\u7684\u4fe1\u4efb\uff0c\u540c\u65f6\u4e5f\u90fd\u80fd\u591f\u5c06\u81ea\u5df1\u5bf9\u7ef4\u7cfb\u5173\u7cfb\u7684\u610f\u613f \u5448\u73b0 \u51fa\u6765\uff0c\u5e76\u786e\u4fdd\u5bf9\u65b9\u80fd\u591f\u611f\u53d7\u5230\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u79f0\u4e00\u4e2a\u4eba\u4e3a \u300c\\(k\\) - \u53ef\u4f9d\u8d56\u300d\u7684\uff0c\u5176\u4e2d \\(k\\) \u662f\u4f7f\u4f60\u6562\u4e8e\u7b03\u5b9a\u5730\u9009\u62e9\u8fd9\u4e2a\u4eba\u7684\u6700\u5c0f \\(k\\)\u3002</p> <p>\u5bf9\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6301\u7eed \u7684\u300c\u53ef\u4f9d\u8d56\u300d\u662f\u6211\u5bf9\u4eb2\u5bc6\u5173\u7cfb\u7684\u6700\u9ad8\u671f\u5f85\uff1b\u800c \\(k\\) \u8d8a\u5c0f\uff0c\u6211\u5c31\u8ba4\u4e3a\u8fd9\u6bb5\u4eb2\u5bc6\u5173\u7cfb\u7684\u8d28\u91cf\u8d8a\u9ad8\u3002</p> <p></p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#21-\u604b\u7231\u5173\u7cfb","title":"2.1 \u604b\u7231\u5173\u7cfb","text":"<p>\u604b\u7231\u5173\u7cfb\u662f\u9876\u7ea7\u4eb2\u5bc6\u5173\u7cfb\u7684\u4f53\u9a8c\u5361\u3002</p> <p>\u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\uff0c\u6211\u5e76\u6ca1\u6709\u628a\u604b\u7231\u5173\u7cfb\u6392\u9664\u5728\u4eb2\u5bc6\u5173\u7cfb\u4e4b\u5916 \u2014\u2014 \u4ece\u6211\u7684\u89d2\u5ea6\u800c\u8a00\uff0c\u604b\u7231\u5173\u7cfb\u662f\u300c\\(1\\) - \u53ef\u4f9d\u8d56\u300d\u7684\u300c\u4f53\u9a8c\u5361\u300d\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e24\u4e2a\u4eba\u7684\u5171\u540c\u7279\u8d28\u3001\u559c\u597d\u3001\u5171\u540c\u7ecf\u5386\u7b49\u7b49\u56e0\u7d20\u53ef\u80fd\u6682\u65f6\u8fbe\u4e0d\u5230 \\(k = 1\\) \u7684\u8981\u6c42\uff0c\u4f46\u662f\u604b\u7231\u5173\u7cfb\u4f5c\u4e3a\u4e00\u4e2a\u4e16\u4fd7\u7684\u9053\u5fb7\u7ea6\u675f\uff0c\u5b83\u672c\u8eab\u8981\u6c42\u6211\u4eec\uff08\u6216\u8005\uff0c\u8ba9\u6211\u4eec\u6709\u4fe1\u5fc3\uff09\u5728\u4e0a\u8ff0\u8ba8\u8bba\u4e2d\u4f18\u5148\u9009\u62e9\u81ea\u5df1\u7684\u5bf9\u8c61\u3002</p> <p>\u800c\u5728\u6211\u770b\u6765\uff0c\u604b\u7231\u5173\u7cfb\u5728\u5f00\u59cb\u4e4b\u540e\u9700\u8981\u505a\u7684\uff0c\u5c31\u662f\u5728\u8fd9\u5f20\u300c\u4f53\u9a8c\u5361\u300d\u5230\u671f\u4e4b\u524d\uff0c\u53bb\u6c9f\u901a\u3001\u78e8\u5408\u3001\u5171\u4e8b\uff0c\u5171\u540c\u7ecf\u5386\u5e73\u5e38\u7684\u548c\u7279\u6b8a\u7684\u4e8b\u60c5\uff0c\u52a0\u6df1\u4e86\u89e3\u548c\u7f81\u7eca\uff0c\u4ece\u800c\u8865\u9f50 \\(k = 1\\) \u6240\u9700\u8981\u7684\u60c5\u611f\u57fa\u7840\u3002</p> <p>\u4e5f\u6b63\u56e0\u5982\u6b64\uff0c\u56e0\u4e3a\u6211\u5bf9\u6027\u672c\u8eab\u6ca1\u4ec0\u4e48\u9700\u6c42\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6211\u800c\u8a00\uff0c\u5982\u679c\u6709\u80fd\u591f\u6301\u7eed\u7684\u300c\\(1\\) - \u53ef\u4f9d\u8d56\u300d\u5173\u7cfb\u7684\u670b\u53cb\uff0c\u90a3\u604b\u7231\u5bf9\u4e8e\u6211\u6765\u8bf4\u4f3c\u4e4e\u5c31\u4e0d\u600e\u4e48\u91cd\u8981\u4e86\u3002\uff08\u4e0d\u8fc7\u611f\u89c9\u8fd9\u6bd4\u8c08\u4e00\u6bb5\u604b\u7231\u8fd8\u8981\u96be\u597d\u591a\ud83d\ude15\uff09\uff09\uff09\uff09</p> <p></p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#3-\u4e00\u4e9b\u95ee\u9898\u548c\u56f0\u5883","title":"3 \u4e00\u4e9b\u95ee\u9898\u548c\u56f0\u5883","text":"<p>Warning</p> <p>\u4e0b\u9762\u7684\u4e1c\u897f\u53ef\u80fd\u66f4\u7410\u788e\u548c\u6ca1\u6709\u903b\u8f91\u4e86\u2026\u2026</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#31-\u5f00\u59cb\u800c\u4e0d\u53ea\u662f\u7ef4\u6301","title":"3.1 \u5f00\u59cb\uff0c\u800c\u4e0d\u53ea\u662f\u7ef4\u6301","text":"<p>\u6211\u8ba4\u4e3a\u4e00\u5207\u793e\u4ea4\u5173\u7cfb\u7684\u5efa\u7acb\u548c\u7ef4\u6301\u9700\u8981</p> <ol> <li> <p>\u524d\u63d0\uff1a\u4e00\u4e2a\u8ba9\u4e24\u4e2a\u4eba\u8ba4\u8bc6\u7684\u7406\u7531</p> </li> <li> <p>\u5efa\u7acb\uff1a</p> <p>a. \u4e92\u76f8\u5438\u5f15\uff0c\u6216\u8005 b. \u4e92\u76f8\u6709\u5efa\u7acb\u5173\u7cfb\u7684\u4ef7\u503c\uff0c\u6216\u8005  c. \u524d\u8ff0\u300c\u524d\u63d0\u300d\u7684\u957f\u671f\u6301\u7eed</p> </li> <li> <p>\u7ef4\u6301\uff1a</p> <p>a. \u4ecd\u7136\u5b58\u5728\u6ee1\u8db3\u524d\u8ff0\u300c\u5efa\u7acb\u300d\u8981\u6c42\u7684\u6761\u4ef6 b. \u57fa\u672c\u7684\u7ef4\u7cfb\u6d3b\u52a8 c. \u6ca1\u6709\u56e0\u4e3a\u8db3\u591f\u591a\u6216\u8005\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u793e\u4ea4\u5173\u7cfb\u5728\u81f3\u5c11\u4e00\u65b9\u770b\u6765\u4e0d\u503c\u5f97\u7ef4\u7cfb\u7684</p> </li> </ol> <p>\u56e0\u6b64\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0a\u5927\u5b66\u4ee5\u540e\u4f1a\u611f\u89c9\u670b\u53cb\u5c11\u4e86\u5462\uff1f\u5c31\u662f\u56e0\u4e3a\u7b2c 1 \u6761\u53d8\u5f97\u66f4\u52a0\u7a00\u6709\u4e86\u3002\u9ad8\u4e2d\u5927\u5bb6\u90fd\u5728\u4e00\u4e2a\u73ed\u91cc\u4e0a\u8bfe\uff0c\u4ea4\u6d41\u76f8\u5f53\u4e30\u5bcc\uff1b\u540c\u684c\u548c\u90e8\u5206\u597d\u53cb\u751a\u81f3\u53ef\u4ee5\u6ee1\u8db3\u7b2c 2 \u6761\u7684\u8981\u6c42 c\uff0c\u56e0\u800c\u4e0d\u9700\u8981\u6211\u4eec\u4e3b\u89c2\u52aa\u529b\u5c31\u80fd\u5efa\u7acb\u8d77\u793e\u4ea4\u5173\u7cfb\u3002</p> <p>\u4e5f\u6b63\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u5f88\u591a\u4eba\uff0c\u5c24\u5176\u662f\u5bf9\u793e\u4ea4\u5173\u7cfb\u7684 \u6570\u91cf \u9700\u6c42\u4e0d\u9ad8\u7684\u4eba\uff0c\u5728\u5927\u5b66\u4e4b\u524d\u5b8c\u5168\u6ca1\u6709\u4e3b\u89c2\u52aa\u529b\u5efa\u7acb\u793e\u4ea4\u5173\u7cfb\u7684\u7ecf\u9a8c\u548c\u610f\u8bc6\uff1b\u800c\u5230\u4e86\u5927\u5b66\uff0c\u5ba2\u89c2\u73af\u5883\u66ff\u6211\u4eec\u6ee1\u8db3\u7b2c 1 \u6761\u7684\u4f18\u52bf\u4e0d\u590d\u5b58\u5728\uff0c\u6211\u4eec\u81ea\u7136\u5c31\u5f88\u96be\u6709\u4ec0\u4e48\u65b0\u7684\u670b\u53cb\u4e86\u3002 </p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#32-\u5927\u591a\u6570\u7537\u5973\u751f\u793e\u4ea4\u7684\u4e0d\u540c\u70b9","title":"3.2 \u5927\u591a\u6570\u7537\u5973\u751f\u793e\u4ea4\u7684\u4e0d\u540c\u70b9","text":"<p>\u4e00\u4e2a\u89c2\u5bdf\uff0c\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9 \u2014\u2014 \u5927\u591a\u6570\u7537\u751f\u5f62\u6210\u5708\u5b50\u6216\u8005\u4e00\u8d77\u51fa\u6e38\u57fa\u672c\u90fd\u6709\u4e00\u4e2a\u660e\u786e\u7684\u4e3b\u9898\uff0c\u800c\u5973\u5b69\u5b50\u4eec\u53ef\u4ee5\u7eaf\u7cb9\u56e0\u4e3a\u300c\u5173\u7cfb\u597d\u300d\u5f62\u6210\u4e00\u4e2a\u5708\u5b50\uff0c\u540c\u65f6\u53ef\u4ee5\u6ca1\u6709\u4efb\u4f55\u9884\u8c0b\u6216\u8005\u76ee\u7684\u5730\u4e00\u540c\u51fa\u6e38\u3002</p> <p>\u4f46\u5b9e\u9645\u4e0a\u5728\u6211\u770b\u6765\uff0c\u804a\u5929\u4e5f\u8bb8\u66f4\u80fd\u4fc3\u8fdb\u5f7c\u6b64\u4e4b\u95f4\u7684\u4e86\u89e3\uff0c\u8fdb\u4e00\u6b65\u589e\u8fdb\u5f7c\u6b64\u7684\u4fe1\u4efb\u611f\u3002\u8fd9\u4e5f\u662f\u6211\u8ba4\u4e3a\u5927\u591a\u6570\u5973\u5b69\u5b50\u5728\u7cbe\u795e\u5c42\u9762\u7684\u793e\u4ea4\u8d28\u91cf\u6bd4\u7537\u5b69\u5b50\u597d\u4e00\u4e9b\u7684\u539f\u56e0\u3002\u6b63\u56e0\u5982\u6b64\uff0c\u6211\u4e5f\u4f1a\u5728\u6bcf\u4e2a\u5047\u671f\u5c3d\u53ef\u80fd\u548c\u5e0c\u671b\u7ef4\u6301\u5173\u7cfb\u7684\u8001\u670b\u53cb\u4e00\u8d77\u51fa\u6765\u538b\u9a6c\u8def\u3001\u804a\u5929 \u2014\u2014 \u6211\u5e0c\u671b\u5728\u4ea4\u5230\u65b0\u7684\u597d\u670b\u53cb\u8d8a\u6765\u8d8a\u96be\u7684\u60c5\u51b5\u4e0b\u5c3d\u53ef\u80fd\u7ef4\u62a4\u597d\u73b0\u6709\u7684\u5173\u7cfb\u3002\uff08\u4e0d\u8fc7\u8fd8\u662f\u5f88\u56f0\u96be\u2026\u2026\uff09</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#33-\u6ce1\u6cab","title":"3.3 \u300c\u6ce1\u6cab\u300d","text":"<p>\u5c0f\u65f6\u5019\u5bb6\u4eba\u548c\u8001\u5e08\u66fe\u7ecf\u56e0\u4e3a\u6211\u8868\u73b0\u5f97\u6709\u4e9b\u300c\u81ea\u95ed\u300d\u3001\u4e0d\u613f\u548c\u522b\u4eba\u4ea4\u5f80\u800c\u52aa\u529b\u9f13\u52b1\u6211\u4ea4\u670b\u53cb\uff1b\u5728\u6b64\u540e\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\u6211\u4e5f\u8ba4\u4e3a\u6211\u7684\u793e\u4ea4\u80fd\u529b\u7b97\u662f\u53ef\u4ee5\u8fc7\u5173\uff0c\u4f46\u4ed4\u7ec6\u60f3\u6765\u5927\u6982\u4e5f\u5e76\u975e\u5982\u6b64\u3002\u6682\u4e14\u4e0d\u8c08\u8fc7\u7a0b\uff0c\u4ec5\u4ece\u7ed3\u679c\u6765\u8bf4\uff0c\u6211\u6709\u65f6\u786e\u5b9e\u6c89\u6eba\u4e8e\u7f51\u7edc\u4e0a\u6240\u8c13\u300c\u793e\u4ea4\u300d\u5e26\u6765\u7684\u5feb\u611f\uff0c\u4f46\u90a3\u53ea\u662f \u770b\u4f3c \u81ea\u5df1\u5f88\u53d7\u6b22\u8fce\u5e26\u6765\u7684\u865a\u8363\u3002\u4f46\u662f\u6b63\u5982\u6211\u4eec\u88ab\u6559\u5bfc\u7684\u90a3\u6837\uff0c\u8fd9\u79cd\u865a\u8363\u7684\u6df1\u5904\u5b9e\u9645\u4e0a\u662f\u5bf9\u81ea\u5df1\u7684\u4e0d\u81ea\u4fe1\u3002\u6211\u4e3a\u4e86\u63a9\u76d6\u81ea\u5df1\u6df1\u5c42\u6b21\u793e\u4ea4\u7684\u532e\u4e4f\uff0c\u9009\u62e9\u4e86\u7528\u6ce1\u6cab\u5305\u56f4\u81ea\u5df1\uff0c\u4ece\u800c\u8499\u853d\u522b\u4eba\uff0c\u66f4\u591a\u7684\u662f\u8499\u853d\u81ea\u5df1\u3002\u4f46\u662f\u4e00\u65e6\u4eb2\u81ea\u62e8\u5f00\u8fd9\u4e9b\u6ce1\u6cab\uff0c\u624d\u53d1\u73b0\u91cc\u9762\u7a7a\u7a7a\u5982\u4e5f\u3002</p> <p>\u540c\u65f6\uff0c\u8fd9\u4e9b\u6ce1\u6cab\u7684\u5b58\u5728\u4e5f\u4f1a\u8ba9\u522b\u4eba\u89c9\u5f97\uff0c\u65e2\u7136\u4e0d\u7f3a\u670b\u53cb\uff0c\u90a3\u4e48\u4e5f\u6ca1\u5fc5\u8981\u4e3b\u52a8\u9760\u8fd1\u4e86\u3002\u5927\u6982\u4e5f\u56e0\u4e3a\u8fd9\u79cd\u539f\u56e0\uff0c\u6211\u53ef\u80fd\u4e5f\u5931\u53bb\u4e86\u548c\u4e00\u4e9b\u4eba\u4ea4\u670b\u53cb\u7684\u673a\u4f1a\u3002\u6ce1\u6cab\u7684\u5b58\u5728\u662f\u4e00\u79cd\u9694\u79bb\uff0c\u5373\u4f7f\u5b83\u80fd\u5e26\u6765\u4e00\u70b9\u70b9\u6682\u65f6\u7684\u4fdd\u62a4\uff0c\u4f46\u662f\u6ce1\u6cab\u603b\u4f1a\u6709\u6d88\u6563\u7684\u90a3\u4e00\u5929\uff0c\u800c\u53ea\u6709\u6ce1\u6cab\u4e4b\u4e0b\u7684\u4e1c\u897f\uff0c\u624d\u7b97\u662f\u771f\u6b63\u62e5\u6709\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#34-\u81ea\u6211\u8bbe\u9650","title":"3.4 \u81ea\u6211\u8bbe\u9650","text":"<p>\u6211\u4f3c\u4e4e\u7ecf\u5e38\u5b58\u5728\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u4ee5\u4e3a\u5bf9\u65b9\u6839\u672c\u4e0d\u60f3\u6216\u8005\u4e0d\u4f1a\u548c\u81ea\u5df1\u505a\u670b\u53cb\uff0c\u56e0\u800c\u5355\u65b9\u9762\u56de\u907f\u793e\u4ea4\uff1b\u800c\u5bf9\u65b9\u5b9e\u9645\u4e0a\u6839\u672c\u6ca1\u6709\u8fd9\u6837\u7684\u60f3\u6cd5\uff0c\u5374\u56e0\u4e3a\u6211\u4eec\u7684\u56de\u907f\u800c\u5728\u548c\u6211\u4eec\u5efa\u7acb\u793e\u4ea4\u5173\u7cfb\u7684\u5c1d\u8bd5\u4e2d\u5931\u8d25\u4e86\uff0c\u56e0\u6b64\u4e0d\u518d\u5c1d\u8bd5\u548c\u6211\u4eec\u5efa\u7acb\u5173\u7cfb\uff1b\u751a\u81f3\u8ba4\u4e3a\u6211\u4eec\u8ba8\u538c\u4ed6\u4eec\u7684\u4e00\u4e9b\u7279\u8d28\uff0c\u5bfc\u81f4\u6076\u6027\u5faa\u73af\u3002</p> <p>\u6211\u81f3\u4eca\u4ecd\u7136\u5f88\u96be\u6539\u6b63\u8fd9\u79cd\u7531\u4e8e\u80e1\u601d\u4e71\u60f3\u6216\u8005\u62c5\u5fc3\u53d7\u632b\u4ece\u800c\u5c01\u95ed\u81ea\u5df1\u3001\u4e0d\u6562\u5c1d\u8bd5\u7684\u574f\u4e60\u60ef\uff0c\u65e0\u8bba\u662f\u5728\u793e\u4ea4\u8fd8\u662f\u5176\u4ed6\u65b9\u9762\u3002\u6211\u4e5f\u5728\u52aa\u529b\u63d0\u9192\u81ea\u5df1\u5c3d\u53ef\u80fd\u4e0d\u8981\u81ea\u6211\u8bbe\u9650\u2026\u2026\u4efb\u91cd\u800c\u9053\u8fdc))))</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#35-\u65e0\u610f\u8bc6\u7684\u5192\u72af","title":"3.5 \u65e0\u610f\u8bc6\u7684\u5192\u72af","text":"<p>\u6211\u4eec\u53ef\u80fd\u5e76\u6ca1\u6709\u5224\u65ad\u81ea\u5df1\u7684\u67d0\u4e9b\u884c\u4e3a\u662f\u5426\u4f1a\u6253\u6270\u522b\u4eba\u7684\u610f\u8bc6\u6216\u80fd\u529b\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6709\u65f6\u65e0\u610f\u8bc6\u5730\u6253\u6270\u6216\u8005\u5192\u72af\u5230\u4e00\u4e9b\u4eba\u3002\u800c\u51fa\u4e8e\u793e\u4ea4\u793c\u4eea\uff0c\u6216\u8005\u56e0\u4e3a\u6839\u672c\u4e0d\u592a\u719f\uff0c\u53c8\u6216\u8005\u662f\u4e3a\u4e86\u907f\u514d\u51b2\u7a81\u548c\u8bef\u89e3\uff0c\u5176\u4ed6\u4eba\u4e5f\u8bb8\u5e76\u4e0d\u4f1a\u5411\u6211\u4eec\u53cd\u9988\u8fd9\u4e9b\u5192\u72af\u3002</p> <p>\u6240\u4ee5\u5176\u5b9e\u5f88\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u544a\u8bc9\u6211\u6211\u4f1a\u5728\u54ea\u4e9b\u5730\u65b9\u8ba9\u4eba\u611f\u89c9\u4e0d\u9002 QWQ \u5982\u679c\u4e0d\u65b9\u4fbf\u76f4\u63a5\u8bf4\u7684\u8bdd\u5176\u5b9e\u4e5f\u6709\u5f88\u591a\u533f\u540d\u6e20\u9053\u7684\u2026\u2026\u6bd4\u5982 QQ \u7684\u533f\u540d\u95ee\u7b54\u4e4b\u7c7b\u7684</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#36-\u5927\u5bb6\u5bf9\u4eb2\u5bc6\u5173\u7cfb\u7684\u9700\u6c42\u76f8\u5dee\u5f88\u5927","title":"3.6 \u5927\u5bb6\u5bf9\u4eb2\u5bc6\u5173\u7cfb\u7684\u9700\u6c42\u76f8\u5dee\u5f88\u5927","text":"<p>\u7cbe\u795e\u5c42\u9762\u7684\u793e\u4ea4\u5173\u7cfb\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u4eba\u6765\u8bf4\u662f\u521a\u9700\uff1b\u4f46\u5bf9\u4e8e\u53e6\u4e00\u4e9b\u4eba\uff0c\u5728\u5927\u591a\u6570\u65f6\u5019\u4e5f\u8bb8\u5e76\u4e0d\u592a\u91cd\u8981\u3002\u8fd9\u79cd\u5dee\u522b\u7684\u5b58\u5728\u4e5f\u8bb8\u4e5f\u4f1a\u662f\u5f88\u591a\u4eba\u4e4b\u95f4\u53d1\u5c55\u793e\u4ea4\u5173\u7cfb\u7684\u963b\u788d\uff0c\u751a\u81f3\u53ef\u80fd\u4f1a\u5f15\u53d1\u5f7c\u6b64\u4e4b\u95f4\u7684\u8bef\u89e3\u3002</p> <p>\uff08\u6211\u8fd8\u662f\u633a\u7fa1\u6155\u90a3\u4e9b\u5bf9\u4eb2\u5bc6\u5173\u7cfb\u6ca1\u6709\u90a3\u4e48\u5927\u9700\u6c42\u7684\u4eba\u7684 \ud83d\udc49\ud83d\udc48 \u6211\u4f1a\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u548c\u7cbe\u529b\u53bb\u5c1d\u8bd5\u7ef4\u6301\u3001\u53d1\u5c55\u793e\u4ea4\u5173\u7cfb\uff0c\u540c\u65f6\u4e5f\u7ecf\u5e38\u56e0\u4e3a\u4eb2\u5bc6\u5173\u7cfb\u5f71\u54cd\u5230\u81ea\u5df1\u7684\u5fc3\u60c5\u3002\u6211\u5c1d\u8bd5\u63a7\u5236\uff0c\u4f46\u662f\u63a7\u5236\u4e0d\u6765QAQ\uff09</p> <p></p>"},{"location":"%E7%94%9F%E6%B4%BB/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/#4-\u5199\u4e2a\u7ed3\u5c3e","title":"4 \u5199\u4e2a\u7ed3\u5c3e","text":"<p>\u4e0a\u9762\u804a\u7684\u90a3\u4e9b\u95ee\u9898\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u89e3\u51b3\u2026\u2026\u5982\u679c\u5927\u5bb6\u6709\u89e3\u51b3\u65b9\u6848\u6216\u8005\u5efa\u8bae\u7684\u8bdd\u8bf7\u52a1\u5fc5\u6d47\u6d47\u6211\uff09\uff09\uff09</p> <p>\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u80fd\u591f\u57f9\u517b\u51fa\u4e00\u4e2a\u300c\u53ef\u4f9d\u8d56\u300d\u7684\u5173\u7cfb\uff0c\u90a3\u4e2a\u95ee\u9898\u672c\u8eab\uff0c\u6211\u4e5f\u6ca1\u80fd\u7ed9\u51fa\u4ec0\u4e48\u80af\u5b9a\u7684\u7b54\u6848\uff08\u4f46\u662f\u597d\u50cf\u597d\u591a\u4eba\u4e5f\u6ca1\u6709 XD\uff09</p> <p>\u6211\u5f88\u7f3a\u670b\u53cb\u7684\u2026\u2026\u6b22\u8fce\u627e\u6211\u73a9\u800d \ud83d\udc49\ud83d\udc48 </p> <p>\u6211\u7406\u60f3\u4e2d\u6700\u7f8e\u597d\u7684\u672a\u6765\uff0c\u9664\u4e86\u505a\u559c\u6b22\u7684\u4e8b\u3001\u6709\u57fa\u672c\u7684\u7269\u8d28\u54c1\u8d28\u548c\u8d5a\u94b1\u7684\u80fd\u529b\u4e4b\u5916\uff0c\u66f4\u91cd\u8981\u7684\u662f\u6709\u4e00\u4e2a\u300c\\(1\\) - \u53ef\u4f9d\u8d56\u300d\u7684\u4eba\u5728\u8eab\u8fb9\uff0c\u540c\u65f6\u9644\u8fd1\u4e5f\u6709\u5f88\u591a\u670b\u53cb\uff0c\u80fd\u5728\u95f2\u6687\u65f6\u95f4\u4e32\u4e32\u95e8\u3001\u505a\u505a\u996d\uff0c\u8c08\u5929\u8bf4\u5730\uff0c\u5076\u5c14\u4e00\u8d77\u51fa\u53bb\u73a9\u3002\u6211\u4e0d\u77e5\u9053\u8fd9\u6837\u7684\u672a\u6765\u6709\u591a\u5927\u53ef\u80fd\uff0c\u79bb\u6211\u53c8\u6709\u591a\u8fdc \u2014\u2014</p> <p>\u7b97\u4e86\uff0c\u5c31\u5f53\u505a\u662f\u4e2a\u9065\u8fdc\u7684\u68a6\u5427QWQ</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%92%B8%E9%B1%BC%E6%9A%84%E4%BB%8A%E5%A4%A9%E5%90%83%E4%BB%80%E4%B9%88/","title":"\u54b8\u9c7c\u6684\u4eca\u5929\u5403\u4ec0\u4e48","text":"<p> \u7ea6 21 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u603b\u662f\u4e0d\u77e5\u9053\u5403\u4ec0\u4e48\u2026\u2026\u600e\u4e48\u529e\u5462</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/","title":"\u56de\u987e\u5728\u4fe1\u5b89\u7684\u4e09\u5e74","text":"<p> \u7ea6 8940 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 30 \u5206\u949f</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u56de\u987e\u5728\u4fe1\u5b89\u7684\u4e09\u5e74","title":"\u56de\u987e\u5728\u4fe1\u5b89\u7684\u4e09\u5e74","text":"<p>Abstract</p> <p>\u4ffa\u53eb\u54b8\u9c7c\u6684\uff01ZJU 19 \u7ea7\u4fe1\u606f\u5b89\u5168\u672c\u79d1\u751f\uff01</p> <p>\u5199\u8fd9\u7bc7\u603b\u7ed3\uff0c\u6700\u6838\u5fc3\u7684\u76ee\u6807\u662f\u7ed9\u81ea\u5df1\u770b\ud83d\ude0b \u540c\u65f6\uff0c\u6211\u4e5f\u5e0c\u671b\u80fd\u63d0\u4f9b\u4e00\u70b9\u70b9\u8fd9\u6837\u7684\u529f\u80fd\uff1a</p> <ul> <li>\u8ba9\u6709\u5174\u8da3\u7684\u540c\u5b66\u4e86\u89e3\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u5b66\u4ec0\u4e48\uff08\u8bfe\u7a0b\u540d\u6807\u6ce8 \u25b2 \u7684\u662f\u4fe1\u5b89\u4e13\u5c5e\u8bfe\u7a0b~\uff09\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e9b\u53ef\u4ee5\u53c2\u8003\u7684\u8d44\u6599</li> <li>\u5206\u4eab\u6211\u8ba4\u4e3a\u6211\u4eec\u7684\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u7684\u5229\u5f0a\uff0c\u4f9b\u9700\u8981\u9009\u4e13\u4e1a\u7684\u540c\u5b66\u53c2\u8003</li> <li>\u5206\u4eab\u6211\u8ba4\u4e3a\u76ee\u524d\u8ba1\u7b97\u673a\u76f8\u5173\u672c\u79d1\u6559\u5b66\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u4ee5\u53ca\u6211\u60f3\u505a\u7684\u52aa\u529b\uff08\u6253\u6253\u5e7f\u544a\u2014\u2014\uff09</li> </ul> <p>\u672c\u6587\u603b\u5b57\u6570\u4e0d\u5230\u4e00\u4e07\u5b57\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u8981\u770b\u591a\u4e45\u3002</p> <p>\u201c\u90fd\u8bf4\u6761\u6761\u5927\u8def\u901a\u7f57\u9a6c\uff0c\u53ef\u662f\u6211\u4e0d\u60f3\u53bb\u7f57\u9a6c\u3002\u201d</p> <p>2022 \u5e74 7 \u6708 5 \u65e5\u51cc\u6668\uff0c\u6700\u540e\u4e00\u95e8\u4e13\u4e1a\u5fc5\u4fee\u8bfe\u7684\u6210\u7ee9\u51fa\u6765\u4e86\uff0c\u6211\u53ef\u4ee5\u53bb\u5408\u5723\u9057\u7269\u4e86  \u6211\u5728\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u4e3b\u8981\u7684\u4e09\u5e74\u5927\u6982\u5c31\u7ed3\u675f\u4e86\ud83e\udd14\u8bf4\u8d77\u6765\uff0c\u8fd9\u4e09\u5e74\u6bd4\u8f83\u8ff7\u832b\uff0c\u6ca1\u6709\u50cf\u5f88\u591a\u4eba\u90a3\u6837\u53bb\u8fdb\u4e2a\u5b9e\u9a8c\u5ba4\u6216\u8005\u641e\u4e2a\u79d1\u7814\u4e4b\u7c7b\u7684\u3002\u4f46\u662f\u65e0\u8bba\u5982\u4f55\uff0c\u8fd8\u662f\u503c\u5f97\u56de\u987e\u4e00\u4e0b\u7684\u5566\uff01 \u56de\u987e\u7684\u540c\u65f6\uff0c\u4e5f\u60f3\u7b80\u5355~\u9510\u8bc4~\u4ecb\u7ecd\u4e00\u4e0b\u4e00\u4e9b\u8bfe\u7a0b\uff1b\u96be\u514d\u4f1a\u5e26\u4e00\u4e9b\u4e2a\u4eba\u7684\u504f\u89c1\ud83e\udd27\u4e07\u4e00\u6709\u4eba\u4f1a\u770b\u7684\u8bdd\u56fe\u4e00\u4e50\u5c31\u597d\u5566QWQ \u5982\u679c\u80fd\u591f\u8ba9\u540e\u6765\u7684\u5c0f\u670b\u53cb\u5927\u6982\u770b\u770b\u4fe1\u5b89\u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u4e5f\u7b97\u662f\u6709\u70b9\u7528\u5904\u5566~\uff08\u4e0d\u8fc7\u5176\u5b9e\u4e3b\u8981\u8fd8\u662f\u5199\u7ed9\u81ea\u5df1\u770b\u7684\ud83d\ude18\uff09</p> <p>\u53e6\u5916\uff0c\u8fd9\u91cc\u4e5f\u6709\u6211\u9009\u8fc7\u7684\u6240\u6709\u8bfe\u7a0b\u548c\u5bf9\u5e94\u7684\u8001\u5e08\uff0c\u5982\u679c\u5e0c\u671b\u4e86\u89e3\u67d0\u95e8\u8bfe\u4e5f\u6b22\u8fce\u6765\u95eeqwq</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u628a\u603b\u7ed3\u5199\u5230\u524d\u9762\u5427","title":"\u628a\u603b\u7ed3\u5199\u5230\u524d\u9762\u5427","text":""},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u5173\u4e8e\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a","title":"\u5173\u4e8e\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a","text":"<p>\u5728\u5927\u4e00\u6211\u6000\u7740\u8ff7\u832b\u8fdb\u5165\u4e86\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\uff0c\u5728\u5927\u4e8c\u7684\u65f6\u5019\u6211\u5bf9\u8fd9\u4e2a\u4e13\u4e1a\u4ea7\u751f\u4e86\u79cd\u79cd\u8d1f\u9762\u8bc4\u4ef7\u548c\u60c5\u7eea\uff0c\u4f46\u662f\u5728\u5927\u4e09\u6211\u53c8\u4f53\u4f1a\u5230\u4e86\u8fd9\u4e2a\u4e13\u4e1a\u7684\u4f18\u52bf\u3002</p> <p>\u5728\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\uff0c\u6700\u96be\u8fc7\u7684\u4e00\u70b9\u5c31\u662f  \u4fdd\u7814\u6709\u65f6\u8fc7\u4e8e\u56f0\u96be \uff08\u5728\u5927\u4e09\u4e0a\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u6211\u7684\u5747\u7ee9\u662f 4.50\uff0c\u4f46\u662f\u53ea\u80fd\u6392\u5728 20%\uff0c\u5927\u6982\u5c31\u662f\u4fdd\u7814\u540d\u989d\u7684\u6700\u540e\u4e00\u540d\uff1b\u4f46\u662f\u5982\u679c\u5728\u8ba1\u79d1\uff0c\u5927\u6982\u80fd\u6392\u5728 13%\uff09\u2014\u2014\u6211\u89c9\u5f97\u8fd9\u5927\u6982\u662f\u4e00\u4e2a\u968f\u673a\u5bfc\u81f4\u7684\u4e8b\u4ef6\uff1a\u7531\u4e8e\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u7684\u4eba\u592a\u5c11\uff0c\u51fa\u73b0\u5389\u5bb3\u540c\u5b66\u7684\u9891\u7387\u5c31\u4e0d\u662f\u90a3\u4e48\u7b26\u5408\u671f\u671b\u4e86\uff1b\u800c\u8ba1\u79d1\u90a3\u8fb9\u4eba\u5f88\u591a\uff0c\u51e0\u4f4d\u795e\u4ed9\u4e0d\u4f1a\u592a\u5f71\u54cd\u6700\u540e\u7684\u4fdd\u7814\u7ee9\u70b9\u3002\u800c\u4e14\uff0c\u51fa\u4e8e\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0c\u4fe1\u5b89\u4e13\u4e1a\u9009\u62e9\u51fa\u56fd\u7684\u540c\u5b66\u6bd4\u4f8b\u5e94\u8be5\u6bd4\u8ba1\u79d1\u5c11\u4e0d\u5c11\u3002\u5728\u8ba1\u79d1\u90a3\u8fb9\u6392\u540d\u9760\u524d\u7684\u540c\u5b66\u9009\u62e9\u51fa\u56fd\u5c31\u4f1a\u4e3a\u540e\u9762\u7684\u540c\u5b66\u8ba9\u51fa\u4fdd\u7814\u540d\u989d\uff1b\u800c\u4fe1\u5b89\u8fd9\u8fb9\u4e00\u65b9\u9762\u51fa\u56fd\u540c\u5b66\u5c11\uff0c\u53e6\u4e00\u65b9\u9762\u7531\u4e8e\u524d\u8ff0\u7684\u539f\u56e0\uff0c\u9009\u62e9\u51fa\u56fd\u7684\u540c\u5b66\u5e76\u4e0d\u90fd\u4f1a\u4ed8\u51fa\u5927\u91cf\u7cbe\u529b\u6765\u628a GPA \u5f04\u5230 4.5+\uff0c\u56e0\u6b64\u4f3c\u4e4e\u4e5f\u5e76\u4e0d\u80fd\u591f\u989d\u5916\u7559\u51fa\u540d\u989d\u3002</p> <p>\u540c\u65f6\uff0c\u7531\u4e8e\u5927\u4e09\u4e0b\u5b66\u671f\u6709\u6d3b\u6d3b 5 \u95e8\u4e13\u4e1a\u5fc5\u4fee\u8bfe\uff0c\u56e0\u6b64  \u5927\u4e09\u4e0b\u5b66\u671f\u5f88\u96be\u51fa\u53bb\u5b9e\u4e60 \uff0c\u8fd9\u5bf9\u4e8e\u5e0c\u671b\u5b9e\u4e60\u6216\u8005\u5c31\u4e1a\u7684\u540c\u5b66\u6765\u8bf4\u53ef\u80fd\u4e5f\u4f1a\u5e26\u6765\u56f0\u6270\u3002</p> <p>\u5728\u5927\u4e8c\u548c\u5927\u4e09\u5f00\u59cb\uff0c\u6211\u751a\u81f3\u4f1a\u6839\u636e\u4e0a\u8ff0\u4e24\u70b9 \u529d\u9000 \u544a\u8beb\u60f3\u8981\u9009\u62e9\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u7684\u540c\u5b66\uff1b\u4f46\u662f\u7ecf\u8fc7\u5927\u4e09\u4e00\u5e74\uff0c\u6211\u7a81\u7136\u53d1\u73b0\u4e86\u4fe1\u5b89\u7684\u7f8e\u597d\uff01\u76f8\u8f83\u4e8e\u8ba1\u9662\u5f88\u591a\u4f20\u7edf\u8bfe\u7a0b\u5b58\u5728\u7684 \u5927\u672c\u949f\u4e0b\u9001\u5feb\u9012 \u4e0a\u9762\u5f00\u6446\u4e0b\u9762\u5bc4 \u7684\u60b2\u60e8\u72b6\u51b5\uff0c\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u5f15\u5165\u7684\u65b0\u8bfe\u7a0b\u5927\u591a\u6bd4\u8f83  \u8212\u9002\u3001\u9ad8\u8d28\u91cf\u548c\u73b0\u4ee3\u5316  \u2014\u2014\u4e3b\u8981\u662f\u56e0\u4e3a\u8001\u5e08\u90fd\u6bd4\u8f83\u5e74\u8f7b\uff0c\u66f4\u52a0\u70ed\u60c5\u8d1f\u8d23\uff0c\u613f\u610f\u548c\u540c\u5b66\u4eec\u8ba8\u8bba\uff1b\u8bfe\u7a0b\u4e5f\u5927\u591a\u4e0d\u50cf\u8ba1\u9662\u7ecf\u5178\u8bfe\u7a0b\u90a3\u6837\u6709\u8001\u672c\u53ef\u4ee5\u5543\uff1b\u52a9\u6559\u914d\u5907\u4e5f\u6bd4\u8f83\u4e30\u5bcc\u548c\u4e13\u4e1a\u3002\u867d\u7136\u5c0f\u767d\u8001\u5e08\u7684\u6c47\u7f16\u8bed\u8a00\u548c\u5bc6\u7801\u5b66\u5728\u5927\u4e00\u5927\u4e8c\u5b8c\u5168\u6467\u6bc1\u4e86\u6211\u5bf9\u4fe1\u606f\u5b89\u5168\u7684\u5174\u8da3\uff0c\u4f46\u662f\u5927\u4e09\u7684\u51e0\u95e8\u5b89\u5168\u8bfe\u8ba9\u6211\u91cd\u5efa\u4e86\u5bf9\u5b89\u5168\u7684\u7406\u89e3\u548c\u4e00\u70b9\u70b9\u7231\u597d\uff01 \u53e6\u5916\u6839\u636e\u6211\u7684\u89c2\u5bdf\uff0c\u5982\u679c\u53ea\u662f\u4ee5\u901a\u8fc7\u4e3a\u76ee\u6807\uff0c\u4fe1\u5b89\u76f8\u5173\u7684\u8bfe\u7a0b\u6bd4\u4f20\u7edf\u8ba1\u7b97\u673a\u8bfe\u7a0b\u4f3c\u4e4e\u66f4\u5bb9\u6613\u901a\u8fc7\uff0c\u540c\u65f6\u80fd\u591f\u5b66\u5230\u66f4\u591a\u7684\u5185\u5bb9\u3002\u4e0d\u8fc7\uff0c\u8bf8\u5982\u8f6f\u4ef6\u5b89\u5168\u3001\u7cfb\u7edf\u5b89\u5168\u8fd9\u6837\u7684\u8bfe\u7a0b\uff0c\u786e\u5b9e\u9700\u8981\u4e00\u5b9a\u7684\u601d\u8003\u3001\u4ea4\u6d41\u548c\u201c\u7075\u5149\u4e00\u73b0\u201d\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u96be\u5ea6\u548c\u542b\u91d1\u91cf\u4e5f\u4f1a\u6bd4\u4f20\u7edf\u8ba1\u7b97\u673a\u8bfe\u7a0b\u9ad8\u4e00\u4e9b\u3002</p> <p>\u53e6\u5916\u503c\u5f97\u63d0\u53ca\u7684\u4e00\u70b9\u662f  \u57f9\u517b\u65b9\u6848\u7684\u53d8\u5316 \u3002\u4ece 18 \u7ea7\u5230 19 \u7ea7\uff0c\u57f9\u517b\u65b9\u6848\u53d8\u5f97\u66f4\u4e0d\u50cf\u8ba1\u79d1\uff0c\u8bfe\u7a0b\u6709\u4e86\u4e00\u756a\u66f4\u65b0\uff0c\u6a21\u5757\u8bfe\u4e5f\u5168\u90e8\u53d8\u6210\u4e86\u4fe1\u606f\u5b89\u5168\u7684\u5f62\u72b6\uff1b\u4ece 19 \u7ea7\u5230 20 \u7ea7\uff0c\u8ba1\u7b97\u673a\u7cfb\u7edf I ~ III \u6a2a\u7a7a\u51fa\u4e16\uff0c\u8ba9\u4eba\u975e\u5e38\u7fa1\u6155\ud83e\udd75\u300221 \u7ea7\u5f00\u59cb\u4f3c\u4e4e\u5c31\u6ca1\u6709\u5185\u5bb9\u4e0a\u7684\u53d8\u5316\u4e86\u3002\u5927\u6982\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u7ecf\u8fc7\u8fd9\u51e0\u4ee3\u5c0f\u767d\u9f20\u7684\u5c1d\u8bd5\ud83d\ude0b\u57f9\u517b\u65b9\u6848\u5927\u6982\u80fd\u591f\u7a33\u5b9a\u4e0b\u6765\u4e86\uff0c\u800c\u8fd9\u4e9b\u8bfe\u7a0b\u7684\u8d28\u91cf\u4f3c\u4e4e\u4e5f\u6bd4\u4f20\u7edf\u8ba1\u7b97\u673a\u8bfe\u7a0b\u7684\u5927\u591a\u6570\u6559\u5b66\u73ed\u9ad8\u4e0d\u5c11\ud83d\ude1c</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u8fd9\u4e09\u5e74\u5b66\u4e60\u4e2d\u8ba9\u6211\u611f\u5230\u96be\u8fc7\u7684\u5730\u65b9\u4ee5\u53ca\u60f3\u505a\u7684\u52aa\u529b","title":"\u8fd9\u4e09\u5e74\u5b66\u4e60\u4e2d\u8ba9\u6211\u611f\u5230\u96be\u8fc7\u7684\u5730\u65b9\uff0c\u4ee5\u53ca\u60f3\u505a\u7684\u52aa\u529b","text":"<p>\u9884\u8b66\uff1a\u8fd9\u90e8\u5206\u6709\u5e7f\u544a\ud83e\udd2b</p> <p>\u603b\u7ed3\u6765\u8bf4\uff0c\u5927\u90e8\u5206\u7684\u8bfe\u6211\u662f\u559c\u6b22\u5543\u4e66\u3001\u770b PPT \u81ea\u5b66\u800c\u4e0d\u662f\u542c\u8bfe\u7684\uff0c\u6240\u4ee5\u5728\u8282\u7701\u4e86\u4e00\u4e9b\u65f6\u95f4\u7684\u540c\u65f6\u4e5f\u9519\u8fc7\u4e86\u5f88\u591a\u6709\u8da3\u7684\u77e5\u8bc6\u3002\u8fd9\u4e5f\u662f\u6211\u8ba4\u4e3a\u81ea\u5df1\u4e0d\u600e\u4e48\u5377\u4e5f\u4e0d\u662f\u600e\u4e48\u6446\u7684\u539f\u56e0\u2014\u2014\u9664\u4e86\u771f\u6b63\u6709\u5174\u8da3\u7684\u5185\u5bb9\u4e4b\u5916\uff0c\u5b66\u7684\u5176\u5b9e\u90fd\u6bd4\u8f83\u5c11qwq</p> <p>\u8fd9\u51e0\u5e74\u4e2d\uff0c\u8ba9\u6211\u6700\u8ff7\u832b\u7684\u662f\uff1a\u5927\u5bb6\u90fd\u5728\u544a\u8bc9\u6211\u53ef\u4ee5\u53bb\u505a SRTP\u3001\u53ef\u4ee5\u65e9\u70b9\u8fdb\u5b9e\u9a8c\u5ba4\u3002\u4f46\u662f\uff0c\u81f3\u4eca\u6ca1\u6709\u4eba\u7ed9\u6211\u8bb2\u8fc7\u5177\u4f53\u7684\u7814\u7a76\u6709\u54ea\u4e9b \u65b9\u5411 \uff08\u6bd4\u5982\u4ece\u6765\u6ca1\u6709\u4eba\u544a\u8bc9\u8fc7\u6211\u53ef\u4ee5\u53bb\u7814\u7a76 NLP \u6216\u8005\u7f16\u7a0b\u8bed\u8a00\u6216\u8005\u4ec0\u4e48\u5176\u4ed6\u7684\u4e1c\u897f\uff09\uff0c\u8fd9\u4e2a\u65b9\u5411\u5728\u5e72\u4ec0\u4e48\u3001\u5e94\u8be5\u5b66\u4ec0\u4e48\u3001\u600e\u4e48\u5b66\uff08\u4e0d\u7136\u6211\u4eec\u5982\u4f55\u5224\u65ad\u8fd9\u4e2a\u65b9\u5411\u9002\u4e0d\u9002\u5408\u81ea\u5df1\u5462\uff1f\uff09\uff1b\u4f46\u662f\u6211\u8ba4\u4e3a\u8fd9\u4e9b\u662f\u5927\u4e00\u6216\u8005\u5927\u4e8c\u7684\u65f6\u5019\u5c31\u7406\u5e94\u88ab\u544a\u77e5\u7684\u4e1c\u897f\uff08\u4e0d\u7136\u6211\u4eec\u5982\u4f55\u9009\u62e9 SRTP\u3001\u5b9e\u9a8c\u5ba4\u548c\u6bd5\u8bbe\u7684\u65b9\u5411\u5462\uff1f\uff09\u3002</p> <p>\u540c\u65f6\uff0c\u7531\u4e8e\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0cC \u5c0f\u7a0b\u3001\u5927\u7a0b\u8fd9\u79cd\u57fa\u7840\u8bfe\u4ee5\u53ca\u4f20\u7edf\u8ba1\u7b97\u673a\u8bfe\u7a0b\u7684\u5927\u90e8\u5206\u6559\u5b66\u73ed\u7684 \u6559\u5b66\u8d28\u91cf\u76f8\u5f53\u6709\u5f85\u63d0\u9ad8 \u3002\u5c0f\u89d2\u9f99\u5b66\u957f (@Zhang-Each) \u5728\u53bb\u5e74\u4e5f\u5206\u4eab\u8fc7\u4e00\u4e9b \u5bf9\u8f6f\u5de5\u672c\u79d1\u6559\u5b66\u7684\u5efa\u8bae\uff0c\u5176\u4e2d\u4e5f\u6db5\u76d6\u4e86\u524d\u8ff0\u7684\u5927\u591a\u6570\u8bfe\u7a0b\uff1b\u867d\u7136\u4ee5\u6570\u636e\u5e93\u7cfb\u7edf\u4e3a\u4f8b\u7684\u90e8\u5206\u8bfe\u7a0b\u6709\u6240\u6539\u5584\uff0c\u4f46\u662f\u5927\u591a\u6570\u8bfe\u7a0b\u4ecd\u7136\u201c\u975e\u5e38\u9057\u61be\u201d\u3002\u6240\u4ee5\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u8ba4\u4e3a\u8fd9\u4e9b\u8bfe\u7a0b\u7684\u9057\u61be\u73b0\u72b6\u76f8\u5f53\u7a0b\u5ea6\u4e0a\u6765\u81ea\u4e8e\u5236\u5ea6\u548c\u90e8\u5206\u8001\u5e08\uff0c\u800c \u8fd9\u662f\u6211\u4eec\u96be\u4ee5\u52a8\u6447\u7684 \u3002</p> <p>\u6211\u8ba4\u4e3a\uff0c\u4e0a\u8ff0\u95ee\u9898\u80fd\u591f\u5212\u5f52\u5230\u5982\u4e0b\u51e0\u7c7b\uff1a</p> <ol> <li>\u90e8\u5206\u8bfe\u7a0b\u5185\u5bb9\u548c/\u6216\u8003\u6838\u8303\u56f4\u3001\u65b9\u5f0f\u4e0d\u5408\u7406\uff08\u70b9\u540d C \u5c0f\u7a0b\uff09</li> <li>\u90e8\u5206\u6559\u5b66\u73ed\u57fa\u7840\u7f16\u7a0b\u80fd\u529b\u57f9\u517b\u4e0d\u5230\u4f4d\uff08\u518d\u70b9\u540d C \u5c0f\u7a0b\uff09</li> <li>\u90e8\u5206\u8bfe\u7a0b\u7684 PPT \u5185\u5bb9\u6c34\u5e73\u4ee5\u53ca\u90e8\u5206\u6559\u5b66\u73ed\u914d\u5907\u7684 PPT \u6717\u8bfb\u4e13\u5458\u6c34\u5e73\u6709\u5f85\u63d0\u9ad8</li> <li>\u90e8\u5206\u8bfe\u7a0b\u7684\u5b9e\u9a8c\u8bbe\u7f6e\u8fc7\u4e8e\u53e4\u8272\u53e4\u9999</li> <li>\u5173\u4e8e\u79d1\u7814\u7684\u8bfe\u5916\u5f15\u5bfc\u7d27\u7f3a</li> </ol> <p>\u6839\u636e\u521a\u624d\u5bf9\u9057\u61be\u7684\u8ba8\u8bba\uff0c\u8fd9\u91cc\u7b2c 1 \u70b9\u5f88\u96be\u6539\u5584\uff0c\u4f46\u662f\u540e\u9762\u56db\u7c7b\u4f3c\u4e4e\u90fd\u6709\u6539\u5584\u7684\u65b9\u6cd5\u3002</p> <p>\u5173\u4e8e\u7b2c 4 \u70b9\uff0cCS \u81ea\u5b66\u6307\u5357\u3001 \u540d\u6821\u516c\u5f00\u8bfe\u7a0b\u8bc4\u4ef7\u7f51\u7b49\u516c\u5f00\u8bfe\u9009\u62e9\u6307\u5357\u63d0\u4f9b\u4e86\u4e0d\u9519\u7684\u89e3\u51b3\u65b9\u6848\uff01\u5b66\u8fd9\u4e9b\u8bfe\u7a0b\u80fd\u591f\u52a0\u5f3a\u5bf9\u76f8\u5e94\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u5e76\u4e14\u53ef\u4ee5\u63a5\u89e6\u56fd\u5185\u5916\u5148\u8fdb\u7684\u5b9e\u9a8c\u8bbe\u8ba1\uff0c\u800c\u4e14\u4f3c\u4e4e\u8fd8\u80fd\u4e3a\u5efa\u7acb\u589e\u5149\u6dfb\u5f69\uff08\u4e0d\u8fc7\u6211\u56e0\u4e3a\u61d2\u51e0\u4e4e\u6ca1\u5b66\u8fc7\ud83d\ude14\uff09\u3002\u4f46\u662f\uff0c\u8fd9\u4ecd\u7136\u4e0d\u5b8c\u5168\u80fd\u591f\u89e3\u51b3\u7b2c 3 \u70b9\u2014\u2014\u9664\u975e\u4f60\u662f\u771f\u6b63\u7684\u5f3a\u8005\uff0c\u53ea\u8ffd\u6c42\u77e5\u8bc6\u4e0d\u7ba1\u7ee9\u70b9\uff01</p> <p>\u5173\u4e8e\u7b2c 3 \u70b9\uff0c\u5728\u5927\u4e8c\u5f00\u59cb\uff0c\u6211\u5e0c\u671b\u901a\u8fc7\u5728 \u73a9\u7535\u8111\u5927\u5e08\uff01\u00b7 \u54b8\u9c7c\u6684 insr \u8bb0\u7b14\u8bb0\u5e76\u5171\u4eab \u7684\u65b9\u5f0f\u6765\u5e2e\u52a9\u5927\u5bb6\u5b66\u4e60\u90e8\u5206\u8bfe\u7a0b\uff0c\u4f3c\u4e4e\u4e5f\u5e2e\u5230\u4e86\u4e00\u4e9b\u540c\u5b66\ud83d\ude18\uff1a</p> <p></p> <p>\u6162\u6162\u5730\uff0c\u6211\u53d1\u73b0\u5468\u56f4\u613f\u610f\u5728\u8bed\u96c0\u8bb0\u7b14\u8bb0\u7684\u540c\u5b66\u53d8\u5f97\u591a\u4e86\u8d77\u6765\uff1b\u4f46\u662f\u8bed\u96c0\u672c\u8eab\u793e\u533a\u5c5e\u6027\u6bd4\u8f83\u5f31\uff0c\u4e8e\u662f\u5728\u4e24\u4e2a\u6708\u4e4b\u524d\uff0c\u6211\u548c @27rabbitlt \u3001@IsshikiHugh \u4e00\u8d77\u6512\u8d77\u4e86 \u54b8\u9c7c\u8086 | \u77e5\u8bc6\u751f\u6d3b\u5206\u4eab\u5708 \uff08\u6b22\u8fce\u5927\u5bb6\u52a0\u5165\uff01\uff09 \uff0c\u5e0c\u671b\u901a\u8fc7\u8ba9\u5927\u5bb6\u7559\u4e0b\u81ea\u5df1\u7684\u7b80\u4ecb\u548c\u535a\u5ba2\u5730\u5740\uff08\u4e0d\u4e00\u5b9a\u662f\u8bed\u96c0\uff09\u7684\u65b9\u5f0f\u6765 \u589e\u5f3a\u5927\u5bb6\u7684\u4e92\u52a8\u548c\u4e92\u76f8\u5b66\u4e60 \uff1a</p> <p></p> <p>\u4e3a\u4e86\u8fdb\u4e00\u6b65\u6539\u5584\u524d\u8ff0\u7b2c 3 \u70b9\u7684\u95ee\u9898\uff0c\u5927\u5bb6\u4e5f\u5728 \ud83d\udcd4 \u8bfe\u7a0b\u8d44\u6e90\u7d22\u5f15 \u5206\u4eab\u51fa\u4e86\u81ea\u5df1 \u6cdb\u8ba1\u7b97\u673a\u76f8\u5173\u8bfe\u7a0b\u7684\u7b14\u8bb0\u94fe\u63a5 \uff0c\u4ece\u800c\u80fd\u591f\u589e\u5f3a\u4e92\u76f8\u7684\u53c2\u8003\u4ea4\u6d41\u3002\u4ee5 ADS \u4e3a\u4f8b\uff08\u56e0\u4e3a\u8fd9\u4e2a\u6700\u591a\ud83d\ude1d\uff09\uff1a</p> <p> \uff08\u8bfe\u7a0b\u8d44\u6e90\u7d22\u5f15\u7684\u6838\u5fc3\u76ee\u6807\u662f\u5206\u4eab\u7528\u6765\u5b66\u4e60\u7684 \u7b14\u8bb0 \u800c\u4e0d\u662f\u6587\u4ef6\u8d44\u6599\u3002\u6b22\u8fce\u6709\u5174\u8da3\u7684\u524d\u8f88\u5206\u4eab\u81ea\u5df1\u7684\u7b14\u8bb0QWQ\uff01\uff09 \u4e0d\u8fc7\uff0c\u8bfe\u7a0b\u8d44\u6e90\u7d22\u5f15\u76ee\u524d\u4e3b\u8981\u90fd\u662f\u8bfe\u7a0b\u7b14\u8bb0\uff0c\u800c\u6bd4\u8f83\u7a0d\u6709\u4e4b\u524d\u6240\u8bf4\u56fd\u5185\u5916\u4f18\u8d28\u516c\u5f00\u8bfe\u7684\u5b66\u4e60\u7b14\u8bb0\u3002\u5982\u679c\u80fd\u591f\u6536\u96c6\u5230\u8fd9\u4e9b\u7b14\u8bb0\uff0c\u4e5f\u8bb8\u80fd\u591f\u63d0\u4f9b\u66f4\u5927\u7684\u5e2e\u52a9 QWQ\uff01</p> <p>\u540c\u65f6\uff0c \u54b8\u9c7c\u8086 | \u77e5\u8bc6\u751f\u6d3b\u5206\u4eab\u5708 \u8fd8\u901a\u8fc7 \u5468\u62a5 \u7684\u65b9\u5f0f\u589e\u5f3a\u4e92\u52a8\uff0c\u5206\u4eab\u5927\u5bb6\u559c\u95fb\u4e50\u89c1\u7684 \u77e5\u8bc6\u6216\u8005\u79d1\u666e\u5185\u5bb9 \uff1a</p> <p></p> <p>\u5173\u4e8e\u7b2c 2 \u70b9\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u4e00\u671f\u4e13\u9898\u5468\u62a5\u6536\u96c6\u4e00\u4e9b\u597d\u8d44\u6599\u548c\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u800c\u4e3a\u4e86\u89e3\u51b3\u7b2c 5 \u70b9\u7684\u95ee\u9898\uff0c\u54b8\u9c7c\u8086\u5c1d\u8bd5\u5728\u6691\u5047\u5f00\u59cb\u6536\u96c6\u6574\u7406\u6cdb\u8ba1\u7b97\u673a\u76f8\u5173\u7684 \u79d1\u7814\u65b9\u5411\u548c\u5de5\u4f5c\u5c97\u4f4d\u65b9\u5411\u7684\u5217\u8868 \u3002\u5982\u679c\u65f6\u95f4\u548c\u8d44\u6e90\u5141\u8bb8\uff0c\u5728\u672a\u6765\u8fd8\u4f1a\u8003\u8651\u6536\u96c6\u8fd9\u4e9b\u65b9\u5411\u8fdb\u4e00\u6b65\u7684 \u4ecb\u7ecd\u3001\u5b66\u4e60\u8def\u5f84\u4ee5\u53ca\u5b66\u4e60\u8d44\u6599 \u3002</p> <p>\u5173\u4e8e\u8fd9\u4e24\u4e2a\u5185\u5bb9\uff0c \u5982\u679c\u6709\u524d\u8f88\u613f\u610f\u5206\u4eab\u76f8\u5173\u5fc3\u5f97\uff0c\u4e5f\u6b22\u8fce\u52a0\u5165\u6216\u8054\u7cfb\u6211\u4eec \ud83e\udd24\uff01</p> <p>\u4e0b\u9762\u5c31\u662f\u6309\u7167\u65f6\u95f4\u7684\u56de\u987e\u548c\u603b\u7ed3\u5566\uff01</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u5927\u4e00\u4e0a--\u6211\u6765\u5230\u4e86\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a","title":"\u5927\u4e00\u4e0a  \u6211\u6765\u5230\u4e86\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a","text":""},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u4e3b\u4fee\u4e13\u4e1a\u786e\u8ba4","title":"\u4e3b\u4fee\u4e13\u4e1a\u786e\u8ba4","text":"<p>\u4e3b\u4fee\u4e13\u4e1a\u786e\u8ba4\u6765\u5f97\u592a\u8fc7\u5306\u5fd9\uff0c\u5f53\u6211\u4eec\u5bf9\u4e13\u4e1a\u51e0\u4e4e\u4e00\u65e0\u6240\u77e5\u7684\u65f6\u5019\u5c31\u4e0d\u5f97\u4e0d\u505a\u51fa\u9009\u62e9\u3002\u597d\u5728\uff0c\u9ad8\u4e2d\u65f6\u6211\u5c31\u5df2\u7ecf\u786e\u4fe1\u4e86\u81ea\u5df1\u5bf9\u7f16\u7a0b\u7684\u5174\u8da3\uff0c\u4e5f\u5c31\u5212\u5b9a\u4e86\u6700\u521d\u7684\u8303\u56f4\uff1a\u8ba1\u79d1 / \u8f6f\u5de5 / \u4fe1\u5b89\u3002 \u5176\u5b9e\u5728\u786e\u8ba4\u4e13\u4e1a\u7684\u65f6\u5019\uff0c\u6211\u51c6\u5907\u4e86\u4e24\u4efd\u6750\u6599\uff0c\u5206\u522b\u662f\u8ba1\u79d1\u548c\u4fe1\u5b89\u7684\uff1b\u6ca1\u9009\u62e9\u8f6f\u5de5\u662f\u56e0\u4e3a\u5b66\u8d39\u8d35\u3002\u6700\u7ec8\u6211\u9009\u62e9\u4e86\u4fe1\u5b89\uff0c\u662f\u56e0\u4e3a\u5bb3\u6015\u5728\u8ba1\u79d1\u6fc0\u70c8\u7684\u7ade\u4e89\u4e2d\u88ab\u5237\u6389\u3002</p> <p></p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u6700\u521d\u7684\u5370\u8c61","title":"\u6700\u521d\u7684\u5370\u8c61","text":"<p>\u6765\u5230\u4fe1\u5b89\u540e\uff0c\u73ed\u91cc\u7684\u5927\u5bb6\u4e5f\u5c31\u6210\u4e3a\u4e86\u7f51\u53cb\u3002\u7531\u4e8e\u4e13\u4e1a\u4eba\u6bd4\u8f83\u5c11\uff0c\u53ea\u6709\u4e8c\u5341\u6765\u4e2a\uff0c\u6240\u4ee5\u7fa4\u91cc\u7684\u6c1b\u56f4\u4f3c\u4e4e\u4e5f\u6bd4\u8ba1\u79d1\u90a3\u8fb9\u8981\u5bc6\u5207\u4e00\u4e9b\u3002\u6211\u597d\u50cf\u4e00\u76f4\u90fd\u662f\u7fa4\u91cc\u6700\u5927\u7684\u6c34\u602a\u2014\u2014\u4e5f\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u7ed9\u4eba\u5e26\u6765\u8fc7\u56f0\u6270 QWQ</p> <p></p> <p>\u8fd9\u4e5f\u662f\u6211\u5bf9\u4fe1\u5b89\u6700\u521d\u7684\u5370\u8c61\u2014\u2014\u5927\u5bb6\u90fd\u5f88\u597d\u73a9\uff0c\u4e5f\u6ca1\u6709\u50cf\u5ba4\u53cb\u7684\u8ba1\u79d1\u73ed\u7fa4\u90a3\u6837\u6b7b\u6c14\u6c89\u6c89 (x) \u4e0d\u8fc7\u5f53\u65f6\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u662f\uff0c\u8fd9\u4e5f\u8bb8\u53ea\u662f\u4e2a\u4f53\u5dee\u5f02\ud83e\udd12\u5c31\u50cf\u4e4b\u540e\u66f4\u591a\u7684\u201c\u4e2a\u4f53\u5dee\u5f02\u201d\u5e26\u6765\u7684\u56f0\u6270\u4e00\u6837\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u7b2c\u4e00\u4e2a\u5b66\u671f\u6709\u70b9\u8ff7\u832b","title":"\u7b2c\u4e00\u4e2a\u5b66\u671f\uff0c\u6709\u70b9\u8ff7\u832b","text":"<p>\u5927\u4e00\u4e0a\u5b66\u671f\u6ca1\u4e0a\u4ec0\u4e48\u6709\u4ef7\u503c\u7684\u8bfe\uff0c\u9009\u7684\u8bfe\u5f88\u5c11\u3001\u6ca1\u6709\u4eba\u4e00\u8d77\u5b66\u4e5f\u6ca1\u6709\u4eba\u5e26\uff0c\u5bfc\u81f4\u6709\u4e00\u70b9\u70b9\u6446\u70c2\u3002\u8bfe\u4e5f\u4e0d\u600e\u4e48\u53bb\uff0c\u5230\u6700\u540e\u4f5c\u4e1a\u90fd\u4e0d\u600e\u4e48\u4ea4\u4e86\uff0c\u7ebf\u4ee3\u671f\u672b\u524d\u591c\u5728\u8fd8\u6709\u4e24\u7ae0\u6ca1\u770b\u7684\u60c5\u51b5\u4e0b\u7adf\u7136\u80fd\u591f\u5b89\u7136\u7761\u53bb\ud83d\ude2a\u8fd9\u4e2a\u5b66\u671f\u4e5f\u559c\u63d0\u5927\u5b66\u751f\u6daf\u81f3\u4eca\u6700\u4f4e\u7684\u5747\u7ee9\u3002</p> <p></p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#c-\u5c0f\u7a0b","title":"C \u5c0f\u7a0b","text":"<p>\u8fd9\u95e8\u8bfe\u2026\u2026\u6211\u7533\u8bf7\u4e86\u514d\u542c\uff0c\u4f46\u662f\u5b83\u7684\u8bc4\u4ef7\u548c\u671f\u672b\u8003\u8bd5\u4ecd\u7136\u5947\u602a\u5f97\u7d27\u3002\u8fd9\u6837\u7684\u4e00\u95e8\u8bfe\u7a0b\uff0c\u6210\u7ee9\u6784\u6210\u5927\u5934\u7adf\u7136\u4e0d\u662f\u5199\u7a0b\u5e8f\uff0c\u7406\u8bba\u9898\u7adf\u7136\u5305\u542b\u90a3\u4e48\u591a\u65e0\u610f\u4e49\u7684\u80cc\u8bf5\u2014\u2014\u6211\u89c9\u5f97\u53ef\u4ee5\u91c7\u53d6\u7684\u4e00\u4e2a\u65b9\u5f0f\u662f\uff0c\u5728\u8bfb\u7a0b\u9898\u4ee5\u5916\u7684\u90e8\u5206\u5141\u8bb8\u5927\u5bb6\u4f7f\u7528 IDE \u6765\u627e\u5230\u4e00\u4e9b\u7b54\u6848\uff0c\u5c31\u50cf\u771f\u6b63\u7684\u7f16\u7a0b\u65f6\u90a3\u6837\u3002</p> <p>\u6211\u4e0d\u7981\u60f3\u95ee\uff0c\u9ad8\u4e2d\u90a3\u4f4d\u4e0d\u662f\u7279\u522b\u4f1a\u8bb2\u8bfe\u7684\u7ade\u8d5b\u8001\u5e08\u4e09\u5929\u80fd\u8ba9\u6211\u4eec\u638c\u63e1\u7684\u57fa\u672c\u7f16\u7a0b\u80fd\u529b\uff0c\u4e3a\u4ec0\u4e48\u5728\u6d59\u5927\u8fd9\u6837\u9ad8\u6750\u751f\u4e91\u96c6\u7684\u5730\u65b9\u6709\u65f6\u4ecd\u7136\u53d8\u5f97\u96be\u4ee5\u4f01\u53ca\u5462\uff1f\u4e5f\u8bb8\u662f\u56e0\u4e3a\uff0c\u4ee5\u7c7b\u4f3c\u8bed\u6587\u82f1\u8bed\u5e94\u8bd5\u90a3\u6837\u7684\u6001\u5ea6\u53bb\u6559\u6388\uff0c\u8ba9\u5927\u5bb6\u5bf9\u7740\u9ed1\u677f\u53bb\u80cc\u3001\u53bb\u8bb0\u4e00\u4e2a\u5de5\u5177\u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u800c\u4e0d\u662f\u76ef\u7740\u6216\u8005\u81f3\u5c11\u544a\u8beb\u5927\u5bb6\u53bb\u7ec3\u4e60\u3001\u53bb\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u800c\u4e0d\u662f\u53bb\u4f7f\u7528\u5b83\u80cc\u8bf5\u5b83\u2014\u2014\u6211\u89c9\u5f97\u95ee\u9898\u5c31\u5728\u6700\u5f00\u59cb\u53cc\u65b9\u7684\u8fc7\u5ea6\u4fe1\u4efb\uff0c\u7f3a\u4e4f\u6700\u521d\u7684\u76d1\u7763\u548c\u5f15\u5bfc\uff0c\u7136\u540e\u53d8\u5f97\u754f\u60e7\uff0c\u9884\u8bbe\u5b66\u4f1a\u8fd9\u4e9b\u201c\u5f88\u56f0\u96be\u201d\uff0c\u95ee\u9898\u79ef\u5c11\u6210\u591a\uff0c\u5c31\u50cf\u6211\u5f53\u521d\u5b66\u7269\u7406\u548c\u5fae\u79ef\u5206\u90a3\u6837\u3002</p> <p>\u4fee\u52fe (@IsshikiHugh) \u6253\u7b97\u5728 \u54b8\u9c7c\u8086 | \u77e5\u8bc6\u751f\u6d3b\u5206\u4eab\u5708 \u603b\u7ed3\u4e00\u4e9b\u7ed9\u5165\u95e8\u540c\u5b66\u7684\u7ecf\u9a8c\uff0c\u4e5f\u8bb8\u80fd\u591f\u89e3\u51b3\u8fd9\u91cc\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u6539\u5584\u4e00\u4e9b\u73b0\u8c61\u3002\u6587\u6863\u4ecd\u5728\u7b79\u5907\u4e2d\uff0c\u6709\u5174\u8da3\u7684\u8bdd\u53ef\u4ee5\u5206\u4eab\u4e00\u4e9b\u81ea\u5df1\u7684\u5fc3\u5f97\ud83e\udd70</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u5927\u4e00\u4e0b--\u75ab\u60c5\u5728\u5bb6","title":"\u5927\u4e00\u4e0b  \u75ab\u60c5\u5728\u5bb6","text":""},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u65e0\u804a\u5230\u81ea\u5b66\u5165\u5751\u4e86\u8bed\u96c0","title":"\u65e0\u804a\u5230\u81ea\u5b66\uff0c\u5165\u5751\u4e86\u8bed\u96c0","text":"<p>\u5728\u90a3\u4e2a\u5bd2\u5047\uff0c\u75ab\u60c5\u5f00\u59cb\u4e86\uff0c\u5927\u5bb6\u4e5f\u90fd\u6ca1\u6709\u53bb\u5b66\u6821\u3002\u6211\uff08\u5f53\u65f6\u56e0\u4e3a\u6ca1\u6709\u5165\u5751\u9152\u9986\u6218\u68cb\u548c\u539f\u795e\u6240\u4ee5\uff09\u4e0d\u592a\u7231\u73a9\u6e38\u620f\uff0c\u5728\u5bb6\u7684\u65f6\u5149\u4fbf\u683c\u5916\u65e0\u804a\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5f53\u4eba\u65e0\u804a\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u65f6\u5019\uff0c\u5b66\u4e60\u771f\u7684\u53ef\u4ee5\u662f\u4e00\u4ef6\u5feb\u4e50\u7684\u4e8b\u3002\uff08\u4f46\u662f\u5b66\u4e60\u5fae\u79ef\u5206\u4e0d\u662f\uff0c\u56e0\u4e3a\u5f53\u65f6\u5c1d\u8bd5\u5b66\u4e60\u5fae\u79ef\u5206\u5931\u8d25\u4e86\u3002\uff09</p> <p>\u5f53\u65f6\u8ddf\u7740\u83dc\u9e1f\u6559\u7a0b\u7b80\u5355\u5b66\u4e60\u4e86\u4e00\u4e0b\uff0c\u4e5f\u7b2c\u4e00\u6b21\u63a5\u89e6\u4e86\u8bed\u96c0\uff0c\u5f00\u59cb\u4e86\u7535\u5b50\u7b14\u8bb0\u4e4b\u65c5\u3002</p> <p></p> <p>\u8bf4\u8d77\u7b14\u8bb0\uff0c\u5b83\u53ea\u662f\u6211\u81ea\u5df1\u7684\u4e00\u4e2a\u4e60\u60ef\u2014\u2014\u5bf9\u6211\u800c\u8a00\uff0c\u5b66\u4e60\u7684\u52a8\u529b\u6765\u6e90\u4e8e\u5174\u8da3\u548c\u6210\u5c31\u611f\uff1b\u800c\u5199\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u6587\u6863\u6216\u8005\u7b14\u8bb0\u5219\u662f\u975e\u5e38\u91cd\u8981\u7684\u6210\u5c31\u611f\u6765\u6e90\uff0c\u5728\u521d\u4e2d\u548c\u9ad8\u4e2d\u7684\u65f6\u5019\u6211\u5c31\u559c\u6b22\u505a\u8fd9\u6837\u7684\u4e8b\u3002\u5982\u679c\u6709\u4eba\u613f\u610f\u770b\u6211\u7684\u7b14\u8bb0\u90a3\u5c31\u66f4\u597d\u5566\u2014\u2014\u867d\u7136\u6211\u6709\u65f6\u4f1a\u51a0\u5195\u5802\u7687\u5730\u8bf4\u8fd9\u662f\u4e3a\u4e86\u5e2e\u52a9\u6211\u81ea\u5df1\u67e5\u6f0f\u8865\u7f3a\uff0c\u5ba2\u89c2\u4e0a\u4e5f\u786e\u5b9e\u8d77\u5230\u4e86\u8fd9\u6837\u7684\u4f5c\u7528\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u66f4\u591a\u662f\u4e3a\u4e86\u6ee1\u8db3\u6211\u90a3\u70b9\u5c0f\u5c0f\u7684\u6210\u5c31\u611f\u548c\u865a\u8363\u5fc3\u7f62\u4e86\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u8fd9\u4e2a\u5b66\u671f\u771f\u7684\u9009\u4e86\u597d\u591a\u8bfe","title":"\u8fd9\u4e2a\u5b66\u671f\u771f\u7684\u9009\u4e86\u597d\u591a\u8bfe\uff01","text":"<p>\u9009\u4e86\u8bfe\u4e4b\u540e\u6700\u610f\u5916\u7684\u4e8b\u60c5\u662f\u2014\u2014\u7533\u8bf7\u8865\u9009\u4e86 Java \u7a0b\u5e8f\u8bbe\u8ba1 \u548c\u8bb8\u5a01\u5a01\u8001\u5e08\u7684 \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 \uff08\u56e0\u4e3a\u5bd2\u5047\u5927\u6982\u5728\u83dc\u9e1f\u6559\u7a0b\u5b66\u4e86\u4e00\u904d\u4e86\uff09\uff0c\u7adf\u7136\u90fd\u7ed9\u6211\u8fc7\u4e86\ud83e\udd27\u5b66\u5206\u4e00\u4e0b\u5b50\u6765\u5230\u4e86 30.5 \u5206\u3002\u8fd9\u4e2a\u5b66\u671f\u9762\u5bf9\u5fae\u79ef\u5206\u3001\u5927\u7269\u3001\u5c0f\u767d\u8001\u5e08\u7684 \u6c47\u7f16\u8bed\u8a00 \u3001 C \u5927\u7a0b \u3001 \u4fe1\u606f\u5b89\u5168\u539f\u7406\u4e0e\u6570\u5b66\u57fa\u7840 \u3001Java\u3001oop \u7684\u591a\u91cd\u8f70\u70b8\u4e0b\uff0c\u5fc3\u6001\u4e5f\u5076\u5c14\u4f1a\u7206\u70b8\u3002\u5e78\u597d\u662f\u5728\u5bb6\uff0c\u4e0d\u9700\u8981\u53bb\u6559\u5ba4\u5047\u88c5\u542c\u8bfe\uff0c\u8282\u7701\u4e86\u5f88\u591a\u901a\u52e4\u65f6\u95f4\u548c\u9022\u573a\u4f5c\u620f\u7684\u7cbe\u529b\uff0c\u53ef\u4ee5\u628a\u9664\u4e86\u6253\u6e38\u620f\u3001\u7761\u89c9\u3001\u6c34\u7fa4\u548c\u54c1\u5c1d\u5bb6\u4e61\u7f8e\u98df\u4ee5\u5916\u7684\u65f6\u95f4\u66f4\u591a\u5730\u653e\u5728\u5b66\u4e60\u4e0a\uff0c\u6210\u7ee9\u4e5f\u6e10\u6e10\u6709\u4e86\u8d77\u8272\u3002</p> <p></p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#java-\u7a0b\u5e8f\u8bbe\u8ba1","title":"Java \u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>\u8fd9\u95e8\u8bfe\u662f\u5916\u4e13\u4e1a\u7684\u8ba1\u7b97\u673a\u7c7b\u901a\u8bc6\u8bfe\u7a0b\uff0c\u9009\u6765\u672c\u6765\u662f\u60f3\u5237\u5237\u5206\uff0c\u4f46\u662f\u88ab\u7406\u8bba\u8003\u8bd5\u9898\u7206\u6740\ud83d\ude11\u5728\u8fd9\u95e8\u8bfe\u7a0b\u4e2d\u6211\u7b2c\u4e00\u6b21\u6298\u670d\u4e8e\u6211\u4eec\u8bfe\u7a0b\u7684\u53e4\u8272\u53e4\u9999\uff01\u56e0\u4e3a\u5df2\u7ecf\u7ed3\u8bfe\uff0c\u73b0\u5728\u5df2\u7ecf\u8fdb\u4e0d\u53bb\u8fd9\u4e2a\u7cfb\u7edf\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u7cfb\u7edf\u771f\u7684\u662f\u53e4\u8001\u5230\u62ab\u4e0a\u4e2a\u6597\u7bf7\u5c31\u80fd\u7ed9\u767d\u96ea\u516c\u4e3b\u9001\u82f9\u679c\u7684\u7a0b\u5ea6\ud83d\ude44</p> <p></p> <p>\u4e0d\u5fc5\u8bf4\u90a3\u53ea\u80fd\u770b\u5230\u5f97\u5206\u4e0d\u80fd\u770b\u5230\u54ea\u9053\u9898\u9519\u4e86\u7684\u4f5c\u4e1a\u548c\u6a21\u62df\u8003\u8bd5\u7cfb\u7edf\uff0c\u4e5f\u4e0d\u5fc5\u8bf4\u548c C \u5c0f\u7a0b\u4ee5\u53ca Python \u4e00\u6837\u7684\u5201\u94bb\u7406\u8bba\u9898\uff0c\u66f4\u4e0d\u5fc5\u8bf4\u751a\u81f3\u8981\u7528 word \u4ea4\u7684\u7f16\u7a0b\u4f5c\u4e1a\u2026\u2026\u8fd9\u95e8\u8bfe\u8ba9\u6211\u518d\u4e00\u6b21\u56de\u987e C \u5c0f\u7a0b\u770b\u5230\u7684\u60c5\u666f\uff0c\u751a\u81f3\u66f4\u751a\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>\u5f88\u5e86\u5e78\u5728\u5927\u4e00\u4e0b\u628a\u8fd9\u95e8\u8bfe\u4e0a\u4e86\uff0c\u4e0d\u7136\u5927\u4e8c\u4e0a\u5c31\u53ea\u80fd\u88ab ljj \u5148\u751f\u6467\u6b8b\u4e86\u3002\u8fd9\u95e8\u8bfe\u4f3c\u4e4e\u4e0d\u540c\u7684\u5b66\u671f\u96be\u5ea6\u5dee\u522b\u5f88\u5927\uff0c\u4e0d\u540c\u7684\u8001\u5e08\u7684\u4f5c\u4e1a\u548c\u5927\u4f5c\u4e1a\u4e5f\u4e0d\u592a\u4e00\u6837\uff0c\u4e0d\u77e5\u9053\u662f\u4e3a\u4ec0\u4e48\u3002\u8bb8\u5a01\u5a01\u8001\u5e08\u4e8b\u5c11\u7ed9\u5206\u597d\uff0c\u8fd8\u86ee\u4e0d\u9519\u7684\u3002</p> <p>\u5728\u5b66\u8fd9\u95e8\u8bfe\u7684\u65f6\u5019\uff0c\u6211\u5543\u5b8c\u4e86\u300aC++ \u7f16\u7a0b\u601d\u60f3\u300b\u7684\u7b2c\u4e00\u5377\u3002\u8fd9\u672c\u4e66\u7b97\u662f\u4f17\u591a\u9ed1\u76ae\u4e66\u91cc\u7ffb\u8bd1\u7684\u8fd8\u7b97\u4e0d\u9519\u7684\u4e86\uff0c\u4e5f\u4e0d\u662f\u5f88\u539a\u3002\u4ece\u4e2d\u6211\u5bf9 C++ \u9762\u5411\u5bf9\u8c61\u6709\u4e86\u521d\u6b65\u7684\u7406\u89e3\uff0c\u628a\u7b14\u8bb0\u8bb0\u5728\u4e86 1 C++\u9762\u5411\u5bf9\u8c61\u3002\u4e0d\u8fc7\u5728\u540e\u6765\u7684\u5b66\u4e60\u548c\u9762\u8bd5\u4e2d\u53d1\u73b0\u5b66\u5230\u7684\u8fd8\u662f\u592a\u6d45\u4e86\uff0c\u4e00\u76f4\u60f3\u8fdb\u4e00\u6b65\u6df1\u5165\u5b66\u4e60\u4e00\u4e0b\u4f46\u662f\u8fd8\u4e00\u76f4\u5728\u62d6\u5ef6\ud83d\ude43\u6211\u771f\u7684\u662f\u62d6\u5ef6\u75c7\u91cd\u5ea6\u60a3\u8005\u2026\u2026</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u6c47\u7f16\u8bed\u8a00","title":"\u6c47\u7f16\u8bed\u8a00","text":"<p>\u8fd9\u95e8\u8bfe\u662f\u5c0f\u767d\u8001\u5e08\u5f00\u7ed9\u56fe\u7075\u73ed\u548c\u4fe1\u606f\u5b89\u5168\u7684\u5fc5\u4fee\u8bfe\uff0c\u548c\u9694\u58c1\u7684\u90a3\u4e2a\u901a\u8bc6\u8bfe\u4e0d\u5b8c\u5168\u4e00\u6837\u3002\u4f46\u662f\u75ab\u60c5\u7ebf\u4e0a\u4e0a\u8bfe\uff0c\u5c0f\u767d\u8001\u5e08\u5c31\u5f55\u4e86\u4e00\u4efd\uff0c\u4e24\u4e2a\u73ed\u90fd\u653e\u8fd9\u4e00\u4efd\uff01\u8981\u662f\u6211\u6211\u4e5f\u8fd9\u6837\ud83e\udd23</p> <p>\u5c0f\u767d\u8001\u5e08\u5220\u56de\u653e\u786e\u5b9e\u5e26\u6765\u4e86\u4e0d\u5c0f\u7684\u56f0\u6270\uff0c\u4f46\u662f\u56f0\u7684\u4e5f\u4e0d\u662f\u7279\u522b\u6270\uff0c\u6bd5\u7adf\u4ed6\u5c31\u7b97\u4e0d\u5220\u6211\u4e5f\u4e0d\u4f1a\u770b\u7684\ud83d\ude1c\u6211\u4e00\u76f4\u559c\u6b22\u901a\u8fc7\u9605\u8bfb\u800c\u4e0d\u662f\u542c\u8bfe\u6765\u5b66\u4e60\u3002</p> <p>\u6211\u4e2a\u4eba\u4e0d\u592a\u559c\u6b22\u5c0f\u767d\u8001\u5e08\uff0c\u4e00\u65b9\u9762\u56e0\u4e3a\u5220\u56de\u653e\u786e\u5b9e\u6bd4\u8f83\u7279\u7acb\u72ec\u884c\uff0c\u53e6\u4e00\u65b9\u9762\u6559\u5b66\u7684\u5185\u5bb9\u6709\u70b9\u590d\u53e4\u548c\u8fc7\u4e8e\u8ffd\u6c42\u7ec6\u679d\u672b\u8282\u3002\u6211\u7406\u60f3\u7684\u6c47\u7f16\u8bed\u8a00\u8bfe\u7a0b\u5e94\u8be5\u662f\u50cf \u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba \u90a3\u6837\u7528\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6307\u4ee4\u96c6\u8bb2\u6e05\u695a\u6c47\u7f16\u8bed\u8a00\u7684\u57fa\u672c\u601d\u60f3\uff0c\u7c7b\u4f3c 8086 \u8fd9\u6837\u7684\u5b9e\u4f8b\u53ef\u4ee5\u4f5c\u4e3a\u4e86\u89e3\u5185\u5bb9\u6216\u8005\u4f5c\u4e1a\u5185\u5bb9\uff0c\u653e\u5230\u8003\u8bd5\u91cc\u7684\u8bdd\u81f3\u5c11\u7ed9\u4e2a cheat sheet\u3002\u4e2a\u4eba\u8ba4\u4e3a\u95ed\u5377\u53bb\u8003\u4e00\u4e9b\u6307\u4ee4\u7684\u4f5c\u7528\u751a\u81f3\u662f<code>int 3</code>\u7684\u673a\u5668\u7801\u8fd9\u79cd\u9898\u76ee\uff0c\u5c31\u50cf C \u5c0f\u7a0b\u7684\u4e00\u4e9b\u7406\u8bba\u9898\u4e00\u6837\u786e\u5b9e\u6ca1\u4ec0\u4e48\u4ef7\u503c\u3002\u5982\u679c\u8981\u4e3a\u8f6f\u4fdd\u6253\u57fa\u7840\u90a3\u4e0d\u5982\u76f4\u63a5\u653e\u5230\u8f6f\u4fdd\u91cc\u3002\u8fd9\u6837\u8bfe\u65f6\u4e5f\u53ef\u4ee5\u5927\u5e45\u5ea6\u7f29\u77ed\u2014\u2014\u786e\u5b9e\u4e0d\u592a\u7406\u89e3\u6709\u4e00\u4e9b\u4e00\u5929\u5c31\u80fd\u5b66\u5b8c\u7684\u8bfe\u7a0b\u4e3a\u4ec0\u4e48\u8981\u62d6\u5230\u4e00\u6574\u4e2a\u5b66\u671f\u6765\u4e0a\u3002</p> <p>\u8bf4\u5b9e\u8bdd\uff0c\u5341\u5206\u5e86\u5e78\u8fd9\u95e8\u8bfe\u7531\u4e8e\u75ab\u60c5\u539f\u56e0\u653e\u5230\u4e86\u5f00\u5b66\u540e\u624d\u8003\u8bd5\uff0c\u56e0\u4e3a\u6211\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba\u90a3\u95e8\u8bfe\u91cc\u624d\u771f\u6b63\u5b66\u900f\u4e86\u6c47\u7f16\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#-\u4fe1\u606f\u5b89\u5168\u539f\u7406\u4e0e\u6570\u5b66\u57fa\u7840","title":"\u25b2 \u4fe1\u606f\u5b89\u5168\u539f\u7406\u4e0e\u6570\u5b66\u57fa\u7840","text":"<p>\u6211\u4eec 2019 \u7ea7\u662f\u8fd9\u95e8\u8bfe\u7684\u7b2c\u4e00\u6279\u5c0f\u767d\u9f20\uff0c\u8fd9\u95e8\u8bfe\u88ab\u7528\u6765\u4ee3\u66ff\u57f9\u517b\u65b9\u6848\u4e2d\u539f\u6765\u7684\u79bb\u6563\u6570\u5b66\u548c\u6982\u7edf\u4e24\u95e8\u8bfe\u3002\u8fd9\u95e8\u8bfe\u548c\u7ebf\u4ee3\u4e00\u6837\u662f\u90a3\u79cd\u5b66\u4e86\u4ee5\u540e\u4e0d\u77e5\u9053\u5e72\u5565\u7528\u5e76\u5c06\u957f\u671f\u5904\u4e8e\u4e0d\u77e5\u9053\u5e72\u5565\u7528\u7684\u8bfe\u7a0b\uff1b\u4e0d\u8fc7\u5230\u4e86\u73b0\u5728\uff0c\u8fd9\u95e8\u8bfe\u7684\u7528\u5904\u4e5f\u6e10\u6e10\u663e\u9732\u51fa\u6765\uff0c\u8fd9\u95e8\u8bfe\u7684\u7b14\u8bb0 \u4fe1\u606f\u5b89\u5168\u539f\u7406\u4e0e\u6570\u5b66\u57fa\u7840 \u4e5f\u9010\u6e10\u6210\u4e86\u6211\u6700\u5e38\u7ffb\u7684\u7b14\u8bb0\uff08\u7ebf\u4ee3\u7684\u7528\u5904\u4e5f\u6e10\u6e10\u663e\u9732\u51fa\u6765\uff0c\u6240\u4ee5\u6211\u56e0\u4e3a\u4e0d\u4f1a\u7ebf\u4ee3\u628a\u673a\u5668\u5b66\u4e60\u5f03\u4fee\u4e86\ud83e\udd23\uff09\u3002</p> <p>\u5f20\u79c9\u665f\u8001\u5e08\u771f\u7684\u5f88\u5e05\ud83e\udd29\u86ee\u559c\u6b22\u4ed6\u8bb2\u8bfe\u7684\uff0c\u867d\u7136\u8bf4\u5b9e\u8bdd\u4e5f\u6ca1\u542c\u591a\u5c11\uff1b\u4f46\u662f PPT \u505a\u7684\u5f88\u7ec6\u81f4\uff0c\u4fbf\u4e8e\u5b66\u4e60\u548c\u9605\u8bfb\u3002\u79e6\u6e5b\u8001\u5e08\u4e0a\u8bfe\u7a0d\u5fae\u6709\u4e00\u70b9\u70b9\u56f0\ud83d\ude09\u540e\u534a\u4e2a\u5b66\u671f\u90a3\u4f1a\u513f\u521a\u597d\u662f\u5348\u540e\uff0c\u6211\u4ecd\u7136\u8bb0\u5f97\u5f53\u65f6\u5728\u5bb6\u91cc\u4e0a\u7740\u4ed6\u7684\u8bfe\u70b9\u4e2a\u5916\u5356\u5403\u5b8c\u7761\u8fc7\u53bb\u65f6\u7684\u9633\u5149\uff08\u5bf9\u4e0d\u8d77\u6211\u9519\u4e86\u6211\u78d5\u4e00\u4e2a\uff09\u3002\u6700\u540e\u8003\u8bd5\u662f\u6bd4\u8f83\u6c34\u7684\uff0c\u7ed9\u5206\u4e5f\u86ee\u597d\u7684\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#c-\u5927\u7a0b","title":"C \u5927\u7a0b","text":"<p>\u5f53\u65f6\u4e0a\u8fd9\u95e8\u8bfe\u662f\u6bd4\u8f83\u723d\u7684\uff0c\u4f46\u662f\u9274\u4e8e C \u5c0f\u7a0b\u60b2\u60e8\u7684\u6559\u5b66\u6210\u679c\uff0c\u5927\u591a\u6570\u540c\u5b66\u5b8c\u6210\u5927\u4f5c\u4e1a\u6709\u70b9\u8fc7\u4e8e\u5927\u8dc3\u8fdb\u4e86\uff1b\u8bfe\u7a0b\u4e2d\u4e5f\u7f3a\u4e4f\u57fa\u672c\u7684\u5f15\u5bfc\u3002\u4e0d\u8fc7\u542c\u8bf4 23 \u7ea7\u5f00\u59cb C \u5927\u5c0f\u7a0b\u8981\u5408\u5e76\u4e86\uff0c\u5c31\u4e0d\u8fc7\u591a\u8bc4\u4ef7\u4e86\uff0c\u5e0c\u671b\u5230\u65f6\u5019\u80fd\u591f\u6539\u5584\u5427\u3002</p> <p>\u987a\u4fbf\uff0c\u8fd9\u95e8\u8bfe\u5728 2019 \u5e74\u7684 project \u8fd8\u6bd4\u8f83\u6b63\u5e38\uff0c\u4f46\u662f\u8fd1\u51e0\u5e74\u4e3a\u4ec0\u4e48\u753b\u98ce\u53d8\u5f97\u5947\u602a\u4e86\u8d77\u6765\u2026\u2026\u201c\u4ee3\u7801\u67e5\u91cd\u201d\u3001\u201c\u7b80\u6613\u6d4f\u89c8\u5668\u201d\u8fd9\u79cd\u5185\u5bb9\u771f\u7684\u9002\u5408\u505a\u53ea\u4e0a\u8fc7 C \u5c0f\u7a0b\u7684\u540c\u5b66\u4eec\u7684\u5927\u4f5c\u4e1a\u5417\uff1f\u6211\u4e0d\u597d\u8bf4\u3002</p> <p>\u5e26\u4e86\u4e24\u5e74\u670b\u8f88\u8f85\u5b66\uff0c21\u5e74\uff0c\u7528\u516d\u4e2a\u591a\u5c0f\u65f6\u505a\u4e86\u4e00\u4e2a\u5c0f\u6e38\u620f\uff0c\u8bf4\u5b9e\u8bdd\u8bb2\u7684\u4e0d\u662f\u5f88\u597d\uff0c\u4f46\u662f\u5c3d\u53ef\u80fd\u8986\u76d6\u4e86\u8fd9\u4e2a\u56fe\u5f62\u5e93\u91cc\u80fd\u7528\u5230\u7684\u529f\u80fd\uff1a\u5982\u4f55\u5199 C \u5927\u7a0b | 2021 \u670b\u8f88\u8f85\u5b66\uff1b22 \u5e74\u82b1\u4e86\u66f4\u591a\u7684\u65f6\u95f4\u53bb\u8003\u8651\u8bbe\u8ba1\u7684\u95ee\u9898\uff0c\u5206\u4eab\u4e86\u4e00\u4e9b\u5982\u4f55\u9009\u9898\u3001\u5982\u4f55\u5f00\u59cb\u3001\u5982\u4f55\u8bbe\u8ba1\u3001\u5177\u4f53\u5b9e\u73b0\u4e4b\u7c7b\u7684\u60f3\u6cd5\uff0c\u4f46\u662f\u90fd\u662f\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u4e0d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u6709\u5e2e\u52a9\uff1a\u7a0b\u5e8f\u8bbe\u8ba1\u4e13\u9898 2022 \u670b\u8f88\u8f85\u5b66\u8bfe\u7a0b\u5185\u5bb9\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u5927\u4e00\u77ed\u7684\u4e24\u95e8\u8bfe","title":"\u5927\u4e00\u77ed\u7684\u4e24\u95e8\u8bfe","text":"<p>\u77ed\u5b66\u671f\uff0c\u5728\u5b66\u957f\u7684\u5f3a\u529b\u63a8\u8350\u4e0b\u9009\u4e86 \u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba \uff0c\u540c\u65f6\u548c\u5b83\u552f\u4e00\u4e00\u4e2a\u4e0d\u51b2\u7a81\u7684\u8bfe\u662f  MATLAB \u56fe\u50cf\u5904\u7406\u7f16\u7a0b\u5b9e\u8df5\u521d\u6b65 \uff0c\u6240\u4ee5\u4e24\u4e2a\u90fd\u9009\u4e86\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba","text":"<p>\u771f\u7684\u662f\u795e\u8bfe\uff01\u975e\u5e38\u5230\u4f4d\u5730\u628a\u63e1\u4e86\u4e00\u4e2a\u7528\u6765\u6559\u5b66\u7684\u8fd1\u4e4e\u6700\u5c0f\u7684\u96c6\u5408\uff0c\u4e5f\u57fa\u672c\u4e0a\u9a8c\u8bc1\u4e86\u6570\u903b+\u8ba1\u7ec4+\u6c47\u7f16\u8fd9\u4e09\u95e8\u8bfe\u5927\u6982 20 \u4e2a\u5c0f\u65f6\u5c31\u80fd\u4ece 0 \u57fa\u7840\u5f00\u59cb\u8bb2\u7684\u5f88\u901a\u900f\u3002\u8fd9\u95e8\u8bfe\u7684\u8001\u672c\u4e00\u76f4\u5230\u4e0a\u8ba1\u7ec4\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u5543~</p> <p>\u6211\u4e2a\u4eba\u662f\u6bd4\u8f83\u559c\u6b22\u8fd9\u79cd\u6559\u5b66\u65b9\u5f0f\u7684\uff0c\u4ece\u4e00\u4e2a\u7c7b\u4f3c\u73a9\u5177\u7684\u67b6\u6784\u51fa\u53d1\uff0c\u770b\u61c2\u4e86\u8fd9\u4e2a\u67b6\u6784\u4e4b\u540e\u518d\u53bb\u770b RISC-V \u5c31\u5341\u5206\u5bb9\u6613\u4e86\uff0c\u7279\u522b\u597d\u7406\u89e3QWQ\u4e0d\u50cf\u67d0\u4e9b\u8bfe\u90a3\u6837\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u4e8b\u65e0\u5de8\u7ec6\u7684\u8bb2\u4e00\u904d\uff0c\u5927\u5bb6\u542c\u4e86\u4e5f\u4e0d\u77e5\u9053\u5b66\u4e86\u4ec0\u4e48\uff0c\u4e4b\u540e\u8981\u7528\u7684\u65f6\u5019\u53c8\u5fd8\u4e86\uff0c\u6700\u540e\u4e5f\u4ec0\u4e48\u90fd\u8bb0\u4e0d\u4f4f\u3002</p> <p>\u4e0d\u8fc7\u6ca1\u6709\u592a\u7406\u89e3\u7684\u662f jxh \u5973\u58eb\u5728\u8fd9\u95e8\u8bfe\u4e2d\u53d1\u6325\u7684\u4f5c\u7528\uff08\u9664\u4e86\u9ec4\u5e15\u7279\u5148\u751f\u6ca1\u6cd5\u5728\u6559\u52a1\u7cfb\u7edf\u5f00\u8bfe\u9700\u8981\u6302\u4e2a\u540d\uff1f\uff09\uff0c\u4e0d\u7ba1\u662f\u6c9f\u901a\u3001\u6559\u5b66\u8fd8\u662f\u9a8c\u6536\u3001\u8bc4\u5206\u597d\u50cf\u90fd\u6ca1\u8d77\u5230\u4ec0\u4e48\u6b63\u9762\u7684\u4f5c\u7528\uff08\u5373\u4f7f\u6211\u4e0d\u542c\u8bfe\uff0c\u4e5f\u542c\u5230 Patt \u5148\u751f\u8bf4\u4e86\u65e0\u6570\u6b21 I've no idea what you are talking about\uff09\u3002</p> <p>\u8fd9\u4e2a\u8bfe\u8ba9\u6211\u4f53\u4f1a\u5230\u4e86\u73b0\u4ee3\u7684\u8bfe\u7a0b\u7684\u4e00\u70b9\u5473\u9053\u2014\u2014\u6709\u6bd4\u8f83\u4e30\u5bcc\u7684\u8d44\u6599\u548c\u52a9\u6559\u8d44\u6e90\uff0c\u867d\u7136 Lab \u8fd8\u5e76\u4e0d\u662f\u81ea\u52a8\u5316\u6279\u6539\u3002\u5982\u679c Lab \u4e5f\u662f\u81ea\u52a8\u5316\u6279\u6539\u7684\u8bdd\uff0c\u611f\u89c9\u6bd4\u67d0\u6c47\u7f16\u8bed\u8a00\u8bfe\u7a0b\u9886\u5148\u4e86\u81f3\u5c11\u534a\u8f88\u5b50\ud83d\ude07 \u8d5e\u7f8e\u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba\uff01</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#matlab-\u56fe\u50cf\u5904\u7406\u7f16\u7a0b\u5b9e\u8df5\u521d\u6b65","title":"MATLAB \u56fe\u50cf\u5904\u7406\u7f16\u7a0b\u5b9e\u8df5\u521d\u6b65","text":"<p>\u7b97\u662f\u8ba9\u81ea\u5df1\u5165\u95e8\u4e86\u4e00\u4e2a\u5de5\u5177\uff0c\u4f46\u662f\u8fd9\u4e2a\u8bfe\u57fa\u672c\u4e0a\u6536\u83b7\u4e0d\u662f\u5f88\u591a\uff0c\u56e0\u4e3a\u539f\u7406\u4e0a\u7684\u77e5\u8bc6\u8bb2\u7684\u4e0d\u591a\uff0c\u4e5f\u6ca1\u4ec0\u4e48\u76f8\u5173\u7684\u8003\u6838\u3002\u57fa\u672c\u4e0a\u8bfe\u7a0b\u5c31\u662f\u4e0d\u90a3\u4e48\u8be6\u7ec6\u5730\u628a\u67d0\u4e2a\u6982\u5ff5\u8bb2\u4e00\u8282\u8bfe\u2014\u2014\u7136\u540e\u5728\u6700\u540e\u544a\u8bc9\u5927\u5bb6\u8fd9\u4e2a\u4e1c\u897f\u7528\u67d0\u4e2a\u51fd\u6570\u5c31\u80fd\u5b9e\u73b0\uff01\u6709\u5f88\u8ba4\u771f\u5730\u505a\u5927\u4f5c\u4e1a\uff0c\u4f46\u662f\u53ef\u80fd\u80fd\u529b\u6709\u9650\uff0c\u4e5f\u53ef\u80fd\u662f\u62a5\u544a\u5199\u5f97\u592a\u5b9e\u8bda\u4e86\uff0c\u7ed3\u679c\u5206\u6570\u4e5f\u4e0d\u662f\u5f88\u6ee1\u610f\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u5927\u4e8c\u4e0a--\u7ec8\u4e8e\u5f00\u59cb\u5b66\u4e13\u4e1a\u8bfe\u4e86","title":"\u5927\u4e8c\u4e0a  \u7ec8\u4e8e\u5f00\u59cb\u5b66\u4e13\u4e1a\u8bfe\u4e86","text":""},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1","title":"\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1","text":"<p>\u8fd9\u95e8\u8bfe\u7684\u7406\u8bba\u90e8\u5206\u6211\u4e0d\u592a\u8bb0\u5f97\u4e86\uff0c\u4f46\u662f\u8521\u94ed\u8001\u5e08\u8bb2\u7684\u771f\u7684\u4e0d\u9519\uff08\u800c\u4e14\u4e5f\u7ed9\u8c03\u5206\u4e86\ud83e\udd17\uff09\uff01\u4f46\u662f\u8fd9\u95e8\u8bfe\u7684\u5b9e\u9a8c\u90e8\u5206\u5b9e\u5728\u662f\u5947\u602a\u5f97\u7d27\u3002\u5947\u602a\u7684\u5b9e\u9a8c\u62a5\u544a\u683c\u5f0f\uff0c\u5947\u602a\u7684\u5728\u62a5\u544a\u91cc\u590d\u5236\u5341\u51e0\u9875\u751a\u81f3\u51e0\u5341\u9875 PPT \u5185\u5bb9\u7684\u4f18\u826f\u4f20\u7edf\uff0c\u5b8c\u5168\u6ca1\u6709\u540e\u7eed\u4f5c\u7528\u7684\u524d\u51e0\u6b21\u5b9e\u9a8c\uff0c\u4ee5\u53ca\u5c06 Verilog \u8bb2\u4e00\u4e2a\u5b66\u671f\u8fd8\u80fd\u8ba9\u7edd\u5927\u90e8\u5206\u540c\u5b66\u90fd\u4e0d\u4f1a\u7684\u4f18\u8d28\u8bb2\u89e3\u2026\u2026</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u64cd\u4f5c\u7cfb\u7edf","title":"\u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u8fd9\u95e8\u8bfe\u653e\u5728\u5927\u4e8c\u4e0a\u7a0d\u7a0d\u6709\u70b9\u56f0\u96be\uff0c\u4f46\u662f\u56f0\u7684\u4e5f\u4e0d\u662f\u90a3\u4e48\u96be\uff0c\u5927\u90e8\u5206\u6050\u60e7\u6765\u81ea\u4e8e\u5fc3\u7406\u3002\u5341\u5206\u611f\u8c22\u5f53\u65f6\u961f\u53cb\u7684 carry\uff0c\u6559\u6539\u540e\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u786e\u5b9e\u975e\u5e38\u6709\u4ef7\u503c\uff1b\u7533\u58eb\u8bb2\u7684\u8bfe\u4e5f\u771f\u7684\u975e\u5e38\u6709\u6c34\u5e73\uff01</p> <p>\u5f53\u65f6\u7531\u4e8e\u542c\u4e0d\u592a\u61c2\u6ca1\u5b8c\u5168\u597d\u597d\u542c\uff0c\u4e0b\u4e2a\u5b66\u671f\u6253\u7b97\u5e26\u5e26\u64cd\u4f5c\u7cfb\u7edf\u7684\u670b\u8f88\u8f85\u5b66\uff0c\u5230\u65f6\u5019\u4e00\u5b9a\u8981\u542c\u4e00\u904d\u7533\u58eb\u7684\u8bfe\u518d\u53bb\u8bb2\uff01\u5c4a\u65f6\u4e5f\u4f1a\u5728 \u64cd\u4f5c\u7cfb\u7edf | Operating Systems \u66f4\u65b0\u7b14\u8bb0\uff0c\u4e0d\u8fc7\u73b0\u5728\u8fd8\u975e\u5e38\u4e0d\u5b8c\u6574~</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u6570\u636e\u7ed3\u6784\u57fa\u7840","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840","text":"<p>\u8fd9\u95e8\u8bfe\u8fd8\u597d\uff0c\u552f\u4e00\u60f3\u8bc4\u4ef7\u7684\u5c31\u662f\uff1a\u82e5\u5e72\u8001\u5e08\u7531\u4e8e\u81ea\u5df1\u90fd\u6ca1\u641e\u6e05\u695a\u8bc4\u5206\u6807\u51c6\u514b\u6263 bonus\uff0c\u5728\u4e8b\u524d\u63d0\u9192\u3001\u4e8b\u540e\u54a8\u8be2\u540e\u4ecd\u7136\u7ed9\u51fa\u5e76\u575a\u6301\u7ed9\u51fa\u9519\u8bef\u7684\u8bc4\u5206\uff0c\u786e\u5b9e\u5341\u5206\u4e0d\u5c0a\u91cd\u90e8\u5206\u540c\u5b66\u4eec\u4e00\u5b66\u671f\u6765\u505a hard mode \u7684\u52b3\u52a8\u6210\u679c\u3002\u6240\u4ee5\u6211\u7ecf\u5e38\u7ed9\u540c\u5b66\u4eec\u63a8\u8350\uff0c\u6709 cyll \u4e0a\u8bfe\u7684\u8bfe\u5c3d\u53ef\u80fd\u9009\u5979\u7684\uff0c\u56e0\u4e3a\u5979\u662f\u4e0d\u591a\u89c1\u7684\u806a\u6167\u3001\u660e\u667a\u3001\u6b63\u76f4\u3001 \u80fd\u591f\u6c9f\u901a \u7684\u8001\u5e08\u4e4b\u4e00\u3002</p> <p>\u7b14\u8bb0\u8bb0\u5728\u4e86 \u6570\u636e\u7ed3\u6784\u57fa\u7840 | FDS\uff0c\u4e0d\u662f\u7279\u522b\u5b8c\u6574qwq</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u9762\u5411\u4fe1\u606f\u6280\u672f\u7684\u6c9f\u901a\u6280\u5de7","title":"\u9762\u5411\u4fe1\u606f\u6280\u672f\u7684\u6c9f\u901a\u6280\u5de7","text":"<p>\u8fd9\u95e8\u8bfe\u4f3c\u4e4e\u4ece 22 \u7ea7\u5f00\u59cb\u6539\u6210\u4e86\u9009\u4fee\u7684\u201c\u6280\u672f\u6c9f\u901a\u201d\u3002\u6211\u5341\u5206\u559c\u6b22\u8fd9\u95e8\u8bfe\uff0c\u8bfe\u7a0b\u5185\u5bb9\u672c\u8eab\u975e\u5e38\u8f7b\u677e\uff0c\u4e5f\u7ed9\u6211\u4e86\u975e\u5e38\u5927\u7684\u5e2e\u52a9\uff0c\u540c\u65f6\u4e5f\u8ba9\u6211\u610f\u8bc6\u5230\u4e86\u81ea\u5df1\u5728\u6c9f\u901a\u65b9\u9762\u7684\u5f88\u591a\u95ee\u9898\u3002\u60f3\u6bd4\u4e8e\u5176\u4ed6\u4e13\u4e1a\u77e5\u8bc6\u6765\u8bf4\uff0c\u8fd9\u4e00\u8bfe\u7a0b\u7ed9\u6211\u7684\u5f71\u54cd\u5e94\u5f53\u66f4\u52a0\u6df1\u8fdc\u3002</p> <p>\u8fd9\u95e8\u8bfe\u7a0b\u7684\u6838\u5fc3\u95ee\u9898\u5e94\u8be5\u662f\u5de5\u4f5c\u91cf\u6bd4\u8f83\u5927\uff0c\u4e0d\u8fc7\u542c\u8bf4\u5728\u540e\u7eed\u5b66\u5e74\u6709\u6240\u6539\u5584\u3002\u5982\u679c\u6539\u6210\u4e86\u9009\u4fee\u4ecd\u7136\u5de5\u4f5c\u91cf\u5927\u7684\u8bdd\uff0c\u5927\u4e0d\u4e86\u5c31\u542c\u4e00\u542c\uff0c\u4e0d\u53bb\u9009\ud83e\udd2a</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u5927\u4e8c\u4e0b\u77ed--\u7efc\u5408\u96be\u5ea6\u6700\u5927\u7684\u5b66\u671f","title":"\u5927\u4e8c\u4e0b&amp;\u77ed  \u7efc\u5408\u96be\u5ea6\u6700\u5927\u7684\u5b66\u671f","text":""},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#-\u6570\u636e\u5b89\u5168\u4e0e\u9690\u79c1\u4fdd\u62a4","title":"\u25b2 \u6570\u636e\u5b89\u5168\u4e0e\u9690\u79c1\u4fdd\u62a4","text":"<p>emm \u8bf4\u5b9e\u8bdd\uff0c\u56e0\u4e3a\u6ca1\u671f\u672b\u8003\u8bd5\uff0c\u6240\u4ee5\u6ca1\u542c\u8bfe\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4ed6\u8bb2\u4e86\u5565\ud83e\udd2a</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#-\u5bc6\u7801\u5b66","title":"\u25b2 \u5bc6\u7801\u5b66","text":"<p>\u8fd9\u95e8\u8bfe\u4e5f\u662f\u5c0f\u767d\u8001\u5e08\u7684\uff0c\u6211\u89c9\u5f97\u8fd9\u95e8\u8bfe\u7a0b\u7684\u8003\u6838\u65b9\u5f0f\u548c\u8303\u56f4\u4ecd\u7136\u4e0d\u592a\u59a5\u5f53\u3002\u6211\u5b8c\u5168\u7406\u89e3\u5b66\u4e60\u5bc6\u7801\u5b66\u5e94\u5f53\u5bf9\u4e00\u4e9b\u57fa\u672c\u7684\u52a0\u5bc6\u7b97\u6cd5\u6709\u4e00\u5b9a\u7684\u7406\u89e3\uff0c\u6211\u4e5f\u53ef\u4ee5\u7406\u89e3\u5e73\u65f6\u4f5c\u4e1a\u53bb\u5b9e\u73b0\u67d0\u79cd\u52a0\u5bc6\u65b9\u5f0f\u3002\u4f46\u662f\u6211\u4ecd\u7136\u4e0d\u8ba4\u540c\u5c0f\u767d\u8001\u5e08\u7684\u8003\u6838\u65b9\u5f0f\u2014\u2014\u6211\u8bb2\u8fc7\u7684\u3001\u653e\u5230 word \u91cc\u7684\uff0c\u4f60\u5c31\u8981\u80cc\u4e0b\u6765\uff1b\u4e0d\u8ba4\u540c\u8003\u8bd5\u91cc\u8ba9\u4eba\u80cc\u8bf5\u9ed8\u5199\u52a0\u5bc6\u65b9\u5f0f\u3001\u4e00\u4e9b\u6570\u636e\u7ec6\u8282\uff0c\u751a\u81f3\u662f OpenSSL \u7684 API\u3002\u6b63\u5982\u67d0\u4f4d\u8001\u5e08\u6240\u8bf4\u7684\u90a3\u6837\uff1a\u201c\u5c31\u8ddf\u7740 Enigma \u8d70\uff1f\u90a3\u90fd\u4e0d\u7528\u6570\u5b66\u3002\u201d</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u7f16\u8bd1\u539f\u7406","title":"\u7f16\u8bd1\u539f\u7406","text":"<p>\u8fd9\u95e8\u8bfe\u7a0b\u2026\u2026\u5f88\u70c2\u3002\u9996\u5148\u5206\u4eab\u4e00\u4e0b\u7b14\u8bb0\uff1a\u7f16\u8bd1\u539f\u7406 | Compiler Principle</p> <p>\u8fd9\u95e8\u8bfe\u4f7f\u7528\u7684\u8bfe\u672c\u751a\u81f3\u662f\u65e9\u5df2\u5931\u4f20\u7684\u53e4\u4e66\uff0c\u6211\u4eec\u53ea\u80fd\u4f7f\u7528\u626b\u63cf\u4e0d\u826f\u7684\u82f1\u6587\u7535\u5b50\u4e66\u548c\u9519\u6f0f\u767e\u51fa\u7684\u4e2d\u6587\u7535\u5b50\u4e66\uff0c\u800c\u5b9e\u4f53\u4e66\u5df2\u7ecf\u7edd\u7248\uff0c\u6cef\u7136\u4e8e\u6c5f\u6e56\uff1bPPT \u4e5f\u662f\u7956\u4f20\u7684\uff0c\u5185\u5bb9\u6bd4\u8f83\u9648\u65e7\u3002\u90e8\u5206\u8001\u5e08\u6240\u914d\u5907\u7684\u90e8\u5206\u52a9\u6559\u751a\u81f3\u81ea\u5df1\u90fd\u6ca1\u5b66\u8fc7\u7f16\u8bd1\u539f\u7406\uff0c\u786e\u5b9e\u975e\u5e38\u4ee4\u4eba\u60ca\u8bb6\u3002</p> <p>\u8fd9\u95e8\u8bfe\u7edd\u5927\u591a\u6570\u7cbe\u529b\u96c6\u4e2d\u5728\u7f16\u8bd1\u5668\u7684\u524d\u7aef\u3002\u4f46\u662f\u5728\u6211\u53bb\u9762\u8bd5\u7f16\u8bd1\u76f8\u5173\u7684\u4e00\u4e9b\u5b9e\u4e60\u5c97\u4f4d\u65f6\u5374\u88ab\u544a\u77e5\u2014\u2014\u7f16\u8bd1\u5668\u7684\u524d\u7aef\u5df2\u7ecf\u6bd4\u8f83\u6210\u578b\uff0c\u800c\u6700\u7ec8\u5f71\u54cd\u7f16\u8bd1\u51fa\u7a0b\u5e8f\u6027\u80fd\u7684\u5185\u5bb9\u90fd\u5728\u540e\u7aef\uff1b\u8fd9\u6070\u597d\u662f\u88ab\u8bfe\u7a0b\u7701\u7565\u7684\u5185\u5bb9\u3002\u540c\u6837\u5730\uff0c\u5927\u591a\u6570\u4eba\u7684\u7f16\u8bd1\u5668\u5927\u4f5c\u4e1a\u4e5f\u4e0d\u7ea6\u800c\u540c\u5730\u4f7f\u7528\u4e86 Lex + Yacc + LLVM \u8fd9\u4e00\u5957\u5185\u5bb9\uff0c\u540c\u8d28\u5316\u76f8\u5f53\u4e25\u91cd\uff0c\u7528\u5904\u4e5f\u975e\u5e38\u6709\u9650\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u5927\u4e09\u4e0a--\u600e\u4e48\u6ca1\u8bfe\u4e0a\u5462","title":"\u5927\u4e09\u4e0a  \u600e\u4e48\u6ca1\u8bfe\u4e0a\u5462\uff1f","text":"<p>\u7531\u4e8e\u5927\u4e8c\u4e0a\u628a\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4e86\uff0c\u5927\u4e09\u4e0a\u7684\u5fc5\u4fee\u8bfe\u5c31\u5269\u4e00\u95e8\u8ba1\u7f51\u4e86\uff0c\u5269\u4e0b\u80fd\u9009\u7684\u4e13\u4e1a\u8bfe\u53ea\u6709\u5bc6\u7801\u5b66\u8fdb\u9636\u2026\u2026</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u5b66--\u7f16\u7a0b\u8bed\u8a00\u539f\u7406","title":"\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u5b66 / \u7f16\u7a0b\u8bed\u8a00\u539f\u7406","text":"<p>\u8fd9\u95e8\u8bfe\u771f\u7684\u975e\u5e38\u975e\u5e38\u597d\uff08\u867d\u7136\u4e8b\u60c5\u6709\u70b9\u591a\uff09\uff01\uff01\u975e\u5e38\u656c\u4f69\u7fc1\u607a\u8001\u5e08\u77e5\u8bc6\u7684\u4e30\u5bcc\u548c\u878d\u4f1a\u8d2f\u901a\uff0c\u4ece\u4e2d\u4e5f\u5b66\u5230\u4e86\u5f88\u591a\u5f88\u591a\u77e5\u8bc6\uff0c\u8fd9\u5e94\u8be5\u7b97\u662f\u6211\u5728\u6d59\u5927\u7b2c\u4e00\u95e8\u5168\u90fd\u542c\u4e86\u4e00\u904d\u7684\u8bfe\uff01\u6709\u673a\u4f1a\u4e00\u5b9a\u8981\u628a\u7fc1\u607a\u8001\u5e08\u522b\u7684\u4e13\u4e1a\u8bfe\u4e5f\u90fd\u542c\u4e00\u904dQWQ</p> <p>\u7b14\u8bb0\u8bb0\u4e86\uff0c\u4f46\u662f\u4eca\u5e74\u8bfe\u7a0b\u8981\u5927\u6539\uff0c\u5185\u5bb9\u5b8c\u5168\u4e0d\u4e00\u6837\u4e86\uff0c\u6240\u4ee5\u7b14\u8bb0\u6ca1\u6709\u53c2\u8003\u4ef7\u503c\u4e86\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u8ba1\u7b97\u673a\u7f51\u7edc","title":"\u8ba1\u7b97\u673a\u7f51\u7edc","text":"<p>\u8fd9\u95e8\u8bfe\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u4e5f\u53bb\u5e26\u4e86\u670b\u8f88\u8f85\u5b66\uff1b\u8fd9\u95e8\u8bfe\u7684\u7b14\u8bb0 \u8ba1\u7b97\u673a\u7f51\u7edc | Computer Network \u4e5f\u6210\u4e3a\u4e86\u6211\u81f3\u4eca\u6240\u6709\u7b14\u8bb0\u4e2d\u6700\u957f\u7684\u4e00\u7bc7\uff0c\u6709\u5feb\u4e09\u4e07\u4e2a\u5b57QWQ\u3002\u8fd9\u4e2a\u8bfe\u672c\u8eab\u80fd\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f46\u662f\u5927\u591a\u6570\u4e5f\u6ca1\u4ec0\u4e48\u7528\uff1b\u8003\u8bd5\u7684\u8bdd\u2026\u2026\u61c2\u7684\u90fd\u61c2</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#-\u5bc6\u7801\u5b66\u8fdb\u9636","title":"\u25b2 \u5bc6\u7801\u5b66\u8fdb\u9636","text":"<p>\u8fd9\u95e8\u8bfe\u8ba8\u8bba\u4e86\u53ef\u8bc1\u660e\u5b89\u5168\u3001\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u3001\u96f6\u77e5\u8bc6\u8bc1\u660e\u3001\u52a0\u5bc6\u6570\u636e\u5e93\u3001\u79c1\u5bc6\u5316\u4fe1\u606f\u68c0\u7d22\u3001\u9690\u79c1\u4fdd\u62a4\u6c42\u4ea4\u96c6\u3001Oblivious RAM\u3001\u8054\u90a6\u5b66\u4e60\u7b49\u5185\u5bb9\u3002\u5f20\u79c9\u665f\u8001\u5e08\u8bb2\u7684\u90e8\u5206\u771f\u7684\u975e\u5e38\u6709\u610f\u601d\uff1b\u5218\u5065\u8001\u5e08\u8bb2\u7684\u90e8\u5206\u7a0d\u5fae\u6709\u70b9\u592a\u524d\u6cbf\u4e86\uff0c\u4f46\u662f\u542c\u61c2\u7684\u90e8\u5206\u4e5f\u6709\u5f88\u5927\u6536\u83b7\uff01</p> <p>\u4e2a\u4eba\u8ba4\u4e3a\u8bba\u6587\u7ed9\u5206\u8fc7\u4f4e\u4e86\uff0c\u4ee5\u53ca\u671f\u672b\u8003\u8bd5\u8bbe\u7f6e\u6709\u70b9\u4e0d\u592a\u5408\u7406\uff08\u4e0d\u592a\u5bf9\u5f97\u8d77\u8bfe\u7a0b\u8bb2\u7684\u8fd9\u4e48\u591a\u5185\u5bb9\uff09\uff1b\u4f46\u662f\u8bfe\u7a0b\u672c\u8eab\u975e\u5e38\u503c\u5f97\u4e00\u542c\u3002\u8fd9\u95e8\u8bfe\u4e5f\u7b97\u662f\u4e00\u95e8\u5168\u90fd\u542c\u4e86\u4e00\u904d\u7684\u8bfe\u7a0b\uff01\u8fd9\u4e2a\u8bfe\u771f\u7684\u6bd4\u5bc6\u7801\u5b66\u9ad8\u5230\u4e0d\u77e5\u9053\u54ea\u91cc\u53bb\u4e86\uff01</p> <p>\u7b14\u8bb0\u8bb0\u5728\u4e86 \u5bc6\u7801\u5b66\u8fdb\u9636 | Advanced Cryptology\uff0c\u4e0d\u8fc7\u6709\u4e00\u4e9b\u5730\u65b9\u662f\u624b\u5199\u7684QWQ \u662f\u8865\u5929\u7b14\u8bb0\uff0c\u4e0d\u4e00\u5b9a\u9002\u5408\u62ff\u6765\u81ea\u5b66\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u5927\u4e09\u4e0b--\u5b89\u5168\u5b66\u671f","title":"\u5927\u4e09\u4e0b  \u5b89\u5168\u5b66\u671f\uff01","text":"<p>\u8fd9\u4e2a\u5b66\u671f\u7684\u8bfe\u7a0b\u611f\u89c9\u90fd\u76f8\u5f53\u9ad8\u96be\u5ea6\uff0c\u56e0\u6b64\u4e5f\u6ca1\u6709\u6562\u9009\u989d\u5916\u7684\u8bfe\u3002</p> <p>\u8fd9\u4e2a\u5b66\u671f\u7684\u8bfe\u4e5f\u57fa\u672c\u6ca1\u600e\u4e48\u542c\u8bfe\uff0c\u7f51\u5b89\u3001\u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u4e24\u95e8\u8bfe\u57fa\u672c\u5c31\u662f\u5543PPT\uff0c\u8ba1\u7ec4\u5c31\u662f\u5543\u4e66\uff0c\u5269\u4e0b\u4e24\u95e8\u8bfe\u2026\u2026\u53cd\u6b63\u6ca1\u671f\u672b\u8003\u8bd5\ud83e\udd23</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#-\u7f51\u7edc\u5b89\u5168\u539f\u7406\u4e0e\u5b9e\u8df5","title":"\u25b2 \u7f51\u7edc\u5b89\u5168\u539f\u7406\u4e0e\u5b9e\u8df5","text":"<p>\u8fd9\u95e8\u8bfe\u7684\u90e8\u5206\u5185\u5bb9\u9700\u8981\u9884\u4fee\u8ba1\u7b97\u673a\u7f51\u7edc\u3002\u63a2\u8ba8\u4e86\u8bf8\u5982 DDoS \u653b\u51fb\u3001\u5b89\u5168\u8def\u7531\u3001\u533f\u540d\u901a\u4fe1\u3001\u4e92\u8054\u7f51\u5b89\u5168\uff08SQL \u6ce8\u5165\u3001\u8de8\u7ad9\u811a\u672c\u653b\u51fb\u7b49\uff09\u3001Email \u5b89\u5168\u3001\u653b\u51fb\u6eaf\u6e90\u3001\u7f51\u7edc\u4fdd\u62a4\u7b49\u8bdd\u9898\u3002</p> <p>\u8fd9\u95e8\u8bfe\u7684\u5b9e\u9a8c\u90e8\u5206\u5f88\u6709\u8da3\uff0c\u7406\u8bba\u90e8\u5206\u7684\u8bdd\u7531\u4e8e\u5185\u5bb9\u6bd4\u8f83\u591a\u611f\u89c9\u7a0d\u5fae\u6709\u4e00\u70b9\u6d45\uff0c\u6709\u4e9b\u5730\u65b9\u4e5f\u6ca1\u6709\u8bb2\u7684\u5f88\u6df1\u5165\uff0c\u4f46\u662f\u4e5f\u975e\u5e38\u6709\u610f\u601d\u3002\u82f1\u6587\u6388\u8bfe\u672c\u8eab\u5e26\u6765\u4e86\u6bd4\u8f83\u5927\u7684\u4e0d\u4fbf\uff0c\u4f46\u662f\u9274\u4e8e\u56fd\u9645\u5316\u7684\u9700\u6c42\u4e5f\u53ef\u4ee5\u7406\u89e3\u3002\u51ef\u54e5\u975e\u5e38\u53cb\u5584\uff0c\u8fd9\u95e8\u8bfe\u603b\u4f53\u6765\u8bf4\u611f\u89c9\u4e5f\u6bd4\u8f83\u4e0d\u9519\u3002</p> <p>\u7b14\u8bb0\u8bb0\u5728 \u7f51\u7edc\u5b89\u5168\u539f\u7406\u4e0e\u5b9e\u8df5 | Network Security\uff0c\u5e76\u4e0d\u662f\u8bb2\u89e3\u6027\u7684\uff0c\u4e0d\u4e00\u5b9a\u9002\u5b9c\u7528\u6765\u81ea\u5b66QWQ\uff1b\u5c11\u6570\u4e00\u4e9b\u88ab\u7701\u7565\u4e86\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u8ba1\u7b97\u673a\u7ec4\u6210","title":"\u8ba1\u7b97\u673a\u7ec4\u6210","text":"<p>\u8fd9\u4e2a\u8bfe\u8bf4\u5b9e\u8bdd\u5728\u5b66\u8fc7\u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u540e\u611f\u89c9\u6ca1\u6709\u4ec0\u4e48\u8425\u517b\u4e86\ud83d\ude25\u867d\u7136\u66f4\u6df1\u5c42\u6b21\u5730\u53bb\u7406\u89e3\u4e86\u4e00\u4e9b\u8bbe\u8ba1(\u6bd4\u5982\u6d41\u6c34\u7ebf)\uff0c\u4f46\u662f\u5927\u90e8\u5206\u601d\u8003\u662f\u548c\u8ba1\u7b97\u673a\u7cfb\u7edf\u6982\u8bba\u7684\u6570\u636e\u901a\u8def\u3001\u6c47\u7f16\u4ee5\u53ca\u64cd\u4f5c\u7cfb\u7edf\u7684\u865a\u62df\u5185\u5b58\u4e00\u6837\u7684\u3002\u76f8\u6bd4\u6765\u8bf4\u8fd8\u662f\u6bd4\u8f83\u7fa1\u6155\u65b0\u4fe1\u5b89\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf1-3(\u867d\u7136\u5176\u5b9e\u6211\u4e5f\u4e0d\u77e5\u9053\u4ed6\u8bb2\u4e86\u5565)\uff0c\u4e5f\u8bb8\u90a3\u4e2a\u8bfe\u53ef\u4ee5\u66f4\u5c11\u5730\u53bb\u5b66\u90a3\u4e9b\u91cd\u590d\u7684\u77e5\u8bc6\u3002</p> <p>\u8fd9\u95e8\u8bfe\u8bb0\u4e86\u6bd4\u8f83\u8be6\u7ec6\u7684\u7b14\u8bb0\uff1a\u8ba1\u7b97\u673a\u7ec4\u6210 | Computer Organization\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#-\u8f6f\u4ef6\u5b89\u5168","title":"\u25b2 \u8f6f\u4ef6\u5b89\u5168","text":"<p>\u8fd9\u4e2a\u8bfe\u9700\u8981\u638c\u63e1\u81f3\u5c11\u4e00\u95e8\u6c47\u7f16\u8bed\u8a00\u3002\u6ca1\u592a\u542c\u8bfe\uff0c\u4f46\u662f\u4f5c\u4e1a\u548c\u671f\u672b\u4e3b\u8981\u5305\u62ec\u4e86 Buffer Overflow, Return-Oriented Programming, Format-String-Bug \u8fd9\u4e9b\u6f0f\u6d1e\u5229\u7528\u65b9\u5f0f\uff0c\u4ee5\u53ca\u9759\u6001\u548c\u52a8\u6001\u7a0b\u5e8f\u5206\u6790\u7684\u5185\u5bb9\u3002\u5b9e\u9a8c\u62a5\u544a\u8bb0\u5f55\u5728 \u8f6f\u4ef6\u5b89\u5168 | Software Security\u3002</p> <p>\u8fd9\u4e2a\u8bfe\u7ed9\u5206\u771f\u7684\u597d\uff01\u5e73\u65f6\u4f5c\u4e1a\u548c\u671f\u672b\u4f5c\u4e1a\u4e5f\u6bd4\u8f83\u6709\u6311\u6218\u6027\uff0c\u5b9e\u9a8c\u6307\u5bfc\u4e5f\u8be6\u7565\u5f97\u5f53\uff0c\u5728\u4fdd\u8bc1\u57fa\u672c\u4e0d\u592a\u4f1a\u88ab(\u7531\u4e8e\u6ca1\u542c\u8bfe\u5bfc\u81f4\u7684)\u77e5\u8bc6\u6027\u95ee\u9898\u4ee5\u53ca\u4e0d\u77e5\u9053\u6709\u4ec0\u4e48\u51fd\u6570\u53ef\u4ee5\u7528\u7684\u95ee\u9898\u6253\u6270\uff0c\u505a\u4f5c\u4e1a\u53ef\u4ee5\u4e13\u5fc3\u53bb\u601d\u8003\u89e3\u51b3\u65b9\u5f0f\uff1b\u901a\u5e38\u6765\u8bf4\u89e3\u51b3\u65b9\u5f0f\u4e5f\u662f\u591a\u79cd\u591a\u6837\u7684\uff0c\u5927\u5bb6\u7ecf\u5e38\u80fd\u627e\u5230\u4e0d\u540c\u7684\u65b9\u5f0f\u89e3\u9898\u3002\u8fd9\u4e2a\u8bfe\u8ba9\u6211\u8bb8\u4e45\u6ca1\u52a8\u7684\u8111\u888b\u6084\u6084\u6d3b\u8dc3\u4e86\u4e00\u70b9\u3002(\u4eb2\u6d4b\u8fd9\u4e2a\u8bfe\u5b8c\u5168\u4e0d\u9700\u8981\u542c\u8bfe\u4e5f\u80fd\u8fc7)</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#-\u7cfb\u7edf\u5b89\u5168","title":"\u25b2 \u7cfb\u7edf\u5b89\u5168","text":"<p>\u7533\u58eb\u771f\u7684\u61c2\u5f97\u597d\u591a\uff0c\u6211\u54ed\u6b7b\ud83d\ude2d\u53ef\u60dc\u786e\u5b9e\u5bf9\u90a3\u4e9b\u8bdd\u9898\u4e0d\u592a\u611f\u5174\u8da3\u2026\u2026\u6240\u4ee5\u6ca1\u600e\u4e48\u597d\u597d\u542c\u8bfe\ud83d\ude25\u867d\u7136\u6bcf\u8282\u8bfe\u90fd\u53bb\u4e86\uff0c\u5076\u5c14\u542c\u7684\u4e00\u4e9b\u5185\u5bb9\u4e5f\u611f\u89c9\u8d28\u91cf\u5f88\u9ad8\uff1b\u4e07\u4e00\u6211\u6253\u7b97\u6539\u884c\u4e86\u518d\u56de\u6765\u542c\u542c\ud83d\ude0b\u4e09\u6b21\u5b9e\u9a8c\u91cc\uff0c\u7b2c\u4e00\u6b21\u5b9e\u9a8c\u641e log4j \u90a3\u4e2a\u6f0f\u6d1e\u6211\u89c9\u5f97\u8bbe\u8ba1\u7684\u4e0d\u592a\u597d\uff0c\u914d\u73af\u5883\u5de5\u4f5c\u91cf\u5f88\u5927\uff0c\u4f46\u662f\u5b9e\u9645\u5185\u5bb9\u53c8\u6ca1\u591a\u5c11\uff1b\u540e\u9762\u4e24\u6b21 ROP \u548c JOP \u7684\u5185\u6838\u653b\u9632\u5012\u662f\u5f88\u6709\u8da3\uff0c\u800c\u4e14\u5b66\u5230\u5f88\u591a\uff01\u6700\u540e\u7684 project \u8fd8\u662f\u86ee\u6709\u610f\u601d\u7684\uff0c\u542c\u8bf4\u540e\u9762\u8981\u6539\u6210\u957f\u5b66\u671f\u8bfe\u5c31\u4f1a\u66f4\u597d\u4e00\u4e9b\uff0c\u6bd5\u7adf\u8fd1\u4e4e\u76f2\u9009\u9898\u7684\u8bdd\u4e5f\u4f1a\u5e26\u6765\u4e0d\u5c0f\u7684\u56f0\u6270 (\u8fd8\u597d\u6211\u9009\u9898\u9009\u7684\u6c34\ud83d\ude1c)\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#-\u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168\u57fa\u7840","title":"\u25b2 \u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168\u57fa\u7840","text":"<p>\u901a\u8fc7\u8fd9\u4e2a\u8bfe\uff0c\u6211\u7684\u8bc4\u4ef7\u662f\uff0c\u5982\u679c\u771f\u7684\u60f3\u8ba9\u4eba\u5b66\u5230\u70b9\u5185\u5bb9\uff0c\u671f\u672b\u8003\u8bd5\u786e\u5b9e\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u624b\u6bb5(\u867d\u7136\u5f88\u6298\u78e8\u4eba)\u3002\u8fd9\u95e8\u8bfe\u7684\u7406\u8bba\u90e8\u5206\u662f\u7eaf\u671f\u672b\u901f\u6210\u7684\uff0c\u867d\u8bf4\u8425\u517b\u4ef7\u503c\u4e0d\u9ad8\uff0c\u4f46\u662f\u8fd8\u662f\u5bf9\u65e0\u7ebf\u7f51\u7edc\u548c\u7269\u8054\u7f51\u4ee5\u53ca\u5404\u79cd\u5b89\u5168\u95ee\u9898\u6709\u4e86\u4e00\u4e2a\u6781\u5176\u7c97\u6d45\u7684\u4e86\u89e3\u3002\u4e2a\u4eba\u611f\u89c9\u7406\u8bba\u90e8\u5206\u6700\u5927\u7684\u95ee\u9898\u5728\u4e8e\u8be6\u7565\u4e0d\u5f97\u5f53\uff0c\u4e00\u65b9\u9762\u8be6\u7ec6\u5230 WPA2 \u7684\u56db\u6b21\u63e1\u624b\u90fd\u5728\u5e72\u4ec0\u4e48\uff0c\u53e6\u4e00\u65b9\u9762\u5f88\u591a\u5730\u65b9\u7c97\u7565\u5230\u4e0d\u77e5\u9053\u8bb2\u4e86\u5565\u3002\u5b9e\u9a8c\u90e8\u5206\u66f4\u662f\u79bb\u8c31\uff0c\u7b2c\u4e00\u6b21\u5b9e\u9a8c\u662f\u51e0\u4e4e\u6ca1\u4eba\u505a\u51fa\u5b9e\u9a8c\u6548\u679c\u7684\u73a9\u4f20\u611f\u5668\uff1b\u540e\u9762\u4e24\u6b21\u5b9e\u9a8c\u5185\u5bb9\u90fd\u662f\u52a0\u5bc6\u89e3\u5bc6\u8fd9\u79cd\u7528\u63a5\u53e3\u7684\uff0c\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u67e5\u4e00\u4e0b\u7c98\u4e0a\u53bb\uff0c\u6ca1\u4ec0\u4e48\u6280\u672f\u542b\u91cf\uff1b\u601d\u8003\u9898\u95ee\u201c\u5bc6\u94a5\u4fdd\u5b58\u5728\u54ea\u91cc\u201d\u8fd9\u79cd\u601d\u8003\u4e0d\u51fa\u6765\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u67e5\u67e5\u641c\u7d22\u5f15\u64ce\u3002\u867d\u7136\u8fd9\u79cd\u601d\u8003\u9898\u672c\u8eab\u4e5f\u8d77\u5230\u4e86\u8ba9\u4eba\u5b66\u5230\u4e1c\u897f\u7684\u6548\u679c\uff0c\u4f46\u662f\u7531\u4e8e\u8be6\u7565\u8fc7\u4e8e\u4e0d\u5f97\u5f53\uff0c\u80fd\u6536\u83b7\u7684\u5185\u5bb9\u7740\u5b9e\u6709\u9650\u3002</p> <p>\u7b14\u8bb0\u8bb0\u5728 \u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168\u57fa\u7840\uff0c\u5176\u5b9e\u5c31\u662f\u590d\u4e60 PPT \u6458\u5f55\u2026\u2026\u4e0d\u4e00\u5b9a\u9002\u5408\u62ff\u6765\u5b66\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E5%9B%9E%E9%A1%BE%E5%9C%A8%E4%BF%A1%E5%AE%89%E7%9A%84%E4%B8%89%E5%B9%B4/#\u540e\u8bb0","title":"\u540e\u8bb0","text":"<p>\u5f88\u9057\u61be\u7684\u662f\uff0c\u867d\u7136\u5927\u4e09\u4e0b\u4f18\u79c0\u7684\u8bfe\u7a0b\u548c\u8001\u5e08\u8ba9\u6211\u5bf9\u4fe1\u5b89\u9ed1\u8f6c\u7c89\uff0c\u4f46\u662f\u6211\u4ecd\u7136\u6ca1\u6709\u4ece\u4e2d\u627e\u5230\u4ec0\u4e48\u7279\u522b\u611f\u5174\u8da3\u7684\u65b9\u5411\u3002\u5927\u5b66\u524d\u4e09\u5e74\u6700\u89e6\u52a8\u6211\u7684\u8bfe\u7a0b\u4ecd\u7136\u662f\u7f16\u8bd1\u539f\u7406\u548c\u7fc1\u607a\u8001\u5e08\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u5b66\uff0c\u6240\u4ee5\u6211\u4e5f\u51b3\u5b9a\u5c1d\u8bd5\u5b66\u4e00\u5b66\u7f16\u7a0b\u8bed\u8a00\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u505a\u4e00\u505a\u76f8\u5173\u7684\u6bd5\u8bbe\u3002</p> <p>\u5728\u4fe1\u5b89\u7684\u8fd9\u4e09\u5e74\uff0c\u6bd4\u8f83\u540e\u6094\u7684\u662f\u6ca1\u6709\u65e9\u70b9\u770b\u4e00\u770b\u6709\u54ea\u4e9b\u53ef\u4ee5\u53d1\u5c55\u7684\u65b9\u5411\uff0c\u56e0\u800c\u4e5f\u6ca1\u80fd\u66f4\u65e9\u5730\u5c1d\u8bd5\u548c\u9009\u62e9\uff0c\u53ea\u80fd\u5728\u5927\u4e09\u7ed3\u675f\u6bd5\u8bbe\u9009\u5bfc\u9009\u9898\u65f6\u8d76\u9e2d\u5b50\u4e0a\u67b6\uff1b\u540c\u65f6\u4e5f\u6ca1\u6709\u5b66\u597d\u57fa\u7840\u8bfe\u7a0b\uff0c\u4ecd\u7136\u9700\u8981\u989d\u5916\u82b1\u65f6\u95f4\u56de\u6765\u8865\u3002\u4f46\u662f\u5e86\u5e78\u7684\u662f\uff0c\u4fe1\u5b89\u7684\u73ed\u7ea7\u6c1b\u56f4\u8fd8\u662f\u5f88\u878d\u6d3d\u7684\uff0c\u4e5f\u8ba4\u8bc6\u4e86\u5f88\u591a\u4e0d\u9519\u7684\u670b\u53cb\uff1b\u5927\u591a\u6570\u4fe1\u5b89\u8bfe\u4e5f\u8ba9\u6211\u4f53\u4f1a\u5230\u4e86\u4f18\u79c0\u8bfe\u7a0b\u7684\u611f\u89c9\u2014\u2014\u968f\u7740\u540e\u6d6a\u63a8\u524d\u6d6a\uff0c\u8ba1\u9662\u5176\u4ed6\u8bfe\u7a0b\u8bf4\u4e0d\u5b9a\u4e5f\u80fd\u53d8\u5f97\u914d\u5f97\u4e0a\u6d59\u5927\u7684\u540d\u6c14\u4ee5\u53ca A+ \u8fd9\u4e2a\u8bc4\u4ef7\u3002</p>"},{"location":"%E7%94%9F%E6%B4%BB/%E6%88%91%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AA%E5%A4%96%E7%BD%AE%E5%A4%A7%E8%84%91/","title":"\u6211\u9700\u8981\u4e00\u4e2a\u5916\u7f6e\u5927\u8111","text":"<p> \u7ea6 588 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>\u4e0d\u77e5\u9053\u542c\u8d77\u6765\u662f\u4e0d\u662f\u6709\u70b9\u53d8\u6001\uff0c\u6211\u4e00\u76f4\u5e0c\u671b\u80fd\u591f\u6709\u4e00\u79cd\u4f18\u96c5\u548c\u6613\u4e8e\u68c0\u7d22\u7684\u65b9\u5f0f\u7ef4\u62a4\u6211\u77e5\u9053\u7684\u4fe1\u606f\uff0c\u81f3\u5c11\u662f\u91cd\u8981\u7684\u4fe1\u606f\u3002\u6211\u4e4b\u524d\u751a\u81f3\u4e3a\u6b64\u505a\u8fc7\u6570\u636e\u5e93\uff0c\u4f46\u662f\u540e\u6765\u8bc1\u660e\u592a\u4f4e\u6548\u548c\u96be\u4ee5\u67e5\u8be2\uff0c\u4e8e\u662f\u653e\u5f03\u4e86\u3002\u4f46\u662f\u8fd9\u79cd\u5e0c\u671b\u5728\u6700\u8fd1\u53c8\u9010\u6e10\u53d8\u5f97\u5f3a\u4e86\u8d77\u6765\u3002</p> <p>\u6211\u8bb0\u7684\u7b14\u8bb0\u80fd\u591f\u628a\u90a3\u4e9b\u6210\u578b\u7684\u77e5\u8bc6\u56fa\u5b9a\u4e0b\u6765\uff0c\u4f46\u662f\u66f4\u591a\u7684\u77e5\u8bc6\u4ee5\u53ca\u5173\u4e8e\u8eab\u8fb9\u4eba\u6216\u8005\u81ea\u5df1\u7684\u4fe1\u606f\u5728\u6ca1\u6765\u5f97\u53ca\uff08\u6216\u8005\u4e5f\u8bb8\u6839\u672c\u4e0d\u4f1a\uff09\u6210\u578b\u7684\u65f6\u5019\u88ab\u6211\u5fd8\u6389\u4e86\u3002\u8fd9\u7ed9\u6211\u5e26\u6765\u8fc7\u8bb8\u591a\u6cae\u4e27\u548c\u56f0\u60d1\u3002\u6211\u4e5f\u5e0c\u671b\u80fd\u591f\u56fa\u5b9a\u8fd9\u4e9b\u96f6\u6563\u7684\u4fe1\u606f\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\u6211\u4eca\u5929\u77e5\u9053\u4e86\u300c\u9ca8\u9c7c\u4e0d\u7231\u5403\u9999\u83dc\u300d\u548c\u300cdefault arguments \u662f\u91cd\u8f7d\u673a\u5236\u7684\u524d\u8eab\u300d\u8fd9\u4e24\u6761\u91cd\u8981\u4fe1\u606f\uff0c\u6211\u5e0c\u671b\u628a\u5b83\u4eec\u653e\u5230\u6211\u7684\u5916\u7f6e\u5927\u8111\u91cc\u3002\u6211\u5e0c\u671b\u6b64\u540e\u9700\u8981\u7684\u573a\u5408\uff0c\u4f8b\u5982\u7b79\u5907\u805a\u9910\u7684\u65f6\u5019\uff0c\u6211\u53ef\u4ee5\u67e5\u8be2\u300c\u9ca8\u9c7c\u7684\u559c\u597d\u300d\uff0c\u6216\u8005\u300c\u9999\u83dc\u300d\u6765\u53d6\u56de\u8fd9\u4e9b\u4fe1\u606f\uff1b\u53c8\u4f8b\u5982\u6574\u7406\u7b14\u8bb0\u7684\u65f6\u5019\uff0c\u6211\u80fd\u591f\u7b5b\u9009\u51fa\u300c\u91cd\u8f7d\u300d\u76f8\u5173\u7684\u6240\u6709\u4fe1\u606f\u3002</p> <p>\u5176\u5b9e\u6bd4\u8f83\u597d\u5947\uff0c\u6709\u7c7b\u4f3c\u9700\u6c42\u7684\u4eba\u662f\u600e\u4e48\u505a\u7684\u3002\u6bd4\u5982\u770b\u5404\u79cd\u539f\u5b66\u5bb6\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u80fd\u4ece\u6574\u4e2a\u6e38\u620f\u91cc\u7684\u6240\u6709\u6587\u5b57\uff08\u4e66\u7c4d\u3001\u7269\u54c1\u63cf\u8ff0\u3001\u5bf9\u8bdd\u7b49\uff09\u91cc\u627e\u5230\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u4ed6\u4eec\u662f\u4ee5\u4ec0\u4e48\u65b9\u5f0f\u7ef4\u62a4\u8fd9\u4e9b\u4fe1\u606f\u7684\u5462\uff1f\u6709\u4eba\u77e5\u9053\u5417QAQQQQ</p> <p>\u5982\u679c\u627e\u4e0d\u5230\u66f4\u597d\u7684\u65b9\u6cd5\u7684\u8bdd\uff0c\u8fd9\u6837\u7684\u9700\u6c42\u542c\u8d77\u6765\u53ef\u4ee5\u7528 VSCode \u5b58\u4e00\u5927\u5806\u6587\u672c\u6587\u6863\u6765\u5b9e\u73b0\uff08\u5f53\u7136\uff0c\u53ef\u80fd\u4f1a\u5305\u542b\u5f88\u591a\u5411\u5916\u7684\u94fe\u63a5\uff09\u3002\u4f46\u662f\u4e5f\u6709\u51e0\u4e2a\u5c0f\u95ee\u9898\uff1a</p> <ol> <li>\u4ee5\u4ec0\u4e48\u5f62\u5f0f\uff0c\u6216\u8005\u5355\u4f4d\u7ec4\u7ec7\u3002</li> <li>\u300c\u4fe1\u606f\u300d\u4e0d\u6b62\u662f\u6587\u5b57\uff0c\u4e5f\u6709\u56fe\u7247\u3001\u89c6\u9891\u4e4b\u7c7b\u7684\u5404\u79cd\u4e1c\u897f\u3002\u4e14\u4e0d\u8bf4\u68c0\u7d22\u56fe\u7247\u6216\u89c6\u9891\u8fd9\u79cd\u542c\u8d77\u6765\u5c31\u4e0d\u592a\u80fd\u5b9e\u73b0\u7684\u9700\u6c42\uff0c\u5c31\u7b97\u627e\u5230\u4e86\u8fd9\u5f20\u56fe\u7247\uff0c\u600e\u4e48\u94fe\u56de\u6765\u4e5f\u662f\u4e2a\u95ee\u9898\u3002</li> <li>\u53ef\u80fd\u51fa\u73b0\u7684\u591a\u8bcd\u540c\u4e49\uff0c\u600e\u4e48\u5904\u7406\u3002</li> <li>\u9700\u4e0d\u9700\u8981\u4e00\u4e9b tag \u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\u5982\u4f55\u5904\u7406\u53ef\u80fd\u7684\u4e0d\u540c\u67e5\u8be2\u9700\u6c42\u3002</li> </ol> <p>\u6709\u6ca1\u6709\u77e5\u9053\u7684\u76f8\u5173\u5de5\u5177\uff0c\u6216\u8005\u4e00\u4e9b\u7075\u611f\u548c\u5efa\u8bae\u5462QWQQQ</p>"},{"location":"%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/","title":"\u8bed\u8a00\u57fa\u7840","text":"<p> \u7ea6 19 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00\u7684\u4e00\u4e9b\u8bb0\u5f55\uff1b\u5927\u591a\u6570\u6bd4\u8f83\u7c97\u7cd9</p>"}]}